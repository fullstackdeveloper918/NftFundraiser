{"version":3,"sources":["components/Create/styles/styles.module.scss","components/Signup/styles/styles.module.scss","redux/Slices/authSlice.js","components/Wallet/interact.js","redux/Actions/authAction.js","components/Header/Header.js","components/Hero/Hero.js","redux/Slices/projectSlice.js","redux/Actions/projectAction.js","components/Auctions/AuctionsOne.js","redux/Slices/fundraiserSlice.js","redux/Actions/fundraiserAction.js","components/TopSeller/topfundraiser.js","redux/Slices/popularCollectionSlice.js","redux/Actions/popularAction.js","components/Collections/Collections.js","components/Explore/ExploreOne.js","components/Work/Work.js","redux/Slices/footerSlice.js","redux/Actions/footerAction.js","components/Footer/Footer.js","components/Modal/ModalSearch.js","components/Modal/ModalMenu.js","components/Scrollup/Scrollup.js","themes/theme-one.js","components/Breadcrumb/Breadcrumb.js","components/Explore/ExploreTwo.js","themes/explore-one.js","components/Explore/ProjectList.js","themes/project-list.js","components/Explore/ExploreFive.js","components/Explore/LatestProjects.js","themes/latestProjects.js","themes/auctions.js","components/Explore/popularDetails.js","themes/item-details.js","components/Activity/Activity.js","themes/activity.js","components/Blog/Blog.js","themes/blog.js","components/Sidebar/Sidebar.js","components/BlogSingle/BlogSingle.js","themes/blog-single.js","components/HelpCenter/HelpCenter.js","components/Faq/Faq.js","themes/help-center.js","components/Authors/Authors.js","components/TopSeller/TopSellerTwo.js","themes/authors.js","components/Create/projectDetailpopup.js","components/AuthorProfile/userTransTable.js","components/AuthorProfile/userDetails.js","shared/Upload.js","utils/blobfromurl.js","components/Create/editBanner.js","components/AuthorProfile/avatarUpload.js","components/AuthorProfile/bannerUpload.js","components/AuthorProfile/AuthorProfile.js","components/Explore/ExploreSix.js","components/Author/Author.js","themes/author.js","components/Wallet/Wallet.js","themes/wallet-connect.js","components/Create/geoLocation.js","components/Create/Context/context.js","components/Create/Create.js","routers/utils.js","components/Create/createCollection.js","components/Loader/loader.js","components/Create/uploadNft.js","components/Create/index.js","themes/create.js","components/Login/Login.js","themes/login.js","components/Signup/FormCard.js","components/Signup/Context/context.js","components/Signup/Signup.js","components/Signup/createOrganization.js","components/Signup/index.js","themes/signup.js","redux/Slices/contactSlice.js","components/Contact/Contact.js","redux/Actions/contactAction.js","themes/contact.js","components/ForgotPassword/forgotPassword.js","themes/forgotpassword.js","routers/privateRoutes.js","Edit/editProject.js","themes/update.js","components/Footer/t&c.js","themes/term&cond.js","components/Explore/viewAllLatest.js","themes/viewalllatest.js","components/Collections/exploreCollection.js","themes/exploreCollections.js","components/Footer/about.js","themes/Aboutus.js","components/Auctions/projectnfts.js","components/ItemDetails/refralPopup.js","components/Create/editNft.js","components/Explore/nftdataTable.js","components/Explore/latProjNftdata.js","components/Explore/projDetailtable.js","readMore.js","components/ItemDetails/viewProdetails.js","themes/latproj-details.js","components/Create/showCollections.js","themes/showcollections.js","components/Create/bread-crumb.js","components/Create/collectionDetail.js","themes/collectn-details.js","components/Create/desPopup.js","components/Create/projdetails.js","themes/projnft-details.js","components/ItemDetails/nftPopup.js","components/ItemDetails/nftDetails.js","themes/nft-list.js","components/TopSeller/fundraiserdetail.js","components/TopSeller/fundPaymenttable.js","components/TopSeller/fundraiserDetails.js","themes/fund-detail.js","components/Auctions/nftBuy.js","themes/Latnft.js","ScrollToTop.js","components/Create/addNft.js","themes/addnftTheme.js","components/Explore/my_fundraise.js","themes/fundraise.js","routers/routes.js","App.js","redux/store.js","index.js"],"names":["module","exports","userToken","localStorage","getItem","authSlice","createSlice","name","initialState","user","userdetail","role","logout","message","countries","states","city","annualRevenue","hereAbout","updpro","wallesign","organization","reducers","registerSuccess","state","action","payload","data","auth_token","setItem","registerFail","response","updateprofile","userDetail","loginSuccess","logoutSuccess","removeItem","forgotpasswordSuccess","createOrganizationSuccess","wallsignin","getCountryList","getStateList","getCityList","getAnnualRevenueList","getHearAboutList","authReducer","reducer","actions","createAlchemyWeb3","require","contractABI","isMetaMaskInstalled","Boolean","window","ethereum","web3","Roles","creatorWalletUpdate","formData","FormData","append","selectedAddress","config","headers","axios","post","process","UpdateWalletAddress","ConnectWallet","chainId","networkVersion","request","method","params","utils","toHex","code","chainName","nativeCurrency","decimals","symbol","rpcUrls","swal","addressArray","obj","status","address","res","target","href","getCurrentWalletConnected","length","UpdateStatus","id","token_id","transaction_hash","pay_from","pay_to","token","UpdateContract","collid","contractAddress","CreateMetaDataAndMint","_imgBuffer","_des","_name","setCurrent","nft_file_content","eth","Contract","abi","contract","sendTransaction","to","from","methods","mint","encodeABI","on","hash","receipt","confNumber","tokid","hexToNumber","logs","topics","transactionHash","error","success","alert","BuyNft","tokenId","payFrom","values","platformFee","sellingCount","ownerFee","flow","ownerWallet","nftContract","getTransactionCount","amountToSendPlatform","amountToSendowner","memory_clients","memory_amounts","toWei","transferowner","buyNft","console","log","then","Register","createAsyncThunk","thunkAPI","Authorization","transformRequest","dispatch","location","GetUserAction","get","CountryList","StateList","CityList","UpdateProfileAction","Header","useDispatch","useState","setAddress","add1","slice","toUpperCase","add2","userRole","useSelector","history","useHistory","getSelectedAddress","useEffect","accounts","userdet","WalletHandler","is_new_user","title","text","icon","buttons","continue","skip","value","push","className","src","alt","onClick","Swal","fire","html","showCloseButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","style","color","type","class","left","email","user_id","Hero","options","enableHighAccuracy","timeout","maximumAge","pos","crd","coords","latitude","longitude","errors","err","warn","navigator","geolocation","permissions","query","result","getCurrentPosition","onchange","xmlns","viewBox","version","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fill","fillRule","points","dur","repeatCount","attributeName","projectSlice","project","projects","nftlist","projectdetails","latestprojectdetails","categories","collections","getcollections","getcollectiondetails","collectiondetails","getSocialmediaIcons","getfundProjDetails","getnftwoldetails","settings","nftadd","nftres","nftupdate","updbanner","liveProjects","LatestProjects","RecentCampaigns","createProjectSuccess","createCollectionSuccess","getCollections","getsocial","getCollectionDetails","getNftwolDetails","nftUpd","nftAdd","getfundprojdetails","getProjectList","getCategoriesList","getSettings","getLatestProjectList","createFail","getProjectDetail","getCollectionDetail","Nftres","getNftList","getLatestProjectDetail","updatebanner","publicLiveProjects","deleteProject","filter","item","projectReducer","CreateProjectAction","setLoading","ProjectDetail","LatestProjectDetail","NftList","uploadNFT","catch","getPublicLiveProjects","projectType","UpdateProject","props","CategoriesAction","GetCollectionsAction","GetfundraiserProject","UpdateNft","nft_id","AddNftAction","projectTypesMap","AuctionsOne","key","cursor","match","join","map","idx","nft_data","image","date","user_data","avatar","username","price","number_of_nft","fundraiserSlice","fundraiser","fundraiserdetail","getTopFundraiser","getTopFundraiserDetail","fundraiserReducer","TopFundraiserAction","TopFundraiserDetail","Fundraiser","fund","amount","collectionSlice","collection","collectiondetail","getPopularCollection","getPopularCollectiondetails","collectionReducer","PopularCollectionAction","PopularCollectionActionDetails","Collections","coll","initData","pre_heading","heading","btn_1","btn_2","img","owner","count","btnText","Component","preHeading","workData","Work","footerSlice","footer","aboutus","getfooter","getabout","footerReducer","getFooter","AboutUsAction","Footer","ModalSearch","placeholder","ModalMenu","Scrollup","Home","Breadcrumb","this","subpage","page","ExploreTwo","exploreData","setState","ExploreOne","GetAllProjects","Map","description","content","LatestProject","Auctions","PopularDetails","useParams","populardetail","dangerouslySetInnerHTML","__html","ItemDetails","Activity","tabData_1","tabData_2","tabData_3","filterData","tabTitle_1","tabTitle_2","tabTitle_3","time","seller","widgetTitle","Blog","blogData","author","Sidebar","widgetData_1","widgetData_2","widgetData_3","widgetTitle_1","widgetTitle_2","widgetTitle_3","BlogSingle","content_1","quote","content_2","content_3","rel","dateTime","commentTitle","commentContent","required","rows","defaultValue","commentBtn","HelpCenter","btnClass","contentId","contentClass","Faq","Authors","authorData","TopSeller","sellerData","ProjDetailPopup","useRef","useForm","register","handleSubmit","formState","setValue","control","watch","setDescription","setType","country","setCountry","setCity","handleChangeCountry","event","preventDefault","currentTarget","handleChangeState","handleChangeCity","cities","projdetail","cat","Object","keys","start_date","end_date","category_id","Modal","size","centered","onHide","Body","onSubmit","render","field","onChange","onBlur","ref","disabled","selected","option","min","max","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","disablePastDate","UserdataTable","Panel","Collapse","React","expandIconPosition","defaultActiveKey","header","Table","responsive","wallet_id","reffers","total_fundraised","UserTransdataTable","payment_history","items","project_id","txd_id","UploadImage","initalImag","setImageSrc","imageSrc","initialImage","show","borderRadius","language","width","height","objectFit","compressInitial","hideDownloadBtn","imageSrcProp","imageChanged","newDataUri","dataURLtoBlob","dataurl","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","Banner","Title","Upload","Button","UpdateBanner","AvatarUpload","BannerUpload","banner_image","AuthorProfile","modalSho","setModalSho","modalShowavatar","setModalShowavatar","focusable","d","filter_1","filter_2","filter_3","filter_4","filter_5","group","likes","Author","Wallet","handleConnect","walletData","WalletConnect","Geonames","lan","encoding","FormContext","createContext","FormProvider","children","setData","Provider","setFormValues","prevValues","useFormData","useContext","Create","current","next","prev","editor","mode","styles","showForm","hideForm","e","defaultChecked","htmlFor","pattern","tabIndex","newContent","step","TOKEN_KEY","MyVerticallyCenteredModal","dat","Loader","Spinner","animation","margin","display","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","UploadNft","previewOpen","setPreviewOpen","previewImage","setPreviewImage","previewTitle","setPreviewTitle","setCount","modalShow","setModalShow","nft_collection_id","setNft_collection_id","coll_id","loading","defaultValues","setNft_description","col","lat","onFinish","nftImagepromises","nfts","x","nft_image","all","imagesRes","addedImage","image_hash","nft_name","nft_description","handleCancel","handlePreview","url","preview","originFileObj","substring","lastIndexOf","fileProps","multiple","beforeUpload","info","Form","form","initialValues","autoComplete","List","fields","add","remove","index","restField","Item","rules","MinusCircleOutlined","prevCount","background","marginBottom","variant","previ","onHandleClick","border","listType","onPreview","maxCount","open","onCancel","block","PlusOutlined","transform","steps","UploadNftIndex","Login","login","password","FormCard","currentStep","prevFormStep","formSchema","Yup","shape","confirm_password","oneOf","Signup","formStep","nextFormStep","resolver","yupResolver","errMessage","errmessage","validate","val","CreateOrganization","goBack","socialmedia","logo","goal","organization_name","tax_id","social","social_link","disp","SignupIndex","setFormStep","contactSlice","contact","postContact","Contact","subject","ContactAction","cols","ForgotPassword","forgotpassword","statusCode","Forgot","PrivateRoute","component","rest","restricted","EditProject","ProjectUpdate","TermsConditions","TermsCond","ExploreAll","All","AllCollections","ColExplore","AboutUs","about","Aboutus","ProjNFTS","latprojdetail","marginLeft","userRef","TwitterShareButton","TwitterIcon","round","FacebookShareButton","FacebookIcon","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","EmailIcon","EditNft","modalShowcoll","setModalShowcoll","setImage","nftdetail","setFieldsValue","collection_id","NftdataTable","collectionData","contract_id","LatNftdataTable","project_activity","nft_title","ProjdataTable","modalShowproj","setModalShowproj","country_name","debugger","dayjs","created_at","format","state_name","city_name","ReadMore","isReadMore","setIsReadMore","ProjDetails","modalShowrefer","setModalShowrefer","referrer_id","organization_detail","selling_amount","ProgressBar","varient","now","project_percentage","user_invest","date1","updated_at","time_difference","getTime","days_difference","Math","ceil","latprojDetails","ShowCollections","Showcollections","CollItem","CollectionDetails","coldetail","GetCollectionDetails","CollectionDetail","DesPopup","ProjNftDetails","modalShowedit","setModalShowedit","modalShowDes","setModalShowDes","is_mint","ProjNft","NftPopup","Step","Steps","closeButton","direction","LoadingOutlined","CheckOutlined","NftDetails","Web3","providers","HttpProvider","deployContract","MyNFTContract","NFTContract","getGasPrice","deploy","bytecode","arguments","send","deployAndMint","project_status","Nft","FunddataTable","funddetail","tax_number","web_url","FundTransdataTable","FundraiserDetail","fundprojdetail","FundDetail","LatprojNftDetails","ownwallet","latprojnftdetail","find","GetNftwol","Class","selling_count","payment_flow","karmatica_fee","project_data","fees","wallets","buyHandler","latnftprojDetails","ScrollToTop","useLocation","scrollTo","AddNft","AddNFT","MyFundraiserDetail","FundraiserProjects","MyRouts","exact","path","ThemeOne","ExploreFour","App","combineReducers","createproject","latestprojects","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c794891d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__DKvey\",\"formCard\":\"styles_formCard__Vehpw\",\"formRow\":\"styles_formRow__13Stn\",\"back\":\"styles_back__3AVbA\",\"input-error\":\"styles_input-error__3FssS\",\"error\":\"styles_error__1A4Gx\",\"disabledBtn\":\"styles_disabledBtn__qMaBa\",\"steps\":\"styles_steps__2TgQb\",\"errorText\":\"styles_errorText__9D9Jp\",\"hideForm\":\"styles_hideForm__19FPq\",\"showForm\":\"styles_showForm__2S4hD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3EpRl\",\"formCard\":\"styles_formCard__128GU\",\"formRow\":\"styles_formRow__31I_A\",\"back\":\"styles_back__2acxp\",\"input-error\":\"styles_input-error__1SwWq\",\"error\":\"styles_error__10-bT\",\"disabledBtn\":\"styles_disabledBtn__3b7hK\",\"steps\":\"styles_steps__29JeH\",\"errorText\":\"styles_errorText__Ha8IR\",\"hideForm\":\"styles_hideForm__3in2Q\",\"showForm\":\"styles_showForm__105xC\"};","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\nconst userToken = localStorage.getItem('authToken')\r\n    // ? JSON.parse(localStorage.getItem('user'))\r\n    ? localStorage.getItem('authToken')\r\n    : null\r\n\r\nconst authSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: {},\r\n        userdetail: [],\r\n        userToken,\r\n        role: null,\r\n        // wallToken,\r\n        logout: {},\r\n        message: {},\r\n        countries: [],\r\n        states: [],\r\n        city: [],\r\n        annualRevenue: [],\r\n        hereAbout: [],\r\n        updpro: [],\r\n        wallesign: [],\r\n        organization: false\r\n    },\r\n    reducers: {\r\n        registerSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.userToken = action.payload.data.data.auth_token;\r\n            state.role = action.payload.data.data.role;\r\n            localStorage.setItem('authToken', action.payload.data.data.auth_token)\r\n        },\r\n        registerFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        updateprofile: (state, action) => {\r\n            // \r\n            state.updpro = action?.payload?.data?.data;\r\n        },\r\n        userDetail: (state, action) => {\r\n            // \r\n            state.userdetail = action.payload.data.data\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.role = action.payload?.data?.data?.role;\r\n            state.message = action.payload?.data?.message\r\n            state.userToken = action.payload?.data?.data?.auth_token;\r\n            localStorage.setItem('authToken', action.payload?.data?.data?.auth_token)\r\n        },\r\n        logoutSuccess: (state) => {\r\n            localStorage.removeItem('authToken')\r\n            state.user.role = null\r\n            state.userToken = null\r\n        },\r\n        forgotpasswordSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.message = action.payload.data.message\r\n\r\n        },\r\n        createOrganizationSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.organization = true\r\n        },\r\n        wallsignin: (state, action) => {\r\n            state.wallesign = action.payload?.data?.data;\r\n        },\r\n        getCountryList: (state, action) => {\r\n            state.countries = action.payload;\r\n        },\r\n        getStateList: (state, action) => {\r\n            state.states = action.payload;\r\n        },\r\n        getCityList: (state, action) => {\r\n            state.city = action.payload;\r\n        },\r\n\r\n        getAnnualRevenueList: (state, action) => {\r\n            state.annualRevenue = action.payload;\r\n        },\r\n\r\n        getHearAboutList: (state, action) => {\r\n            state.hereAbout = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer\r\n\r\nexport const {\r\n    registerSuccess,\r\n    createOrganizationSuccess,\r\n    getCountryList,\r\n    getStateList,\r\n    getCityList,\r\n    getAnnualRevenueList,\r\n    getHearAboutList,\r\n    loginSuccess,\r\n    forgotpasswordSuccess,\r\n    logoutSuccess,\r\n    registerFail,\r\n    userDetail,\r\n    wallsignin,\r\n    updateprofile\r\n} = authSlice.actions;","import { create } from 'ipfs-http-client'\r\nimport { useHistory } from 'react-router-dom'\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport { walletSignin } from '../../redux/Actions/authAction';\r\nimport { object } from 'yup';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// const contractABI = require('../../src/backend/contracts/artWork.sol/NFTContract.json')\r\nconst contractABI = require('../../backend/contracts/artWork.sol/NFTContract.json')\r\n\r\n// const contractAddress = \"0xE915A57e52A1f5a432b15727EA79e2542d435087\";\r\n// connect to a different API\r\n// const ipfsClient = create('http://127.0.0.1:5001')\r\n\r\nfunction isMetaMaskInstalled() {\r\n  return Boolean(window.ethereum);\r\n}\r\n\r\nconst ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n// const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n// const ipfsBaseUrl = ('http://208.113.134.142:8080/')\r\n// const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\n\r\nexport const Roles = {\r\n  \"ADMIN\":1,\r\n  \"BUYER\":2,\r\n  \"CREATOR\":3\r\n}\r\n\r\nexport const creatorWalletUpdate = async (auth_token) => {\r\n  try {\r\n    \r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/wallet/connect`,\r\n      formData, config\r\n    )\r\n    \r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n}\r\n\r\nexport const UpdateWalletAddress = async (role,auth_token = null) => {\r\n  try {\r\n    \r\n    const formData = new FormData();\r\n \r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    formData.append('role',Roles[role])\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/sign_in`,\r\n      formData, config\r\n    )\r\n    \r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n};\r\n\r\nexport const ConnectWallet = async (role) => {\r\n\r\n  const chainId = 80001// Polygon Mainnet\r\n\r\n  if (window?.ethereum?.networkVersion !== chainId) {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: web3.utils.toHex(chainId) }]\r\n      });\r\n\r\n    } catch (err) {\r\n      // This error code indicates that the chain has not been added to MetaMask\r\n      if (err.code === 4902) {\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainName: 'Mumbai Testnet',\r\n              chainId: web3.utils.toHex(chainId),\r\n              nativeCurrency: { name: 'MATIC', decimals: 18, symbol: 'MATIC' },\r\n              rpcUrls: ['https://rpc-mumbai.maticvigil.com/']\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  }\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n\r\n    if (window.ethereum) {\r\n      try {\r\n        const addressArray = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: web3.utils.toHex('80001') }],\r\n        })\r\n\r\n        const obj = {\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n          address: addressArray[0],\r\n        };\r\n\r\n        const res = await UpdateWalletAddress(role) \r\n        return {\r\n          ...obj,\r\n          res\r\n        }\r\n\r\n      } catch (err) {\r\n        return {\r\n          address: \"\",\r\n          status: \"😥 \" + err.message,\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        address: \"\",\r\n        status: (\r\n          <span>\r\n            <p>\r\n              {\" \"}\r\n              🦊{\" \"}\r\n              <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n                You must install Metamask, a virtual Ethereum wallet, in your\r\n                browser.\r\n              </a>\r\n            </p>\r\n          </span>\r\n        ),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      // \r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      // console.log(addressArray, 'address')\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n          status: \"🦊 Connect to Metamask using the top right button.\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\n\r\n\r\nconst UpdateStatus = async ({ id, token_id, transaction_hash, pay_from, pay_to }) => {\r\n\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('is_mint', '1');\r\n    formData.append('token_id', token_id);\r\n    formData.append('transaction_hash', transaction_hash);\r\n    formData.append('pay_from', pay_from);\r\n    formData.append('pay_to', pay_to);\r\n\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/NftUpdate/${id}`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nconst UpdateContract = async (collid, contractAddress) => {\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('contract_id', contractAddress);\r\n\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${collid}`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const sendFileToIPFS = async (fileImg) => {\r\n  if (fileImg) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", fileImg);\r\n\r\n      const resFile = await axios({\r\n        method: \"post\",\r\n        url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\r\n        data: formData,\r\n        headers: {\r\n          'pinata_api_key': `${process.env.REACT_APP_PINATA_API_KEY}`,\r\n          'pinata_secret_api_key': `${process.env.REACT_APP_PINATA_API_SECRET}`,\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        },\r\n      });\r\n\r\n      const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n\r\n      return ImgHash\r\n\r\n    } catch (error) {\r\n      // console.log(\"Error sending File to IPFS: \")\r\n      // console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const CreateMetaDataAndMint = async ({ id, _imgBuffer, _des, _name, setCurrent, contractAddress, collid, nft_file_content }) => {\r\n\r\n  // const metaDataObj = {\r\n  //   name: _name,\r\n  //   description: _des,\r\n  //   image: _imgBuffer,\r\n  // }\r\n\r\n  // const addedMetaData = await nft_file_content(JSON.stringify(metaDataObj));\r\n\r\n  const contract = await\r\n    new web3.eth.Contract(contractABI.abi, contractAddress);//loadContract();\r\n  // new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\");//loadContract();\r\n\r\n  try {\r\n    let txHash = null\r\n\r\n    // const web3 = new Web3(window.ethereum);\r\n\r\n    await web3.eth.sendTransaction({\r\n      to: contractAddress, // Required except during contract publications.\r\n      // to: \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\", // Required except during contract publications.\r\n      from: window.ethereum.selectedAddress,\r\n      data: contract.methods.mint(nft_file_content).encodeABI() //make call to NFT smart contract\r\n    })\r\n      .on('transactionHash', function (hash) {\r\n        txHash = hash\r\n\r\n        // console.log('txhash11', txHash)\r\n\r\n        setCurrent(1)\r\n      })\r\n      .on('receipt', function (receipt) {\r\n        // console.log(receipt, 'recipt')\r\n        // console.log(receipt.logs[0].topics[3])\r\n        setCurrent(1)\r\n      })\r\n      .on('confirmation', async (confNumber, receipt) => {\r\n        if (confNumber == 1) {\r\n          await UpdateContract(collid, contractAddress)\r\n          // await UpdateContract(collid, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n          const tokid = web3.utils.hexToNumber(receipt.logs[0].topics[3])\r\n\r\n          await UpdateStatus({ id, token_id: tokid, transaction_hash: receipt.transactionHash, pay_from: receipt.from, pay_to: receipt.to })\r\n          setCurrent(2)\r\n\r\n          // console.log('tokid', tokid)\r\n        }\r\n      })\r\n      .on('error', function (error) {\r\n\r\n      })\r\n\r\n    // \r\n    // console.log('txHash', txHash)\r\n    return {\r\n      success: true,\r\n      // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n      status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n    }\r\n  } catch (error) {\r\n    // \r\n    alert(\"went wrong\")\r\n    return {\r\n      success: false,\r\n      status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n    }\r\n  }\r\n}\r\n\r\nexport const BuyNft = async ({ contractAddress, tokenId, payFrom, values, platformFee, sellingCount, ownerFee, flow, ownerWallet }) => {\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n    try {\r\n\r\n\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      const obj = {\r\n        status: \"👆🏽 Write a message in the text-field above.\",\r\n        address: addressArray[0],\r\n      };\r\n\r\n      const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n      const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n      const amountToSendPlatform = ((`${platformFee[0]}` / 100) * 0.03)\r\n      const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n      // // const amountToSend = (amountToSendPlatform - amount, \"either\")\r\n      // const amountToSend = (0.0005)\r\n      // const amountToSend = ; // Convert to wei value\r\n      const memory_clients = ['0x2Aaab1bd336819948C3286cE92034CdB95137D8b', ownerWallet[0]]\r\n      const memory_amounts = [web3.utils.toWei(`${amountToSendPlatform}`, \"ether\"), web3.utils.toWei(`${amountToSendowner}`, \"ether\")]\r\n\r\n      const transferowner = {\r\n        'from': window.ethereum?.selectedAddress,\r\n        'to': contractAddress,\r\n        // 'to': \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\",\r\n        // 'value': web3.utils.toWei(`${values}`),\r\n        'value': web3.utils.toWei('0.03', 'ether'),\r\n        // 'input': nftContract.methods.buyNft(contractAddress, tokenId).encodeABI()\r\n        'input': nftContract.methods.buyNft(contractAddress, tokenId, memory_clients, memory_amounts).encodeABI()\r\n      };\r\n\r\n      // const txHash = await web3.eth.sendTransaction(tx)\r\n\r\n      // console.log('txhash', txHash)\r\n      await web3.eth.sendTransaction(transferowner)\r\n        .on('transactionHash', function (hash) {\r\n          let txHash = hash\r\n          // console.log('tx', txHash)\r\n\r\n\r\n        })\r\n        .on('receipt', function (receipt) {\r\n          // console.log(receipt, 'recipt')\r\n        })\r\n        .on('confirmation', async (confNumber, receipt) => {\r\n          // \r\n          console.log(receipt, 'conf')\r\n          // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n          // setModeShow(false)\r\n\r\n          // modalShow(false)\r\n        })\r\n        .on('error', function (error) {\r\n\r\n        })\r\n        .then(function (receipt) {\r\n          // will be fired once the receipt is mined\r\n        })\r\n    } catch (error) {\r\n      // \r\n      alert(error)\r\n\r\n    }\r\n  }\r\n}","import axios from \"axios\";\r\nimport { createOrganizationSuccess, getAnnualRevenueList, getCityList, getCountryList, getHearAboutList, getStateList, loginSuccess, registerFail, registerSuccess, updateprofile, userDetail, wallsignin, } from \"../Slices/authSlice\";\r\nimport swal from \"sweetalert\";\r\n// import { useNavigate } from 'react-router-dom';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { creatorWalletUpdate } from \"../../components/Wallet/interact\";\r\n\r\nexport const Register = createAsyncThunk(\r\n    \"auth/register\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const token = localStorage.getItem('authToken')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                transformRequest: formData => formData\r\n            }\r\n\r\n            //create oraginization creator login\r\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/signup`,\r\n                params, config)\r\n\r\n            await creatorWalletUpdate(res?.data?.data?.auth_token)\r\n\r\n            thunkAPI.dispatch(loginSuccess(res));\r\n\r\n            if (res.status === 200) {\r\n                swal(\"success\", res.data.message, 'success').then(function () {\r\n                    window.location = \"/\";\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data) {\r\n                if (e?.response?.data.message) {\r\n\r\n                    swal('error', e?.response?.data?.message, 'error')\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\nexport const LoginAction = (params, history) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/organization_signin`,\r\n            params, config)\r\n\r\n        dispatch(loginSuccess(res));\r\n\r\n    } catch (e) {\r\n\r\n        if (e?.response?.data.message) {\r\n\r\n            swal('error', e?.response?.data?.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ForgotPasswordAction = (params) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/forgot_pssword`,\r\n            params, config)\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = \"/login\";\r\n            });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetUserAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getUserDetails`,\r\n            config)\r\n        // console.log('userres', res)\r\n        dispatch(userDetail(res));\r\n\r\n\r\n    } catch (e) {\r\n        // \r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CreateOrganizationAction = (params) => async dispatch => {\r\n    // \r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\r\n            params, config)\r\n\r\n        dispatch(createOrganizationSuccess(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error').then(function () {\r\n                // dispatch(ProjectDetail(params))\r\n                window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const CountryList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCountryList`,\r\n            config)\r\n        dispatch(getCountryList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const StateList = (formData) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getStateById`,\r\n            formData, config)\r\n        // debugger\r\n        dispatch(getStateList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CityList = (formData) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getCityById`,\r\n            formData, config)\r\n        dispatch(getCityList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AnnualRevenueList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAnnualRevenueList`,\r\n            config)\r\n        dispatch(getAnnualRevenueList(res));\r\n    } catch (e) {\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const HearAboutList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getHearAboutList`,\r\n            config)\r\n        dispatch(getHearAboutList(res));\r\n    } catch (e) {\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const walletSignin = (params, history) => async dispatch => {\r\n\r\n    // \r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', params);\r\n    // \r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    try {\r\n        // const token = localStorage.getItem('authToken')\r\n        // const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                // Authorization: `Bearer ${token}`\r\n            },\r\n\r\n            // transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/sign_in`,\r\n            formData, config)\r\n        console.log(res, 'signres')\r\n        dispatch(wallsignin(res));\r\n        if (res.status == 200) {\r\n            localStorage.setItem('auth_token', res.data.data.auth_token)\r\n\r\n            if (res.data.data.role == 3) {\r\n                history.push('/projectlist')\r\n            } else {\r\n                if (res.data.data.role == 2) {\r\n                    history.push('/profile')\r\n\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const UpdateProfileAction = (formData) => async dispatch => {\r\n\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/profileUpdate`,\r\n            formData, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        await dispatch(updateprofile(res));\r\n\r\n        if (res.status === 200) {\r\n            dispatch(GetUserAction())\r\n            swal(\"success\", \"updated\", 'success')\r\n            // .then(function () {\r\n            // dispatch(ProjectDetail(params))\r\n            // window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport swal from 'sweetalert';\r\nimport { loginSuccess, logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\nimport { isCancel } from 'axios';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const [address, setAddress] = useState(null)\r\n\r\n    const add1 = address?.slice(0, 4).toUpperCase()\r\n    const add2 = address?.slice(35, 44).toUpperCase()\r\n\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n        setAddress(null)\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n    // console.log(userRole)\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n        getCurrentWalletConnected()\r\n        setAddress(getSelectedAddress)\r\n\r\n        if (window.ethereum) {\r\n            window.ethereum.on('accountsChanged', function (accounts) {\r\n                if (!accounts.length) {\r\n                    setAddress(null)\r\n                    //  setIsLoggedIn(false)\r\n                    localStorage.removeItem('auth_token')\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [dispatch, address])\r\n\r\n    function getSelectedAddress() {\r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    const WalletHandler = async () => {\r\n        const response = await ConnectWallet(\"BUYER\")\r\n        const { res } = response\r\n\r\n        // debugger\r\n        if (!res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            history.push('/all/LatestProjects')\r\n        }\r\n        else if (res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n\r\n            // swal({\r\n            //     title: \"Are you sure?\",\r\n            //     text: \"You will  be able to add it back again!\",\r\n            //     type: \"warning\",\r\n            //     showCancelButton: true,\r\n            //     confirmButtonColor: \"#DD6B55\",\r\n            //     confirmButtonText: \"Yes, delete it!\",\r\n            //     cancelButtonText: \"Cancel\",\r\n            //     closeOnConfirm: false,\r\n            //     closeOnCancel: false\r\n            // },\r\n            //     function (isConfirm) {\r\n            //         if (isConfirm) {\r\n            //             window.location = '/profile'\r\n            //         } else {\r\n            //             if (isCancel) {\r\n            //                 window.location = '/projectlist'\r\n            //             }\r\n            //         }\r\n            //     });\r\n            swal({\r\n                title: \"Welcome to Karmatica!!!\",\r\n                text: \"Karmatica would like to know more about yourself. Update your profile\",\r\n                icon: \"success\",\r\n                buttons: {\r\n                    continue: '',\r\n                    skip: '',\r\n                }\r\n            }).then((value) => {\r\n                switch (value) {\r\n                    case \"continue\":\r\n                        window.location = '/profile'\r\n                        break;\r\n\r\n                    case \"skip\":\r\n                        window.location = '/projectlist'\r\n                        break;\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n        else if (!res?.data?.data?.is_new_user && Roles[\"CREATOR\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        else if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: true,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n        else if (!userToken) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: true,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <header id=\"header\">\r\n            {/* Navbar */}\r\n            <nav data-aos=\"zoom-out\" data-aos-delay={800} className=\"navbar navbar-expand\">\r\n                <div className=\"container header\">\r\n                    {/* Navbar Brand*/}\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        <img className=\"navbar-brand-sticky desktop_logo\" src=\"/img/karmatica.png\" alt=\"karmatica\" />\r\n                        <img className=\"mobile-logo\" src=\"/img/logo.png\" alt=\"\" />\r\n                    </Link>\r\n                    <div className=\"ml-auto\" />\r\n                    {/* Navbar */}\r\n                    <ul className=\"navbar-nav items mx-auto\">\r\n                        <li className=\"nav-item dropdown\">\r\n                            <Link className=\"nav-link\" to=\"/\">Explore</Link>\r\n                        </li>\r\n                        {/* {log !== null && ( */}\r\n                        <li className=\"nav-item\">\r\n                            <a onClick={handleCreate} className=\"nav-link\">Create</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to={`/all/${\"LatestProjects\"}`} className=\"nav-link\">Latest Projects</Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Navbar Toggler */}\r\n                    <ul className=\"navbar-nav toggle\">\r\n                        <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#menu\">\r\n                                <i className=\"fas fa-bars toggle-icon m-0\" />\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Navbar Action Button */}\r\n                    {/* Navbar Action Button */}\r\n                    <ul className=\"navbar-nav action\">\r\n                        {address &&\r\n                            <li className=\"nav-item mr-2\">\r\n                                <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />{add1}...{add2}</a>\r\n                            </li>\r\n                        }\r\n                        {!address &&\r\n                            <li className=\"nav-item ml-3\">\r\n                                <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />CONNECT WALLET</a>\r\n                            </li>\r\n                        }\r\n                    </ul>\r\n                    {userToken ? (\r\n                        <>\r\n                            <div className=\"dropdown\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <i className=\"fa fa-solid fa-user\"></i>\r\n                                </button>\r\n                                <ul class=\"creator-dropdown dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\" style={{ left: '-37%' }}>\r\n                                    {/* <li>{userdet?.username}</li> */}\r\n                                    <li>{userdet?.email}</li>\r\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/profile'>My Profile</Link></button></li>\r\n                                    <li><button type='button' class=\"dropdown-item\"><a href='/projectlist'>My Projects</a></button></li>\r\n                                    {userRole == 3 && (\r\n\r\n                                        <li><button type='button' class=\"dropdown-item\"><Link to={`/fundraiser/detail/${userdet.user_id}`}>Fundraise</Link></button></li>\r\n                                    )}\r\n                                    <li><button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'>Logout</a></button></li>\r\n                                </ul>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <ul className=\"navbar-nav action\">\r\n                            <li className=\"nav-item ml-3\">\r\n                                <a className=\"creator-button btn ml-md-auto btn-bordered-white\"\r\n                                    onClick={() => history.push('/wallet-connect')}><i className=\"fa fa-user\" />\r\n                                    <div>CREATOR</div></a>\r\n                                {/* <Link to=\"/login\" className=\"creator-button btn ml-md-auto btn-bordered-white\">\r\n                                    <i className=\"fa fa-user\" />\r\n                                    <div>CREATOR</div>\r\n                                </Link> */}\r\n                            </li>\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { Roles } from '../Wallet/interact';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Hero = () => {\r\n    const history = useHistory()\r\n\r\n    var options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0,\r\n    };\r\n\r\n    function success(pos) {\r\n        var crd = pos.coords;\r\n\r\n        // console.log(\"Your current position is:\");\r\n        // console.log(`Latitude : ${crd.latitude}`);\r\n        // console.log(`Longitude: ${crd.longitude}`);\r\n        // console.log(`More or less ${crd.accuracy} meters.`);\r\n        localStorage.setItem('latitude', `${crd.latitude}`);\r\n        localStorage.setItem('longitude', `${crd.longitude}`);\r\n        // setLatitude(`${crd.latitude}`)\r\n        // setLongitude(`${crd.longitude}`)\r\n    }\r\n\r\n    function errors(err) {\r\n        console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const currentLocation = () => {\r\n        // \r\n        if (navigator.geolocation) {\r\n            navigator.permissions\r\n                .query({ name: \"geolocation\" })\r\n                .then(function (result) {\r\n                    if (result.state === \"granted\") {\r\n                        // console.log(result.state);\r\n                        //If granted then you can directly call your function here\r\n                        navigator.geolocation.getCurrentPosition(success);\r\n                    } else if (result.state === \"prompt\") {\r\n                        navigator.geolocation.getCurrentPosition(success, errors, options);\r\n                    } else if (result.state === \"denied\") {\r\n                        //If denied then you have to show instructions to enable location\r\n                    }\r\n                    result.onchange = function () {\r\n                        // console.log(result.state);\r\n                    };\r\n                });\r\n        } else {\r\n            alert(\"Sorry Not available!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        currentLocation()\r\n    }, [])\r\n\r\n    const handleCreate = () => {\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: true,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        } \r\n        else if(!userToken) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                  'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: true,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                  '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section className=\"hero-section\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6 col-lg-7\">\r\n\r\n                        <h1 className=\"mt-4\">Invest in NFTs to help fund projects and earn income.</h1>\r\n                        {/* <p>Earn rewards by referring your friends.</p> */}\r\n                        {/* Buttons */}\r\n                        <div className=\"button-group\">\r\n                            <a className=\"btn btn-bordered-white\" href={`/all/${\"LatestProjects\"}`}><i className=\"icon-rocket mr-2\" />Explore</a>\r\n                            <a className=\"btn btn-bordered-white\" onClick={handleCreate}><i className=\"icon-note mr-2\" />Create </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Shape */}\r\n            <div className=\"shape\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                    <defs>\r\n                        <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                            <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                            <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                        <polygon points fill=\"url(#linearGradient-1)\">\r\n                            <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                        </polygon>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Hero;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\nconst userToken = localStorage.getItem('authToken')\r\n    // ? JSON.parse(localStorage.getItem('user'))\r\n    ? localStorage.getItem('authToken')\r\n    : null\r\nconst projectSlice = createSlice({\r\n    name: 'project',\r\n\r\n    initialState: {\r\n        project: [],\r\n        projects: [],\r\n        nftlist: [],\r\n        projectdetails: [],\r\n        latestprojectdetails: [],\r\n        categories: [],\r\n        collections: [],\r\n        getcollections: [],\r\n        getcollectiondetails: [],\r\n        collectiondetails: [],\r\n        getSocialmediaIcons: [],\r\n        getfundProjDetails: [],\r\n        getnftwoldetails: [],\r\n        settings: [],\r\n        nftadd: [],\r\n        nftres: [],\r\n        nftupdate: [],\r\n        updbanner: [],\r\n        // liveProjects: [],\r\n        liveProjects: {\r\n            LatestProjects: [],\r\n            RecentCampaigns: []\r\n        },\r\n        message: {},\r\n    },\r\n    reducers: {\r\n        createProjectSuccess: (state, action) => {\r\n            state.project = action.payload;\r\n        },\r\n        createCollectionSuccess: (state, action) => {\r\n            state.collections = action.payload;\r\n        },\r\n        getCollections: (state, action) => {\r\n            // \r\n            state.getcollections = action?.payload?.data?.data;\r\n        },\r\n        getSocialmediaIcons: (state, action) => {\r\n            // \r\n            state.getsocial = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetails: (state, action) => {\r\n            // \r\n            state.getcollectiondetails = action?.payload?.data?.data;\r\n        },\r\n        getNftwolDetails: (state, action) => {\r\n            // \r\n            state.getnftwoldetails = action?.payload?.data?.data;\r\n        },\r\n        nftUpd: (state, action) => {\r\n            // \r\n            state.nftupdate = action?.payload?.data?.data;\r\n        },\r\n        nftAdd: (state, action) => {\r\n            // \r\n            state.nftadd = action?.payload?.data?.data;\r\n        },\r\n        getfundprojdetails: (state, action) => {\r\n            // \r\n            state.getfundProjDetails = action?.payload?.data?.data;\r\n        },\r\n        getProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        getCategoriesList: (state, action) => {\r\n            state.categories = action?.payload?.data?.data;\r\n        },\r\n        getSettings: (state, action) => {\r\n            state.settings = action?.payload?.data?.data;\r\n        },\r\n\r\n        getLatestProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        createFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        getProjectDetail: (state, action) => {\r\n            // \r\n            state.projectdetails = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetail: (state, action) => {\r\n            // \r\n            state.collectiondetails = action?.payload?.data?.data;\r\n        },\r\n        Nftres: (state, action) => {\r\n            // \r\n            state.nftres = action?.payload?.data?.data;\r\n        },\r\n        getNftList: (state, action) => {\r\n            // \r\n            state.nftlist = action?.payload?.data?.data;\r\n        },\r\n        getLatestProjectDetail: (state, action) => {\r\n            // \r\n            state.latestprojectdetails = action?.payload?.data?.data;\r\n        },\r\n        updatebanner: (state, action) => {\r\n            // \r\n            state.updbanner = action?.payload?.data?.data;\r\n        },\r\n        publicLiveProjects: (state, action) => {\r\n            state.liveProjects[action.payload.type] = action.payload.res.data.data.data\r\n            // state.liveProjects = action.payload.data.data.data\r\n            // state.liveProjects['R'] = action.payload.data.data.data\r\n        },\r\n        deleteProject: (state, action) => {\r\n            const { id } = action.payload?.data?.data;\r\n            state.projects = state.projects.filter(item => item.id !== id)\r\n        }\r\n    },\r\n});\r\n\r\nexport const projectReducer = projectSlice.reducer\r\n\r\nexport const {\r\n    createProjectSuccess,\r\n    getProjectList,\r\n    getProjectDetail,\r\n    getLatestProjectDetail,\r\n    publicLiveProjects,\r\n    createCollectionSuccess,\r\n    deleteProject,\r\n    createFail,\r\n    getLatestProjectList,\r\n    getCategoriesList,\r\n    getCollections,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getCollectionDetail,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    Nftres,\r\n    updatebanner,\r\n    nftUpd,\r\n    nftAdd\r\n} = projectSlice.actions;","import axios from \"axios\";\r\nimport {\r\n    createProjectSuccess,\r\n    deleteProduct,\r\n    getProjectDetail,\r\n    getProjectList,\r\n    createFail,\r\n    publicLiveProjects,\r\n    deleteProject,\r\n    getLatestProjectList,\r\n    getTopFundraiser,\r\n    getLatestProjectDetail,\r\n    getCategoriesList,\r\n    createCollectionSuccess,\r\n    getCollections,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    Nftres,\r\n    updatebanner,\r\n    nftUpd,\r\n    nftAdd\r\n} from \"../Slices/projectSlice\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { Redirect } from 'react-router-dom';\r\nimport swal from \"sweetalert\";\r\n\r\nexport const CreateProjectAction = (params, setLoading) => async dispatch => {\r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        // \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(createProjectSuccess(res));\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", res.data.message, 'success')\r\n                .then(function () {\r\n                    window.location = \"/projectlist\";\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectDetail = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/details/${id}`,\r\n            config)\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        // console.log('details', res)\r\n        dispatch(getProjectDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const LatestProjectDetail = (id) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjectDetails/${id}`,\r\n            config)\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getLatestProjectDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectList = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/list`,\r\n            config)\r\n\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        await dispatch(getProjectList(res.data?.data));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const NftList = (id) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdx/${id}`,\r\n            config)\r\n\r\n        // console.log(res, 'proj')\r\n        await dispatch(getNftList(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const uploadNFT = (params) => {\r\n    const token = localStorage.getItem('authToken')\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        // transformRequest: formData.append('image', params)\r\n    }\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", params);\r\n    return axios\r\n        .post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n            formData, config)\r\n        .then(function (response) {\r\n            // console.log(response, 'resss')\r\n            return {\r\n                success: true,\r\n                data: response.data,\r\n            };\r\n        })\r\n        .catch(function (error) {\r\n            return { success: false };\r\n        });\r\n    // formData.append('image',params)\r\n\r\n    // const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n    //     params, config)\r\n    // \r\n    // console.log('rasasses', res)\r\n    // return res\r\n    // await dispatch(Nftres(res))\r\n\r\n}\r\n\r\n\r\nexport const getPublicLiveProjects = createAsyncThunk(\r\n    \"auth/liveProjects\",\r\n\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const { type, projectType } = params\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjects?page=&latitude=&longitude=&search_keyword=&category_id=&type`, config)\r\n            // console.log(res, 'projres')\r\n            thunkAPI.dispatch(publicLiveProjects({\r\n                res: res,\r\n                type: projectType,\r\n            }));\r\n            // thunkAPI.dispatch(publicLiveProjects(res));\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n\r\nexport const UpdateProject = (props, params) => async dispatch => {\r\n    debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/update/${props}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'proj')\r\n        await dispatch(getProjectDetail(res));\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = `/projnftdetails/${props}`;\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const DeleteProject = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/projects/destroy/${id}`,\r\n            config)\r\n        // \r\n        // console.log(res.status, 'proj')\r\n        await dispatch(deleteProject(res));\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CategoriesAction = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCategories`, config)\r\n        // console.log(res, 'catres')\r\n        dispatch(getCategoriesList(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const GetCollectionsAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollection`,\r\n            config)\r\n        // console.log('colres', res)\r\n        await dispatch(getCollections(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CreateCollectionAction = (params) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createCollection`,\r\n            params, config)\r\n        // dispatch(GetCollectionsAction)\r\n        await dispatch(createCollectionSuccess(res));\r\n        if (res?.status === 200) {\r\n\r\n            await dispatch(GetCollectionsAction());\r\n            swal(\"success\", 'Collection Created', 'success')\r\n            // .then(function () {\r\n            //     onClick={() => props.onHide()}\r\n            // });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\nexport const GetCollectionDetails = (id) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollectionById/${id}`,\r\n            config)\r\n\r\n        await dispatch(getCollectionDetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSocialMediaIcons = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSocialMediaIcon`,\r\n            config)\r\n        // console.log('social', res)\r\n        await dispatch(getSocialmediaIcons(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateCollection = (id, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${id}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(getLatestProjectDetail(res));\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSettings = () => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSettings`,\r\n            config)\r\n        // \r\n        // console.log(res, 'sett rres')\r\n        await dispatch(getSettings(res));\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetNftwol = ({ id }) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdxWithoutLogin/${id}`,\r\n            config)\r\n\r\n        await dispatch(getNftwolDetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetfundraiserProject = (user_id) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getProjectByfundraiserIdx/${user_id}`,\r\n            config)\r\n\r\n        await dispatch(getfundprojdetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateBanner = (formData, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/image_update/${params}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(updatebanner(res));\r\n\r\n        if (res.status === 200) {\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                dispatch(ProjectDetail(params))\r\n                dispatch(LatestProjectDetail(params))\r\n                // window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const UpdateNft = (formData, props) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/update/${props.id}/${props.nft_id}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftUpd(res));\r\n\r\n        if (res.status === 200) {\r\n            // setLoading(false)\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                dispatch(ProjectDetail(props.id))\r\n                // dispatch(LatestProjectDetail(params))\r\n                // window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const AddNftAction = (formData, id, setLoading) => async dispatch => {\r\n    debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/create/${id}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftAdd(res));\r\n\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                // dispatch(ProjectDetail(props.id))\r\n                // dispatch(LatestProjectDetail(params))\r\n                // window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\n\r\nconst projectTypesMap = {\r\n    \"LatestProjects\": 2,\r\n    \"RecentCampaigns\": 1\r\n}\r\n\r\n\r\nconst AuctionsOne = ({ key, type }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const liveProjects = useSelector(state => {\r\n        return state?.projectdetails?.liveProjects[type]\r\n    })\r\n    console.log(liveProjects, 'liveeproj')\r\n    useEffect(() => {\r\n        dispatch(getPublicLiveProjects({\r\n            cursor: 1,\r\n            type: projectTypesMap[type],\r\n            projectType: type,\r\n        }))\r\n\r\n    }, [dispatch])\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"live-auctions-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Project</span>\r\n                                <h3 className=\"mt-3 mb-0\">{type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                <a className=\"btn content-btn\" href={`/all/${type}`}>View All</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auctions-slides\">\r\n                    <div className=\"swiper-container slider-mid items\">\r\n                        <div className=\"swiper-wrapper\">\r\n                            {/* Single Slide */}\r\n                            {liveProjects?.map((item, idx) => {\r\n                                return (\r\n                                    <div key={`auc_${idx}`} className=\"swiper-slide item\">\r\n                                        <Link to={`/projdetails/${item.id}`} className=\"card\">\r\n                                            {/* {item?.nft_data?.map((item, idx) => { */}\r\n                                            {/* return ( */}\r\n                                            <div className=\"image-over\">\r\n                                                <Link to={`/projdetails/${item.id}`}>\r\n                                                    <img className=\"card-img-top\" src={item?.nft_data[0]?.image} alt=\"\" />\r\n                                                </Link>\r\n\r\n                                            </div>\r\n                                            {/* ) */}\r\n                                            {/* })} */}\r\n                                            {/* Card Caption */}\r\n                                            <div className=\"card-caption col-12 p-0\">\r\n                                                {/* Card Body */}\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"countdown-times mb-3\">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div>\r\n                                                    <a href=\"#\">\r\n                                                        <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                                                    </a>\r\n                                                    <a className=\"seller d-flex align-items-center my-3\" href=\"#\">\r\n                                                        <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" />\r\n                                                        <span className=\"ml-2\">{item.user_data.username}</span>\r\n                                                    </a>\r\n                                                    <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                        <span>{item.price} MATIC</span>\r\n                                                        <span>{item.number_of_nft} NFTS</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"swiper-pagination\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default AuctionsOne;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst fundraiserSlice = createSlice({\r\n    name: 'fundraiser',\r\n\r\n    initialState: {\r\n        fundraiser: [],\r\n        fundraiserdetail: [],\r\n    },\r\n    reducers: {\r\n        getTopFundraiser: (state, action) => {\r\n            // \r\n            state.fundraiser = action.payload;\r\n\r\n        },\r\n        getTopFundraiserDetail: (state, action) => {\r\n            // \r\n            state.fundraiserdetail = action?.payload?.data?.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const fundraiserReducer = fundraiserSlice.reducer\r\n\r\nexport const {\r\n    getTopFundraiser,\r\n    getTopFundraiserDetail\r\n} = fundraiserSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getTopFundraiser, getTopFundraiserDetail } from \"../Slices/fundraiserSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const TopFundraiserAction = createAsyncThunk(\r\n    \"auth/topfundraiser\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // \r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers`, config)\r\n            // console.log(res, 'fund res')\r\n            thunkAPI.dispatch(getTopFundraiser(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n// export const TopFundraiserDetail = createAsyncThunk(\r\n//     \"auth/topfundraiserdetail\",\r\n//     async (id, thunkAPI) => {\r\n//         // \r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//             }\r\n//             const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${id}`, config)\r\n\r\n//             thunkAPI.dispatch(getTopFundraiserDetail(res?.data?.data));\r\n\r\n//         } catch (e) {\r\n//             if (e?.response?.data.message) {\r\n//                 swal('error', e.response.data.message, 'error')\r\n//             }\r\n//         }\r\n//     })\r\nexport const TopFundraiserDetail = (user_id) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${user_id}`,\r\n            config)\r\n\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getTopFundraiserDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getTopFundraiser } from '../../redux/Slices/projectSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Fundraiser = () => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    // console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <section className=\"top-seller-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Fundraisers</span>\r\n                                <h3 className=\"mt-3 mb-0\">Top Fundraisers</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {fund?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Seller */}\r\n                                <Link to={`/fundraiser/detail/${item.user_id}`}>\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n\r\n                                            <img className=\"avatar-md rounded-circle\" src={item.avatar} alt=\"\" />\r\n\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3\">\r\n                                                <a className=\"seller mb-2\">@{item.username}</a>\r\n                                                <span>{item.amount}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Fundraiser;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst collectionSlice = createSlice({\r\n    name: 'collection',\r\n\r\n    initialState: {\r\n        collection: [],\r\n        collectiondetail: [],\r\n    },\r\n    reducers: {\r\n        getPopularCollection: (state, action) => {\r\n            // \r\n            state.collection = action.payload;\r\n        },\r\n        getPopularCollectiondetails: (state, action) => {\r\n            // \r\n            state.collectiondetail = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const collectionReducer = collectionSlice.reducer\r\n\r\nexport const {\r\n    getPopularCollection,\r\n    getPopularCollectiondetails\r\n} = collectionSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getPopularCollection, getPopularCollectiondetails } from \"../Slices/popularCollectionSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const PopularCollectionAction = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnection`, config)\r\n            console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollection(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const PopularCollectionActionDetails = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ id }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnectionByIdx/${id}`, config)\r\n            // console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollectiondetails(res));\r\n\r\n        } catch (e) {\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Collections = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collection\r\n    })\r\n    console.log(coll, \"coll\")\r\n    useEffect(() => {\r\n\r\n        dispatch(PopularCollectionAction({}))\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"popular-collections-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>POPULAR</span>\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                <Link className=\"btn content-btn text-left\" to=\"/allcollections\">Explore More</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {coll.slice(0, 8)?.map((item, idx) => {\r\n\r\n\r\n\r\n                        return (\r\n                            <div key={`cd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/popularcollection/details/${item.id}`}>\r\n                                            <img className=\"card-img-top\" src={item?.image} alt=\"\" />\r\n                                        </Link>\r\n                                        {/* Seller */}\r\n                                        <a className=\"seller\">\r\n\r\n                                            {/* <Link to={`/item-details/${item.id}`} className=\"seller\"> */}\r\n                                            <div className=\"seller-thumb avatar-lg\">\r\n                                                <img className=\"rounded-circle\" src={item?.user_data?.avatar} alt=\"\" />\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            <Link to={`/item-details/${item.id}`}>\r\n                                                <h5 className=\"mb-2\">{item.title.slice(0, 16)}<span>...</span></h5>\r\n                                            </Link>\r\n                                            <span>{item.price}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        )\r\n                    })}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Collections;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Exclusive Assets\",\r\n    heading: \"Explore\",\r\n    btn_1: \"View All\",\r\n    btn_2: \"Load More\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        img: \"/img/auction_1.jpg\",\r\n        title: \"Walking On Air\",\r\n        owner: \"Richard\",\r\n        price: \"1.5 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        img: \"/img/auction_2.jpg\",\r\n        title: \"Domain Names\",\r\n        owner: \"John Deo\",\r\n        price: \"2.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        img: \"/img/auction_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        owner: \"Arham\",\r\n        price: \"2.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        img: \"/img/auction_4.jpg\",\r\n        title: \"Industrial Revolution\",\r\n        owner: \"Yasmin\",\r\n        price: \"1.8 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        img: \"/img/auction_5.jpg\",\r\n        title: \"Utility\",\r\n        owner: \"Junaid\",\r\n        price: \"1.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        img: \"/img/auction_6.jpg\",\r\n        title: \"Sports\",\r\n        owner: \"ArtNox\",\r\n        price: \"1.9 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"7\",\r\n        img: \"/img/auction_7.jpg\",\r\n        title: \"Cartoon Heroes\",\r\n        owner: \"Junaid\",\r\n        price: \"3.2 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"8\",\r\n        img: \"/img/auction_8.jpg\",\r\n        title: \"Gaming Chair\",\r\n        owner: \"Johnson\",\r\n        price: \"0.69 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"9\",\r\n        img: \"/img/auction_9.jpg\",\r\n        title: \"Photography\",\r\n        owner: \"Sara\",\r\n        price: \"2.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"10\",\r\n        img: \"/img/auction_10.jpg\",\r\n        title: \"Zed Run\",\r\n        owner: \"SpaceMan\",\r\n        price: \"3.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"11\",\r\n        img: \"/img/auction_11.jpg\",\r\n        title: \"Rare Tyres\",\r\n        owner: \"Monas\",\r\n        price: \"2.2 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"12\",\r\n        img: \"/img/auction_12.jpg\",\r\n        title: \"World of Women\",\r\n        owner: \"Victor\",\r\n        price: \"4.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n]\r\n\r\nclass ExploreOne extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area load-more p-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.initData.pre_heading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/explore-3\">{this.state.initData.btn_1}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`exo_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/item-details\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                </a>\r\n                                                <div className=\"seller d-flex align-items-center my-3\">\r\n                                                    <span>Owned By</span>\r\n                                                    <a href=\"/author\">\r\n                                                        <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span>{item.price}</span>\r\n                                                    <span>{item.count}</span>\r\n                                                </div>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/login\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <a id=\"load-btn\" className=\"btn btn-bordered-white mt-5\" href=\"#\">{this.state.initData.btn_2}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreOne;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst data = {\r\n    preHeading: \"How It Works\",\r\n    heading: \"Create and sell your NFTs\",\r\n    workData: [\r\n        {\r\n            \"id\": 1,\r\n            \"icon\": \"icons icon-wallet text-effect\",\r\n            \"title\": \"Setup your wallet\",\r\n            \"text\": \"Click Connect Wallet in the top right corner to login and get started.\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"icon\": \"icons icon-grid text-effect\",\r\n            \"title\": \"Create your collection\",\r\n            \"text\": \"Click Creator and set up your organization profile, description, fundraising goal and more.\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"icon\": \"icons icon-drawer text-effect\",\r\n            \"title\": \"Add your NFTs\",\r\n            \"text\": \"Upload your project art or images and description.\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"icon\": \"icons icon-bag text-effect\",\r\n            \"title\": \"List them for sale\",\r\n            \"text\": \"Choose how you want to price and sell your NFTs!\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst Work = () => {\r\n\r\n\r\n    return (\r\n        <section className=\"work-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro mb-4\">\r\n                            <div className=\"intro-content\">\r\n                                <span>{data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {data?.workData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Work */}\r\n                                <div className=\"single-work\">\r\n                                    <i className={item.icon} />\r\n                                    <h4>{item.title}</h4>\r\n                                    <p>{item.text}</p>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Work;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst footerSlice = createSlice({\r\n    name: 'footer',\r\n\r\n    initialState: {\r\n        footer: [],\r\n        aboutus: []\r\n\r\n    },\r\n    reducers: {\r\n\r\n        getfooter: (state, action) => {\r\n            state.footer = action.payload;\r\n        },\r\n        getabout: (state, action) => {\r\n            state.aboutus = action.payload;\r\n        },\r\n\r\n    },\r\n});\r\n\r\nexport const footerReducer = footerSlice.reducer\r\n\r\nexport const {\r\n    getfooter,\r\n    getabout,\r\n} = footerSlice.actions;","import axios from \"axios\";\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getabout, getfooter } from \"../Slices/footerSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const getFooter = createAsyncThunk(\r\n    \"auth/footer\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/term-condition`, config)\r\n            thunkAPI.dispatch(getfooter(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const AboutUsAction = createAsyncThunk(\r\n    \"auth/about\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAbouts`, config)\r\n            thunkAPI.dispatch(getabout(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getFooter } from '../../redux/Actions/footerAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter())\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    return (\r\n\r\n\r\n        <footer className=\"footer-area\">\r\n            {/* Footer Top */}\r\n            <div className=\"footer-top\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Logo */}\r\n                                <a className=\"navbar-brand\" href=\"/\">\r\n                                    <img src=\"/img/logo.png\" alt=\"\" />\r\n                                </a>\r\n                                <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                                {/* Social Icons */}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Useful Links</h4>\r\n                                <ul>\r\n                                    <li><Link to=\"/create\">Create Project</Link></li>\r\n                                    <li><a href={`/all/${\"LatestProjects\"}`}>Explore NFTs</a></li>\r\n                                    <li><Link to=\"/terms&conditions\">Terms of Service</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Community</h4>\r\n                                <ul>\r\n                                    <li><a target=\"_blank\" href=\"https://www.canopycrypto.io/our-team/\">About Us</a></li>\r\n                                    {/* <li><Link to='/https://www.canopycrypto.io/our-team/'>About Us</Link></li> */}\r\n                                    <li><Link to='/contact'>Get Support</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Footer Bottom */}\r\n            <div className=\"footer-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Copyright Area */}\r\n                            <div className=\"copyright-area d-flex flex-wrap justify-content-center justify-content-sm-between text-center py-4\">\r\n                                {/* Copyright Left */}\r\n                                <div className=\"copyright-left\">© 2022 Canopy Labs Ltd.</div>\r\n                                {/* Copyright Right */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ModalSearch = () => {\r\n    const dispatch = useDispatch()\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n    }\r\n    return (\r\n        <div id=\"search\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        {/* {this.state.data.menuName} <i className={this.state.data.menuIcon} /> */}\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form className=\"row\">\r\n                            <div className=\"col-12 align-self-center\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 pb-3\">\r\n                                        <Link to='/author'>Profile</Link>\r\n                                        <Link to='/projectlist'>My Projects</Link>\r\n                                        {/* <button type='button' class=\"dropdown-item\"><a href='/author'>Profile</a></button>\r\n                <button type='button' class=\"dropdown-item\"><a href='/projectlist'>My Projects</a></button> */}\r\n                                        <button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'>Logout</a></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group mt-4\">\r\n                                        <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group align-self-center\">\r\n                                        {/* <button className=\"btn btn-bordered-white mt-3\">{this.state.data.btnText}</button> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ModalSearch;","import React from 'react';\r\n\r\nconst ModalMenu = () => {\r\n    return (\r\n        <div id=\"menu\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        Menu <i className=\"far fa-times-circle icon-close\" />\r\n                    </div>\r\n                    <div className=\"menu modal-body\">\r\n                        <div className=\"row w-100\">\r\n                            <div className=\"items p-0 col-12 text-center\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalMenu;","import React from 'react';\r\n\r\nconst Scrollup = () => {\r\n    return (\r\n        <div id=\"scroll-to-top\" className=\"scroll-to-top\">\r\n            <a href=\"#header\" className=\"smooth-anchor\">\r\n                <i className=\"fas fa-arrow-up\" />\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scrollup;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Hero from '../components/Hero/Hero';\r\nimport Auctions from '../components/Auctions/AuctionsOne';\r\nimport TopSeller from '../components/TopSeller/topfundraiser';\r\nimport Collections from '../components/Collections/Collections';\r\nimport Explore from '../components/Explore/ExploreOne';\r\nimport Work from '../components/Work/Work';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Hero />\r\n            <Auctions key=\"latestProjects\" type={\"LatestProjects\"} />\r\n            {/* <Auctions type={\"Top Fundraisers\"} /> */}\r\n            {/* <Auctions key=\"recentCampaigns\" type={\"RecentCampaigns\"} /> */}\r\n            {/* <Auctions type={\"Popular Connections\"} /> */}\r\n            <Fundraiser />\r\n            <Collections />\r\n            {/* <Explore /> */}\r\n            <Work />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Breadcrumb extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"breadcrumb-area overlay-dark d-flex align-items-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Breamcrumb Content */}\r\n                            <div className=\"breadcrumb-content text-center\">\r\n                                <h2 className=\"m-0\">{this.props.title}</h2>\r\n                                <ol className=\"breadcrumb d-flex justify-content-center\">\r\n                                    <li className=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\r\n                                    <li className=\"breadcrumb-item\"><a href=\"#\">{this.props.subpage}</a></li>\r\n                                    <li className=\"breadcrumb-item active\">{this.props.page}</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/explore\";\r\n\r\nclass ExploreTwo extends Component {\r\n    state = {\r\n        data: {},\r\n        exploreData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    exploreData: res.data.exploreData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/explore-1\">{this.state.data.btnText}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.exploreData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`edt_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/item-details\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                </a>\r\n                                                <div className=\"seller d-flex align-items-center my-3\">\r\n                                                    <span>Owned By</span>\r\n                                                    <a href=\"/author\">\r\n                                                        <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span>{item.price}</span>\r\n                                                    {/* <span>{item.count}</span> */}\r\n                                                </div>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreTwo;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass ExploreOne extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 1\" />\r\n                <Explore />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreOne;","import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllProjects = () => {\r\n    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const projects = useSelector(state => {\r\n        return state.projectdetails.projects\r\n    })\r\n\r\n    console.log(projects, 'projects')\r\n\r\n    useEffect(() => {\r\n        dispatch(ProjectList())\r\n    }, [dispatch])\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(DeleteProject(id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center mb-4\">\r\n                                {/* <span>Explore</span> */}\r\n                                <h3 className=\"mt-3 mb-0\">My Projects</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row items explore-items h-auto\">\r\n                        {projects && projects.length ?\r\n                            [...new Map(projects.map(item =>\r\n                                [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                    return (\r\n                                        <Link key={`edth_${idx}`} to={`/projnftdetails/${item.id}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                            <div>\r\n                                                <div className=\"card project_cards\">\r\n                                                    <div className=\"image-over relative \">\r\n                                                        {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                        <img className=\"card-img-top\" src={item?.nft_data[0]?.image} alt={item.nft_data.description} />\r\n                                                    </div>\r\n                                                    <div className='token'>\r\n                                                        <span></span>\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <a>\r\n                                                                <h5 className=\"mb-0\">{item.title.slice(0, 20)}</h5>\r\n                                                            </a>\r\n                                                            <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\">You</h6>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.nft_data.length} NFTS </span>\r\n                                                                <span> + {item.number_of_nft} NFTS </span>\r\n                                                            </div>\r\n\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                            <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                <h2 className='allproj2'>\r\n                                    You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                </h2>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllProjects; ","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ProjectList';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport GetAllProjects from '../components/Explore/ProjectList';\r\n\r\nconst ExploreTwo = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Projects\" subpage=\"Explore\" page=\"\" /> */}\r\n            <GetAllProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExploreTwo;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Explore\",\r\n    heading: \"Exclusive Digital Assets\",\r\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        img: \"/img/auction_1.jpg\",\r\n        title: \"Walking On Air\",\r\n        owner: \"Richard\",\r\n        price: \"1.5 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        img: \"/img/auction_2.jpg\",\r\n        title: \"Domain Names\",\r\n        owner: \"John Deo\",\r\n        price: \"2.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        img: \"/img/auction_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        owner: \"Arham\",\r\n        price: \"2.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        img: \"/img/auction_4.jpg\",\r\n        title: \"Industrial Revolution\",\r\n        owner: \"Yasmin\",\r\n        price: \"1.8 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        img: \"/img/auction_5.jpg\",\r\n        title: \"Utility\",\r\n        owner: \"Junaid\",\r\n        price: \"1.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        img: \"/img/auction_6.jpg\",\r\n        title: \"Sports\",\r\n        owner: \"ArtNox\",\r\n        price: \"1.9 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n]\r\n\r\nclass ExploreFive extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"explore-slides\">\r\n                        <div className=\"swiper-container slider-mid items\">\r\n                            <div className=\"swiper-wrapper\">\r\n                                {/* Single Slide */}\r\n                                {this.state.data.map((item, idx) => {\r\n                                    return (\r\n                                        <div key={`exfi_${idx}`} className=\"swiper-slide item\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"image-over\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <div className=\"seller d-flex align-items-center my-3\">\r\n                                                            <span>Owned By</span>\r\n                                                            <a href=\"/author\">\r\n                                                                <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                            <span>{item.price}</span>\r\n                                                            <span>{item.count}</span>\r\n                                                        </div>\r\n                                                        <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/create\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div className=\"swiper-pagination\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreFive;","import React, { Component } from 'react';\r\nimport AuctionsOne from '../Auctions/AuctionsOne';\r\n\r\n\r\n\r\nconst LatestProject = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <AuctionsOne />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default LatestProject;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreFive';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\n\r\nconst LatestProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" />\r\n            <AuctionsOne type=\"LatestProjects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LatestProjects;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreFour from './latestProjects';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\n\r\nconst Auctions = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LatestProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Auctions;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\n\r\nimport { useState } from 'react';\r\nimport { getPopularCollectiondetails } from '../../redux/Slices/popularCollectionSlice';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\n\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst PopularDetails = () => {\r\n\r\n\r\n\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const populardetail = useSelector(state => {\r\n        // \r\n        return state?.collection.collectiondetail\r\n    })\r\n    console.log(populardetail, 'populardetail')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        dispatch(PopularCollectionActionDetails({ id }))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-md-8 \">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n                                <img src={populardetail.image} alt=\"\" />\r\n                            </div><div className=\"card no-hover countdown-times my-4\">\r\n                                    {/* ksdjfksdjbfjsdbf */}\r\n                                    {/* {nftdetail.description} */}\r\n                                    {/* <div className=\"countdown d-flex justify-content-center\" /> */}\r\n                                    <p dangerouslySetInnerHTML={{ __html: populardetail.description }} className=\"nft-detail-nft\" />\r\n                                </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <div className=\"card no-hover content sm:mt-5 mt-lg-0\">\r\n                            <div className='d-flex  align-items-center justify-content-between'>\r\n                                <h3 className=\"m-0\">{populardetail?.title}</h3>\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center '>\r\n                                    {/* <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"> <Link to={`/updateproject/${projdetail.projectdetails.id}`} style={{ color: '#FFF' }}>Edit</Link></a>\r\n                                        <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-2\" onClick={() => deleteHandler(projdetail.projectdetails.id)} style={{ color: '#FFF' }}>Delete</a> */}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default PopularDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport PopularDetails from '../components/Explore/popularDetails';\r\n\r\nclass ItemDetails extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <PopularDetails />\r\n                {/* <LiveAuctions /> */}\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemDetails;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/activity\";\r\n\r\nclass Activity extends Component {\r\n    state = {\r\n        data: {},\r\n        tabData_1: [],\r\n        tabData_2: [],\r\n        tabData_3: [],\r\n        filterData: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    tabData_1: res.data.tabData_1,\r\n                    tabData_2: res.data.tabData_2,\r\n                    tabData_3: res.data.tabData_3,\r\n                    filterData: res.data.filterData \r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"activity-area load-more\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro mb-4\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        <div className=\"col-12 col-md-6 col-lg-8\">\r\n                            {/* Netstorm Tab */}\r\n                            <ul className=\"netstorm-tab nav nav-tabs\" id=\"nav-tab\">\r\n                                <li>\r\n                                    <a className=\"active\" id=\"nav-home-tab\" data-toggle=\"pill\" href=\"#nav-home\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_1}</h5>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a id=\"nav-profile-tab\" data-toggle=\"pill\" href=\"#nav-profile\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_2}</h5>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a id=\"nav-contact-tab\" data-toggle=\"pill\" href=\"#nav-contact\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_3}</h5>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                            {/* Tab Content */}\r\n                            <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                                <div className=\"tab-pane fade show active\" id=\"nav-home\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_1.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`ato_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"nav-profile\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_2.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`att_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"nav-contact\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_3.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`atth_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            {/* Activity Content */}\r\n                            <div className=\"activity-content mt-5 mt-lg-0\">\r\n                                {/* Single Widget */}\r\n                                <div className=\"single-widget\">\r\n                                    {/* Search Widget */}\r\n                                    <div className=\"widget-content search-widget\">\r\n                                        <form action=\"#\">\r\n                                            <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Single Widget */}\r\n                                <div className=\"single-widget\">\r\n                                    {/* Filter Widget */}\r\n                                    <div className=\"widget filter-widget\">\r\n                                        <h4 className=\"title\">{this.state.data.widgetTitle}</h4>\r\n                                        {/* Filter Widget Content */}\r\n                                        <div className=\"widget-content\">\r\n                                            {/* Tags Widget Items */}\r\n                                            <div className=\"widget-content filter-widget-items mt-3\">\r\n                                                {this.state.filterData.map((item, idx) => {\r\n                                                    return (\r\n                                                        <a key={`fd_${idx}`} href=\"#\" className=\"badge tag\">{item.title}</a>\r\n                                                    );\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Activities from '../components/Activity/Activity';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Activity extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Activity\" subpage=\"Pages\" page=\"Activity\" />\r\n                <Activities />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/blog\";\r\n\r\nclass Blog extends Component {\r\n    state = {\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data.blogData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"blog-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`bd_${idx}`} className=\"col-12 col-md-4 item\">\r\n                                    {/* Single Blog */}\r\n                                    <div className=\"card blog-card\">\r\n                                        {/* Blog Thumb */}\r\n                                        <div className=\"blog-thumb\">\r\n                                            <a href=\"/blog-single\"><img src={item.img} alt=\"\" /></a>\r\n                                        </div>\r\n                                        {/* Blog Content */}\r\n                                        <div className=\"blog-content\">\r\n                                            {/* Meta Info */}\r\n                                            <ul className=\"meta-info d-flex justify-content-between list-unstyled mt-4\">\r\n                                                <li>By <a href=\"#\">{item.author}</a></li>\r\n                                                <li><a href=\"#\">{item.date}</a></li>\r\n                                            </ul>\r\n                                            {/* Blog Title */}\r\n                                            <a href=\"/blog-single\">\r\n                                                <h4>{item.title}</h4>\r\n                                            </a>\r\n                                            <p>{item.content}</p>\r\n                                            {/* Blog Button */}\r\n                                            <a className=\"btn content-btn\" href=\"/blog-single\">{item.btnText}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport BlogSection from '../components/Blog/Blog';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Blog extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Blog\" subpage=\"Community\" page=\"Blog\" />\r\n                <BlogSection />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/sidebar\";\r\n\r\nclass Sidebar extends Component {\r\n    state = {\r\n        data: {},\r\n        widgetData_1: [],\r\n        widgetData_2: [],\r\n        widgetData_3: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    widgetData_1: res.data.widgetData_1,\r\n                    widgetData_2: res.data.widgetData_2,\r\n                    widgetData_3: res.data.widgetData_3\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <aside className=\"col-12 col-lg-4 pl-lg-5 p-0 float-right sidebar\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 align-self-center text-left\">\r\n                        {/* Widget [categories] */}\r\n                        <div className=\"item widget-categories\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_1}</h4>\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                {this.state.widgetData_1.map((item, idx) => {\r\n                                    return (\r\n                                        <li key={`wdo_${idx}`} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            <a href=\"#\">{item.title}</a>\r\n                                            <span className=\"badge circle\">{item.content}</span>\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                        {/* Widget [tags] */}\r\n                        <div className=\"item widget-tags\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_2}</h4>\r\n                            {this.state.widgetData_2.map((item, idx) => {\r\n                                return (\r\n                                    <a key={`wdt_${idx}`} href=\"\" className=\"badge tag\">{item.title}</a>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        {/* Widget [share-this] */}\r\n                        <div className=\"item widget-share-this\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_3}</h4>\r\n                            <ul className=\"navbar-nav social share-list\">\r\n                                {this.state.widgetData_3.map((item, idx) => {\r\n                                    return (\r\n                                        <li key={`wdth_${idx}`} className=\"nav-item\">\r\n                                            <a href=\"#\" className=\"nav-link\"><i className={item.icon} /></a>\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/blogSingle\";\r\n\r\nclass BlogSingle extends Component {\r\n    state = {\r\n        data: {}\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"single featured post-details\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {/* Main */}\r\n                        <div className=\"col-12 col-lg-8 p-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 align-self-center\">\r\n                                    {/* Image */}\r\n                                    <div className=\"blog-thumb\">\r\n                                        <img className=\"w-100\" src={this.state.data.image} alt=\"\" />\r\n                                    </div>\r\n                                    <h2 className=\"featured ml-0\">{this.state.data.title}</h2>\r\n                                    <p>{this.state.data.content_1}</p>\r\n                                    <p>\r\n                                    </p>\r\n                                    <blockquote>{this.state.data.quote}</blockquote>\r\n                                    <p>{this.state.data.content_2}</p>\r\n                                    <p>{this.state.data.content_3}</p>\r\n                                    {/* Post Holder */}\r\n                                    <ul className=\"mb-5 post-holder\">\r\n                                        <li className=\"post-meta-item\">\r\n                                            <div className=\"date\">\r\n                                                <span className=\"posted-on\">Posted On <a href=\"#\" rel=\"bookmark\"><time className=\"entry-date published updated\" dateTime=\"2018-11-01T06:18:46+00:00\">{this.state.data.date}</time></a></span>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                    {/* Comments */}\r\n                                    <h3 className=\"comments-reply-text mb-3\">{this.state.data.commentTitle}</h3>\r\n                                    <p className=\"mt-3\">{this.state.data.commentContent}</p>\r\n                                    <form>\r\n                                        <fieldset>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 col-lg-6 input-group p-0 pr-lg-3 mb-3\">\r\n                                                    <input type=\"text\" name=\"name\" data-minlength={3} placeholder=\"Name\" required />\r\n                                                </div>\r\n                                                <div className=\"col-12 col-lg-6 input-group p-0 mb-3\">\r\n                                                    <input type=\"email\" name=\"email\" data-minlength={3} placeholder=\"Email\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 input-group p-0 mb-3\">\r\n                                                    <textarea name=\"message\" data-minlength={3} rows={4} placeholder=\"Message\" required defaultValue={\"\"} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12 input-group p-0\">\r\n                                                <a className=\"btn btn-bordered-white text-white\">{this.state.data.commentBtn}<i className=\"icon-login ml-2\" /></a>\r\n                                            </div>\r\n                                        </fieldset>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Sidebar */}\r\n                        <Sidebar />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogSingle;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Blog from '../components/BlogSingle/BlogSingle';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass BlogSingle extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Blog Single\" subpage=\"Community\" page=\"Blog Single\" />\r\n                <Blog />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogSingle;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Help Center\",\r\n    heading: \"How can we help you?\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        icon: \"icon icon-plane text-effect\",\r\n        title: \"Getting Started\",\r\n        content: \"Learn how to create an account, set up your wallet, and what you can do on NetStorm\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        icon: \"icon icon-note text-effect\",\r\n        title: \"Creating\",\r\n        content: \"Learn how to create your very first NFT and how to create your NFT collections so you can begin selling and sharing\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        icon: \"icon icon-handbag text-effect\",\r\n        title: \"Buying\",\r\n        content: \"Learn how to purchase your first NFT and understand gas fees and what's gas free on NetStorm\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        icon: \"icon icon-chart text-effect\",\r\n        title: \"Selling\",\r\n        content: \"Learn how list your NFTs for sale and understand the different ways to list your NFTs\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        icon: \"icon icon-link text-effect\",\r\n        title: \"Partners\",\r\n        content: \"Learn how you can partner with us to showcase your NFT drops\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        icon: \"icon icon-flag text-effect\",\r\n        title: \"Developers\",\r\n        content: \"Learn how you can develop with NetStorm &amp; sell them on Marketplace\"\r\n    }\r\n]\r\n\r\nclass HelpCenter extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"help-center-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`hd_${idx}`} className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                    {/* Help Card */}\r\n                                    <div className=\"card help-card\">\r\n                                        <a className=\"d-block text-center\" href=\"#\">\r\n                                            <i className={item.icon} />\r\n                                            <h4>{item.title}</h4>\r\n                                            <p>{item.content}</p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"FAQ\",\r\n    heading: \"Frequently Asked Questions\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        btnClass: \"btn d-block text-left w-100 py-4\",\r\n        target: \"#collapseOne\",\r\n        quote: \"How do I create an NetStorm account?\",\r\n        contentId: \"collapseOne\",\r\n        contentClass: \"collapse show\",\r\n        content: \"The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text.\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseTwo\",\r\n        quote: \"Where can I see transaction details?\",\r\n        contentId: \"collapseTwo\",\r\n        contentClass: \"collapse\",\r\n        content: \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source.\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseThree\",\r\n        quote: \"How do royalties work on NetStorm?\",\r\n        contentId: \"collapseThree\",\r\n        contentClass: \"collapse\",\r\n        content: \"It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFour\",\r\n        quote: \"How do I list an NFT to sell?\",\r\n        contentId: \"collapseFour\",\r\n        contentClass: \"collapse\",\r\n        content: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFive\",\r\n        quote: \"How do I create an NFT?\",\r\n        contentId: \"collapseFive\",\r\n        contentClass: \"collapse\",\r\n        content: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"\r\n    }\r\n]\r\n\r\nclass Faq extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"faq-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* FAQ Content */}\r\n                            <div className=\"faq-content\">\r\n                                {/* Netstorm Accordion */}\r\n                                <div className=\"accordion\" id=\"netstorm-accordion\">\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <div className=\"col-12 col-md-10\">\r\n                                            {/* Single Accordion Item */}\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <div key={`fd_${idx}`} className=\"single-accordion-item p-3\">\r\n                                                        {/* Card Header */}\r\n                                                        <div className=\"card-header bg-inherit border-0 p-0\">\r\n                                                            <h2 className=\"m-0\">\r\n                                                                <button className={item.btnClass} type=\"button\" data-toggle=\"collapse\" data-target={item.target}>\r\n                                                                    {item.quote}\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id={item.contentId} className={item.contentClass} data-parent=\"#netstorm-accordion\">\r\n                                                            {/* Card Body */}\r\n                                                            <div className=\"card-body py-3\">\r\n                                                                {item.content}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Faq;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Help from '../components/HelpCenter/HelpCenter';\r\nimport Faq from '../components/Faq/Faq';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass HelpCenter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Help Center\" subpage=\"Community\" page=\"Help Center\" />\r\n                <Help />\r\n                <Faq />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/authors\";\r\n\r\nclass Authors extends Component {\r\n    state = {\r\n        data: {},\r\n        authorData: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    authorData: res.data.authorData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                <p>{this.state.data.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.authorData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`ad_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card no-hover text-center\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/author\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                            {/* Seller */}\r\n                                            <a className=\"seller\" href=\"/author\">\r\n                                                <div className=\"seller-thumb avatar-lg\">\r\n                                                    <img className=\"rounded-circle\" src={item.avatar} alt=\"\" />\r\n                                                </div>\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body mt-4\">\r\n                                                <a href=\"/author\">\r\n                                                    <h5>{item.author}</h5>\r\n                                                </a>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authors;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/seller\";\r\n\r\nclass TopSeller extends Component {\r\n    state = {\r\n        data: {},\r\n        sellerData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    sellerData: res.data.sellerData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"top-seller-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/authors\">View All</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.sellerData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-4 item\">\r\n                                    {/* Single Seller */}\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n                                            <a href=\"/author\">\r\n                                                <img className=\"avatar-md rounded-circle\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3\">\r\n                                                <a className=\"seller mb-2\" href=\"/author\">{item.seller}</a>\r\n                                                <span>{item.price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopSeller;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Author from '../components/Authors/Authors';\r\nimport TopSeller from '../components/TopSeller/TopSellerTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Authors extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Authors\" subpage=\"Pages\" page=\"Authors\" />\r\n                <Author />\r\n                <TopSeller />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authors;","// import Button from 'react-bootstrap/Button';\r\n// import Modal from 'react-bootstrap/Modal';\r\n// import { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useEffect, useRef, useState } from 'react';\r\n// import { Controller, useForm } from 'react-hook-form';\r\n// import { CopyToClipboard } from 'react-copy-to-clipboard'\r\n// import {\r\n//     EmailShareButton,\r\n//     FacebookIcon,\r\n//     FacebookShareButton,\r\n//     InstapaperShareButton,\r\n//     InstapaperIcon,\r\n//     LineShareButton,\r\n//     LinkedinShareButton,\r\n//     PinterestShareButton,\r\n//     RedditShareButton,\r\n//     TelegramIcon,\r\n//     TelegramShareButton,\r\n//     TwitterIcon,\r\n//     TwitterShareButton,\r\n//     WhatsappIcon,\r\n//     WhatsappShareButton,\r\n//     LinkedinIcon,\r\n//     EmailIcon,\r\n// } from \"react-share\";\r\n// import {\r\n//     FacebookShareCount,\r\n//     HatenaShareCount,\r\n//     OKShareCount,\r\n//     PinterestShareCount,\r\n//     RedditShareCount,\r\n//     TumblrShareCount,\r\n//     VKShareCount\r\n// } from \"react-share\";\r\n// import JoditEditor from 'jodit-react';\r\n// import { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\n// import { useParams } from 'react-router';\r\n// // import 'bootstrap/dist/css/bootstrap.min.css';\r\n// function ProjDetailPopup(props) {\r\n//     const editor = useRef(null);\r\n//     // const [title, setTitle] = useState(\"\");\r\n//     // const [description, setDescription] = useState(\"\");\r\n//     // const [short_url, setShortUrl] = useState(\"\");\r\n//     // const [symbol, setSymbol] = useState(\"\");\r\n//     const dispatch = useDispatch()\r\n//     const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n//     const [description, setDescription] = useState();\r\n//     const id = useParams()\r\n//     const [type, setType] = useState()\r\n//     // const url = window.location.href + '/' + props.userRef\r\n//     // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n//     const { countries } = useSelector(state => state.countries)\r\n//     const [country, setCountry] = useState('')\r\n//     console.log('country', country)\r\n//     const [state, setState] = useState('')\r\n//     const [city, setCity] = useState('')\r\n//     console.log(countries?.data?.data, 'cntry')\r\n//     const states = useSelector(state => {\r\n//         // debugger\r\n//         return state.countries.states\r\n//     })\r\n//     // console.log(countries?.data?.data)\r\n//     useEffect(() => {\r\n//         dispatch(CategoriesAction())\r\n//         dispatch(CountryList())\r\n//         // dispatch(StateList('101'))\r\n\r\n//         // dispatch(StateList(projdetail.country))\r\n//     }, [])\r\n\r\n//     const handleChangeCountry = (event) => {\r\n//         debugger\r\n//         event?.preventDefault()\r\n//         // 👇 Get input value from \"event\"\r\n//         setCountry(event?.currentTarget?.value);\r\n\r\n//         const formData = new FormData()\r\n//         formData.append('country_id', event?.currentTarget?.value)\r\n//         dispatch(StateList(formData))\r\n\r\n//         // if (country) {\r\n\r\n//         //     debugger\r\n//         // }\r\n//     };\r\n//     const handleChangeState = (event) => {\r\n//         // debugger\r\n//         event.preventDefault()\r\n//         // 👇 Get input value from \"event\"\r\n//         setState(event.currentTarget.value);\r\n//         const formData = new FormData()\r\n//         formData.append('country_id', country)\r\n//         formData.append('state_id', event?.currentTarget?.value)\r\n//         dispatch(CityList(formData))\r\n\r\n\r\n//         //     debugger\r\n//         // }\r\n//     };\r\n//     const handleChangeCity = (event) => {\r\n//         // debugger\r\n//         // 👇 Get input value from \"event\"\r\n//         setCity(event?.currentTarget?.value);\r\n\r\n//     };\r\n\r\n//     const cities = useSelector(state => {\r\n//         // debugger\r\n//         return state.countries.city\r\n//     })\r\n\r\n\r\n//     const projdetail = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.projectdetails\r\n//     })\r\n//     console.log(projdetail.nft_data, 'projdatanft')\r\n//     const cat = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.categories\r\n//     })\r\n//     const disablePastDate = () => {\r\n//         const today = new Date();\r\n//         const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n//         const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n//         const yyyy = today.getFullYear();\r\n//         return yyyy + \"-\" + mm + \"-\" + dd;\r\n//     };\r\n//     useEffect(() => {\r\n//         if (projdetail && Object.keys(projdetail).length) {\r\n\r\n//             setValue(\"title\", projdetail.title)\r\n//             setValue(\"address\", projdetail.address)\r\n//             setValue(\"description\", projdetail.description)\r\n//             setValue('state', projdetail.state)\r\n//             setValue('country', projdetail.country)\r\n//             setValue('city', projdetail.city)\r\n//             setValue(\"price\", projdetail.price)\r\n//             setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n//             setValue(\"start_date\", projdetail.start_date)\r\n//             setValue(\"end_date\", projdetail.end_date)\r\n//             setValue(\"type\", projdetail.type)\r\n//             setValue('category_id', projdetail.category_id)\r\n\r\n//             setType(projdetail.type)\r\n//             setCountry(projdetail.country)\r\n//             setDescription(projdetail.description)\r\n//             // setState(projdetail.state)\r\n//             // setCity(projdetail.city)\r\n//             console.log(projdetail.state, 'edit state')\r\n//             console.log(projdetail.city, 'edit city')\r\n//             setValue(\"image\", projdetail.image)\r\n//             const formData = new FormData()\r\n//             // formData.append('country_id', event?.currentTarget?.value)\r\n//             formData.append('country_id', projdetail.country)\r\n//             formData.append('state_id', projdetail.state)\r\n//             dispatch(StateList(formData))\r\n//             dispatch(CityList(formData))\r\n\r\n//         }\r\n//     }, [projdetail]);\r\n\r\n//     const OnSubmit = (data) => {\r\n//         const formData = new FormData()\r\n\r\n//         // formData.append('image', data.image[0])\r\n//         formData.append('title', data.title)\r\n//         formData.append('description', description)\r\n//         formData.append('state', data.state)\r\n//         formData.append('country', data.country)\r\n//         formData.append('city', data.city)\r\n//         formData.append('address', data.address)\r\n//         formData.append('price', data.price)\r\n//         formData.append('number_of_nft', data.number_of_nft)\r\n//         if (data?.type == 1) {\r\n\r\n//             formData.append('start_date', '')\r\n//             formData.append('end_date', '')\r\n//         } else {\r\n\r\n//             formData.append('start_date', data.start_date)\r\n//             formData.append('end_date', data.end_date)\r\n//         }\r\n//         formData.append('type', data.type)\r\n//         formData.append('category_id', data.category_id)\r\n//         debugger\r\n\r\n//         dispatch(UpdateProject(props.id, formData))\r\n//     }\r\n\r\n//     return (\r\n//         <Modal\r\n//             {...props}\r\n//             size=\"lg\"\r\n//             aria-labelledby=\"contained-modal-title-vcenter\"\r\n//             centered\r\n//         >\r\n//             <Modal.Header >\r\n\r\n//                 <div>\r\n//                     <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n//                 </div>\r\n//             </Modal.Header>\r\n//             <Modal.Body>\r\n//                 <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n//                     <div className=\"row\">\r\n\r\n//                         <div className=\"col-6\">\r\n//                             {/* {type == 1 && ( */}\r\n\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Project name</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"title\"\r\n//                                     placeholder=\"Project name\"\r\n//                                     {...register(\"title\", { required: true })}\r\n//                                     aria-invalid={errors.title ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n//                             </div>\r\n//                             {/* )} */}\r\n//                         </div>\r\n//                         <div className=\"col-6\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Web address</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"address\"\r\n//                                     placeholder=\"Web Address\"\r\n//                                     {...register(\"address\", { required: true })}\r\n//                                     aria-invalid={errors.address ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n//                             </div>\r\n//                         </div>\r\n\r\n\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Country</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"country\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"country\"\r\n//                                             {...register(\"country\", { required: true })}\r\n//                                             // value={value}\r\n//                                             // defaultValue={value}\r\n\r\n//                                             onChange={handleChangeCountry}\r\n\r\n//                                         >\r\n\r\n//                                             aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n//                                                 Select your country</option>\r\n//                                             {countries?.data?.data?.map((option, key) => (\r\n//                                                 <>\r\n//                                                     <option key={key.id} value={option.id}  >\r\n\r\n//                                                         {option.name}\r\n\r\n//                                                     </option>\r\n//                                                 </>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>State or Province</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"state\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"state\"\r\n\r\n//                                             {...register(\"state\", { required: true })}\r\n//                                             // defaultValue={value}\r\n//                                             // value={value}\r\n//                                             onChange={handleChangeState} >\r\n//                                             aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n//                                             {states?.data?.data?.map((option, key) => (\r\n\r\n//                                                 <><option key={key.id} value={option.id} >\r\n//                                                     {option.name}\r\n//                                                 </option></>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>City or Region</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"city\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"city\"\r\n//                                             {...register(\"city\", { required: true })}\r\n//                                             // value={value}\r\n//                                             onChange={handleChangeCity}\r\n//                                         >\r\n//                                             aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n//                                             {cities?.data?.data?.map((option, key) => (\r\n//                                                 <><option key={key.id} value={option.id}>\r\n//                                                     {option.name}\r\n//                                                 </option></>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         {/* <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>Country</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"country\"\r\n//                                             // selected={country}\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                                 // onChange={onChange}\r\n\r\n//                                                 <GeoLocation\r\n//                                                     // locationTitle=\"Country\"\r\n//                                                     isCountry\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n//                                                     onChange={setCountry}\r\n//                                                     required={true}\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>State or Province</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"state\"\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n//                                                 <GeoLocation\r\n\r\n//                                                     onChange={setState}\r\n//                                                     geoId={country}\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n\r\n\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>City or Region</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"city\"\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n//                                                 <GeoLocation\r\n\r\n//                                                     onChange={setCity}\r\n//                                                     geoId={state}\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div> */}\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 {projdetail.type == 2 ? (\r\n\r\n//                                     <label>Price</label>\r\n//                                 ) : (\r\n\r\n//                                     <label>Price per NFT</label>\r\n//                                 )}\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"price\"\r\n//                                     placeholder=\"Price\"\r\n//                                     {...register(\"price\", { required: true })}\r\n//                                     aria-invalid={errors.price ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 <label>Number of NFTs</label>\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"number_of_nft\"\r\n//                                     defaultValue={1}\r\n//                                     // disabled={type == 1}\r\n//                                     placeholder=\"Select your number of NFTs (1-10)\"\r\n//                                     min={1}\r\n//                                     max={10}\r\n//                                     {...register(\"number_of_nft\", { required: true })}\r\n//                                     aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n//                                 {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         {projdetail.type == 2 && (\r\n\r\n//                             <><div className=\"col-12 col-md-6\">\r\n//                                 <div className=\"form-group\">\r\n//                                     <label>Campaign Start date</label>\r\n//                                     <input\r\n//                                         type=\"date\"\r\n//                                         className=\"form-control\"\r\n//                                         name=\"start_date\"\r\n//                                         // min={disablePastDate()}\r\n//                                         // placeholder=\"Start date\"\r\n//                                         {...register(\"start_date\", { required: true })}\r\n//                                         aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n//                                     {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n//                                 </div>\r\n//                             </div><div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>Campaign End Date</label>\r\n//                                         <input\r\n//                                             type=\"date\"\r\n//                                             className=\"form-control\"\r\n//                                             name=\"end_date\"\r\n//                                             min={disablePastDate()}\r\n//                                             // placeholder=\"End date\"\r\n//                                             {...register(\"end_date\", { required: true })}\r\n//                                             aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n//                                         {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n//                                     </div>\r\n//                                 </div></>\r\n//                         )}\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 <label>Category</label>\r\n//                                 <select name=\"annual_revenue_range\"\r\n//                                     // defaultValue={}\r\n//                                     {...register(\"category_id\")}>\r\n//                                     {cat?.map((option, key) => (\r\n\r\n//                                         <option key={key.id} value={option.id}>\r\n//                                             {option.title}\r\n\r\n//                                         </option>\r\n//                                     ))}\r\n//                                 </select>\r\n//                             </div>\r\n//                         </div>\r\n\r\n\r\n//                         <div className=\"col-12\">\r\n//                             <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n//                         </div>\r\n//                     </div>\r\n\r\n\r\n\r\n//                 </form>\r\n//             </Modal.Body>\r\n//             {/* <Modal.Footer>\r\n//                 <Button onClick={props.onHide}>Close</Button>\r\n//             </Modal.Footer> */}\r\n//         </Modal >\r\n//     );\r\n// }\r\n\r\n// export default ProjDetailPopup\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\nimport { useParams } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ProjDetailPopup(props) {\r\n    const editor = useRef(null);\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n    const id = useParams()\r\n    const [type, setType] = useState()\r\n    // const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    const { countries } = useSelector(state => state.countries)\r\n    const [country, setCountry] = useState('')\r\n    console.log('country', country)\r\n    const [state, setState] = useState('')\r\n    const [city, setCity] = useState('')\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(countries?.data?.data)\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList('101'))\r\n\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n\r\n    const handleChangeCountry = (event) => {\r\n        event?.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n\r\n        const formData = new FormData()\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // debugger\r\n        event.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeCity = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCity(event?.currentTarget?.value);\r\n\r\n    };\r\n\r\n    const cities = useSelector(state => {\r\n        // debugger\r\n        return state.countries.city\r\n    })\r\n\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            setDescription(projdetail.description)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n        dispatch(UpdateProject(props.id, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-6 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Project name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Project name\"\r\n                                    {...register(\"title\", { required: true })}\r\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <div className=\"col-6 col-12\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    placeholder=\"Web Address\"\r\n                                    {...register(\"address\", { required: true })}\r\n                                    aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Country</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"country\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"country\"\r\n                                            {...register(\"country\", { required: true })}\r\n                                            // value={value}\r\n                                            // defaultValue={value}\r\n\r\n                                            onChange={handleChangeCountry}\r\n\r\n                                        >\r\n\r\n                                            aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                Select your country</option>\r\n                                            {countries?.data?.data?.map((option, key) => (\r\n                                                <>\r\n                                                    <option key={key.id} value={option.id}  >\r\n\r\n                                                        {option.name}\r\n\r\n                                                    </option>\r\n                                                </>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>State or Province</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"state\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"state\"\r\n\r\n                                            {...register(\"state\", { required: true })}\r\n                                            // defaultValue={value}\r\n                                            // value={value}\r\n                                            onChange={handleChangeState} >\r\n                                            aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n                                            {states?.data?.data?.map((option, key) => (\r\n\r\n                                                <><option key={key.id} value={option.id} >\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>City or Region</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"city\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}\r\n                                            // value={value}\r\n                                            onChange={handleChangeCity}\r\n                                        >\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                {projdetail.type == 2 ? (\r\n\r\n                                    <label>Price</label>\r\n                                ) : (\r\n\r\n                                    <label>Price per NFT</label>\r\n                                )}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    placeholder=\"Price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    defaultValue={1}\r\n                                    // disabled={type == 1}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    min={1}\r\n                                    max={10}\r\n                                    {...register(\"number_of_nft\", { required: true })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {projdetail.type == 2 && (\r\n\r\n                            <><div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // min={disablePastDate()}\r\n                                        // placeholder=\"Start date\"\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                        aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                    {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                </div>\r\n                            </div><div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Campaign End Date</label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n                                            name=\"end_date\"\r\n                                            min={disablePastDate()}\r\n                                            // placeholder=\"End date\"\r\n                                            {...register(\"end_date\", { required: true })}\r\n                                            aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                        {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                    </div>\r\n                                </div></>\r\n                        )}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"annual_revenue_range\"\r\n                                    // defaultValue={}\r\n                                    {...register(\"category_id\")}>\r\n                                    {cat?.map((option, key) => (\r\n\r\n                                        <option key={key.id} value={option.id}>\r\n                                            {option.title}\r\n\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default ProjDetailPopup","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nconst UserdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    // const { id } = useParams()\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details' >\r\n\r\n                        <tbody >\r\n\r\n                            <tr>\r\n\r\n                                <td><span>Name </span> <span>{userdet.username}</span></td>\r\n                                <td><span>Wallet ID</span>  <span>{userdet.wallet_id}</span></td>\r\n                                <td><span>Reffers </span> <span>{userdet.reffers}</span></td>\r\n                                <td><span>Fundraised </span> <span>{userdet.total_fundraised}</span></td>\r\n\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserdataTable","// import React, { useEffect, useState } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { Collapse } from 'antd';\r\n// import { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\n// import { useParams } from 'react-router';\r\n// import { Table } from 'react-bootstrap';\r\n// import ProjDetailPopup from '../Create/projectDetailpopup';\r\n// const UserdataTable = (props) => {\r\n//     const dispatch = useDispatch()\r\n//     const { Panel } = Collapse;\r\n//     const onChange = (key) => {\r\n//         console.log(key);\r\n//     };\r\n//     const [modalShowproj, setModalShowproj] = React.useState(false);\r\n//     const { id } = useParams()\r\n//     const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n//     const onPositionChange = (newExpandIconPosition) => {\r\n//         setExpandIconPosition(newExpandIconPosition);\r\n//     };\r\n//     // const { id } = useParams()\r\n\r\n//     const userdet = useSelector(state => {\r\n//         return state?.user?.userdetail\r\n//     })\r\n\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n//                 <Panel header=\"Details\" key=\"1\" >\r\n//                     <Table responsive >\r\n\r\n//                         <tbody>\r\n\r\n//                             <tr>\r\n\r\n//                                 <tr>Name  {userdet.username}</tr>\r\n//                                 <tr>Wallet ID  {userdet.wallet_id}</tr>\r\n//                                 <tr>Reffers  {userdet.reffers}</tr>\r\n//                                 <tr>Fundraised  {userdet.total_fundraised}</tr>\r\n\r\n//                             </tr>\r\n//                             {/* )\r\n//                             })} */}\r\n\r\n//                         </tbody>\r\n//                     </Table>\r\n//                 </Panel>\r\n//             </Collapse>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default UserdataTable\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst UserTransdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {userdet?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserTransdataTable","import React, { useState } from 'react';\r\nimport ReactImagePickerEditor, { ImagePickerConf } from 'react-image-picker-editor';\r\n\r\nimport 'react-image-picker-editor/dist/index.css'\r\n\r\nconst UploadImage = ({ initalImag, imageSrc, setImageSrc, show = true }) => {\r\n  const config2 = {\r\n    borderRadius: '8px',\r\n    language: 'en',\r\n    width: '330px',\r\n    height: '250px',\r\n    objectFit: 'contain',\r\n    compressInitial: null,\r\n    hideDownloadBtn: true\r\n  };\r\n\r\n  const initialImage = initalImag;\r\n\r\n  return <div className='image-container'>\r\n    < ReactImagePickerEditor\r\n      config={config2}\r\n      // initialImage={im}\r\n      imageSrcProp={initialImage}\r\n      imageChanged={(newDataUri) => { setImageSrc(newDataUri) }} />\r\n    {/* <br /> <br />\r\n    <hr />\r\n    <br /> */}\r\n    {/* <p>Image preview:</p> */}\r\n    {/* {imageSrc && <img src={imageSrc} alt=\"example\" style={{ maxHeight: '900px', maxWidth: '100%', objectFit: 'contain', background: 'black' }} />}\r\n    {!imageSrc && <h2 style={{ textAlign: 'center', color: '#FFF' }}>No image loaded yet</h2>} */}\r\n\r\n  </div>\r\n}\r\n\r\nexport default UploadImage;\r\n\r\n\r\n","export const dataURLtoBlob = (dataurl) => {\r\n    var arr = dataurl?.split(','), mime = arr[0]?.match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr?.length, u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new Blob([u8arr], { type: mime });\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {  UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage  from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\n\r\nfunction Banner(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const image = dataURLtoBlob(imageSrc)\r\n        formData.append('image', image)\r\n        dispatch(UpdateBanner(formData, props.id))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Project Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default Banner","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\n\r\nfunction AvatarUpload(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        // const banner_image = dataURLtoBlob(imageSrc)\r\n        const avatar = dataURLtoBlob(imageSrc)\r\n        formData.append('avatar', avatar)\r\n        formData.append('username', userdet.username)\r\n        // formData.append('banner_image', banner_image)\r\n        dispatch(UpdateProfileAction(formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Profile Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default AvatarUpload","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\n\r\nfunction BannerUpload(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const banner_image = dataURLtoBlob(imageSrc)\r\n        // formData.append('avatar', userdet.avatar)\r\n        formData.append('username', userdet.username)\r\n        formData.append('banner_image', banner_image)\r\n        dispatch(UpdateProfileAction(formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Profile Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default BannerUpload","// // import React, { Component, useEffect } from 'react';\r\n// // import axios from 'axios';\r\n// // import { useDispatch, useSelector } from 'react-redux';\r\n// // import { useForm } from 'react-hook-form';\r\n// // import { GetUserAction } from '../../redux/Actions/authAction';\r\n\r\n\r\n\r\n// // const AuthorProfile = () => {\r\n// //     const userdet = useSelector(state => {\r\n// //         return state?.user?.userdetail\r\n// //     })\r\n// //     const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n// //     const dispatch = useDispatch()\r\n// //     useEffect(() => {\r\n// //         dispatch(GetUserAction())\r\n\r\n// //     })\r\n// //     useEffect(() => {\r\n// //         if (userdet && Object.keys(userdet).length) {\r\n\r\n// //             setValue(\"avatar\", userdet.avatar)\r\n// //             setValue(\"username\", userdet.username)\r\n// //             setValue(\"email\", userdet.email)\r\n\r\n// //         }\r\n\r\n// //     }, [userdet])\r\n// //     return (\r\n// //         <div className=\"card no-hover text-center\">\r\n// //             <form onSubmit={handleSubmit} className=\"item-form card no-hover\">\r\n// //                 <div className=\"image-over\">\r\n// //                     {/* <img className=\"card-img-top\" src={\"\"} alt=\"\" /> */}\r\n// //                     {/* Author */}\r\n// //                     <div className=\"author\">\r\n// //                         <div className=\"author-thumb avatar-lg\">\r\n// //                             <img className=\"rounded-circle\" src={userdet.avatar} alt=\"\" />\r\n// //                         </div>\r\n// //                     </div>\r\n// //                 </div>\r\n// //                 {/* Card Caption */}\r\n// //                 <div className=\"card-caption col-12 p-0\">\r\n// //                     {/* Card Body */}\r\n// //                     <div className=\"card-body mt-4\">\r\n// //                         <h5 className=\"mb-3\">Author</h5>\r\n// //                         <p className=\"my-3\">Author content</p>\r\n// //                         <div className=\"col-12\">\r\n// //                             {/* {type == 1 && ( */}\r\n\r\n// //                             <div className=\"form-group mt-3\">\r\n// //                                 <label>Avatar</label>\r\n// //                                 <input\r\n// //                                     type=\"file\"\r\n// //                                     className=\"form-control\"\r\n// //                                     name=\"avatar\"\r\n// //                                     placeholder=\"avatar\"\r\n// //                                     {...register(\"avatar\", { required: true })}\r\n// //                                     aria-invalid={errors.avatar ? \"true\" : \"false\"}\r\n// //                                 />\r\n// //                                 {errors.avatar?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">avatar is required</p>}\r\n\r\n// //                             </div>\r\n// //                             {/* )} */}\r\n// //                         </div>\r\n// //                         <div className=\"col-12\">\r\n// //                             {/* {type == 1 && ( */}\r\n\r\n// //                             <div className=\"form-group mt-3\">\r\n// //                                 <label>Username</label>\r\n// //                                 <input\r\n// //                                     type=\"text\"\r\n// //                                     className=\"form-control\"\r\n// //                                     name=\"username\"\r\n// //                                     placeholder=\"username\"\r\n// //                                     {...register(\"username\", { required: true })}\r\n// //                                     aria-invalid={errors.username ? \"true\" : \"false\"}\r\n// //                                 />\r\n// //                                 {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n\r\n// //                             </div>\r\n// //                             {/* )} */}\r\n// //                         </div>\r\n// //                         <div className=\"col-12\">\r\n// //                             <div className=\"form-group mt-3\">\r\n// //                                 <label>Email</label>\r\n// //                                 <input\r\n// //                                     type=\"email\"\r\n// //                                     className=\"form-control\"\r\n// //                                     name=\"email\"\r\n// //                                     value={userdet.email}\r\n// //                                 // {...register(\"address\", { required: true })}\r\n// //                                 // aria-invalid={errors.address ? \"true\" : \"false\"}\r\n// //                                 />\r\n// //                                 {/* {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>} */}\r\n\r\n// //                             </div>\r\n// //                         </div>\r\n// //                         <div className=\"input-group\">\r\n// //                             <input type=\"email\" disabled={true} className=\"form-control\" placeholder=\"\" />\r\n\r\n// //                         </div>\r\n// //                         {/* Social Icons */}\r\n\r\n// //                         <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">update</a>\r\n// //                     </div>\r\n// //                 </div>\r\n// //             </form>\r\n// //         </div>\r\n// //     );\r\n// // }\r\n\r\n\r\n// // export default AuthorProfile;\r\n// import React, { Component } from 'react';\r\n// import axios from 'axios';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useForm } from 'react-hook-form';\r\n// import { GetUserAction } from '../../redux/Actions/authAction';\r\n// import { useEffect } from 'react';\r\n// import UserTransdataTable from './userTransTable';\r\n// import UserdataTable from './userDetails';\r\n// // const BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/author\";\r\n\r\n// const AuthorProfile = () => {\r\n//     const userdet = useSelector(state => {\r\n//         return state?.user?.userdetail\r\n//     })\r\n//     const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n//     const dispatch = useDispatch()\r\n//     useEffect(() => {\r\n//         dispatch(GetUserAction())\r\n\r\n//     }, [])\r\n//     useEffect(() => {\r\n//         if (userdet && Object.keys(userdet).length) {\r\n\r\n//             setValue(\"avatar\", userdet.avatar)\r\n//             setValue(\"username\", userdet.username)\r\n//             setValue(\"email\", userdet.email)\r\n\r\n//         }\r\n\r\n//     }, [userdet])\r\n//     return (\r\n//         <div className=\"card no-hover text-center\">\r\n//             <div className=\"image-over\">\r\n//                 {/* <img className=\"card-img-top\"  alt=\"\" /> */}\r\n//                 {/* Author */}\r\n//                 <div className=\"author\">\r\n//                     <div className=\"author-thumb avatar-lg\">\r\n//                         <img className=\"rounded-circle\" src={userdet.avatar} alt=\"\" />\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             {/* Card Caption */}\r\n//             <div className=\"card-caption col-12 p-0\">\r\n//                 {/* Card Body */}\r\n//                 <div className=\"card-body mt-4\">\r\n//                     <h5 className=\"mb-3\">{userdet.username}</h5>\r\n//                     <div className=\"input-group author_detail\">\r\n//                         <div>\r\n//                             <label> Username  </label>\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 // className=\"form-control\"\r\n//                                 name=\"username\"\r\n//                                 // placeholder=\"username\"\r\n//                                 {...register(\"username\", { required: true })}\r\n//                                 aria-invalid={errors.username ? \"true\" : \"false\"}\r\n//                             />\r\n//                             {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n//                         </div>\r\n//                         <div>\r\n//                             <label> Email  </label>\r\n//                             <input\r\n//                                 type=\"email\"\r\n//                                 // className=\"form-control\"\r\n//                                 name=\"email\"\r\n//                                 disabled={true}\r\n//                                 // placeholder=\"username\"\r\n//                                 {...register(\"email\", { required: true })}\r\n//                                 aria-invalid={errors.email ? \"true\" : \"false\"}\r\n\r\n//                             />\r\n//                             {errors.email?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">email is required</p>}\r\n//                         </div>\r\n\r\n//                     </div>\r\n//                     {/* Social Icons */}\r\n//                     {/* <div className=\"social-icons d-flex justify-content-center my-3\">\r\n//                         {this.state.socialData.map((item, idx) => {\r\n//                             return (\r\n//                                 <a key={`asd_${idx}`} className={item.link} href=\"#\">\r\n//                                     <i className={item.icon} />\r\n//                                     <i className={item.icon} />\r\n//                                 </a>\r\n//                             );\r\n//                         })}\r\n//                     </div> */}\r\n//                     <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">update</a>\r\n//                 </div>\r\n//             </div>\r\n//             <div>\r\n//                 <UserTransdataTable />\r\n//             </div>\r\n//             <div>\r\n//                 <UserdataTable />\r\n//             </div>\r\n//             {/* <div>\r\n//                 <UserTransdataTable />\r\n//             </div> */}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n// export default AuthorProfile;\r\n// import React, { Component, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useForm } from 'react-hook-form';\r\n// import { GetUserAction } from '../../redux/Actions/authAction';\r\n\r\n// const AuthorProfile = () => {\r\n//     const userdet = useSelector(state => {\r\n//         return state?.user?.userdetail\r\n//     })\r\n//     const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n//     const dispatch = useDispatch()\r\n//     useEffect(() => {\r\n//         dispatch(GetUserAction())\r\n\r\n//     })\r\n//     useEffect(() => {\r\n//         if (userdet && Object.keys(userdet).length) {\r\n\r\n//             setValue(\"avatar\", userdet.avatar)\r\n//             setValue(\"username\", userdet.username)\r\n//             setValue(\"email\", userdet.email)\r\n\r\n//         }\r\n\r\n//     }, [userdet])\r\n//     return (\r\n//         <div className=\"card no-hover text-center\">\r\n//             <form onSubmit={handleSubmit} className=\"item-form card no-hover\">\r\n//                 <div className=\"image-over\">\r\n//                     {/* <img className=\"card-img-top\" src={\"\"} alt=\"\" /> */}\r\n//                     {/* Author */}\r\n//                     <div className=\"author\">\r\n//                         <div className=\"author-thumb avatar-lg\">\r\n//                             <img className=\"rounded-circle\" src={userdet.avatar} alt=\"\" />\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//                 {/* Card Caption */}\r\n//                 <div className=\"card-caption col-12 p-0\">\r\n//                     {/* Card Body */}\r\n//                     <div className=\"card-body mt-4\">\r\n//                         <h5 className=\"mb-3\">Author</h5>\r\n//                         <p className=\"my-3\">Author content</p>\r\n//                         <div className=\"col-12\">\r\n//                             {/* {type == 1 && ( */}\r\n\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Avatar</label>\r\n//                                 <input\r\n//                                     type=\"file\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"avatar\"\r\n//                                     placeholder=\"avatar\"\r\n//                                     {...register(\"avatar\", { required: true })}\r\n//                                     aria-invalid={errors.avatar ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.avatar?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">avatar is required</p>}\r\n\r\n//                             </div>\r\n//                             {/* )} */}\r\n//                         </div>\r\n//                         <div className=\"col-12\">\r\n//                             {/* {type == 1 && ( */}\r\n\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Username</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"username\"\r\n//                                     placeholder=\"username\"\r\n//                                     {...register(\"username\", { required: true })}\r\n//                                     aria-invalid={errors.username ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n\r\n//                             </div>\r\n//                             {/* )} */}\r\n//                         </div>\r\n//                         <div className=\"col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Email</label>\r\n//                                 <input\r\n//                                     type=\"email\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"email\"\r\n//                                     value={userdet.email}\r\n//                                 // {...register(\"address\", { required: true })}\r\n//                                 // aria-invalid={errors.address ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {/* {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>} */}\r\n\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"input-group\">\r\n//                             <input type=\"email\" disabled={true} className=\"form-control\" placeholder=\"\" />\r\n\r\n//                         </div>\r\n//                         {/* Social Icons */}\r\n\r\n//                         <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">update</a>\r\n//                     </div>\r\n//                 </div>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default AuthorProfile;\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GetUserAction, UpdateProfileAction } from \"../../redux/Actions/authAction\";\r\nimport { useEffect } from \"react\";\r\nimport UserTransdataTable from \"./userTransTable\";\r\nimport UserdataTable from \"./userDetails\";\r\nimport Banner from \"../Create/editBanner\";\r\nimport AvatarUpload from \"./avatarUpload\";\r\nimport BannerUpload from \"./bannerUpload\";\r\n// const BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/author\";\r\n\r\nconst AuthorProfile = () => {\r\n    const [modalSho, setModalSho] = React.useState(false);\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowavatar, setModalShowavatar] = React.useState(false);\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        if (userdet && Object.keys(userdet).length) {\r\n\r\n            setValue(\"avatar\", userdet.avatar)\r\n            setValue(\"username\", userdet.username)\r\n            setValue(\"email\", userdet.email)\r\n\r\n        }\r\n\r\n    }, [userdet])\r\n    const onSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('username', data.username)\r\n        formData.append('email', userdet.email)\r\n        dispatch(UpdateProfileAction(formData))\r\n\r\n    }\r\n    useEffect(() => {\r\n        dispatch(GetUserAction());\r\n    }, []);\r\n    useEffect(() => {\r\n        if (userdet && Object.keys(userdet).length) {\r\n            setValue(\"avatar\", userdet.avatar);\r\n            setValue(\"username\", userdet.username);\r\n            setValue(\"email\", userdet.email);\r\n        }\r\n    }, [userdet]);\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"container\">\r\n                {/* <h3 class=\"p-0\">Author Name </h3> */}\r\n                <div className=\"row pt-0\">\r\n                    <div className='col-md-8 p-0'>\r\n                        <div className=\"banner item-thumb text-center\">\r\n                            <div>\r\n                                <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                    onClick={() => setModalSho(true)}\r\n                                ></i>\r\n                                <BannerUpload\r\n\r\n                                    show={modalSho}\r\n                                    onHide={() => setModalSho(false)} />\r\n\r\n                            </div>\r\n                            <img src={userdet.banner_image} alt=\"first nft\" />\r\n                        </div>\r\n                        <div className=\"table-detail mt-3\">\r\n                            <UserdataTable />\r\n\r\n                        </div>\r\n                        <div className=\"profile_detail mt-3\">\r\n\r\n                            <UserTransdataTable />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <div className=\"profile_main_right card wrap_card no-hover text-center\">\r\n\r\n                            <div className=\"image-over\">\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                        onClick={() => setModalShowavatar(true)}\r\n                                    ></i>\r\n                                    <AvatarUpload\r\n\r\n                                        show={modalShowavatar}\r\n                                        onHide={() => setModalShowavatar(false)} />\r\n\r\n                                </div>\r\n                                <img className=\"card-img-top\" src={userdet.avatar} alt=\"\" />\r\n                            </div>\r\n                            {/* Card Caption */}\r\n                            <div className=\"card-caption col-12 p-0\">\r\n                                {/* Card Body */}\r\n\r\n\r\n                            </div>\r\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover\">\r\n\r\n                                <div className=\"card-body\">\r\n                                    <from className=\"Edite_able\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"username\"\r\n                                                placeholder=\"username\"\r\n                                                {...register(\"username\", { required: true })}\r\n                                                aria-invalid={errors.username ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n                                            <i class=\"fa-solid fa-pen\"></i>\r\n                                        </label>\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control\"\r\n                                                name=\"email\"\r\n                                                value={userdet.email}\r\n                                                {...register(\"address\")}\r\n                                                aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {/* {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>} */}\r\n                                            {/* <i class=\"fa-solid fa-pen\"></i> */}\r\n                                        </label>\r\n\r\n                                        {/* Social Icons */}\r\n                                        <div className=\"social-icons d-flex justify-content-center my-3\">\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-facebook-f fa-w-10\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"facebook-f\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 320 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-twitter fa-w-16\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"twitter\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 512 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-google-plus-g fa-w-20\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"google-plus-g\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 640 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M386.061 228.496c1.834 9.692 3.143 19.384 3.143 31.956C389.204 370.205 315.599 448 204.8 448c-106.084 0-192-85.915-192-192s85.916-192 192-192c51.864 0 95.083 18.859 128.611 50.292l-52.126 50.03c-14.145-13.621-39.028-29.599-76.485-29.599-65.484 0-118.92 54.221-118.92 121.277 0 67.056 53.436 121.277 118.92 121.277 75.961 0 104.513-54.745 108.965-82.773H204.8v-66.009h181.261zm185.406 6.437V179.2h-56.001v55.733h-55.733v56.001h55.733v55.733h56.001v-55.733H627.2v-56.001h-55.733z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-vine fa-w-12\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"vine\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 384 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M384 254.7v52.1c-18.4 4.2-36.9 6.1-52.1 6.1-36.9 77.4-103 143.8-125.1 156.2-14 7.9-27.1 8.4-42.7-.8C137 452 34.2 367.7 0 102.7h74.5C93.2 261.8 139 343.4 189.3 404.5c27.9-27.9 54.8-65.1 75.6-106.9-49.8-25.3-80.1-80.9-80.1-145.6 0-65.6 37.7-115.1 102.2-115.1 114.9 0 106.2 127.9 81.6 181.5 0 0-46.4 9.2-63.5-20.5 3.4-11.3 8.2-30.8 8.2-48.5 0-31.3-11.3-46.6-28.4-46.6-18.2 0-30.8 17.1-30.8 50 .1 79.2 59.4 118.7 129.9 101.9z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                        </div>\r\n                                        <button className=\"btn btn-bordered-white btn-smaller\" type=\"submit\" >\r\n                                            Update\r\n                                        </button>\r\n                                    </from>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\" \"}\r\n            </div>\r\n            {\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthorProfile;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Explore\",\r\n    heading: \"Exclusive Digital Assets\",\r\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n    filter_1: \"All\",\r\n    filter_2: \"Art\",\r\n    filter_3: \"Music\",\r\n    filter_4: \"Collectibles\",\r\n    filter_5: \"Sports\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_1.jpg\",\r\n        author: \"/img/avatar_1.jpg\",\r\n        title: \"Virtual Worlds\",\r\n        content: \"ERC-729\",\r\n        price: \"4.37 BNB\",\r\n        likes: \"154\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        group: '[\"music\"]',\r\n        img: \"/img/auction_2.jpg\",\r\n        author: \"/img/avatar_2.jpg\",\r\n        title: \"Walking On Air\",\r\n        content: \"ERC-543\",\r\n        price: \"2.37 BNB\",\r\n        likes: \"74\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        group: '[\"music\",\"collectibles\"]',\r\n        img: \"/img/auction_3.jpg\",\r\n        author: \"/img/avatar_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        content: \"ERC-932\",\r\n        price: \"1.89 BNB\",\r\n        likes: \"\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        group: '[\"music\",\"sports\",\"art\",\"collectibles\"]',\r\n        img: \"/img/auction_4.jpg\",\r\n        author: \"/img/avatar_4.jpg\",\r\n        title: \"Sports\",\r\n        content: \"ERC-250\",\r\n        price: \"0.74 BNB\",\r\n        likes: \"184\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        group: '[\"sports\",\"art\",\"music\"]',\r\n        img: \"/img/auction_5.jpg\",\r\n        author: \"/img/avatar_5.jpg\",\r\n        title: \"Cartoon Heroes\",\r\n        content: \"ERC-167\",\r\n        price: \"4.23 BNB\",\r\n        likes: \"126\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_6.jpg\",\r\n        author: \"/img/avatar_6.jpg\",\r\n        title: \"Domain Names\",\r\n        content: \"ERC-037\",\r\n        price: \"3.41 BNB\",\r\n        likes: \"23\"\r\n    }\r\n]\r\n\r\nclass ExploreSix extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                    <div className=\"col-12\">\r\n                        {/* Explore Menu */}\r\n                        <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n                            <label className=\"btn active d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"all\" defaultChecked className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_1}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"art\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_2}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"music\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_3}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"collectibles\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_4}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_5}</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items explore-items\">\r\n                    {this.state.data.map((item, idx) => {\r\n                        return (\r\n                            <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" data-groups={item.group}>\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <a href=\"/item-details\">\r\n                                            <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                        </a>\r\n                                        {/* Author */}\r\n                                        <a className=\"author\" href=\"/authors\">\r\n                                            <div className=\"author-thumb avatar-lg\">\r\n                                                <img className=\"rounded-circle\" src={item.author} alt=\"\" />\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            <a href=\"/item-details\">\r\n                                                <h5 className=\"mb-2\">{item.title}</h5>\r\n                                            </a>\r\n                                            <span>{item.content}</span>\r\n                                            <hr />\r\n                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                <span>{item.price}</span>\r\n                                                <span><i className=\"icon-heart mr-2\" />{item.likes}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreSix;","import React, { Component } from 'react';\r\nimport AuthorProfile from '../AuthorProfile/AuthorProfile';\r\nimport Explore from '../Explore/ExploreSix';\r\n\r\nclass Author extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"author-area explore-area author-details-area  popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-10\">\r\n                            <AuthorProfile />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Author;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport AuthorProfile from '../components/Author/Author';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Author extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <AuthorProfile />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Author;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ConnectWallet, Roles } from './interact';\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginSuccess } from '../../redux/Slices/authSlice';\r\n\r\nconst data = {\r\n    \"preHeading\": \"Wallet Connect\",\r\n    \"heading\": \"Connect your Wallet\",\r\n    \"content\": \"Connect your wallet to continue browsing our website\",\r\n    \"walletData\": [\r\n        {\r\n            \"id\": 1,\r\n            \"img\": \"/img/metamask.png\",\r\n            \"title\": \"MetaMask\",\r\n            \"content\": \"A browser extension with great flexibility. The web's most popular wallet\"\r\n        },\r\n    ]\r\n}\r\n\r\nconst Wallet = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleConnect = async () => {\r\n        const res = await ConnectWallet(\"CREATOR\")\r\n\r\n        if (res?.res?.response?.status === 401) {\r\n           history.push('/signup')\r\n        }\r\n        else {\r\n          dispatch(loginSuccess(res?.res))\r\n          localStorage.setItem('authToken',res?.res?.data?.data?.auth_token)\r\n          history.push('/projectlist')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"wallet-connect-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>{data.preHeading}</span>\r\n                            <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            <p>{data.content}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center items\">\r\n                    {data?.walletData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} onClick={handleConnect}\r\n                                className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                {/* Single Wallet */}\r\n                                <div className=\"card single-wallet\">\r\n                                    <a className=\"d-block text-center\">\r\n                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                        <h4 className=\"mb-0\">{item.title}</h4>\r\n                                        <p>{item.content}</p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Wallet;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Wallet from '../components/Wallet/Wallet';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass WalletConnect extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Wallet />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WalletConnect;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Geonames from \"geonames.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nconst geonames = new Geonames({\r\n    username: \"fullstackdeveloper91\",\r\n    lan: \"en\",\r\n    encoding: \"JSON\"\r\n});\r\n// const useStyles = makeStyles(theme => ({\r\n//     formControl: {\r\n//         minWidth: \"100%\",\r\n//         // background: 'black',\r\n//         // color: \"#FFF\"\r\n//     },\r\n//     selectEmpty: {\r\n//         marginTop: theme.spacing(2)\r\n//     }\r\n// }));\r\nexport default function GeoLocation(props) {\r\n    // const classes = useStyles();\r\n    const { locationTitle, geoId, onChange, isCountry } = props;\r\n    const [options, setOptions] = useState([]);\r\n    // console.log(options, 'opttt')\r\n    const [currentItem, setCurrentItem] = useState(\"\");\r\n    const [labelWidth, setLabelWidth] = useState(0);\r\n    useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n        {\r\n            !currentItem && (\r\n                setCurrentItem(props?.selected)\r\n            )\r\n        }\r\n    }, [props]);\r\n    // http://api.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en\r\n    // https://secure.geonames.org/countryInfoJSON?username=jhon_doe&lang=en\r\n    useEffect(() => {\r\n        try {\r\n            const data = async () => {\r\n                (await isCountry)\r\n                    ? axios?.get(`https://secure.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en`)?.then(res => {\r\n                        // \r\n                        setOptions(res);\r\n                        console.log(res, \"countries\")\r\n                    })\r\n                    // \"https://secure.geonames.org/childrenJSON?geonameId=\" + id\r\n                    : axios?.get(`https://secure.geonames.org/childrenJSON?username=fullstackdeveloper91&lang=en&geonameId=${geoId}`)?.then(res => {\r\n                        setOptions(res);\r\n                        console.log(res, \"cities\")\r\n                    });\r\n            };\r\n            data();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }, [geoId, isCountry]);\r\n    const inputLabel = useRef(null);\r\n    const handleChange = e => {\r\n        setCurrentItem(e.target.value);\r\n        onChange(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <form >\r\n            <label ref={inputLabel} id=\"demo-simple-select-outlined-label\" style={{ display: 'none' }}>\r\n                {locationTitle}\r\n            </label>\r\n            <select\r\n                label=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={currentItem}\r\n                onChange={handleChange}\r\n                labelWidth={labelWidth}\r\n            >\r\n                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select </option>\r\n                {options?.data?.geonames?.map((v, index) => (\r\n                    <option key={index} value={v?.geonameId}>\r\n                        {isCountry ? v?.countryName : v?.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </form>\r\n    );\r\n}\r\nGeoLocation.propTypes = {\r\n    locationTitle: PropTypes.string,\r\n    geoId: PropTypes.node,\r\n    isCountry: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\nGeoLocation.defaultProps = {\r\n    onChange: undefined\r\n};","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    console.log(data, 'dataaacreate')\r\n    // localStorage.setItem(\"data\", JSON.stringify(data))\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport React, { Component, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { CategoriesAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\nimport GeoLocation from './geoLocation';\r\n// import { yupResolver } from '@hookform/resolvers/yup';\r\n// import * as yup from 'yup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport styles from \"./styles/styles.module.scss\"\r\nimport { useFormData } from './Context/context';\r\nimport JoditEditor from 'jodit-react'; import { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\n;\r\n\r\nconst Create = ({ current, next, prev }) => {\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues, prevValues } = useFormData();\r\n    console.log(data.city)\r\n    const [description, setDescription] = useState()\r\n    console.log('disss', description)\r\n    const [country, setCountry] = useState(\"\");\r\n    console.log('country', country)\r\n    const [state, setState] = useState(\"\");\r\n    console.log('state', state)\r\n    const [city, setCity] = useState(\"\");\r\n    console.log('city', city)\r\n\r\n    const [collection_id, setCollectionId] = useState(0);\r\n    const [type, setType] = useState();\r\n\r\n    // const schema = yup.object().shape({\r\n    //     description: yup.string().required()\r\n    //     // password: yup.string().required(),\r\n    // });\r\n    function onHandleClick(event) {\r\n        setCollectionId(event.currentTarget.id);\r\n    };\r\n\r\n    console.log(data, \"_________DATA_IN_CREATE______\")\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n\r\n    console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n\r\n    }, [])\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n\r\n\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({\r\n        mode: \"all\",\r\n        // resolver: yupResolver(schema)\r\n\r\n    });\r\n\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    // console.log(col, 'col')\r\n    const OnSubmit = (data) => {\r\n        setFormValues({ ...data, type, description });\r\n        // localStorage.setItem('country', JSON.stringify(country))\r\n        next();\r\n    }\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(CategoriesAction())\r\n        if (prev) {\r\n            // \r\n            setValue('title', data.title)\r\n            setValue('address', data.address)\r\n            setValue('category_id', data.category_id)\r\n            setValue('country', data.country)\r\n            setValue('state', data.state)\r\n            setValue('city', data.city)\r\n            setValue('description', data.description)\r\n            setValue('number_of_nft', data.number_of_nft)\r\n            setValue('price', data.price)\r\n            setValue('start_date', data.start_date)\r\n            setValue('type', data.type)\r\n\r\n            setType(data.type)\r\n            setCountry(data.country)\r\n            setDescription(data.description)\r\n\r\n            setState(data.state)\r\n            setCity(data.city)\r\n\r\n            setValue('end_date', data.end_date)\r\n        }\r\n\r\n    }, [data])\r\n\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    const handleChangeCountry = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', event.currentTarget.value)\r\n        dispatch(StateList(formData))        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setCountry(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event.currentTarget.value)\r\n        dispatch(CityList(formData))\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    // const [dateError,setErrordate] = useState(\"\")\r\n    // function checkDateValidation(start_date, end_date) {\r\n    //     // check the dates\r\n    //     if ((new Date(start_date) > new Date(end_date)) || (new Date(end_date) < new Date(start_date))) {\r\n    //         // set date error validation true \r\n    //         setErrordate(\"should be gtr\")\r\n    //     } else {\r\n    //         // null or false date error validation \r\n    //     }\r\n    // }\r\n    return (\r\n\r\n        <div className={current === 0 ? styles.showForm : styles.hideForm}>\r\n            <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12 \">\r\n                        <div className=\"form-group mt-3\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                {data.type == 2 ? (\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"donation\"\r\n                                        value=\"2\"\r\n                                        // defaultChecked={data.type ? true : false}\r\n                                        {...register(\"type\", { required: true })}\r\n                                        aria-invalid={errors.type ? \"true\" : \"false\"}\r\n                                        onChange={(e) => setType(e.target.value)}\r\n                                        defaultChecked={data.type}\r\n                                    />\r\n                                        <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                    </>\r\n                                ) : (\r\n\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"donation\"\r\n                                        value=\"2\"\r\n                                        {...register(\"type\", { required: true })}\r\n                                        onChange={(e) => setType(e.target.value)}\r\n                                        aria-invalid={errors.type ? \"true\" : \"false\"}\r\n                                    />\r\n                                        <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label></>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                {data.type == 1 ? (\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\" name=\"radiobutton\"\r\n                                        id=\"product_sale\"\r\n                                        value=\"1\"\r\n                                        defaultChecked={data.type}\r\n                                        {...register(\"type\", { required: true })}\r\n                                        onChange={(e) => setType(e.target.value)}\r\n                                        aria-invalid={errors.type ? \"true\" : \"false\"}\r\n                                    // defaultChecked={data.type ? true : false}\r\n                                    /><label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label></>\r\n                                ) : (\r\n\r\n\r\n\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"product_sale\"\r\n                                        value=\"1\"\r\n                                        // checked\r\n                                        {...register(\"type\", { required: true })}\r\n                                        // defaultChecked={type === null ? true : false}\r\n\r\n                                        onChange={(e) => setType(e.target.value)}\r\n                                        aria-invalid={errors.type ? \"true\" : \"false\"}\r\n\r\n                                    />\r\n                                        <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label></>\r\n\r\n\r\n                                )}\r\n                            </div>\r\n                            {errors.type?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Type is required</p>}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-md-6 col-12\">\r\n                        {/* {type == 1 && ( */}\r\n\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Project name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"title\"\r\n                                placeholder=\"Project name\"\r\n                                {...register(\"title\", { required: true, pattern: { value: /[A-Za-z]/ } })}\r\n                                aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>}\r\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                        </div>\r\n                        {/* )} */}\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Web address</label>\r\n                            <input\r\n                                type=\"url\"\r\n                                className=\"form-control\"\r\n                                name=\"address\"\r\n                                placeholder=\"Web address\"\r\n                                {...register(\"address\", {\r\n                                    required: true, pattern: {\r\n                                        value: /^(\\/\\/)?www\\.([A-z]+)\\.([A-z]{2,})/,\r\n                                        message: 'Please enter a valid url'\r\n                                    }\r\n                                })}\r\n                                aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                            />\r\n\r\n\r\n                            {errors.address && errors.address?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                            {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <label>Description</label>\r\n                        <div className=\"form-group\">\r\n\r\n\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"description\"\r\n                                defaultValue=\"\"\r\n\r\n\r\n                                render={({ field: { value, onChange } }) => {\r\n                                    return <JoditEditor\r\n                                        ref={editor}\r\n                                        // value={description}\r\n                                        // {...register(\"description\", { required: true })}\r\n                                        // config={config}\r\n                                        value={description}\r\n                                        placeholder=\"start typing\"\r\n                                        // aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        tabIndex={1} // tabIndex of textarea\r\n                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                        onChange={setDescription}\r\n                                    />\r\n                                    { errors.description?.message && <span>{errors.description.message}</span> }\r\n\r\n                                }}\r\n                            // { errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p> }\r\n                            />\r\n\r\n                            {/* {errors.description && errors?.description?.type === \"min\" && <p style={{ color: 'red' }} role=\"alert\">Description limit is 150 words</p>} */}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Country</label>\r\n\r\n                            <select name=\"country\"\r\n\r\n                                {...register(\"country\", { required: true })} onChange={handleChangeCountry}>\r\n                                aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                {countries?.data?.data?.map((option, key) => (\r\n                                    <>\r\n\r\n\r\n                                        <option key={key.id} value={option.id}>\r\n\r\n                                            {option.name}\r\n\r\n                                        </option>\r\n\r\n\r\n                                    </>\r\n\r\n                                ))}\r\n                            </select>\r\n                            {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>State or province</label>\r\n\r\n                            <select name=\"state\"\r\n                                {...register(\"state\")} onChange={handleChangeState}>\r\n                                aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state/province</option>\r\n                                {states?.data?.data?.map((option, key) => (\r\n\r\n                                    <><option key={key.id} value={option.id}  >\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                            {/* {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>} */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>City or Region</label>\r\n\r\n                            <select name=\"city\"\r\n                                {...register(\"city\")}>\r\n                                aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city/region</option>\r\n                                {cities?.data?.data?.map((option, key) => (\r\n                                    <><option key={key.id} value={option.id}>\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                            {/* {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>} */}\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>State or Province</label>\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"state\"\r\n                                render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                    <GeoLocation\r\n                                       \r\n\r\n                                        onChange={setState}\r\n                                        geoId={country}\r\n                                        onBlur={onBlur}\r\n                                        selected={value}\r\n                                    \r\n                                    />\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>City or Region</label>\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"city\"\r\n                                render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                    <GeoLocation\r\n                                        // locationTitle=\"City\"\r\n                                        // isCity\r\n                                        // setValue={data.city}\r\n                                        onChange={setCity}\r\n                                        geoId={state}\r\n\r\n                                        onBlur={onBlur}\r\n                                        selected={value}\r\n                                        required={true}\r\n                                        // onChange={onChange}\r\n\r\n\r\n                                        // {...register(\"city\", { required: true })}\r\n                                        aria-invalid={errors.city ? \"true\" : \"false\"}\r\n                                    />\r\n                                )}\r\n                            />\r\n                            {errors.city?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">city is required</p>}\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            {type == 2 ? (\r\n\r\n                                <label>Price per NFT (In MATIC tokens)</label>\r\n                            ) : (\r\n                                <label>Price (In MATIC tokens)</label>\r\n\r\n                            )}\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                step=\"0.01\"\r\n                                name=\"price\"\r\n                                placeholder=\"Price\"\r\n                                {...register(\"price\", { required: true })}\r\n                                aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {type == 1 ? (\r\n\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    // value='1'\r\n                                    // defaultValue={1}\r\n                                    // defaultValue={1}\r\n                                    // disabled={true}\r\n                                    min={1}\r\n\r\n                                    placeholder=\"number of NFT (1 allowed)\"\r\n                                    {...register(\"number_of_nft\", { required: true, min: 1, max: 1 })}\r\n                                    // {...register(\"number_of_nft\", { maxLength: 12 })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.number_of_nft && errors.number_of_nft.type === \"max\" && (\r\n                                    <p style={{ color: 'red' }}>\r\n                                        Only 1 nft allowed\r\n                                    </p>\r\n                                )}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required and limit is upto 1</p>}\r\n                                {/* {errors.number_of_nft?.type === \"maxLength\" && <p style={{ color: 'red' }} role=\"alert\">Max one length </p>} */}\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n\r\n                                    // defaultValue={1}\r\n                                    min={1}\r\n                                    // disabled={type == 1}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    {...register(\"number_of_nft\", { required: true, min: 1, max: 10 })}\r\n                                    // {...register(\"number_of_nft\", { maxLength: 12 })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                {errors.number_of_nft && errors.number_of_nft.type === \"max\" && (\r\n                                    <p style={{ color: 'red' }}>\r\n                                        Only 10 nfts allowed\r\n                                    </p>\r\n                                )}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFTs per project is required with a limit of 10</p>}\r\n                                {/* {errors.number_of_nft?.type === \"maxLength\" && <p style={{ color: 'red' }} role=\"alert\">Max length exceeded</p>} */}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {type == 2 && (\r\n\r\n                        <><div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Campaign Start date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    // placeholder='dd-mm-yy'\r\n                                    // hidden={data.type == 1}\r\n                                    className=\"form-control\"\r\n                                    name=\"start_date\"\r\n                                    min={disablePastDate()}\r\n\r\n                                    // placeholder=\"Start date :\"\r\n                                    {...register(\"start_date\", { required: true })}\r\n                                    aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                            </div>\r\n                        </div><div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        // hidden={data.type == 1}\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        min={disablePastDate()}\r\n\r\n                                        // placeholder=\"End date\"\r\n                                        {...register(\"end_date\")}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    {/* {errors.end_date && errors?.end_date?.type === 'min' && <p style={{ color: 'red' }} role=\"alert\">End date should be greater or equal to startdate</p>} */}\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div></>\r\n                    )}\r\n                    {/* {data.type == 2 && (\r\n\r\n\r\n                                        <><div className=\"col-12 col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Campaign Start date</label>\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    // placeholder='dd-mm-yy'\r\n                                                    className=\"form-control\"\r\n                                                    value={data.start_date}\r\n\r\n                                                    name=\"start_date\"\r\n                                                    min={disablePastDate()}\r\n\r\n                                                    // placeholder=\"Start date :\"\r\n                                                    {...register(\"start_date\", { required: true })}\r\n                                                    aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                                {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                            </div>\r\n                                        </div><div className=\"col-12 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Campaign End Date</label>\r\n                                                    <input\r\n                                                        type=\"date\"\r\n                                                        className=\"form-control\"\r\n                                                        name=\"end_date\"\r\n                                                        value={data.end_date}\r\n\r\n                                                        min={disablePastDate()}\r\n                                                        // placeholder=\"End date\"\r\n                                                        {...register(\"end_date\", { required: true })}\r\n                                                        aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                                </div>\r\n                                            </div></>\r\n                                    )} */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Category</label>\r\n                            <select name=\"category_id\"\r\n                                {...register(\"category_id\", { required: true })}\r\n                            >\r\n                                aria-invalid={errors.category_id ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select category </option>\r\n                                {cat?.map((option, key) => (\r\n\r\n                                    <option key={key.id} value={option.id} >\r\n                                        {option.title}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            {errors.category_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Category is required</p>}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Create;","export const TOKEN_KEY = localStorage.getItem('authToken')\r\n\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"authToken\");\r\n}\r\n\r\nexport const isLogin = () => {\r\n  return TOKEN_KEY ? true : false\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction MyVerticallyCenteredModal(props) {\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (dat) => {\r\n        // \r\n        // data.preventDefault()\r\n        dispatch(CreateCollectionAction(dat))\r\n        // console.log(data?.statusCode)\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Collection\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Display name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"display_name\"\r\n                                required\r\n                                placeholder=\"Enter collection name\"\r\n                                {...register('title')}\r\n                            // value={title}\r\n                            // onChange={(e) => {\r\n\r\n                            //     setTitle(e.target.value);\r\n                            // }} \r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Symbol</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"symbol\"\r\n                                required\r\n                                placeholder=\"Enter token symbol\"\r\n                                {...register('symbol')}\r\n                            // value={symbol}\r\n                            // onChange={(e) => {\r\n\r\n                            //     setSymbol(e.target.value);\r\n                            // }} \r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Description</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"description\"\r\n                                required\r\n                                {...register('description')}\r\n                                // value={description}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setDescription(e.target.value);\r\n                                // }}\r\n                                placeholder=\"Spread some words about your collection\"\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Short url</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                required\r\n                                name=\"short_url\"\r\n                                placeholder=\"Enter short url\"\r\n                                {...register('short_url')}\r\n                            // value={short_url}\r\n                            // onChange={(e) => {\r\n\r\n                            //     setShortUrl(e.target.value);\r\n                            // }} \r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"modal-footer\"> */}\r\n                    <Button type=\"submit\" className=\"btn btn-primary\">Create</Button>\r\n                    {/* </div> */}\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default MyVerticallyCenteredModal","/**\r\n * Loader Spinner\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n\r\n\r\n\r\n    return (\r\n        // <div style={{position: 'absolute', backgroundColor: '#0002', width: '100%', height: '100%'}}>\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                height: \"100px\",\r\n                width: \"100px\",\r\n                margin: \"auto\",\r\n                display: \"block\",\r\n                // position: 'absolute',\r\n                // left: 'calc(50% - 50px)',\r\n                // top: 'calc(50% - 50px)'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Upload } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst UploadNft = ({ current, prev }) => {\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    // console.log(data, 'formdta')\r\n    const [count, setCount] = useState(0);\r\n    // const [nft_description, setNft_description] = useState([])\r\n    // console.log('nft_description', nft_description)\r\n\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    // console.log('colldata', coldata)\r\n    // console.log(nft_collection_id)\r\n    // const [coll_id,setCollId] = useState()\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    // console.log(\"collid\", coll_id)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleIncrement = () => {\r\n        setCount(prevCount => prevCount + 1);\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n    // function descc(e) {\r\n    //     setNft_description(prev => [...prev, nft_description]);\r\n    // };\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    // this.setState(prev => ({\r\n    //     item: prev.item.map(item => item.name === 'xjz' ? { ...item, age: '10' } : item)\r\n    // }))\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n        defaultValues\r\n    });\r\n    useEffect(() => {\r\n        register(\"nft_description\");\r\n    }, [register]);\r\n\r\n    // const ipfsClient = create('http://127.0.0.1:5001')\r\n    // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n    // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n    // console.log(imaeg, 'imgg')\r\n\r\n    const OnSubmit = (values) => {\r\n        // e.preventDefault\r\n        // setColData(col)\r\n        // \r\n        setFormValues(values)\r\n\r\n    }\r\n\r\n\r\n    // console.log('col', col)\r\n\r\n\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        setLoading(true)\r\n        const nftImagepromises = values?.nfts?.map(x => uploadNFT(x?.nft_image?.file))\r\n\r\n        const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n        // \r\n\r\n        const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n        // \r\n\r\n        const formData = new FormData()\r\n\r\n\r\n        formData.append('title', data.title)\r\n        formData.append('description', data.description)\r\n        formData.append('address', data.address)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('latitude', lat)\r\n        formData.append('logitude', log)\r\n        formData.append('city', data.city)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        formData.append('start_date', data.start_date)\r\n        formData.append('end_date', data.end_date)\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n\r\n        formData.append('nft_image', addedImage)\r\n        formData.append('nft_name', values?.nfts?.map(x =>\r\n            x.nft_name\r\n        ))\r\n        // const newlist = newList.push(nft_collection_id);\r\n        formData.append('nft_collection_id', coll_id)\r\n        // formData.append('nft_description', nft_description)\r\n        formData.append('nft_description', values?.nfts?.map(x => x.nft_description))\r\n        // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n\r\n        // dispatch(uploadNFT())\r\n        dispatch(CreateProjectAction(formData, setLoading))\r\n        // setLoading(false)\r\n\r\n        // console.log('Received values of form:', values, data)\r\n\r\n    };\r\n    // console.log('title', localStorage.getItem('title'))\r\n    const handleCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n        beforeUpload: () => {\r\n            return false;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    // const getFile = (e) => {\r\n    //     // \r\n    //     console.log('Upload event:', e);\r\n\r\n    //     if (Array.isArray(e)) {\r\n    //         return e;\r\n    //     }\r\n    //     return e && e.fileList;\r\n    // };\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n    return (\r\n        // <section className=\"author-area\">\r\n        <div>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                    <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                        nfts: nfts\r\n                    }}\r\n                        // onSubmit={(event) => handleSubmit(event)}\r\n                        onFinish={(event) => onFinish(event)}\r\n                        onSubmit={OnSubmit} autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                        <Form.List name=\"nfts\">\r\n\r\n                            {(fields, { add, remove }) => (\r\n                                <>\r\n                                    {/* <div className='steps-center'>\r\n\r\n\r\n                                                <div className='orgicon1'>\r\n\r\n                                                    <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n                                                </div>\r\n\r\n                                                <div className='orgicon1line'>\r\n                                                    <span style={{}}> ----------------------------- </span>\r\n\r\n                                                </div>\r\n                                                <div className='orgicon2'>\r\n\r\n                                                    <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n                                                </div>\r\n                                            </div> */}\r\n                                    <>\r\n                                        {fields.map(({ key, name, ...restField }, index) => (\r\n                                            // <Space\r\n                                            //     key={key}\r\n                                            //     style={{\r\n                                            //         display: 'flex',\r\n                                            //         marginBottom: 8,\r\n                                            //     }}\r\n                                            //     align=\"baseline\"\r\n                                            // >\r\n                                            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                                                <Panel header=\"Details\" key=\"1\">\r\n                                                    <Fragment>\r\n                                                        {/* <div>Artwork {index}</div> */}\r\n                                                        <div className=\"row\">\r\n\r\n                                                            <div className=\"col-md-10 col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  name',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  description',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <Controller\r\n                                                                            control={control}\r\n                                                                            name=\"nft_description\"\r\n                                                                            defaultValue=\"\"\r\n                                                                            render={({ field: { value, onChange } }) => {\r\n                                                                                return  */}\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={'nft_description'}\r\n                                                                            // config={config}\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                            // onBlur={newContent => 'nft_description'(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                                            onChange={newContent => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {/* <div className=\"col-md-5 col-12\">\r\n                                                                    <label>Nft</label>\r\n                                                                    <div>\r\n                                                                        <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a image',\r\n                                                                                },\r\n                                                                            ]}\r\n\r\n                                                                        >\r\n\r\n                                                                            <Upload\r\n                                                                                {...fileProps}\r\n                                                                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                                listType=\"picture-card\"\r\n                                                                                // fileList={fileList}\r\n                                                                                // onChange={onChange}\r\n                                                                                onPreview={handlePreview}\r\n                                                                                maxCount={1}\r\n\r\n                                                                            >\r\n                                                                                + Upload\r\n                                                                            </Upload>\r\n\r\n\r\n                                                                        </Form.Item>\r\n                                                                        <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                            <img\r\n                                                                                alt=\"example\"\r\n                                                                                style={{\r\n                                                                                    width: '100%',\r\n                                                                                }}\r\n                                                                                src={previewImage} />\r\n                                                                        </Modal>\r\n                                                                    </div>\r\n                                                                </div> */}\r\n                                                            <div className=\"col-md-1 col-12\">\r\n                                                                <MinusCircleOutlined onClick={(e) => { remove(name); handleDecrement(e); }} />\r\n                                                            </div>\r\n                                                            {/* </div> */}\r\n                                                            <div className=\"col-md-3 col-12\">\r\n\r\n                                                                {/* <div className=\"col-24\"> */}\r\n\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label className='mt-2'>Choose Collection</label>\r\n                                                                    <div className=\"card choose_div\" style={{\r\n                                                                        background: \"black\",\r\n                                                                        marginBottom: \"8px\",\r\n                                                                    }}>\r\n                                                                        <div className=\"card-body \">\r\n                                                                            <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n                                                                            </Button>\r\n\r\n                                                                            <MyVerticallyCenteredModal\r\n                                                                                show={modalShow}\r\n                                                                                onHide={() => setModalShow(false)} />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            {col?.map((item, idx) => (\r\n\r\n                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-3 col-12 choose_div\">\r\n                                                                    {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_collection_id\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select nft collection',\r\n                                                                                },\r\n                                                                            ]}\r\n\r\n                                                                        > */}\r\n                                                                    <label className='hidden-word'>jsaswjdwjd</label>\r\n\r\n                                                                    <div id={item.id} onClick={() => onHandleClick(index, item.id)} className=\"card\"\r\n                                                                        style={{\r\n                                                                            background: \"black\",\r\n                                                                            marginBottom: \"8px\",\r\n                                                                            border: nft_collection_id[index] == item.id ? \"1px solid #fff\" : null\r\n                                                                        }}>\r\n                                                                        <div className=\"card-body\">\r\n                                                                            <div>\r\n\r\n\r\n                                                                                {item.title}\r\n                                                                            </div>\r\n\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    {/* </Form.Item> */}\r\n\r\n                                                                </div>\r\n                                                                // </div>\r\n                                                            ))}\r\n                                                            <div className=\"col-md-12 col-12\">\r\n                                                                <label>Upload Nft</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_image\"]}\r\n                                                                        // getValueFromEvent={getFile}\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Please select a image',\r\n                                                                            },\r\n                                                                        ]}\r\n\r\n                                                                    >\r\n\r\n                                                                        <Upload\r\n                                                                            {...fileProps}\r\n                                                                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                            listType=\"picture-card\"\r\n                                                                            // fileList={fileList}\r\n                                                                            // onChange={onChange}\r\n                                                                            onPreview={handlePreview}\r\n                                                                            maxCount={1}\r\n\r\n                                                                        >\r\n                                                                            + Upload\r\n                                                                        </Upload>\r\n\r\n\r\n                                                                    </Form.Item>\r\n                                                                    <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                        <img\r\n                                                                            alt=\"example\"\r\n                                                                            style={{\r\n                                                                                width: '100%',\r\n                                                                            }}\r\n                                                                            src={previewImage} />\r\n                                                                    </Modal>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n                                                </Panel>\r\n                                            </Collapse>\r\n                                        ))}\r\n\r\n\r\n                                        {(!(data?.number_of_nft == count)) ?\r\n                                            <Form.Item>\r\n                                                <Button type=\"dashed\" onClick={(e) => { add(e); handleIncrement(e); }} block icon={<PlusOutlined />} disabled={data?.number_of_nft == count}>\r\n                                                    Add NFT\r\n                                                </Button>\r\n                                            </Form.Item>\r\n                                            : null}\r\n                                    </></>\r\n                            )}\r\n\r\n                        </Form.List>\r\n                        <Form.Item>\r\n                            <div className=\"col-12\">\r\n                                <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">Create</button>\r\n                            </div>\r\n                            <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M2,12 L22,12 M13,3 L22,12 L13,21\" transform=\"matrix(-1 0 0 1 24 0)\" />\r\n                                </svg>\r\n                                Previous\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default UploadNft;","import { useEffect, useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Create from \"./Create\";\r\nimport UploadNft from \"./uploadNft\";\r\nimport FormProvider, { useFormData } from \"./Context/context\";\r\n\r\nimport { Button, message, Steps } from 'antd';\r\nimport { set, useForm } from \"react-hook-form\";\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Create Project',\r\n    content: <Create />\r\n  },\r\n  {\r\n    title: 'Upload NFT',\r\n    content: <UploadNft />,\r\n  },\r\n];\r\nconst UploadNftIndex = () => {\r\n\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const { setValue } = useForm();\r\n \r\n  const prev = () => {\r\n    // \r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const items = steps.map((item) => ({ key: item.title, title: item.title }));\r\n  return (\r\n    <section className=\"author-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n\r\n\r\n          <div className=\"col-14 col-md-9\">\r\n            {/* Intro */}\r\n            <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n              <div className=\"intro-content\">\r\n                <span>Get Started</span>\r\n                {current === 0 ? (\r\n\r\n                  <h3 className=\"mt-3 mb-0\">Create Project</h3>\r\n                ) : (\r\n\r\n                  <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <FormProvider>\r\n\r\n              {/* <FormCard currentStep={formStep} prevFormStep={prevFormStep}> */}\r\n              <div className=\"steps-content\">\r\n                <Steps current={current} items={items} />\r\n                {current === 0 && (\r\n\r\n                  <Create current={current} next={next} prev={prev} />\r\n                )}\r\n\r\n                {current === 1 && <><UploadNft prev={prev} />\r\n                  {/* <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                    Previous\r\n                  </Button> */}\r\n                </>\r\n                }\r\n                {/* <div className=\"steps-action\">\r\n          {current < steps.length - 1 && (\r\n            <Button type=\"primary\" onClick={() => next()}>\r\n              Next\r\n            </Button>\r\n          )}\r\n\r\n          {current > 0 && (\r\n            <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n              Previous\r\n            </Button>\r\n          )}\r\n        </div> */}\r\n              </div>\r\n              {/* </FormCard> */}\r\n            </FormProvider>\r\n          </div>\r\n        </div >\r\n      </div >\r\n    </section >\r\n  );\r\n};\r\n\r\nexport default UploadNftIndex;\r\n","import React, { Component, useEffect } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Creates from '../components/Create/Create';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport { isLogin } from '../routers/utils';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UploadNftIndex from '../components/Create';\r\n\r\nconst Create = () => {\r\n  const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  //   if (!isLogin()) {\r\n  //     history.push('/login')\r\n  //   }\r\n  // }, [])\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n      <UploadNftIndex />\r\n      <Footer />\r\n      <ModalSearch />\r\n      <ModalMenu />\r\n      <Scrollup />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => {\r\n        // \r\n        // console.log(login.authToken, 'login')\r\n        return state.login\r\n    })\r\n    // console.log(user, 'user')\r\n\r\n    if (user?.status === 200) {\r\n        history.push('/')\r\n    }\r\n\r\n    const mesg = useSelector(state => {\r\n        // \r\n        return state.user.message\r\n    })\r\n    // if (login?.userToken) {\r\n    //     console.log('hello')\r\n    // }\r\n    // console.log(login?.status)\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        // \r\n        dispatch(LoginAction(data))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"Enter your Password\"\r\n                                            {...register(\"password\", { required: \"Password is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" defaultChecked />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Log In</button>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\"><Link to=\"/forgotpassword\">Forgot Password</Link></span>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\">If not registered? <Link to=\"/signup\"><b>Sign Up</b></Link></span>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LoginSection from '../components/Login/Login';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LoginSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","export default function FormCard({ children, currentStep, prevFormStep }) {\r\n    return (\r\n        <div >\r\n            {currentStep < 1 && (\r\n                <>\r\n                    {currentStep > 0 && (\r\n                        <button\r\n                            onClick={prevFormStep}\r\n                            type=\"button\"\r\n                        >\r\n                            back\r\n                        </button>\r\n                    )}\r\n\r\n                </>\r\n\r\n            )}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    // console.log(data, 'dataaa')\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector, } from 'react-redux'\r\nimport { Register } from '../../redux/Actions/authAction'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as Yup from 'yup'\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required(\"Email is required\"),\r\n    // wallet_id: Yup.string()\r\n    //     .wallet_id()\r\n    //     .required(\"Wallet address is required\"),\r\n    // goal: Yup.string()\r\n    //     .goal()\r\n    //     .required(\"Fundraising goal is required\"),\r\n\r\n    password: Yup.string()\r\n        .required(\"Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\"),\r\n    confirm_password: Yup.string()\r\n        .required(\"Confirm Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\")\r\n        .oneOf([Yup.ref(\"password\")], \"Passwords do not match\")\r\n});\r\n\r\n\r\nconst Signup = ({ formStep, nextFormStep }) => {\r\n    const { setFormValues } = useFormData();\r\n    const dispatch = useDispatch()\r\n    const { register, watch, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"all\",\r\n        resolver: yupResolver(formSchema)\r\n    });\r\n\r\n    // const [role, setRole] = useState()\r\n    // console.log('role', role)\r\n    const OnSubmit = (data) => {\r\n        // dispatch(Register(data))\r\n        setFormValues({ ...data });\r\n        // if (role == 3) {\r\n\r\n        nextFormStep();\r\n        // }\r\n        // if (role == 2) {\r\n        //     const formData = new FormData()\r\n        //     formData.append('email', data.email)\r\n        //     // formData.append('goal', data.goal)\r\n        //     formData.append('password', data.password)\r\n        //     formData.append('confirm_password', data.confirm_password)\r\n        //     // formData.append('wallet_id', data.wallet_id)\r\n        //     // formData.append('role', role)\r\n        //     dispatch(Register(formData))\r\n        // }\r\n    }\r\n\r\n    const { user } = useSelector(state => state.user)\r\n\r\n\r\n    const { errMessage } = useSelector(state => {\r\n        return state?.errmessage?.message\r\n    })\r\n\r\n    return (\r\n        < section className=\"author-area\" >\r\n            <div className=\"container\">\r\n\r\n                <>\r\n                    <div>\r\n                        {errMessage && <p>{errMessage}</p>}\r\n\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 co  l-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span></span>\r\n                                <h3 className=\"mt-3 mb-0\"></h3>\r\n                                <p></p>\r\n                            </div>\r\n                            {/* Item Form */}\r\n                            <div className={formStep === 0 ? styles.showForm : styles.hideForm}>\r\n                                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                    <div className=\"row\">\r\n                                        <div className='steps-center'>\r\n                                            <div className='step1icon'>\r\n\r\n                                                <i className=\"fa-solid fa-circle-check\"> Step 1 </i>\r\n                                            </div>\r\n                                            <div className='stepperline'>\r\n                                                <i style={{ color: '#452868' }}>  ----------------------------- </i>\r\n\r\n                                            </div>\r\n                                            <div className='step2icon'>\r\n\r\n                                                <i className=\"fa-regular fa-circle\" > Step 2 </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Email</label>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    {...register(\"email\", { required: 'Email address is required' })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.email ? \"true\" : \"false\"} />\r\n                                                {/* {errors.errMessage} */}\r\n                                                {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                                {/* {errMessage && <p>{errMessage}</p>} */}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"password\"\r\n                                                    placeholder=\"Password\"\r\n                                                    {...register(\"password\", { required: true })}\r\n                                                    aria-invalid={errors.password ? \"true\" : \"false\"} />\r\n                                                {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Confirm Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"confirm_password\"\r\n                                                    placeholder=\"Confirm password\"\r\n                                                    {...register(\"confirm_password\",\r\n                                                        {\r\n                                                            required: true,\r\n                                                            validate: (val) => {\r\n                                                                if (watch('password') != val) {\r\n                                                                    return \"Your passwords do no match\";\r\n                                                                }\r\n                                                            },\r\n                                                        })}\r\n                                                    aria-invalid={errors.confirm_password ? \"true\" : \"false\"} />\r\n                                                {errors.confirm_password && <p style={{ color: 'red' }} role=\"alert\">{errors.confirm_password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Fundraising Goal</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"goal\"\r\n                                                    placeholder=\"Fundraising goal (MATIC)\"\r\n                                                    {...register(\"goal\",\r\n                                                        {\r\n                                                            required: true,\r\n\r\n                                                        })}\r\n                                                    aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                                {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Wallet Address</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"wallet_id\"\r\n                                                    // defaultValue='1'\r\n                                                    placeholder=\"Wallet address\"\r\n                                                    {...register(\"wallet_id\", { required: true })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                                />\r\n                                                {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"3\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                                </div>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"2\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <div className=\"form-check form-check-inline\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n                                        <div className=\"col-12\">\r\n                                            {/* {role == 2 ? ( */}\r\n                                            {/* <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Signup</button> */}\r\n                                            {/* ) : ( */}\r\n\r\n                                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                                            {/* )} */}\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <span className=\"d-block text-center mt-4\">Already have an account? <Link to=\"/login\"><b>Login</b></Link></span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        </section >\r\n\r\n    )\r\n}\r\n\r\nexport default Signup\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnnualRevenueList, CountryList, HearAboutList, Register } from '../../redux/Actions/authAction'\r\nimport { Controller, useForm } from 'react-hook-form'\r\n\r\nimport { useHistory } from 'react-router'\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\r\nimport { useState } from 'react'\r\nimport JoditEditor from 'jodit-react';;\r\n\r\n// import { Widget } from \"@uploadcare/react-widget\";\r\n// import FileUpload from \"react-material-file-upload\";\r\n// import { uploadcare } from '../lib/uploadcare.min.js';\r\nconst CreateOrganization = ({ formStep, nextFormStep, goBack }) => {\r\n\r\n    const [description, setDescription] = useState()\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const organization = useSelector(state => {\r\n        return state.user.organization\r\n    })\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n    const { annualRevenue } = useSelector(state => state.annualRevenue)\r\n\r\n    // }\r\n    const { hereAbout } = useSelector(state => state.hereAbout)\r\n    // console.log(user, 'user')\r\n\r\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    const OnSubmit = (values) => {\r\n        setFormValues(values)\r\n        // FormData.append('email', data.email)\r\n        // FormData.append('password', data.password)\r\n        // FormData.append('confirm_password', data.confirm_password)\r\n        const formData = new FormData()\r\n        formData.append('banner_image', values.banner_image[0])\r\n        formData.append('logo', values.logo[0])\r\n        formData.append('email', data.email)\r\n        formData.append('password', data.password)\r\n        formData.append('wallet_id', values.wallet_id)\r\n        // formData.append('role', data.role)\r\n        formData.append('goal', values.goal)\r\n        formData.append('confirm_password', data.confirm_password)\r\n        formData.append('organization_name', values.organization_name)\r\n        formData.append('url', values.url)\r\n        formData.append('country', values.country)\r\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\r\n        formData.append('tax_id', values.tax_id)\r\n\r\n        formData.append('social', values.social)\r\n        formData.append('social_link', values.social_link)\r\n        formData.append('description', description)\r\n        // formData.append('method_heard_detail', values.method_heard_detail)\r\n\r\n        dispatch(Register(formData))\r\n        // if (formData) {\r\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\r\n        //     history.push('/login')\r\n        // }\r\n    }\r\n\r\n    const socialmedia = useSelector(state => {\r\n        return state?.getSocialmediaIcons?.getsocial\r\n    })\r\n    // console.log('social', socialmedia)\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n        dispatch(AnnualRevenueList())\r\n        dispatch(HearAboutList())\r\n        dispatch(GetSocialMediaIcons())\r\n    }, [])\r\n\r\n\r\n    if (organization) {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <div className={formStep === 1 ? styles.showForm : styles.hideForm}>\r\n                            <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                {/* <button\r\n                                    // className={styles.back}\r\n                                    onClick={prevFormStep}\r\n                                    type=\"button\"\r\n                                >\r\n                                    back\r\n                                </button> */}\r\n                                <div className=\"row\">\r\n                                    <div className='col-12 d-flex justify-content-center'>\r\n                                        <div className='orgicon1'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 1</i>\r\n                                        </div>\r\n\r\n                                        <div className='orgicon1line'>\r\n                                            <span style={{ color: '#452868' }}> ----------------------------- </span>\r\n\r\n                                        </div>\r\n                                        <div className='orgicon2'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 2</i>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Fundraising Goal</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"goal\"\r\n                                                placeholder=\"Fundraising goal (MATIC)\"\r\n                                                {...register(\"goal\",\r\n                                                    {\r\n                                                        required: true,\r\n\r\n                                                    })}\r\n                                                aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                            {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Funding Wallet </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"wallet_id\"\r\n                                                // defaultValue='1'\r\n                                                placeholder=\"Funding Wallet\"\r\n                                                {...register(\"wallet_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Name</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"organization_name\"\r\n                                                placeholder=\"Organization name\"\r\n                                                {...register(\"organization_name\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.organization_name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Website</label>\r\n                                            <input\r\n                                                type=\"url\"\r\n                                                className=\"form-control\"\r\n                                                name=\"url\"\r\n                                                placeholder=\"Website\"\r\n                                                {...register(\"url\", {\r\n                                                    required: true, pattern: {\r\n                                                        value: /^((ftp|http|https):\\/\\/)?www\\.([A-z]+)\\.([A-z]{2,})/\r\n                                                    }\r\n                                                })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.url ? \"true\" : \"false\"}\r\n                                            />\r\n\r\n                                            {errors.url && errors.url?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                                            {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Describe your project\"\r\n\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <Controller\r\n                                                control={control}\r\n                                                name=\"description\"\r\n                                                defaultValue=\"\"\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // rules={{\r\n                                                //     required: true, pattern: {\r\n\r\n                                                //         message: \"Description is required\",\r\n                                                //     },\r\n                                                // }}\r\n                                                render={({ field: { value, onChange } }) => {\r\n                                                    return <JoditEditor\r\n                                                        ref={editor}\r\n                                                        value={description}\r\n                                                        // config={config}\r\n                                                        aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                                        placeholder=\"start typing\"\r\n                                                        tabIndex={1} // tabIndex of textarea\r\n                                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                        onChange={newContent => { }}\r\n                                                    />\r\n                                                }}\r\n                                            />\r\n                                            {errors?.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Country</label>\r\n\r\n                                            <select name=\"country\"\r\n                                                {...register(\"country\", { required: true })}>\r\n                                                aria-invalid={errors.country ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                                {countries.data?.data?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.name}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"annual_revenue_range\"\r\n                                                {...register(\"annual_revenue_range\", { required: true })}>\r\n                                                {annualRevenue?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key.id} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>EIN Number/Tax Id</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"tax_id\"\r\n                                                placeholder=\"EIN Number/Tax Id(optional)\"\r\n                                                {...register(\"tax_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (required)</label>\r\n                                            <select name=\"social\"\r\n                                                {...register(\"social\", { required: true })}>\r\n                                                aria-invalid={errors.social ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\r\n                                                {socialmedia?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.title}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (secondary)</label>\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"social_link\"\r\n                                                    placeholder=\"social link(optional) \"\r\n                                                    {...register(\"social_link\")}\r\n                                                // {...register(\"email\")}\r\n                                                // aria-invalid={errors.social_link ? \"true\" : \"false\"}\r\n                                                />\r\n                                            </div>\r\n                                            {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"project\"\r\n                                                {...register(\"hear_about\", { required: true })}>\r\n                                                {hereAbout?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Banner</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n\r\n                                                name=\"banner_image\"\r\n                                                placeholder=\"Select file\"\r\n                                                disp\r\n                                                {...register(\"banner_image\", { required: true })}\r\n                                                aria-invalid={errors.banner_image ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\r\n\r\n                                            {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Logo</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n                                                name=\"logo\"\r\n                                                placeholder=\"Select file\"\r\n                                                {...register(\"logo\", { required: true })}\r\n                                                aria-invalid={errors.logo ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <div className='logo'>\r\n\r\n                                                <span className='logo-dis'>maximum height should be 250 pixels</span>\r\n                                            </div>\r\n                                            {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => goBack()}>Previous</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CreateOrganization","import { useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Signup from './Signup'\r\nimport CreateOrganization from './createOrganization';\r\nimport FormProvider from \"./Context/context\";\r\n\r\n\r\nconst SignupIndex = () => {\r\n  const [formStep, setFormStep] = useState(0);\r\n\r\n  const nextFormStep = () => setFormStep((currentStep) => currentStep + 1);\r\n\r\n  const prevFormStep = () => setFormStep((currentStep) => currentStep - 1);\r\n\r\n  return (\r\n    <FormProvider>\r\n\r\n      <FormCard currentStep={formStep} prevFormStep={prevFormStep}>\r\n        {formStep === 0 && (\r\n          <Signup formStep={formStep} nextFormStep={nextFormStep} />\r\n        )}\r\n        {formStep === 1 && <CreateOrganization goBack={prevFormStep} />\r\n        }\r\n      </FormCard>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default SignupIndex;\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport SignupSection from '../components/Signup';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Signup = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <SignupSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contact',\r\n\r\n    initialState: {\r\n        contact: [],\r\n\r\n\r\n    },\r\n    reducers: {\r\n\r\n        postContact: (state, action) => {\r\n            state.contact = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const contactReducer = contactSlice.reducer\r\n\r\nexport const {\r\n    postContact\r\n} = contactSlice.actions;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ContactAction } from '../../redux/Actions/contactAction';\r\nimport Loader from '../Loader/loader';\r\n\r\n\r\nconst Contact = () => {\r\n    const [loading, setLoading] = useState()\r\n    const dispatch = useDispatch()\r\n    // useEffect(() => {\r\n    //     dispatch(ContactAction())\r\n    // })\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        setLoading(true)\r\n        const formData = new FormData()\r\n        formData.append('name', data.name)\r\n        formData.append('subject', data.subject)\r\n        formData.append('email', data.email)\r\n        formData.append('description', data.description)\r\n        dispatch(ContactAction(formData, setLoading))\r\n    }\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>Contact</span>\r\n                            <h3 className=\"mt-3 mb-0\">Get In Touch</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form id=\"contact-form\" className=\"item-form card no-hover\" onSubmit={handleSubmit(OnSubmit)} >\r\n                            {loading ? (\r\n                                <Loader />\r\n                            ) : (\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name\"  {...register(\"name\", { required: true })}\r\n                                                aria-invalid={errors.name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Name is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" {...register(\"email\", { required: true })}\r\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.email?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Email is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"subject\" placeholder=\"Subject\"  {...register(\"subject\", { required: true })}\r\n                                                aria-invalid={errors.subject ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.subject?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Subject is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <textarea className=\"form-control\" name=\"message\" placeholder=\"Message\" cols={30} rows={3} defaultValue={\"\"}  {...register(\"description\", { required: true })}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Message is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\"><i className=\"icon-paper-plane mr-2\" />Send Message</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </form>\r\n                        <p className=\"form-message\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Contact;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { postContact } from \"../Slices/contactSlice\";\r\nexport const ContactAction = (params, setLoading) => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/contact-us/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(postContact(res));\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", res.data.message, 'success')\r\n                .then(function () {\r\n                    window.location = \"/\";\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ContactSection from '../components/Contact/Contact';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                {/* <Breadcrumb title=\"Contact\" subpage=\"Pages\" page=\"Contact\" /> */}\r\n                <ContactSection />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ForgotPasswordAction, LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { forgotpassword, message, statusCode } = useSelector(state => {\r\n        // \r\n        return state.forgotpassword\r\n    })\r\n\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        dispatch(ForgotPasswordAction(data)).then(() => {\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors?.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div>{errors.username && errors.username.message}</div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Send Reset Link</button>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                    <hr />\r\n                                    <div className=\"other-option\">\r\n                                        Social Icons\r\n                                        <div className=\"social-icons d-flex justify-content-center\">\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <a key={`lsd_${idx}`} className={item.link} href=\"#\">\r\n                                                        <i className={item.icon} />\r\n                                                        <i className={item.icon} />\r\n                                                    </a>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LoginSection from '../components/Login/Login';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport ForgotPassword from '../components/ForgotPassword/forgotPassword';\r\n\r\nconst Forgot = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ForgotPassword />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forgot\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from './utils';\r\n\r\nconst PrivateRoute = ({ component: Component, restricted, ...rest }) => {\r\n    // const isLog = isLogin()\r\n    // \r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Redirect to=\"/\" />\r\n                : <Component {...props} />\r\n\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","// import { getValue } from '@mui/system';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { CategoriesAction, ProjectDetail, UpdateProject } from '../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\nimport GeoLocation from '../components/Create/geoLocation';\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../redux/Actions/authAction';\r\n\r\nconst EditProject = () => {\r\n    const editor = useRef(null);\r\n    const [country, setCountry] = useState();\r\n    console.log(country)\r\n    const [state, setState] = useState();\r\n    const [city, setCity] = useState();\r\n    const [description, setDescription] = useState();\r\n    // const [descriptionup, setDescriptionup] = useState();\r\n    // console.log(descriptionup, 'discup')\r\n    const [type, setType] = useState();\r\n    const { id } = useParams();\r\n    // console.log(id, \"idd\")\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    const dis = projdetail.description\r\n    // setDescriptionup(dis)\r\n    // console.log(dis, 'dis')\r\n    // console.log(projdetail, \"gfgfhghgghhgh\")\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n\r\n    }, [id])\r\n    const config = {\r\n        placeholderText: 'Edit Your Content Here!',\r\n        charCounterCount: false\r\n    }\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(first)\r\n\r\n    // console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            // const formData = new FormData()\r\n            // // formData.append('country_id', event?.currentTarget?.value)\r\n            // formData.append('country_id', projdetail.country)\r\n            // dispatch(StateList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n\r\n        dispatch(UpdateProject(id, formData))\r\n    }\r\n\r\n\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    // console.log(cat, 'cat')\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n    const handleChangeCountry = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n        const formData = new FormData()\r\n        // formData.append('country_id', event?.currentTarget?.value)\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    return (\r\n        // <Modal\r\n        //     {...props}\r\n        //     size=\"lg\"\r\n        //     aria-labelledby=\"contained-modal\"\r\n        //     centered\r\n        // >\r\n        //     <Modal.Header closeButton>\r\n        //         <Modal.Title id=\"contained-modal\">\r\n        //             Collection\r\n        //         </Modal.Title>\r\n        //     </Modal.Header>\r\n        //     <Modal.Body>\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n                    <div className=\"col-12 col-md-7\">\r\n                        <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Get Started</span>\r\n                                <h3 className=\"mt-3 mb-0\">Update Project</h3>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"2\" onChange={(e) => setType(e.target.value)} {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                        </div>\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"1\" onChange={(e) => setType(e.target.value)}  {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {/* {type == 1 && ( */}\r\n\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Project name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"title\"\r\n                                            placeholder=\"Project name\"\r\n                                            {...register(\"title\", { required: true })}\r\n                                            aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                                    </div>\r\n                                    {/* )} */}\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Web address</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"address\"\r\n                                            placeholder=\"Web Address\"\r\n                                            {...register(\"address\", { required: true })}\r\n                                            aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <label>Description</label>\r\n                                    <div className=\"form-group\">\r\n                                        {/* <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"textarea\"\r\n                                            // data-provide=\"markdown-editable\" rows=\"10\"\r\n                                            placeholder=\"Description\"\r\n                                            cols={30}\r\n                                            {...register(\"description\", { required: true })}\r\n                                            aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        /> */}\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n                                            render={({ field: { value, onChange } }) => {\r\n                                                return <JoditEditor\r\n                                                    ref={editor}\r\n                                                    value={value}\r\n                                                    // config={config}\r\n\r\n                                                    placeholder=\"start typing\"\r\n                                                    tabIndex={1} // tabIndex of textarea\r\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                    onChange={newContent => { }}\r\n                                                />\r\n                                            }}\r\n                                        />\r\n                                        {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                        {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"country\"\r\n                                                    {...register(\"country\", { required: true })}\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeCountry()\r\n                                                    }>\r\n\r\n                                                    aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                        Select your country</option>\r\n                                                    {countries?.data?.data?.map((option, key) => (\r\n                                                        <>\r\n                                                            <option key={key.id} value={option.id} >\r\n\r\n                                                                {option.name}\r\n\r\n                                                            </option>\r\n                                                        </>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"state\"\r\n\r\n                                                    {...register(\"state\", { required: true })}\r\n                                                    //  onChange={handleChangeState}\r\n\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeState\r\n                                                    } >\r\n                                                    aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state</option>\r\n                                                    {states?.data?.data?.map((option, key) => (\r\n\r\n                                                        <><option key={key.id} value={option.id}  >\r\n                                                            {option.name}\r\n                                                        </option></>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>City or Region</label>\r\n\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}>\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        {type == 2 ? (\r\n\r\n                                            <label>Price</label>\r\n                                        ) : (\r\n\r\n                                            <label>Price per NFT</label>\r\n                                        )}\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"price\"\r\n                                            placeholder=\"Price\"\r\n                                            {...register(\"price\", { required: true })}\r\n                                            aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Number of NFTs</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"number_of_nft\"\r\n                                            defaultValue={1}\r\n                                            disabled={type == 1}\r\n                                            placeholder=\"Select your number of NFTs (1-10)\"\r\n                                            min={1}\r\n                                            max={10}\r\n                                            {...register(\"number_of_nft\", { required: true })}\r\n                                            aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                        {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {type == 2 && (\r\n\r\n                                    <><div className=\"col-12 col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Campaign Start date</label>\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control\"\r\n                                                name=\"start_date\"\r\n                                                min={disablePastDate()}\r\n                                                // placeholder=\"Start date\"\r\n                                                {...register(\"start_date\", { required: true })}\r\n                                                aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                            {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                        </div>\r\n                                    </div><div className=\"col-12 col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Campaign End Date</label>\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"end_date\"\r\n                                                    min={disablePastDate()}\r\n                                                    // placeholder=\"End date\"\r\n                                                    {...register(\"end_date\", { required: true })}\r\n                                                    aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                                {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                            </div>\r\n                                        </div></>\r\n                                )}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category</label>\r\n                                        <select name=\"annual_revenue_range\"\r\n                                            // defaultValue={}\r\n                                            {...register(\"category_id\")}>\r\n                                            {cat?.map((option, key) => (\r\n\r\n                                                <option key={key.id} value={option.id}  >\r\n                                                    {option.title}\r\n\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        //     </Modal.Body>\r\n        // </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default EditProject;","import React, { Component } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport EditProject from '../Edit/editProject';\r\n\r\nconst ProjectUpdate = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <EditProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjectUpdate;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst TermsConditions = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter())\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{footer?.footer?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: footer?.footer?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default TermsConditions","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport SignupSection from '../components/Signup';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport TermsConditions from '../components/Footer/t&c';\r\n\r\n\r\nconst TermsCond = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <TermsConditions />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TermsCond\r\n","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { CategoriesAction, getPublicLiveProjects } from '../../redux/Actions/projectAction';\r\n\r\nconst projectTypesMap = {\r\n    \"LatestProjects\": 2,\r\n    \"RecentCampaigns\": 1\r\n}\r\n\r\nconst ExploreAll = () => {\r\n\r\n    const { type } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const liveProjects = useSelector(state => {\r\n        return state?.projectdetails?.liveProjects[type]\r\n    })\r\n    console.log(liveProjects?.nft_data?.image, 'live')\r\n    useEffect(() => {\r\n        // \r\n        dispatch(getPublicLiveProjects({\r\n            cursor: 1,\r\n            type: projectTypesMap[type],\r\n            projectType: type,\r\n\r\n        }))\r\n    }, [dispatch, type])\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(CategoriesAction())\r\n    // }, [])\r\n\r\n    // const cate = useSelector(state => {\r\n    //     // \r\n    //     return []\r\n    // })\r\n    // console.log(cate, 'category')\r\n    return (\r\n\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mb-4\">\r\n                            {/* <span>Explore</span> */}\r\n                            <h3 className=\"mt-3 mb-0\">{type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"row justify-content-center text-center\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n                           \r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"all\" defaultChecked className=\"explore-btn\" />\r\n                                <span>Arts</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Education</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Gaming</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"art\" className=\"explore-btn\" />\r\n                                <span>Music</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Medical</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Other</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Photography</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"music\" className=\"explore-btn\" />\r\n                                <span>Sports</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Tradings Cards</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Travel</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Utility</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"collectibles\" className=\"explore-btn\" />\r\n                                <span>Virtual Worlds</span>\r\n                            </label>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {liveProjects && liveProjects.length ?\r\n                        [...new Map(liveProjects?.map(item =>\r\n                            [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <Link to={`/projdetails/${item.id}`}>\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.nft_data[0].image} alt=\"\" />\r\n\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 pt-3 p-0\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <a href=\"/item-details\">\r\n                                                                <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                            </a>\r\n                                                            <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span style={{ color: '#8E8E8E' }}>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\"> @{item?.user_data?.username}</h6>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div>\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />dfg</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            }) :\r\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                            <h2 className='allproj2'>\r\n                                No latest project found\r\n                            </h2>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default ExploreAll;","import React, { Component } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport EditProject from '../Edit/editProject';\r\nimport ExploreAll from '../components/Explore/viewAllLatest';\r\nimport { Breadcrumb } from 'react-bootstrap';\r\n\r\nconst All = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <ExploreAll type=\"Latest Projects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default All;","import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst AllCollections = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state.collection.collection\r\n    })\r\n    // console.log(coll, \"coll\")\r\n    useEffect(() => {\r\n\r\n        dispatch(PopularCollectionAction())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center mb-4\">\r\n\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center text-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* Explore Menu */}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items explore-items h-auto\">\r\n                        {coll && coll.length ?\r\n                            [...new Map(coll?.map(item =>\r\n                                [item[\"title\"], item])).values()]?.map((item, idx) => {\r\n                                    return (\r\n                                        <Link key={`edth_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\" >\r\n                                            <div>\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} />\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <a>\r\n                                                                <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                            </a>\r\n                                                            <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span style={{ color: '#8E8E8E' }}>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\">{item?.user_data?.username}</h6>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                {item.status == '1' ?\r\n                                                                    <Button>Donation</Button>\r\n                                                                    :\r\n\r\n                                                                    <Button>Product Sale</Button>\r\n                                                                }\r\n                                                            </div>\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                            <div className=\"col-12 col-sm-6 col-lg-3\">\r\n                                <h2>\r\n                                    No Popular Collections\r\n                                </h2>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default AllCollections; ","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AllCollections from '../components/Collections/exploreCollection';\r\n\r\nconst ColExplore = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <AllCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ColExplore;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AboutUsAction, getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst AboutUs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const about = useSelector(state => {\r\n        return state.footer.aboutus\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(AboutUsAction())\r\n    }, [])\r\n    // console.log(about, 'footerabout')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{about?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: about?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AboutUs","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Activities from '../components/Activity/Activity';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AboutUs from '../components/Footer/about';\r\n\r\nclass Aboutus extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                {/* <Breadcrumb title=\"Activity\" subpage=\"Pages\" page=\"Activity\" /> */}\r\n                <AboutUs />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Aboutus;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects, LatestProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\nconst ProjNFTS = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams();\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(LatestProjectDetail(id))\r\n\r\n    }, [id])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container\">\r\n                <div className='intro row m-0'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"15px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row items\">\r\n\r\n                    {latprojdetail?.nft_data?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* <div className=\"intro text-center\">\r\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                                </div> */}\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.id}`}>\r\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"countdown-times mb-3\">\r\n                                                <div className=\"countdown d-flex\" data-date={item.end_date} />\r\n                                            </div>\r\n                                            <a href=\"/item-details\">\r\n                                                <h5 className=\"mb-0\">{item.title.toUpperCase()} {item.token_id}</h5>\r\n                                            </a>\r\n                                            {/* <a className=\"seller d-flex align-items-center my-3\">\r\n                                                <img className=\"avatar-sm rounded-circle\"\r\n                                                    src='https://images.unsplash.com/photo-1547555999-14e818e09e33?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1032&q=80' alt=\"\" />\r\n                                                <span className=\"ml-2\">{item.from}</span>\r\n                                            </a> */}\r\n                                            <div className=\"card-bottom d-flex\">\r\n                                                <span dangerouslySetInnerHTML={{ __html: item.description.slice(0, 28).toUpperCase() }} /><span></span>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                {/* {\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <a className=\"btn btn-bordered-white mt-5\">Load More</a>\r\n                    </div>\r\n                </div>\r\n               } */}\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default ProjNFTS;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction MyVerticallyCenteredModal(props) {\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n    const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Refer your friends\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-10 p-0\">\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                {/* <label>Display name</label> */}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"display_name\"\r\n                                    value={url}\r\n                                // required\r\n                                // placeholder=\"Enter collection name\"\r\n                                // {...register('title')}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n\r\n                            </div>\r\n                            {/* <FacebookShareCount url={\"shareUrl\"}>\r\n                            {shareCount => <span className=\"myShareCountWrapper\">{shareCount}</span>}\r\n                        </FacebookShareCount> */}\r\n\r\n\r\n                            <hr />\r\n                            <div className=\"refer-icons\">\r\n                                <TwitterShareButton url={'www.twitter.com' + '/' + url} title=\"Reffral code \"> <TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                <FacebookShareButton url={'www.facebook.com' + '/' + url} title=\"Reffral code \"> <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                <WhatsappShareButton url={'https://web.whatsapp.com/' + '/' + url} title=\"Reffral code \"><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                <TelegramShareButton url={'www.telegram.com' + '/' + url} title=\"Reffral code \"><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                <InstapaperShareButton url={'www.instagram.com' + '/' + url} title=\"Reffral code \">  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                <LinkedinShareButton url={'www.linkedin.com' + '/' + url} title=\"Reffral code \">  <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                <EmailShareButton url={'www.gmail.com' + '/' + url} title=\"Reffral code \" ><EmailIcon size={32} round={true} /></EmailShareButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 p-0 text-right\">\r\n                            <CopyToClipboard text={url}>\r\n                                <div className='copy'>\r\n\r\n                                    <a> <i className=\"fa-sharp fa-solid fa-copy\"></i></a>\r\n                                </div>\r\n                            </CopyToClipboard>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default MyVerticallyCenteredModal","\r\n// import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n// import { Button, Form, Input, Space, Upload } from 'antd';\r\n// import TextArea from 'antd/lib/input/TextArea';\r\n// import Modal from 'react-bootstrap/Modal';\r\n// import React, { Fragment, useEffect, useState, useRef, useMemo } from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n// import { create } from 'ipfs-http-client'\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\n// import { useFormData } from './Context/context'\r\n// import MyVerticallyCenteredModal from './createCollection';\r\n// import styles from './styles/styles.module.scss'\r\n// import 'antd/lib/form/style/css';\r\n// import 'antd/lib/upload/style/css';\r\n// import { Collapse } from 'antd';\r\n// import 'antd/lib/modal/style/css';\r\n// import 'antd/lib/button/style/css'\r\n// import JoditEditor from 'jodit-react'\r\n// import Loader from '../Loader/loader';\r\n// import { useParams } from 'react-router';\r\n// import UploadImage from '../../shared/Upload';\r\n// import { dataURLtoBlob } from '../../utils/blobfromurl';\r\n\r\n// const getBase64 = (file) =>\r\n//     new Promise((resolve, reject) => {\r\n//         const reader = new FileReader();\r\n//         reader.readAsDataURL(file);\r\n//         reader.onload = () => resolve(reader.result);\r\n//         reader.onerror = (error) => reject(error);\r\n//     });\r\n// // import ImgCrop from 'antd-img-crop';\r\n\r\n// const EditNft = (props) => {\r\n\r\n//     const editor = useRef(null);\r\n//     const [fileList, setFileList] = useState([])\r\n//     // const { data, setFormValues } = useFormData();\r\n//     const [previewOpen, setPreviewOpen] = useState(false);\r\n//     const [previewImage, setPreviewImage] = useState('');\r\n//     const [previewTitle, setPreviewTitle] = useState('');\r\n//     // console.log(data, 'formdta')\r\n//     const [count, setCount] = useState(0);\r\n//     // const [nft_description, setNft_description] = useState([])\r\n//     // console.log('nft_description', nft_description)\r\n\r\n//     const [modalShow, setModalShow] = React.useState(false);\r\n//     const [modalShoww, setModalShoww] = React.useState(false);\r\n//     const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n//     console.log(nft_collection_id, \"sdfasf\")\r\n//     const [items, setItems] = useState([]);\r\n//     const [coldata, setColData] = useState();\r\n//     const [allcol, setAllColl] = useState()\r\n//     const [form] = Form.useForm()\r\n\r\n//     const [image, setImage] = useState('')\r\n\r\n//     const [loading, setLoading] = useState(false)\r\n//     const handleDecrement = () => {\r\n//         setCount(prevCount => prevCount - 1);\r\n//     };\r\n\r\n\r\n//     const defaultValues = {\r\n//         setNft_description: '',\r\n//     }\r\n\r\n//     const id = useParams()\r\n//     const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n//     const dispatch = useDispatch()\r\n//     const col = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.getcollections\r\n//     })\r\n\r\n\r\n//     const nftdetail = useSelector(state => {\r\n//         // \r\n//         return state.projectdetails.nftlist\r\n\r\n//     })\r\n\r\n//     useEffect(() => {\r\n//         dispatch(NftList(props.nft_id, props.id))\r\n//     }, [props.nft_id, props.id])\r\n\r\n//     console.log(\"nftdet\", nftdetail)\r\n\r\n\r\n//     useEffect(() => {\r\n//         form.setFieldsValue({\r\n//             nfts: [{\r\n//                 nft_name: nftdetail.title,\r\n//                 nft_description: nftdetail.description,\r\n//                 nft_collection_id: nftdetail.collection_id,\r\n//                 nft_image: nftdetail.image,\r\n//             }]\r\n\r\n//         })\r\n//         console.log(nftdetail.image, \"Image\")\r\n//         setImage(nftdetail.image)\r\n//         setNft_collection_id(nftdetail.collection_id)\r\n\r\n//     }, [form, nftdetail])\r\n\r\n//     useEffect(() => {\r\n\r\n//         dispatch(GetCollectionsAction())\r\n\r\n//     }, []);\r\n\r\n\r\n//     const onFinish = async (values) => {\r\n\r\n\r\n//         // setLoading(true)\r\n//         const nftImagepromises = [uploadNFT(dataURLtoBlob(image))]\r\n//         // const nftImagepromises = nfts?.map(x => uploadNFT(x?.image))\r\n//         const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n//         // const imagesRes = await (nftImagepromises).then(res => res)\r\n//         // \r\n\r\n//         const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n//         // const addedImage = ipfsBaseUrl + image\r\n\r\n\r\n//         const formData = new FormData()\r\n\r\n\r\n\r\n\r\n\r\n//         formData.append('image', addedImage)\r\n//         formData.append('title', values?.nfts?.map(x =>\r\n//             x.nft_name\r\n//         ))\r\n//         // const newlist = newList.push(nft_collection_id);\r\n//         formData.append('collection_id', nft_collection_id)\r\n//         // formData.append('nft_description', nft_description)\r\n//         formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n//         // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n\r\n//         // dispatch(uploadNFT())\r\n//         dispatch(UpdateNft(formData, props))\r\n//         // setLoading(false)\r\n\r\n//         // console.log('Received values of form:', values, data)\r\n\r\n//     };\r\n//     const handleCancel = () => setPreviewOpen(false);\r\n\r\n//     const handlePreview = async (file) => {\r\n//         if (!file.url && !file.preview) {\r\n//             file.preview = await getBase64(file.originFileObj);\r\n//         }\r\n//         setPreviewImage(file.url || file.preview);\r\n//         setPreviewOpen(true);\r\n//         setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n//     };\r\n\r\n//     const fileProps = {\r\n//         name: \"file\",\r\n//         multiple: false,\r\n//         beforeUpload: () => {\r\n//             return false;\r\n//         },\r\n//         onChange(info) {\r\n//             if (info.file.status !== \"uploading\") {\r\n//                 let reader = new FileReader();\r\n//                 reader.readAsDataURL(info.file);\r\n//                 // setUploadedImage(info.file);\r\n//             } else {\r\n//             }\r\n//         }\r\n//     };\r\n\r\n\r\n\r\n//     const { Panel } = Collapse;\r\n//     const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n\r\n//     const onPositionChange = (newExpandIconPosition) => {\r\n//         setExpandIconPosition(newExpandIconPosition);\r\n//     };\r\n//     const onChange = (key) => {\r\n//         console.log(key);\r\n//     };\r\n//     const nfts = [\r\n//         {\r\n//             key: 0,\r\n//             name: 'Wheat Flour',\r\n//             amount: 1000\r\n//         },\r\n\r\n//     ];\r\n\r\n//     return (\r\n//         // <section className=\"author-area\">\r\n//         <div>\r\n//             {loading ? (\r\n//                 <Loader />\r\n//             ) : (\r\n//                 <Modal\r\n//                     {...props}\r\n//                     size=\"lg\"\r\n//                     aria-labelledby=\"contained-modal-title-vcenter\"\r\n//                 // centered\r\n//                 >\r\n//                     <Modal.Header >\r\n//                         <Modal.Title id=\"contained-modal-title-vcenter\">\r\n//                             Update NFT\r\n//                         </Modal.Title>\r\n//                         <div>\r\n//                             <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n//                         </div>\r\n//                     </Modal.Header>\r\n//                     <Modal.Body>\r\n//                         <div>\r\n//                             <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n//                                 nfts: nfts, defaultValues\r\n//                             }}\r\n//                                 // onSubmit={(event) => handleSubmit(event)}\r\n//                                 onFinish={(event) => onFinish(event)}\r\n//                                 autoComplete=\"off\" className=\"item-form card no-hover\">\r\n//                                 <Form.List name=\"nfts\">\r\n\r\n//                                     {(fields, { add, remove }) => (\r\n//                                         <>\r\n//                                             {/* <div className='steps-center'>\r\n\r\n\r\n//                                                 <div className='orgicon1'>\r\n\r\n//                                                     <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n//                                                 </div>\r\n\r\n//                                                 <div className='orgicon1line'>\r\n//                                                     <span style={{}}> ----------------------------- </span>\r\n\r\n//                                                 </div>\r\n//                                                 <div className='orgicon2'>\r\n\r\n//                                                     <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n//                                                 </div>\r\n//                                             </div> */}\r\n//                                             <>\r\n//                                                 {fields.map(({ key, name, ...restField }, index) => (\r\n//                                                     // <Space\r\n//                                                     //     key={key}\r\n//                                                     //     style={{\r\n//                                                     //         display: 'flex',\r\n//                                                     //         marginBottom: 8,\r\n//                                                     //     }}\r\n//                                                     //     align=\"baseline\"\r\n//                                                     // >\r\n//                                                     <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n//                                                         <Panel header=\"Details\" key=\"1\">\r\n//                                                             <Fragment>\r\n//                                                                 {/* <div>Artwork {index}</div> */}\r\n//                                                                 <div className=\"row\">\r\n\r\n//                                                                     <div className=\"col-md-10 col-12\">\r\n//                                                                         <label>Name</label>\r\n//                                                                         <div>\r\n\r\n\r\n//                                                                             <Form.Item\r\n//                                                                                 {...restField}\r\n//                                                                                 name={[name, \"nft_name\"]}\r\n//                                                                                 // label=\"Enter name\"\r\n//                                                                                 // name=\"name\"\r\n//                                                                                 rules={[\r\n//                                                                                     {\r\n//                                                                                         required: true,\r\n//                                                                                         message: 'Missing  name',\r\n//                                                                                     },\r\n//                                                                                 ]}\r\n//                                                                             >\r\n\r\n//                                                                                 {/* <label>Name</label> */}\r\n//                                                                                 <Input placeholder=\"Name\" />\r\n//                                                                             </Form.Item>\r\n//                                                                         </div>\r\n//                                                                         <label>Description</label>\r\n//                                                                         <div>\r\n\r\n//                                                                             <Form.Item\r\n//                                                                                 {...restField}\r\n//                                                                                 name={[name, \"nft_description\"]}\r\n//                                                                                 // label=\"Enter name\"\r\n//                                                                                 // name=\"name\"\r\n//                                                                                 rules={[\r\n//                                                                                     {\r\n//                                                                                         required: true,\r\n//                                                                                         message: 'Missing  description',\r\n//                                                                                     },\r\n//                                                                                 ]}\r\n//                                                                             >\r\n//                                                                                 {/* <Controller\r\n//                                                                             control={control}\r\n//                                                                             name=\"nft_description\"\r\n//                                                                             defaultValue=\"\"\r\n//                                                                             render={({ field: { value, onChange } }) => {\r\n//                                                                                 return  */}\r\n//                                                                                 <JoditEditor\r\n//                                                                                     ref={editor}\r\n//                                                                                     value={'nft_description'}\r\n//                                                                                     // config={config}\r\n\r\n//                                                                                     placeholder=\"start typing\"\r\n//                                                                                     tabIndex={1} // tabIndex of textarea\r\n//                                                                                     // onBlur={newContent => 'nft_description'(newContent)} // preferred to use only this option to update the content for performance reasons\r\n//                                                                                     onChange={newContent => { }}\r\n//                                                                                 />\r\n//                                                                                 {/* }} */}\r\n//                                                                                 {/* /> */}\r\n//                                                                             </Form.Item>\r\n//                                                                         </div>\r\n//                                                                     </div>\r\n\r\n//                                                                     <div className=\"col-md-1 col-12\">\r\n//                                                                         <MinusCircleOutlined onClick={(e) => { remove(name); handleDecrement(e); }} />\r\n//                                                                     </div>\r\n//                                                                     {/* </div> */}\r\n//                                                                     <div className=\"col-md-3 col-12\">\r\n\r\n//                                                                         {/* <div className=\"col-24\"> */}\r\n\r\n//                                                                         <div className=\"form-group\">\r\n//                                                                             <label className='mt-2'>Choose Collection</label>\r\n//                                                                             <div className=\"card choose_div\" style={{\r\n//                                                                                 background: \"black\",\r\n//                                                                                 marginBottom: \"8px\",\r\n//                                                                             }}>\r\n//                                                                                 <div className=\"card-body \">\r\n//                                                                                     <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n//                                                                                         <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n//                                                                                     </Button>\r\n\r\n//                                                                                     <MyVerticallyCenteredModal\r\n//                                                                                         show={modalShow}\r\n//                                                                                         onHide={() => setModalShow(false)} />\r\n//                                                                                 </div>\r\n//                                                                             </div>\r\n//                                                                         </div>\r\n//                                                                     </div>\r\n\r\n\r\n//                                                                     {col?.map((item, idx) => (\r\n\r\n//                                                                         <div key={`auc_${idx}`} id={item.id} className=\"col-md-3 col-12 choose_div\">\r\n//                                                                             {/* <Form.Item\r\n//                                                                             {...restField}\r\n//                                                                             name={[name, \"nft_collection_id\"]}\r\n//                                                                             // getValueFromEvent={getFile}\r\n//                                                                             rules={[\r\n//                                                                                 {\r\n//                                                                                     required: true,\r\n//                                                                                     message: 'Please select nft collection',\r\n//                                                                                 },\r\n//                                                                             ]}\r\n\r\n//                                                                         > */}\r\n//                                                                             <label className='hidden-word'>jsaswjdwjd</label>\r\n\r\n//                                                                             <div id={item.id} onClick={() => setNft_collection_id(item.id)} className=\"card\"\r\n//                                                                                 style={{\r\n//                                                                                     background: \"black\",\r\n//                                                                                     marginBottom: \"8px\",\r\n//                                                                                     border: nft_collection_id == item.id ? \"1px solid #fff\" : null\r\n//                                                                                 }}>\r\n//                                                                                 <div className=\"card-body\">\r\n//                                                                                     <div>\r\n\r\n\r\n//                                                                                         {item.title}\r\n//                                                                                     </div>\r\n\r\n\r\n//                                                                                 </div>\r\n//                                                                             </div>\r\n//                                                                             {/* </Form.Item> */}\r\n\r\n//                                                                         </div>\r\n//                                                                         // </div>\r\n//                                                                     ))}\r\n//                                                                     <div className=\"col-md-12 col-12\">\r\n//                                                                         <label>Upload Nft</label>\r\n//                                                                         <div>\r\n//                                                                             <Form.Item\r\n//                                                                                 {...restField}\r\n//                                                                                 name={[name, \"nft_image\"]}\r\n//                                                                                 // getValueFromEvent={getFile}\r\n//                                                                                 rules={[\r\n//                                                                                     {\r\n//                                                                                         required: true,\r\n//                                                                                         message: 'Please select a image',\r\n//                                                                                     },\r\n//                                                                                 ]}\r\n\r\n//                                                                             >\r\n\r\n//                                                                                 {/* <Upload\r\n//                                                                                     {...fileProps}\r\n//                                                                                     action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n//                                                                                     listType=\"picture-card\"\r\n//                                                                                     // fileList={fileList}\r\n//                                                                                     // onChange={onChange}\r\n//                                                                                     src={'/img/nft.png'}\r\n//                                                                                     onPreview={handlePreview}\r\n//                                                                                     maxCount={1}\r\n\r\n//                                                                                 >\r\n//                                                                                     + Upload\r\n//                                                                                 </Upload> */}\r\n//                                                                                 <UploadImage\r\n//                                                                                     imageSrc={image}\r\n//                                                                                     // src={image}\r\n//                                                                                     initalImag={image}\r\n//                                                                                     setImageSrc={setImage}\r\n//                                                                                 />\r\n//                                                                             </Form.Item>\r\n//                                                                             {/* <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n//                                                                                 <img\r\n//                                                                                     alt=\"example\"\r\n//                                                                                     style={{\r\n//                                                                                         width: '100%',\r\n//                                                                                     }}\r\n//                                                                                     src={previewImage} />\r\n//                                                                             </Modal> */}\r\n//                                                                         </div>\r\n//                                                                     </div>\r\n\r\n//                                                                 </div>\r\n//                                                             </Fragment>\r\n//                                                         </Panel>\r\n//                                                     </Collapse>\r\n//                                                 ))}\r\n\r\n\r\n//                                             </></>\r\n//                                     )}\r\n\r\n//                                 </Form.List>\r\n//                                 <Form.Item>\r\n//                                     <div className=\"col-12\">\r\n//                                         <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">Update </button>\r\n//                                     </div>\r\n\r\n//                                 </Form.Item>\r\n//                             </Form>\r\n//                         </div>\r\n//                     </Modal.Body>\r\n//                 </Modal>\r\n\r\n//             )\r\n//             }\r\n//         </div >\r\n//     );\r\n// };\r\n// export default EditNft;\r\n\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Space, Upload } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { create } from 'ipfs-http-client'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\nimport UploadImage from '../../shared/Upload';\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl';\r\nimport CollPopup from './createCollection';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNft = (props) => {\r\n\r\n    const editor = useRef(null);\r\n    const [fileList, setFileList] = useState([])\r\n    // const { data, setFormValues } = useFormData();\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    // console.log(data, 'formdta')\r\n    const [count, setCount] = useState(0);\r\n    // const [nft_description, setNft_description] = useState([])\r\n    // console.log('nft_description', nft_description)\r\n\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n    const [items, setItems] = useState([]);\r\n    const [coldata, setColData] = useState();\r\n    const [allcol, setAllColl] = useState()\r\n    const [form] = Form.useForm()\r\n\r\n    const [image, setImage] = useState('')\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n    const id = useParams()\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(NftList(props.nft_id, props.id))\r\n    }, [props.nft_id, props.id])\r\n\r\n    console.log(\"nftdet\", nftdetail)\r\n\r\n\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n            }]\r\n\r\n        })\r\n        console.log(nftdetail.image, \"Image\")\r\n        setImage(nftdetail.image)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n    }, [form, nftdetail])\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n    }, []);\r\n\r\n\r\n    const onFinish = async (values) => {\r\n\r\n\r\n        // setLoading(true)\r\n        const nftImagepromises = [uploadNFT(dataURLtoBlob(image))]\r\n        // const nftImagepromises = nfts?.map(x => uploadNFT(x?.image))\r\n        const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n        // const imagesRes = await (nftImagepromises).then(res => res)\r\n        // \r\n\r\n        const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n        // const addedImage = ipfsBaseUrl + image\r\n\r\n\r\n        const formData = new FormData()\r\n\r\n\r\n\r\n\r\n\r\n        formData.append('image', addedImage)\r\n        formData.append('title', values?.nfts?.map(x =>\r\n            x.nft_name\r\n        ))\r\n        // const newlist = newList.push(nft_collection_id);\r\n        formData.append('collection_id', nft_collection_id)\r\n        // formData.append('nft_description', nft_description)\r\n        formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n        // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n\r\n        // dispatch(uploadNFT())\r\n        dispatch(UpdateNft(formData, props))\r\n        // setLoading(false)\r\n\r\n        // console.log('Received values of form:', values, data)\r\n\r\n    };\r\n    const handleCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n        beforeUpload: () => {\r\n            return false;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            } else {\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n        // <section className=\"author-area\">\r\n        <div >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div>\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n                                // onSubmit={(event) => handleSubmit(event)}\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n                                            {/* <div className='steps-center'>\r\n\r\n\r\n                                                <div className='orgicon1'>\r\n\r\n                                                    <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n                                                </div>\r\n\r\n                                                <div className='orgicon1line'>\r\n                                                    <span style={{}}> ----------------------------- </span>\r\n\r\n                                                </div>\r\n                                                <div className='orgicon2'>\r\n\r\n                                                    <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n                                                </div>\r\n                                            </div> */}\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n                                                    // <Space\r\n                                                    //     key={key}\r\n                                                    //     style={{\r\n                                                    //         display: 'flex',\r\n                                                    //         marginBottom: 8,\r\n                                                    //     }}\r\n                                                    //     align=\"baseline\"\r\n                                                    // >\r\n                                                    // <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                                                    // <Panel header=\"Details\" key=\"1\">\r\n                                                    <Fragment>\r\n                                                        {/* <div>Artwork {index}</div> */}\r\n                                                        <div className=\"row relative\">\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  name',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  description',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <Controller\r\n                                                                            control={control}\r\n                                                                            name=\"nft_description\"\r\n                                                                            defaultValue=\"\"\r\n                                                                            render={({ field: { value, onChange } }) => {\r\n                                                                                return  */}\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={'nft_description'}\r\n                                                                            // config={config}\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                            // onBlur={newContent => 'nft_description'(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                                            onChange={newContent => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            {/* <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                        <MinusCircleOutlined onClick={(e) => { remove(name); handleDecrement(e); }} />\r\n                                                                    </div> */}\r\n                                                            {/* </div> */}\r\n                                                            <div className='col-12'>\r\n                                                                <label className='mt-2 mb-3'>Choose Collection</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n\r\n                                                                {/* <div className=\"col-24\"> */}\r\n\r\n                                                                <div className=\"form-group\">\r\n\r\n                                                                    <div className=\"card choose_div\" style={{\r\n                                                                        background: \"black\",\r\n                                                                        marginBottom: \"8px\",\r\n                                                                    }}>\r\n                                                                        <div className=\"card-body \">\r\n                                                                            <Button variant=\"primary\" className='collection_btn' onClick={() => setModalShowcoll(true)}>\r\n                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n                                                                            </Button>\r\n\r\n                                                                            <CollPopup\r\n                                                                                show={modalShowcoll}\r\n                                                                                onHide={() => setModalShowcoll(false)} />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            {col?.map((item, idx) => (\r\n\r\n                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-6 col-lg-3 col-12 choose_div\">\r\n                                                                    {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_collection_id\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select nft collection',\r\n                                                                                },\r\n                                                                            ]}\r\n\r\n                                                                        > */}\r\n\r\n\r\n                                                                    <div id={item.id} onClick={() => setNft_collection_id(item.id)} className=\"card\"\r\n                                                                        style={{\r\n                                                                            background: \"black\",\r\n                                                                            marginBottom: \"8px\",\r\n                                                                            border: nft_collection_id == item.id ? \"1px solid #fff\" : null\r\n                                                                        }}>\r\n                                                                        <div className=\"card-body\">\r\n                                                                            <div>\r\n\r\n\r\n                                                                                {item.title}\r\n                                                                            </div>\r\n\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    {/* </Form.Item> */}\r\n\r\n                                                                </div>\r\n                                                                // </div>\r\n                                                            ))}\r\n                                                            <div className=\"col-md-12 col-12\">\r\n                                                                <label>Upload Nft</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_image\"]}\r\n                                                                        // getValueFromEvent={getFile}\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Please select a image',\r\n                                                                            },\r\n                                                                        ]}\r\n\r\n                                                                    >\r\n\r\n                                                                        {/* <Upload\r\n                                                                                    {...fileProps}\r\n                                                                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                                    listType=\"picture-card\"\r\n                                                                                    // fileList={fileList}\r\n                                                                                    // onChange={onChange}\r\n                                                                                    src={'/img/nft.png'}\r\n                                                                                    onPreview={handlePreview}\r\n                                                                                    maxCount={1}\r\n\r\n                                                                                >\r\n                                                                                    + Upload\r\n                                                                                </Upload> */}\r\n                                                                        <UploadImage\r\n                                                                            imageSrc={image}\r\n                                                                            // src={image}\r\n                                                                            initalImag={image}\r\n                                                                            setImageSrc={setImage}\r\n                                                                        />\r\n                                                                    </Form.Item>\r\n                                                                    {/* <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                                <img\r\n                                                                                    alt=\"example\"\r\n                                                                                    style={{\r\n                                                                                        width: '100%',\r\n                                                                                    }}\r\n                                                                                    src={previewImage} />\r\n                                                                            </Modal> */}\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n                                                    // </Panel>\r\n                                                    // </Collapse>\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )\r\n            }\r\n        </div >\r\n    );\r\n};\r\nexport default EditNft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftdataTable = () => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>Contract Address</th>\r\n                                <th>Token ID</th>\r\n                                <th>Token Stranded</th>\r\n                                <th>Blockchain</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {projdetail.nft_data?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>{items.collectionData?.contract_id}</td>\r\n                                        <td>{items.token_id}</td>\r\n                                        <td>ERC721</td>\r\n                                        <td>Polygon (Matic)</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftdataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst LatNftdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>Item</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {projdetail?.project_activity?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td><img\r\n                                            src={items.image}\r\n                                            className=\"rounded-circle\"\r\n                                            alt=\"Avatar\"\r\n                                        />{items.nft_title.slice(0, 15)}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftdataTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { ProgressBar, Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nimport dayjs from 'dayjs';\r\nconst ProjdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail.country_name?.name, 'projdatanft')\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details'>\r\n                        <div >\r\n                            <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                setModalShowproj(true)}></i>\r\n                            <ProjDetailPopup\r\n                                debugger\r\n                                id={props.id}\r\n                                show={modalShowproj}\r\n                                onHide={() => setModalShowproj(false)} />\r\n                            {/* <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a> */}\r\n\r\n                            {/* <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                            {/* </a> */}\r\n                        </div>\r\n                        <tbody className=''>\r\n                            {/* {projdetail.nft_data?.map((items) => {\r\n                                return ( */}\r\n                            <tr>\r\n\r\n                                {/* {projdetail?.country_name?.map((item) => {\r\n                                    return (\r\n\r\n                                        <tr>Country : {item.name}</tr>\r\n                                    )\r\n                                })} */}\r\n                                <td><span>Owned By:</span> <span>{projdetail?.user_data?.username}</span></td>\r\n                                <td><span>Total NFT's:</span> <span>{projdetail?.number_of_nft}</span></td>\r\n                                <td><span>Chain: </span> <span>Polygon (Matic)</span></td>\r\n                                <td><span>Created : </span> <span> {dayjs(projdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\r\n                                <td><span>Country </span> <span>{projdetail.country_name?.name}</span></td>\r\n                                <td><span>State</span>  <span>{projdetail.state_name?.name}</span> </td>\r\n                                <td><span>City</span>  <span>{projdetail.city_name?.name}</span> </td>\r\n                                <td><span>Number of NFTs</span>  <span>{projdetail.number_of_nft}</span> </td>\r\n                                <td><span>Start Date</span>  <span>{projdetail.start_date}</span> </td>\r\n                                <td><span>End Date </span> <span>{projdetail.end_date}</span> </td>\r\n                                <td><span>Price </span> <span> {projdetail.price} </span> </td>\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjdataTable","\r\nimport React, { useState } from \"react\";\r\n\r\nconst ReadMore = ({ data }) => {\r\n\r\n    const [isReadMore, setIsReadMore] = useState(true);\r\n    const toggleReadMore = () => {\r\n        setIsReadMore(!isReadMore);\r\n    };\r\n\r\n    return (\r\n        <p className=\"text\">\r\n            <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: isReadMore ? data?.slice(0, 400) : data }} />\r\n            <span onClick={toggleReadMore} className=\"read-or-hide\">\r\n                {isReadMore ? \"...read more\" : \" show less\"}\r\n            </span>\r\n        </p>\r\n    );\r\n};\r\nexport default ReadMore","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, LatestProjectDetail, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport { BuyNft } from '../Wallet/interact';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport MyVerticallyCenteredModal from './refralPopup';\r\nimport swal from 'sweetalert';\r\nimport Banner from '../Create/editBanner';\r\nimport EditNft from '../Create/editNft';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport latNftdataTable from './../Explore/latProjNftdata';\r\nimport LatNftdataTable from './../Explore/latProjNftdata';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReferalPopup from './refralPopup';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst ProjDetails = () => {\r\n\r\n\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const [tok, setTok] = useState('')\r\n    // console.log('tok', tok)\r\n    const dispatch = useDispatch()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    console.log('latproj', latprojdetail?.nft_data)\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n    // console.log('userdet', userDetail)\r\n    const log = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n    useEffect(() => {\r\n        // \r\n        dispatch(LatestProjectDetail(id))\r\n        dispatch(GetUserAction())\r\n\r\n    }, [id])\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(DeleteProject(id))\r\n    }\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className='col-12'>\r\n                        <h3 className=\"p-0\">{latprojdetail.title}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                {/* {projdetail && projdetail?.nft_data && projdetail?.nft_data?.length ? */}\r\n                                {/* <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() => setModalShow(true)}></i>\r\n\r\n\r\n                                    <Banner\r\n                                        id={id}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div> */}\r\n                                <img src={latprojdetail?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"fundraiser mt-3\">\r\n                            <div className='lorem_done'>\r\n                                <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg>\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 col-12\">\r\n                        <div>\r\n                            <div className=\"progress_nft mb-3\">\r\n                                <div className='progress_main'><span>\r\n                                    <span className='nft_price'>{latprojdetail.selling_amount} raised of {latprojdetail.price} Cdn goal (150 of 758 MATIC)</span><small>  </small>\r\n                                    <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                    </div>\r\n                                    <p className='donation-count'>2K donations</p>\r\n                                </span>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex justify-content-start\">\r\n                                    <><Button className=\" btn  btn-bordered-white m-0 mr-2\" variant=\"primary\" onClick={() => setModalShowrefer(true)}>\r\n                                        Share\r\n                                    </Button><ReferalPopup\r\n                                            id={id}\r\n                                            userRef={userDetail}\r\n                                            show={modalShowrefer}\r\n                                            onHide={() => setModalShowrefer(false)} /></>\r\n\r\n                                    <Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                        Invest\r\n                                    </Button>\r\n                                </div>\r\n\r\n\r\n                                {latprojdetail.user_invest?.slice(0, 3)?.map((items) => {\r\n                                    const date1 = new Date(items.updated_at)\r\n                                    const date2 = new Date()\r\n                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                    console.log('days', days_difference)\r\n                                    return (\r\n\r\n                                        <ul className=\"m-0 custom_lis pl-0\">\r\n                                            <li>\r\n                                                <div className='lorem_done p-0'>\r\n                                                    <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    </svg>\r\n                                                    </span>\r\n\r\n                                                    <span><div className=\"progress_name\">{items.username} </div> <div>${items.price} Cdn / 40 MATIC ({days_difference} days ago)</div></span>\r\n                                                </div>\r\n                                            </li>\r\n\r\n\r\n                                        </ul>\r\n                                    )\r\n                                })}\r\n\r\n\r\n                                {/* <p className='see_all'>See all</p> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-8 col-lg-8\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title'><div>Description</div>\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n\t\t\t\t\t\t<i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={latprojdetail.description} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-5 mt-lg-0'>\r\n\r\n\r\n                        <div className='container table-main-detail position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                            //  id={id}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/*                    \r\n\t\t\t<div className=\"item-info\" >\r\n\r\n\t\t\t\t<><div className=\"item-thumb text-center\">\r\n\t\t\t\t\t<img src={x[0]?.image} alt=\"\" />\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t</>\r\n\r\n\r\n\t\t\t</div> */}\r\n\r\n                </div>\r\n\r\n                {/* <div className='col-12 col-md-4'>\r\n\t\t\t\r\n\t\t\t<div className='project-total-detail'>\r\n\r\n\t\t\t\t<div className='flex-column'>\r\n\t\t\t\t\t<span className='nft_price'>{projdetail.selling_amount} raised of {projdetail.price}</span>\r\n\r\n\t\t\t\t\t<div className='progressbar'>\r\n\t\t\t\t\t\t<ProgressBar varient=\"success\" now={projdetail.project_percentage} />\r\n\t\t\t\t\t\t<span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div >\r\n\t\t\t\t\t<span className=\"mr-2\">Total NFT's:</span><span>{projdetail?.number_of_nft}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span  className=\"mr-2\">Chain: </span><span>Polygon (Matic)</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span  className=\"mr-2\">Created : </span><span>{dayjs(projdetail?.created_at).format(\"DD MMM YYYY\")}</span>\r\n\t\t\t\t</div> */}\r\n\r\n                {/* <div className='project-btn flex-column'>\r\n\t\t\t\t\t<button>\r\n\t\t\t\t\t\t<a href=\"#\">Share</a> \r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button>\r\n\t\t\t\t\t\t<a href=\"#\">Donate Now</a>\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t</div> */}\r\n                {/* </div> */}\r\n\r\n                {/* </div> */}\r\n\r\n\r\n                <div className='col-md-12 col-12'>\r\n                    {/* <div className='py-4 owner-nft'>\r\n\t\t\t\t<img class=\"avatar-sm rounded-circle\" src={projdetail?.user_data?.avatar} alt=\"\" /> <span>Owned By:</span>  <span>{projdetail?.user_data?.username}</span>\r\n\t\t\t</div> */}\r\n\r\n\r\n\r\n\r\n\r\n                    <div className='col-12 mt-3'>\r\n                        <div className='container table-detail'>\r\n                            <LatNftdataTable />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className='mt-5 row justify-content-between proj_main'>\r\n\t\t\t\t<div className=\"cart col-12 col-md-8 content-baner \">\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<div className='align-items-center justify-content-between'>\r\n\t\t\t\t\t\t\t<div className='d-sm-flex justify-content-between align-items-center'>\r\n\t\t\t\t\t\t\t\t<h3 className=\"m-0 p-0\">{latprojdetail.title}</h3>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='project-total-detail'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"project_img\">\r\n\t\t\t\t\t\t\t\t\t\t<span>Owned By:</span> \r\n\t\t\t\t\t\t\t\t\t\t<img class=\"avatar-sm rounded-circle\" src={latprojdetail?.user_data?.avatar} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t<span>{latprojdetail?.user_data?.username}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Chain: </span><span>Polygon (Matic)</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Created : </span><span>{dayjs(latprojdetail?.created_at).format(\"DD MMM YYYY\")}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='col-12 col-md-4'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className='nft_price'>{latprojdetail.selling_amount} raised of {latprojdetail.price}</span>\r\n\r\n\t\t\t\t\t\t<div className='progressbar'>\r\n\t\t\t\t\t\t\t<ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div> */}\r\n\r\n                    {/* <div className='col-12'>\r\n\t\t\t\t<div>\r\n\r\n\t\t\t\t\t<h5 className='user_title {item.title.slice(0, 16)}'><div>Description</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</h5>\r\n\t\t\t\t\t<p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} />\r\n\t\t\t\t</div>\r\n\t\t\t</div> */}\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div className='container table-detail'>\r\n\t\t<div className='row'>\r\n\t\t\t<div className='col-8'>\r\n\t\t\t\t<LatNftdataTable />\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\t</div> */}\r\n\r\n            <div className=\"container mt-3\">\r\n\r\n                <div className=\"row items mt-0 explore-items px-0\">\r\n                    <ProjNFTS />\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ProjDetails from '../components/ItemDetails/viewProdetails';\r\nimport ProjNFTS from '../components/Auctions/projectnfts';\r\n\r\nclass latprojDetails extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <ProjDetails />\r\n                {/* <ProjNFTS /> */}\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default latprojDetails;","import React, { useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { GetCollectionsAction } from '../../redux/Actions/projectAction'\r\n\r\nconst ShowCollections = () => {\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    // const val = localStorage.getItem(\"values\")\r\n    // console.log(val.address, 'vall')\r\n    // console.log(col, 'col')\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n    }, [])\r\n    // useEffect(() => {\r\n\r\n    // })\r\n    // var dat = localStorage.getItem(\"values\");\r\n    // dat = JSON.parse(dat);\r\n    // console.log('dat', dat?.nfts[0]?.image?.fileList[0]?.thumbUrl)\r\n    // console.log('valus', localStorage.getItem('values', 'address'))\r\n    // localStorage.setItem(\"values\", JSON.stringify({\r\n    //     ...data,\r\n    //     nfts: values.nfts.map(x => {\r\n    //         return {\r\n    //             name: x.name,\r\n    //             description: x.description,\r\n    //             image: x.image,\r\n    //         }\r\n    //     })\r\n    // }));\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <span>Explore</span>\r\n                            <h3 className=\"mt-3 mb-0\">My Collections</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {/* {val?.map((item, idx) => { */}\r\n                    {/* return ( */}\r\n                    <Link to={`/collection/${''}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                        <div>\r\n                            <div className=\"card\">\r\n                                <div className=\"image-over\">\r\n                                    {/* <Link to={`/collection/${''}`}> */}\r\n                                    <img className=\"card-img-top\" src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                                    {/* </Link> */}\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 p-0\">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-0\">{col.name}</h5>\r\n                                        </a>\r\n                                        <div className=\"seller d-flex align-items-center my-3\">\r\n                                            <span style={{ color: '#8E8E8E' }}>{col?.nfts?.[0]?.name}</span>\r\n                                            <a href=\"/author\">\r\n                                                <h6 className=\"ml-2 mb-0\"> </h6>\r\n                                            </a>\r\n                                        </div>\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n\r\n                                            <span> {col.price}</span>\r\n                                            <span> {col.number_of_nft}</span>\r\n                                        </div>\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />dfg</a> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                    {/* ) */}\r\n                    {/* })} */}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ShowCollections","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreFive';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\nimport ShowCollections from '../components/Create/showCollections';\r\n\r\nconst Showcollections = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <ShowCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Showcollections;","import React, { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\nconst CollItem = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch()\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    // console.log(projdetail, 'projdata')\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    {/* Explore Menu */}\r\n                    <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row items explore-items\">\r\n                {Object.keys(projdetail).map((item, idx) => {\r\n                    // {projdetail?.map((item, idx) => {\r\n                    return (\r\n                        <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" >\r\n                            <div className=\"card no-hover text-center\">\r\n                                <div className=\"image-over\">\r\n                                    <a href=\"/item-details\">\r\n                                        {/* <img className=\"card-img-top\" src={item.img} alt=\"\" /> */}\r\n                                    </a>\r\n                                    {/* Author */}\r\n                                    <a className=\"author\" href=\"/authors\">\r\n                                        <div className=\"author-thumb avatar-lg\">\r\n                                            <img className=\"rounded-circle\" src={item?.nft_data?.title} alt=\"\" />\r\n                                        </div>\r\n                                    </a>\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 \">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body mt-4\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-2\">{item?.nft_data?.title}</h5>\r\n                                        </a>\r\n                                        {/* <span>{item.content}</span> */}\r\n                                        <hr />\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                            {/* <span>{item.price}</span> */}\r\n                                            {/* <span><i className=\"icon-heart mr-2\" />{item.likes}</span> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CollItem;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetCollectionDetails, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Author from '../Author/Author';\r\nimport CollItem from './bread-crumb';\r\n\r\nconst CollectionDetails = () => {\r\n\r\n    const initData = {\r\n        itemImg: \"/img/avtar1.png\",\r\n        date: \"2022-03-30\",\r\n        tab_1: \"Bids\",\r\n        tab_2: \"History\",\r\n        tab_3: \"Details\",\r\n        ownerImg: \"/img/avtar1.png\",\r\n        itemOwner: \"Themeland\",\r\n        created: \"15 Jul 2021\",\r\n        title: \"Walking On Air\",\r\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n        price_1: \"1.5 ETH\",\r\n        price_2: \"$500.89\",\r\n        count: \"1 of 5\",\r\n        size: \"14000 x 14000 px\",\r\n        volume: \"64.1\",\r\n        highest_bid: \"2.9 BNB\",\r\n        bid_count: \"1 of 5\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n    const tabData_1 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"14 ETH\",\r\n            time: \"4 hours ago\",\r\n            author: \"@arham\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"10 ETH\",\r\n            time: \"8 hours ago\",\r\n            author: \"@junaid\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"12 ETH\",\r\n            time: \"3 hours ago\",\r\n            author: \"@yasmin\"\r\n        }\r\n    ]\r\n\r\n    const tabData_2 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"32 ETH\",\r\n            time: \"10 hours ago\",\r\n            author: \"@hasan\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"24 ETH\",\r\n            time: \"6 hours ago\",\r\n            author: \"@artnox\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"29 ETH\",\r\n            time: \"12 hours ago\",\r\n            author: \"@meez\"\r\n        }\r\n    ]\r\n\r\n    const sellerData = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            seller: \"@ArtNoxStudio\",\r\n            post: \"Creator\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            seller: \"Virtual Worlds\",\r\n            post: \"Collection\"\r\n        }\r\n    ]\r\n\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coldetail = useSelector(state => {\r\n        return state?.projectdetails?.getcollectiondetails\r\n    })\r\n    // console.log(coldetail, 'coldetail')\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionDetails(id))\r\n    }, [id])\r\n\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(id))\r\n    // }\r\n\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n                                <img src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                            </div>\r\n\r\n\r\n                            </>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            <div className='d-flex  align-items-center justify-content-between'>\r\n                                <h3 className=\"m-0\">{coldetail.title}</h3>\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center '>\r\n                                    <Button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" variant=\"primary\" onClick={() => setModalShow(true)} style={{ color: '#FFF' }}>\r\n                                        Add item\r\n                                    </Button>\r\n\r\n                                    {/* <MyVerticallyCenteredModal\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    /> */}\r\n                                    {/* <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"> <Link to={\"\"} style={{ color: '#FFF' }}>Add item</Link></a> */}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <p>{coldetail.description}</p>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <CollItem />\r\n                </div>\r\n            </div >\r\n\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default CollectionDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Create/collectionDetail';\r\nimport CollBreadCrumb from '../components/Create/bread-crumb';\r\nimport Author from './author';\r\n\r\nclass CollectionDetail extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                {/* <CollBreadCrumb /> */}\r\n                <CollectionDetails />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CollectionDetail;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { useParams } from 'react-router';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction DesPopup(props) {\r\n    const editor = useRef(null);\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const [country, setCountry] = useState()\r\n    const [type, setType] = useState()\r\n    const dispatch = useDispatch()\r\n    const id = useParams()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n\r\n    // const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            setDescription(projdetail.description)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        debugger\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n\r\n        dispatch(UpdateProject(props.id, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12\">\r\n                            <label>Description</label>\r\n                            <div className=\"form-group\">\r\n\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"description\"\r\n                                    defaultValue=\"\"\r\n                                    render={({ field: { value, onChange } }) => {\r\n                                        return <JoditEditor\r\n                                            ref={editor}\r\n                                            value={value}\r\n                                            // config={config}\r\n\r\n                                            placeholder=\"start typing\"\r\n                                            tabIndex={1} // tabIndex of textarea\r\n                                            onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                            onChange={newContent => { }}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                                {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default DesPopup","import dayjs from 'dayjs';\r\nimport React, { Component, useEffect } from 'react';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetCollectionDetails, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport latprojDetails from '../../themes/latproj-details';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport Banner from './editBanner';\r\nimport EditNft from './editNft';\r\nimport DesPopup from './desPopup';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\n\r\n// import ProgressBar from 'react-bootstrap';\r\n\r\nconst ProjNftDetails = () => {\r\n    const deleteHandler = (id) => {\r\n        dispatch(DeleteProject(id))\r\n    }\r\n\r\n    const { id } = useParams()\r\n    // console.log(id, 'idd')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    const dispatch = useDispatch()\r\n    const [modalShowDes, setModalShowDes] = React.useState(false);\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'projdata')\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(id))\r\n    // }\r\n    // \r\n    const bannerHandler = () => {\r\n\r\n    }\r\n    return (\r\n        <section className=\"item-details-area project-nft-si main-proj-detail\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <h3 className=\"my-2 p-0 \">{projdetail.title}</h3>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-8'>\r\n                        <div className=\"item-info\" >\r\n                            <div className=\"item-thumb text-center\">\r\n                                {/* {projdetail && projdetail?.nft_data && projdetail?.nft_data?.length ? */}\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() =>\r\n                                        setModalShow(true)}></i>\r\n                                    <Banner\r\n                                        id={id}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div>\r\n                                <img src={projdetail?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"fundraiser mt-3 p-0\">\r\n                            <div className='lorem_done'>\r\n                                <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg>\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12 col-lg-4 mt-3 mt-lg-0'>\r\n                        <div>\r\n                            <div>\r\n                                <div className=\"progress_nft mb-3\">\r\n                                    <div className='progress_main'><span>\r\n                                        <span className='nft_price'>{projdetail.selling_amount} raised of {projdetail.price} Cdn goal ()</span><small>   </small>\r\n                                        <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" now={projdetail.project_percentage} />\r\n                                            {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                        </div>\r\n                                        <p className='donation-count'>2K donations</p>\r\n                                    </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex justify-content-start\">\r\n                                        <>\r\n                                            {/* <Button className=\" btn  btn-bordered-white m-0 mr-2\" variant=\"primary\" onClick={() => setModalShowrefer(true)}>\r\n                                        Share\r\n                                    </Button> */}\r\n                                            <Button className=\" btn  btn-bordered-white m-0 mr-2\" variant=\"primary\">\r\n                                                Share\r\n                                            </Button>\r\n                                            {/* <ReferalPopup\r\n                                            id={id}\r\n                                            userRef={userDetail}\r\n                                            show={modalShowrefer}\r\n                                            onHide={() => setModalShowrefer(false)} /> */}\r\n                                        </>\r\n\r\n                                        <Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Invest\r\n                                        </Button>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                                    <ul className=\"m-0 custom_lis pl-0\">\r\n                                        <li>\r\n                                            <div className='lorem_done p-0'>\r\n                                                <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                </svg>\r\n                                                </span>\r\n                                                <span><div className=\"progress_name\">Anonymous </div> <div>$25 Cdn</div></span>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div className='lorem_done p-0'>\r\n                                                <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                </svg>\r\n                                                </span>\r\n                                                <span><div className=\"progress_name\">Anonymous </div> <div >$27 Cdn </div></span>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div className='lorem_done p-0'>\r\n                                                <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                </svg></span>\r\n                                                <span><div className=\"progress_name\">Kevin Sheridan </div> <div className=\"price\">$50</div></span>\r\n                                            </div>\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                    <p className='see_all'>See all</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-8'>\r\n                        <div class=\"user-description\">\r\n                            <h5 className='user_title'><div>Description</div>\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                        <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n                                {/* {projdetail?.status == 1 && (\r\n                                                            <div >\r\n\r\n                                                                <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a>\r\n                                                                <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            )} */}\r\n                                <div >\r\n                                    <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                        setModalShowDes(true)}></i>\r\n                                    <DesPopup\r\n                                        id={id}\r\n                                        show={modalShowDes}\r\n                                        onHide={() => setModalShowDes(false)} />\r\n                                </div>\r\n                            </h5>\r\n                            <p dangerouslySetInnerHTML={{ __html: projdetail.description }} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-3 mt-lg-0 '>\r\n                        <div className='container table-main-detail position-relative'>\r\n\r\n                            <ProjdataTable\r\n                                id={id}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='col-12 mt-3'>\r\n                    <div className='container table-detail'>\r\n\r\n                        <LatNftdataTable />\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mt-3\">\r\n                    {/* <div className='intro row m-0'>\r\n\t\t\t\t\t\t\t<div className=\"intro-content\">\r\n\t\t\t\t\t\t\t\t<span >NFTs</span>\r\n\t\t\t\t\t\t\t\t<h3 className=\"w-full mb-0 pt-4\">NFTs</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div> */}\r\n                    <div className='nfts_main'>\r\n                        <h5 className='user_title'>NFT'S </h5>\r\n                        <div className=\"row items mt-0 explore-items px-0\">\r\n\r\n                            <div className='col-12 col-sm-6 col-lg-3 item explore-item'>\r\n                                <div className='card no-hover m-0 add-nft '>\r\n\r\n                                    <div class=\"image-over relative\">\r\n                                        <Link to={`/addnft/${projdetail.id}`}>\r\n\r\n                                            + Add NFT </Link>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            {projdetail?.nft_data?.map((x, idx) => {\r\n                                // {projdetail?.map((item, idx) => {\r\n                                return (\r\n                                    <div key={`eds_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item \">\r\n\r\n                                        <div className=\"card no-hover m-0\">\r\n\r\n\r\n\r\n                                            {/* <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                            <div className=\"image-over relative\">\r\n                                                <Link to={`/nft/details/${x.id}`}>\r\n                                                    <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                </Link>\r\n                                                <div className='token'>\r\n                                                    <span>#{x?.token_id}</span>\r\n                                                    <span className='cards-icons'>\r\n                                                        <i className=\"fa-solid fa-pen\" onClick={() => setModalShowedit(true)}></i>\r\n\r\n                                                        <EditNft\r\n                                                            id={id}\r\n                                                            nft_id={x.id}\r\n                                                            show={modalShowedit}\r\n                                                            onHide={() => setModalShowedit(false)} />\r\n                                                    </span>\r\n                                                </div>\r\n                                                {/* Author */}\r\n\r\n                                            </div>\r\n                                            {/* Card Caption */}\r\n                                            <div className=\"card-caption px-0 col-12 \">\r\n                                                {/* Card Body */}\r\n                                                <div className=\"card-body\">\r\n\r\n                                                    <a href=\"#\" className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <h5 className=\"m-0 pb-2 p-0 text-capitalize\">{x.title.slice(0, 16)}...</h5>\r\n\r\n                                                    </a>\r\n                                                    <div className='creater mt-1 mb-1'>\r\n                                                        <span >Creator:</span><span className='ml-2'>{x?.user_data?.username}</span>\r\n                                                    </div>\r\n                                                    <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1\">\r\n                                                        <span dangerouslySetInnerHTML={{ __html: x.description.slice(0, 22) }} /><span>...</span>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className='mint'>\r\n                                                        {x.is_mint == 0 ? (\r\n\r\n                                                            <button>\r\n                                                                <a href='#'>Mint</a>\r\n                                                            </button>\r\n                                                        ) : (\r\n                                                            <button disabled>\r\n                                                                <a >Minted</a>\r\n                                                            </button>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                    <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                        {/* <span>{item.price}</span> */}\r\n                                                        {/* <span><i className=\"icon-heart mr-2\" />{item.likes}</span> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjNftDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ProjectList';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport GetAllProjects from '../components/Explore/ProjectList';\r\nimport ProjDetails from '../components/Create/projdetails';\r\nimport ProjNftDetails from '../components/Create/projdetails';\r\n\r\nconst ProjNft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Projects\" subpage=\"Explore\" page=\"\" /> */}\r\n            <ProjNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjNft;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { set, useForm } from 'react-hook-form';\r\nimport 'antd/dist/antd.css';\r\nimport { Steps } from 'antd';\r\nimport { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined, CheckOutlined } from '@ant-design/icons'\r\nimport { useParams } from 'react-router';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n\r\nfunction NftPopup(props) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const { id } = useParams();\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n\r\n    const description = 'This is a description.';\r\n    function gettxhashAddress() {\r\n        // \r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n    // function getconfirmAddress() {\r\n    //     // \r\n    //     return web3.eth.getTransactionReceipt;\r\n    // }\r\n    // useEffect(() => {\r\n    // setTxhash(gettxhashAddress())\r\n    // setConfirm(getconfirmAddress())\r\n    // if (txhas) {\r\n    // setCurrent(1)\r\n    // setCurrent(2)\r\n    // setCurrent(3)\r\n    // }\r\n    // }, [])\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n    })\r\n    // console.log('latprojdetailpop', nftdetail)\r\n    // const mint = () => {\r\n    //     CreateMetaDataAndMint({\r\n    //         _name: nftdetail.title,\r\n    //         _des: nftdetail.description,\r\n    //         _imgBuffer: nftdetail.image\r\n    //     })\r\n    // }\r\n\r\n    const { Step } = Steps;\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Follow steps\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Steps current={props.current} direction='vertical'>\r\n                        <Step title=\"Upload\" description='Uploading of all media assets and metadata to IPFS' />\r\n                        <Step icon={props.current == 0 && <LoadingOutlined type=\"loading\" />} title=\"Mint\" description='Send transaction to create your NFT' />\r\n                        <Step icon={props.current !== 2 ? <LoadingOutlined type=\"loading\" /> : props.current == 2 && <CheckOutlined type=\"finish\" />} title=\"Approve\" description='This transaction is conducted only once per collection' />\r\n\r\n                    </Steps>\r\n\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NftPopup","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport Web3 from 'web3';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport EditCollection from './updateCollection';\r\nimport { CreateMetaDataAndMint } from './../Wallet/interact';\r\nimport NftPopup from './nftPopup';\r\nimport axios from 'axios';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\nconst NftDetails = (props) => {\r\n\r\n\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [current, setCurrent] = React.useState(0)\r\n    const [contractAdd, setContractAdd] = useState('')\r\n    // const [collid, setCollid] = useState('')\r\n    // console.log('collid', collid)\r\n    // console.log('contAddre', contractAdd)\r\n    // console.log('current', current)\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'projdataaaa')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    // console.log(nftdetail, 'latprojdetail')\r\n    const collupdate = useSelector(state => {\r\n        return state?.projectdetails?.collectiondetails\r\n    })\r\n\r\n    // console.log('collupdate', collupdate)\r\n    useEffect(() => {\r\n        // \r\n        dispatch(NftList(id))\r\n        dispatch(ProjectDetail(id))\r\n        // dispatch(GetSettings())\r\n    }, [id])\r\n\r\n\r\n    const mint = (contractAddress) => {\r\n        CreateMetaDataAndMint({\r\n            _name: nftdetail.title,\r\n            _des: nftdetail.description,\r\n            _imgBuffer: nftdetail.image,\r\n            contractAddress,\r\n            setCurrent,\r\n            collid: nftdetail?.collection_id,\r\n            nft_file_content: nftdetail?.nft_file_content,\r\n            id,\r\n            setModalShow\r\n        })\r\n    }\r\n\r\n\r\n    // const UpdateContract = async (id) => {\r\n    //     \r\n\r\n    //     const formData = new FormData();\r\n\r\n    //     formData.append('contract_id', cont);\r\n    //     const token = localStorage.getItem('authToken')\r\n\r\n\r\n    //     try {\r\n    //         const config = {\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //                 'Authorization': `Bearer ${token}`\r\n    //             },\r\n    //             transformRequest: formData => formData\r\n    //         }\r\n    //         // \r\n    //         await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${id}`,\r\n    //             formData, config\r\n    //         )\r\n    //     } catch (error) {\r\n    //         \r\n    //         console.log(\"error\");\r\n    //     }\r\n    // };\r\n\r\n\r\n    const deployContract = async () => {\r\n        // \r\n        try {\r\n            if (nftdetail?.collectionData?.contract_id == null) {\r\n\r\n                await window.ethereum.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: web3.utils.toHex('80001') }],\r\n                })\r\n\r\n                const { address } = await ConnectWallet()\r\n                const MyNFTContract = new web3.eth.Contract(NFTContract.abi)\r\n                const gas = await web3.eth.getGasPrice();\r\n                // const gas = 500000\r\n\r\n                MyNFTContract.deploy({\r\n                    data: NFTContract.bytecode,\r\n                    arguments: [nftdetail?.collectionData?.title, nftdetail?.collectionData?.symbol],\r\n                }).send({\r\n                    from: address,\r\n                })\r\n                    .on('error', (error) => {\r\n                        // console.log(error)\r\n                    })\r\n                    .on('transactionHash', (transactionHash) => {\r\n                        // console.log(transactionHash, \"transactionHash\")\r\n                    })\r\n                    .on('receipt', (receipt) => {\r\n                        // receipt will contain deployed contract address\r\n                        // console.log(receipt, \"reciept\")\r\n                    })\r\n                    .on('confirmation', (confNumber, receipt) => {\r\n                        // console.log(receipt.contractAddress, \"confirmRecipet\")\r\n                        if (confNumber == 1) {\r\n                            mint(receipt?.contractAddress)\r\n                            // setContractAdd(receipt?.contractAddress)\r\n                            // UpdateContract(id)\r\n                        }\r\n                    })\r\n            } else {\r\n                mint(nftdetail?.collectionData?.contract_id)\r\n            }\r\n            return {\r\n                success: true,\r\n                // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n                status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n            }\r\n        } catch (error) {\r\n            // \r\n            alert(\"went wrong\")\r\n            return {\r\n                success: false,\r\n                status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const deployAndMint = async () => {\r\n\r\n        setModalShow(true)\r\n        // mint()\r\n        await deployContract()\r\n        // nftdetail.id()\r\n    }\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n                                <img src={nftdetail.image} alt=\"\" />\r\n                            </div>\r\n                                {/* Netstorm Tab */}\r\n                                {/* <ul className=\"netstorm-tab nav nav-tabs\" id=\"nav-tab\">\r\n                                        <><li>\r\n                                            <a className=\"active\" id=\"nav-home-tab\" data-toggle=\"pill\" href=\"#nav-home\">\r\n                                                <h5 className=\"m-0\">{initData.tab_1}</h5>\r\n                                            </a>\r\n                                        </li><li>\r\n                                                <a id=\"nav-contact-tab\" data-toggle=\"pill\" href=\"#nav-contact\">\r\n                                                    <h5 className=\"m-0\">{initData.tab_3}</h5>\r\n                                                </a>\r\n                                            </li></>\r\n                                    </ul> */}\r\n                            </>\r\n                            {/* ))\r\n                                } */}\r\n                            {/* <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                                    <div className=\"tab-pane fade show active\" id=\"nav-home\">\r\n                                        <ul className=\"list-unstyled\">\r\n                                            {tabData_1.map((item, idx) => {\r\n                                                return (\r\n                                                    <li className=\"single-tab-list d-flex align-items-center\">\r\n                                                        <img className=\"avatar-sm rounded-circle mr-3\" src={item.img} alt=\"\" />\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{nftdetail?.user_data?.username}</a></p>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n    \r\n                                    <div className=\"tab-pane fade\" id=\"nav-contact\">\r\n                                        <div className=\"owner-meta d-flex align-items-center mt-3\">\r\n                                            <span>Owner</span>\r\n                                            <a className=\"owner d-flex align-items-center ml-2\" href=\"/author\">\r\n                                                <img className=\"avatar-sm rounded-circle\" src={initData.ownerImg} alt=\"\" />\r\n                                                <h6 className=\"ml-2\">{nftdetail?.user_data?.username}</h6>\r\n                                            </a>\r\n                                        </div>\r\n                                        <p className=\"mt-2\">Created : {dayjs(nftdetail?.created_at).format(\"DD MMM YYYY\")}</p>\r\n                                    </div>\r\n                                </div> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-8\">\r\n                        <h3 className=\"m-0\">{nftdetail?.title}</h3>\r\n                        <div className=\"card no-hover content sm:mt-5 mt-lg-3\">\r\n\r\n                            <div className=\"owner d-flex align-items-center\">\r\n                                <span>Owned By</span>\r\n                                <a className=\"owner-meta d-flex align-items-center\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={projdetail.user_data.avatar} alt=\"\" /> */}\r\n                                </a>\r\n                                <span className=\"text-white\">{projdetail?.user_data?.username} </span>\r\n\r\n                            </div>\r\n                            <div class=\"item-info-list\">\r\n                                <ul class=\"list-unstyled viewproduct-detail mt-4\">\r\n\r\n                                    {/* <li class=\"price d-flex \"><span>Current Price : </span><span>1122 MATIC</span></li> */}\r\n                                    {/* <li class=\"mt-4\"><span>Number of NFTs Minted :  </span><span>5</span></li> */}\r\n                                    <li class=\"mt-4\"><span>Token No:  </span><span>#{nftdetail.token_id}</span></li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            {nftdetail.is_mint == 1 ? (\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n                                    <div className=\" mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF', width: \"100%\" }}\r\n                                    >  Ready to purchase</div>\r\n\r\n\r\n                                </div>\r\n\r\n                            ) : (\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n                                    {nftdetail.project_status == 1 ? (\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            id=\"nftdetail.id\" onClick={() => deployAndMint(id)}>  Mint</button><NftPopup\r\n                                                show={modalShow}\r\n                                                current={current}\r\n                                                onHide={() => setModalShow(false)} /></>\r\n                                    ) : (\r\n\r\n                                        <button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                        >  waiting for approval</button>\r\n                                    )}\r\n\r\n                                </div>\r\n\r\n                            )}\r\n\r\n\r\n                            <div className=\"item-info-list\">\r\n                                <ul className=\"list-unstyled\">\r\n                                    <li className=\"price d-flex\">\r\n                                        {/* <span>Current Price : {nftdetail?.price} MATIC</span> */}\r\n                                        {/* <span>Price </span> */}\r\n                                        {/* <span>{latprojdetail.price} MATIC</span> */}\r\n\r\n                                    </li>\r\n                                    <li>\r\n\r\n                                        {/* <span>{projdetail.projectdetails.latitude}</span> */}\r\n                                    </li>\r\n                                    {/* <li> */}\r\n                                    {/* <span>Volume Traded </span> */}\r\n                                    {/* <span>Number of NFT's Minted : {nftdetail?.number_of_nft}</span> */}\r\n                                    {/* </li> */}\r\n                                </ul>\r\n                            </div>\r\n\r\n                            {/* <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/wallet-connect\">{initData.btnText}</a> */}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div className='col-12 description'>\r\n                    <h3 > Description</h3>\r\n                    <div className=\"card no-hover countdown-times my-4\">\r\n                        {/* ksdjfksdjbfjsdbf */}\r\n                        {/* {nftdetail.description} */}\r\n                        {/* <div className=\"countdown d-flex justify-content-center\" /> */}\r\n                        <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft\" />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n            <div className='container table-detail'>\r\n                <div className='col-12'>\r\n                    <NftdataTable />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default NftDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ProjectList';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport NftDetails from '../components/ItemDetails/nftDetails';\r\n\r\nconst Nft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Projects\" subpage=\"Explore\" page=\"\" /> */}\r\n            <NftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nconst FunddataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    // const { id } = useParams()\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive>\r\n                        <tbody class=\"nfts_details\">\r\n                            <tr>\r\n                                <td><span>Organization Name </span> <span>{funddetail?.organization_detail?.organization_name}</span></td>\r\n                                <td><span>Country</span>  <span>{funddetail?.organization_detail?.country}</span></td>\r\n                                <td><span>Tax Number </span> <span>{funddetail?.organization_detail?.tax_number}</span></td>\r\n                                <td><span>Web URL</span>  <span>{funddetail?.organization_detail?.web_url}</span></td>\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default FunddataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst FundTransdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {funddetail?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FundTransdataTable","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from './fundraiserdetail';\r\nimport FundTransdataTable from './fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\nimport { Button } from 'react-bootstrap';\r\n// const initData = {\r\n//     itemImg: \"/img/auction_2.jpg\",\r\n//     date: \"2022-03-30\",\r\n//     tab_1: \"Bids\",\r\n//     tab_2: \"History\",\r\n//     tab_3: \"Details\",\r\n//     ownerImg: \"/img/avatar_1.jpg\",\r\n//     itemOwner: \"Themeland\",\r\n//     created: \"15 Jul 2021\",\r\n//     title: \"Walking On Air\",\r\n//     content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n//     price_1: \"1.5 ETH\",\r\n//     price_2: \"$500.89\",\r\n//     count: \"1 of 5\",\r\n//     size: \"14000 x 14000 px\",\r\n//     volume: \"64.1\",\r\n//     highest_bid: \"2.9 BNB\",\r\n//     bid_count: \"1 of 5\",\r\n//     btnText: \"Place a Bid\"\r\n// }\r\n\r\n// const tabData_1 = [\r\n//     {\r\n//         id: \"1\",\r\n//         img: \"/img/avatar_1.jpg\",\r\n//         price: \"14 ETH\",\r\n//         time: \"4 hours ago\",\r\n//         author: \"@arham\"\r\n//     },\r\n//     {\r\n//         id: \"2\",\r\n//         img: \"/img/avatar_2.jpg\",\r\n//         price: \"10 ETH\",\r\n//         time: \"8 hours ago\",\r\n//         author: \"@junaid\"\r\n//     },\r\n//     {\r\n//         id: \"3\",\r\n//         img: \"/img/avatar_3.jpg\",\r\n//         price: \"12 ETH\",\r\n//         time: \"3 hours ago\",\r\n//         author: \"@yasmin\"\r\n//     }\r\n// ]\r\n\r\n// const tabData_2 = [\r\n//     {\r\n//         id: \"1\",\r\n//         img: \"/img/avatar_6.jpg\",\r\n//         price: \"32 ETH\",\r\n//         time: \"10 hours ago\",\r\n//         author: \"@hasan\"\r\n//     },\r\n//     {\r\n//         id: \"2\",\r\n//         img: \"/img/avatar_7.jpg\",\r\n//         price: \"24 ETH\",\r\n//         time: \"6 hours ago\",\r\n//         author: \"@artnox\"\r\n//     },\r\n//     {\r\n//         id: \"3\",\r\n//         img: \"/img/avatar_8.jpg\",\r\n//         price: \"29 ETH\",\r\n//         time: \"12 hours ago\",\r\n//         author: \"@meez\"\r\n//     }\r\n// ]\r\n\r\n// const sellerData = [\r\n//     {\r\n//         id: \"1\",\r\n//         img: \"/img/avatar_1.jpg\",\r\n//         seller: \"@ArtNoxStudio\",\r\n//         post: \"Creator\"\r\n//     },\r\n//     {\r\n//         id: \"2\",\r\n//         img: \"/img/avatar_2.jpg\",\r\n//         seller: \"Virtual Worlds\",\r\n//         post: \"Collection\"\r\n//     }\r\n// ]\r\n\r\nconst FundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    // console.log(fundprojdetail, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div>\r\n\r\n                </div>\r\n                <div class=\"row py-0\">\r\n                    <div className='col-12 p-0'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                {/* <img src={funddetail?.organization_detail?.banner_image} alt=\"\" /> */}\r\n                                <img src=\"/img/ph.jpg\" />\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done mt-3'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n\r\n                        <div className=\"progress_nft mobile_nft mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex justify-content-start\">\r\n                                <div>\r\n                                    <Button className=\" btn  btn-bordered-white m-0 mr-2\" variant=\"primary\">\r\n                                        Share\r\n                                    </Button>\r\n                                </div>\r\n                                <div>\r\n                                    <Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                        Invest\r\n                                    </Button>\r\n                                </div>\r\n                                <>\r\n                                    {/* <Button className=\" btn  btn-bordered-white m-0 mr-2\" variant=\"primary\">\r\n                                        Share\r\n                                    </Button> */}\r\n                                    {/* <ReferalPopup\r\n                                            id={id}\r\n                                            userRef={userDetail}\r\n                                            show={modalShowrefer}\r\n                                            onHide={() => setModalShowrefer(false)} /> */}\r\n                                </>\r\n\r\n                                {/* <Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                        Donate\r\n                                    </Button> */}\r\n                            </div>\r\n                            {/* {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    // console.log('todat', date2)\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    // const totaldays = days_difference.slice(0,1)\r\n                                                    // console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                    {/* {(item.created_at).diff(new Date, 'day', true)} */}\r\n                            {/* </li> */}\r\n                            {/* </ul> */}\r\n                            {/* </> */}\r\n                            {/* ) */}\r\n                            {/* })} */}\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length &&\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        })}\r\n                            </ul>\r\n                            <Link className=\"\" to=\"/all/LatestProjects\"><p className='see_all'>See all</p></Link>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className='custam_col'>\r\n                            <h5 class=\"user_title\"><div>Description</div></h5>\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='funddeatil mt-3 '>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-4 desktop_nft\">\r\n                        <div className=\"progress_nft  mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"100%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                                {/* <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" />\r\n                                            <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                        </div> */}\r\n\r\n                                {/* <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                    </div> */}\r\n\r\n                            </div>\r\n\r\n                            <div className=\"d-flex justify-content-start\">\r\n                                <div>\r\n\r\n                                    <Button className=\" btn  btn-bordered-white m-0 mr-2\" variant=\"primary\">\r\n                                        Share\r\n                                    </Button>\r\n\r\n                                </div>\r\n                                <div>\r\n                                    <Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                        Invest\r\n                                    </Button>\r\n                                </div>\r\n                                <>\r\n                                    {/* <Button className=\" btn  btn-bordered-white m-0 mr-2\" variant=\"primary\">\r\n                                        Share\r\n                                    </Button> */}\r\n                                    {/* <ReferalPopup\r\n                                            id={id}\r\n                                            userRef={userDetail}\r\n                                            show={modalShowrefer}\r\n                                            onHide={() => setModalShowrefer(false)} /> */}\r\n                                </>\r\n\r\n                                {/* <Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                        Donate\r\n                                    </Button> */}\r\n                            </div>\r\n                            {/* {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    // console.log('todat', date2)\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    // const totaldays = days_difference.slice(0,1)\r\n                                                    // console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                    {/* {(item.created_at).diff(new Date, 'day', true)} */}\r\n                            {/* </li> */}\r\n                            {/* </ul> */}\r\n                            {/* </> */}\r\n                            {/* ) */}\r\n                            {/* })} */}\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length &&\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        })}\r\n                            </ul>\r\n                            <Link className=\"\" to=\"/all/LatestProjects\"><p className='see_all'>See all</p></Link>\r\n                        </div>\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            {/* <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        \r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div> */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=''>\r\n                    {/* <div className='col-7'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div> */}\r\n                    <div className='col-12'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default FundraiserDetail;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport FundraiserDetail from '../components/TopSeller/fundraiserDetails';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\n\r\nconst FundDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main main-fund-detail\">\r\n\r\n            <Header />\r\n            <FundraiserDetail />\r\n            <Fundraiser />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default FundDetail;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst LatprojNftDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [ownwallet, setOwnWallet] = useState('')\r\n    const [ownFee, setOwnFee] = useState('')\r\n    const [platformFee, setPlatformFee] = useState('')\r\n    console.log('own', ownwallet)\r\n    const id = useParams();\r\n    // console.log(id, 'idd')\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.getnftwoldetails\r\n    })\r\n    // console.log('paymentflow', [latprojnftdetail.payment_flow?.project_data.wallets])\r\n\r\n\r\n    const getSett = useSelector(state => {\r\n        // \r\n        return state.projectdetails.settings\r\n    })\r\n    // console.log('getSett', getSett)\r\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\r\n    useEffect(() => {\r\n        dispatch(GetNftwol(id))\r\n        dispatch(GetSettings())\r\n\r\n\r\n    }, [id])\r\n    const buyHandler = () => {\r\n        \r\n        // setOwnWallet([latprojnftdetail.payment_flow?.project_data.wallets])\r\n        // setOwnFee([latprojnftdetail.payment_flow?.project_data.fees])\r\n        // setPlatformFee([latprojnftdetail.payment_flow?.karmatica_fee])\r\n\r\n        BuyNft({\r\n            contractAddress: latprojnftdetail?.collectionData?.contract_id,\r\n            tokenId: latprojnftdetail.token_id,\r\n            payFrom: latprojnftdetail.pay_from,\r\n            values: setValue.value,\r\n            sellingCount: latprojnftdetail.selling_count,\r\n            platformFee: ([latprojnftdetail.payment_flow?.karmatica_fee]),\r\n\r\n            ownerFee: ([latprojnftdetail.payment_flow?.project_data.fees]),\r\n            ownerWallet: ([latprojnftdetail.payment_flow?.project_data.wallets]),\r\n            flow: ([latprojnftdetail.payment_flow])\r\n\r\n        })\r\n    }\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n\r\n                                {/* {latprojdetail?.nft_data?.map((item, idx) => { */}\r\n                                {/*  */}\r\n                                {/* return ( */}\r\n                                <img src={latprojnftdetail.image} alt=\"\" />\r\n                                {/* ) */}\r\n                                {/* })} */}\r\n                            </div>\r\n                                {/* Netstorm Tab */}\r\n                                {/* <ul className=\"netstorm-tab nav nav-tabs\" id=\"nav-tab\">\r\n                                    <><li>\r\n                                        <a className=\"active\" id=\"nav-home-tab\" data-toggle=\"pill\" href=\"#nav-home\">\r\n                                            <h5 className=\"m-0\">{initData.tab_1}</h5>\r\n                                        </a>\r\n                                    </li><li>\r\n                                            <a id=\"nav-contact-tab\" data-toggle=\"pill\" href=\"#nav-contact\">\r\n                                                <h5 className=\"m-0\">{initData.tab_3}</h5>\r\n                                            </a>\r\n                                        </li></>\r\n                                </ul> */}\r\n                            </>\r\n                            {/* ))\r\n                            } */}\r\n                            {/* <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                                <div className=\"tab-pane fade show active\" id=\"nav-home\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {tabData_1.map((item, idx) => {\r\n                                            return (\r\n                                                <li className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <img className=\"avatar-sm rounded-circle mr-3\" src={item.img} alt=\"\" />\r\n                                                    <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{nftdetail?.user_data?.username}</a></p>\r\n                                                </li>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n​\r\n                                <div className=\"tab-pane fade\" id=\"nav-contact\">\r\n                                    <div className=\"owner-meta d-flex align-items-center mt-3\">\r\n                                        <span>Owner</span>\r\n                                        <a className=\"owner d-flex align-items-center ml-2\" href=\"/author\">\r\n                                            <img className=\"avatar-sm rounded-circle\" src={initData.ownerImg} alt=\"\" />\r\n                                            <h6 className=\"ml-2\">{nftdetail?.user_data?.username}</h6>\r\n                                        </a>\r\n                                    </div>\r\n                                    <p className=\"mt-2\">Created : {dayjs(nftdetail?.created_at).format(\"DD MMM YYYY\")}</p>\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className='row py-0'>\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}</span>\r\n                        </div>\r\n                        <div className=\"content sm:mt-5 mt-lg-3\">\r\n                            <div className=\"card no-hover\">\r\n\r\n\r\n\r\n                                <div className='d-flex  align-items-center justify-content-between'>\r\n                                    {/* <h3 className=\"m-0\">{nftdetail?.title}</h3> */}\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center '>\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"> <Link to={`/updateproject/${projdetail.projectdetails.id}`} style={{ color: '#FFF' }}>Edit</Link></a>\r\n                                    <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-2\" onClick={() => deleteHandler(projdetail.projectdetails.id)} style={{ color: '#FFF' }}>Delete</a> */}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                {/* <p dangerouslySetInnerHTML={{ __html: nftdetail?.description }} /> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{latprojnftdetail.pay_from}</span>\r\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                        {/* <img className=\"avatar-sm rounded-circle\" src=\"/img/avtar1.png\" alt=\"\" /> */}\r\n                                        {/* <h6 className=\"ml-2\">{latprojnftdetail.pay_from}</h6> */}\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <li className=\"price d-flex\">\r\n                                            {/* <span>Current Price : {nftdetail?.price} MATIC</span> */}\r\n                                            {/* <span>Price </span> */}\r\n                                            {/* <span>{latprojdetail.price} MATIC</span> */}\r\n\r\n                                        </li>\r\n                                        {/* <li>\r\n​\r\n                                        <span dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                                    </li> */}\r\n                                        {/* <li> */}\r\n                                        {/* <span>Volume Traded </span> */}\r\n                                        {/* {latprojdetail?.nft_data?.map((item, idx) => { */}\r\n                                        {/*  */}\r\n\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{latprojnftdetail.token_id}</span>\r\n                                        {/* })} */}\r\n                                        {/* </li> */}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className='eddlbtton d-flex  align-items-center mt-2'>\r\n\r\n                                    <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                        id=\"nftdetail.id\" onClick={() => buyHandler()}>  Buy</button>\r\n\r\n\r\n                                </div>\r\n                                {/* <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/wallet-connect\">{initData.btnText}</a> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card no-hover countdown-times my-4 \">\r\n                            <span dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                            {/* <div className=\"countdown d-flex justify-content-center\" /> */}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\nexport default LatprojNftDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ProjDetails from '../components/ItemDetails/viewProdetails';\r\nimport ProjNFTS from '../components/Auctions/projectnfts';\r\nimport LatprojNftDetails from '../components/Auctions/nftBuy';\r\n\r\nclass latnftprojDetails extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <LatprojNftDetails />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default latnftprojDetails;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst ScrollToTop = (props) => {\r\n    const location = useLocation();\r\n    useEffect(() => {\r\n        if (!location.hash) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }, [location]);\r\n\r\n    return <>{props.children}</>\r\n};\r\n\r\nexport default ScrollToTop;","\r\n// import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n// import { Button, Form, Input, Modal, Upload } from 'antd';\r\n// import React, { Fragment, useEffect, useState, useRef } from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { AddNftAction, CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\n// import { useFormData } from './Context/context'\r\n// import MyVerticallyCenteredModal from './createCollection';\r\n// import styles from './styles/styles.module.scss'\r\n// import 'antd/lib/form/style/css';\r\n// import 'antd/lib/upload/style/css';\r\n// import { Collapse } from 'antd';\r\n// import 'antd/lib/modal/style/css';\r\n// import 'antd/lib/button/style/css'\r\n// import JoditEditor from 'jodit-react'\r\n// import Loader from '../Loader/loader';\r\n// import { useParams } from 'react-router';\r\n\r\n// const getBase64 = (file) =>\r\n//     new Promise((resolve, reject) => {\r\n//         const reader = new FileReader();\r\n//         reader.readAsDataURL(file);\r\n//         reader.onload = () => resolve(reader.result);\r\n//         reader.onerror = (error) => reject(error);\r\n//     });\r\n// // import ImgCrop from 'antd-img-crop';\r\n\r\n// const AddNft = ({ current, prev }) => {\r\n//     const editor = useRef(null);\r\n//     const [previewOpen, setPreviewOpen] = useState(false);\r\n//     const [previewImage, setPreviewImage] = useState('');\r\n//     const [previewTitle, setPreviewTitle] = useState('');\r\n//     // console.log(data, 'formdta')\r\n//     const [count, setCount] = useState(0);\r\n//     // const [nft_description, setNft_description] = useState([])\r\n//     // console.log('nft_description', nft_description)\r\n\r\n//     const [modalShow, setModalShow] = React.useState(false);\r\n//     const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n//     // console.log('colldata', coldata)\r\n//     // console.log(nft_collection_id)\r\n//     // const [coll_id,setCollId] = useState()\r\n//     const coll_id = (Object.values(nft_collection_id));\r\n//     // console.log(\"collid\", coll_id)\r\n\r\n//     const [loading, setLoading] = useState(false)\r\n\r\n//     const handleIncrement = () => {\r\n//         setCount(prevCount => prevCount + 1);\r\n//     };\r\n\r\n\r\n//     const handleDecrement = () => {\r\n//         setCount(prevCount => prevCount - 1);\r\n//     };\r\n//     // console.log(count, 'count')\r\n\r\n//     function onHandleClick(index, item) {\r\n//         setNft_collection_id(previ => {\r\n//             previ[index] = item\r\n//             return {\r\n//                 ...previ,\r\n//             }\r\n//         }\r\n//         );\r\n//     };\r\n//     const { id } = useParams()\r\n//     // function descc(e) {\r\n//     //     setNft_description(prev => [...prev, nft_description]);\r\n//     // };\r\n\r\n//     const defaultValues = {\r\n//         setNft_description: '',\r\n//     }\r\n//     // this.setState(prev => ({\r\n//     //     item: prev.item.map(item => item.name === 'xjz' ? { ...item, age: '10' } : item)\r\n//     // }))\r\n//     const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n//         mode: 'all',\r\n//         defaultValues\r\n//     });\r\n//     useEffect(() => {\r\n//         register(\"nft_description\");\r\n//     }, [register]);\r\n\r\n//     // const ipfsClient = create('http://127.0.0.1:5001')\r\n//     // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n//     const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n//     // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n//     // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n//     const dispatch = useDispatch()\r\n//     const col = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.getcollections\r\n//     })\r\n//     const imaeg = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.nftres\r\n//     })\r\n//     // console.log(imaeg, 'imgg')\r\n\r\n\r\n\r\n\r\n//     // console.log('col', col)\r\n\r\n\r\n\r\n//     const lat = localStorage.getItem('latitude')\r\n//     // console.log(lat, 'lattt')\r\n//     const log = localStorage.getItem('longitude')\r\n//     // console.log(log, 'logggg')\r\n\r\n//     // const desdata = { nft_description() }\r\n//     useEffect(() => {\r\n\r\n//         dispatch(GetCollectionsAction())\r\n\r\n\r\n//     }, []);\r\n\r\n\r\n//     const onFinish = async (values) => {\r\n\r\n//         setLoading(true)\r\n//         const nftImagepromises = values?.nfts?.map(x => uploadNFT(x?.nft_image?.file))\r\n\r\n//         const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n//         // \r\n\r\n//         const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n//         // \r\n\r\n//         const formData = new FormData()\r\n\r\n\r\n\r\n\r\n\r\n//         formData.append('image', addedImage)\r\n//         formData.append('title', values?.nfts?.map(x =>\r\n//             x.nft_name\r\n//         ))\r\n//         // const newlist = newList.push(nft_collection_id);\r\n//         formData.append('collection_id', coll_id)\r\n//         // formData.append('nft_description', nft_description)\r\n//         formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n//         // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n\r\n//         // dispatch(uploadNFT())\r\n//         dispatch(AddNftAction(formData, id, setLoading))\r\n//         // setLoading(false)\r\n\r\n//         // console.log('Received values of form:', values, data)\r\n\r\n//     };\r\n//     // console.log('title', localStorage.getItem('title'))\r\n//     const handleCancel = () => setPreviewOpen(false);\r\n\r\n//     const handlePreview = async (file) => {\r\n//         if (!file.url && !file.preview) {\r\n//             file.preview = await getBase64(file.originFileObj);\r\n//         }\r\n//         setPreviewImage(file.url || file.preview);\r\n//         setPreviewOpen(true);\r\n//         setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n//     };\r\n\r\n//     const fileProps = {\r\n//         name: \"file\",\r\n//         multiple: false,\r\n//         beforeUpload: () => {\r\n//             return false;\r\n//         },\r\n//         onChange(info) {\r\n//             if (info.file.status !== \"uploading\") {\r\n//                 let reader = new FileReader();\r\n//                 reader.readAsDataURL(info.file);\r\n//                 // setUploadedImage(info.file);\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     // const getFile = (e) => {\r\n//     //     // \r\n//     //     console.log('Upload event:', e);\r\n\r\n//     //     if (Array.isArray(e)) {\r\n//     //         return e;\r\n//     //     }\r\n//     //     return e && e.fileList;\r\n//     // };\r\n//     const [form] = Form.useForm()\r\n//     // const save = (data) => {\r\n//     //     setNft_description(data)\r\n//     // };\r\n//     const { Panel } = Collapse;\r\n//     const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n//     const onPositionChange = (newExpandIconPosition) => {\r\n//         setExpandIconPosition(newExpandIconPosition);\r\n//     };\r\n//     const onChange = (key) => {\r\n//         console.log(key);\r\n//     };\r\n//     const nfts = [\r\n//         {\r\n//             key: 0,\r\n//             name: 'Wheat Flour',\r\n//             amount: 1000\r\n//         },\r\n\r\n//     ];\r\n//     return (\r\n//         <section className=\"author-area\">\r\n//             <div className=\"container\">\r\n//                 <div className=\"row justify-content-center\">\r\n\r\n\r\n//                     <div className=\"col-14 col-md-9\">\r\n//                         {/* Intro */}\r\n//                         <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n//                             <div className=\"intro-content\">\r\n\r\n//                                 <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n\r\n\r\n//                                 <div>\r\n//                                     {loading ? (\r\n//                                         <Loader />\r\n//                                     ) : (\r\n\r\n//                                         <div >\r\n//                                             <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n//                                                 nfts: nfts\r\n//                                             }}\r\n//                                                 // onSubmit={(event) => handleSubmit(event)}\r\n//                                                 onFinish={(event) => onFinish(event)}\r\n//                                                 autoComplete=\"off\" className=\"item-form card no-hover\">\r\n//                                                 <Form.List name=\"nfts\">\r\n\r\n//                                                     {(fields, { add, remove }) => (\r\n//                                                         <>\r\n//                                                             {/* <div className='steps-center'>\r\n\r\n\r\n//                                                 <div className='orgicon1'>\r\n\r\n//                                                     <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n//                                                 </div>\r\n\r\n//                                                 <div className='orgicon1line'>\r\n//                                                     <span style={{}}> ----------------------------- </span>\r\n\r\n//                                                 </div>\r\n//                                                 <div className='orgicon2'>\r\n\r\n//                                                     <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n//                                                 </div>\r\n//                                             </div> */}\r\n//                                                             <>\r\n//                                                                 {fields.map(({ key, name, ...restField }, index) => (\r\n//                                                                     // <Space\r\n//                                                                     //     key={key}\r\n//                                                                     //     style={{\r\n//                                                                     //         display: 'flex',\r\n//                                                                     //         marginBottom: 8,\r\n//                                                                     //     }}\r\n//                                                                     //     align=\"baseline\"\r\n//                                                                     // >\r\n\r\n//                                                                     <Fragment>\r\n//                                                                         {/* <div>Artwork {index}</div> */}\r\n//                                                                         <div className=\"row\">\r\n\r\n//                                                                             <div className=\"col-md-10 col-12\">\r\n//                                                                                 <label>Name</label>\r\n//                                                                                 <div>\r\n\r\n//                                                                                     <Form.Item\r\n//                                                                                         {...restField}\r\n//                                                                                         name={[name, \"nft_name\"]}\r\n//                                                                                         // label=\"Enter name\"\r\n//                                                                                         // name=\"name\"\r\n//                                                                                         rules={[\r\n//                                                                                             {\r\n//                                                                                                 required: true,\r\n//                                                                                                 message: 'Missing  name',\r\n//                                                                                             },\r\n//                                                                                         ]}\r\n//                                                                                     >\r\n//                                                                                         {/* <label>Name</label> */}\r\n//                                                                                         <Input placeholder=\"Name\" />\r\n//                                                                                     </Form.Item>\r\n//                                                                                 </div>\r\n//                                                                                 <label>Description</label>\r\n//                                                                                 <div>\r\n\r\n//                                                                                     <Form.Item\r\n//                                                                                         {...restField}\r\n//                                                                                         name={[name, \"nft_description\"]}\r\n//                                                                                         // label=\"Enter name\"\r\n//                                                                                         // name=\"name\"\r\n//                                                                                         rules={[\r\n//                                                                                             {\r\n//                                                                                                 required: true,\r\n//                                                                                                 message: 'Missing  description',\r\n//                                                                                             },\r\n//                                                                                         ]}\r\n//                                                                                     >\r\n//                                                                                         {/* <Controller\r\n//                                                                             control={control}\r\n//                                                                             name=\"nft_description\"\r\n//                                                                             defaultValue=\"\"\r\n//                                                                             render={({ field: { value, onChange } }) => {\r\n//                                                                                 return  */}\r\n//                                                                                         <JoditEditor\r\n//                                                                                             ref={editor}\r\n//                                                                                             value={'nft_description'}\r\n//                                                                                             // config={config}\r\n\r\n//                                                                                             placeholder=\"start typing\"\r\n//                                                                                             tabIndex={1} // tabIndex of textarea\r\n//                                                                                             // onBlur={newContent => 'nft_description'(newContent)} // preferred to use only this option to update the content for performance reasons\r\n//                                                                                             onChange={newContent => { }}\r\n//                                                                                         />\r\n//                                                                                         {/* }} */}\r\n//                                                                                         {/* /> */}\r\n//                                                                                     </Form.Item>\r\n//                                                                                 </div>\r\n//                                                                             </div>\r\n//                                                                             {/* <div className=\"col-md-5 col-12\">\r\n//                                                                     <label>Nft</label>\r\n//                                                                     <div>\r\n//                                                                         <Form.Item\r\n//                                                                             {...restField}\r\n//                                                                             name={[name, \"nft_image\"]}\r\n//                                                                             // getValueFromEvent={getFile}\r\n//                                                                             rules={[\r\n//                                                                                 {\r\n//                                                                                     required: true,\r\n//                                                                                     message: 'Please select a image',\r\n//                                                                                 },\r\n//                                                                             ]}\r\n\r\n//                                                                         >\r\n\r\n//                                                                             <Upload\r\n//                                                                                 {...fileProps}\r\n//                                                                                 action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n//                                                                                 listType=\"picture-card\"\r\n//                                                                                 // fileList={fileList}\r\n//                                                                                 // onChange={onChange}\r\n//                                                                                 onPreview={handlePreview}\r\n//                                                                                 maxCount={1}\r\n\r\n//                                                                             >\r\n//                                                                                 + Upload\r\n//                                                                             </Upload>\r\n\r\n\r\n//                                                                         </Form.Item>\r\n//                                                                         <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n//                                                                             <img\r\n//                                                                                 alt=\"example\"\r\n//                                                                                 style={{\r\n//                                                                                     width: '100%',\r\n//                                                                                 }}\r\n//                                                                                 src={previewImage} />\r\n//                                                                         </Modal>\r\n//                                                                     </div>\r\n//                                                                 </div> */}\r\n//                                                                             <div className=\"col-md-1 col-12\">\r\n//                                                                                 <MinusCircleOutlined onClick={(e) => { remove(name); handleDecrement(e); }} />\r\n//                                                                             </div>\r\n//                                                                             {/* </div> */}\r\n//                                                                             <div className=\"col-md-3 col-12\">\r\n\r\n//                                                                                 {/* <div className=\"col-24\"> */}\r\n\r\n//                                                                                 <div className=\"form-group\">\r\n//                                                                                     <label className='mt-2'>Choose Collection</label>\r\n//                                                                                     <div className=\"card choose_div\" style={{\r\n//                                                                                         background: \"black\",\r\n//                                                                                         marginBottom: \"8px\",\r\n//                                                                                     }}>\r\n//                                                                                         <div className=\"card-body \">\r\n//                                                                                             <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n//                                                                                                 <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n//                                                                                             </Button>\r\n\r\n//                                                                                             <MyVerticallyCenteredModal\r\n//                                                                                                 show={modalShow}\r\n//                                                                                                 onHide={() => setModalShow(false)} />\r\n//                                                                                         </div>\r\n//                                                                                     </div>\r\n//                                                                                 </div>\r\n//                                                                             </div>\r\n\r\n\r\n//                                                                             {col?.map((item, idx) => (\r\n\r\n//                                                                                 <div key={`auc_${idx}`} id={item.id} className=\"col-md-3 col-12 choose_div\">\r\n//                                                                                     {/* <Form.Item\r\n//                                                                             {...restField}\r\n//                                                                             name={[name, \"nft_collection_id\"]}\r\n//                                                                             // getValueFromEvent={getFile}\r\n//                                                                             rules={[\r\n//                                                                                 {\r\n//                                                                                     required: true,\r\n//                                                                                     message: 'Please select nft collection',\r\n//                                                                                 },\r\n//                                                                             ]}\r\n\r\n//                                                                         > */}\r\n//                                                                                     <label className='hidden-word'>jsaswjdwjd</label>\r\n\r\n//                                                                                     <div id={item.id} onClick={() => onHandleClick(index, item.id)} className=\"card\"\r\n//                                                                                         style={{\r\n//                                                                                             background: \"black\",\r\n//                                                                                             marginBottom: \"8px\",\r\n//                                                                                             border: nft_collection_id[index] == item.id ? \"1px solid #fff\" : null\r\n//                                                                                         }}>\r\n//                                                                                         <div className=\"card-body\">\r\n//                                                                                             <div>\r\n\r\n\r\n//                                                                                                 {item.title}\r\n//                                                                                             </div>\r\n\r\n\r\n//                                                                                         </div>\r\n//                                                                                     </div>\r\n//                                                                                     {/* </Form.Item> */}\r\n\r\n//                                                                                 </div>\r\n//                                                                                 // </div>\r\n//                                                                             ))}\r\n//                                                                             <div className=\"col-md-12 col-12\">\r\n//                                                                                 <label>Upload Nft</label>\r\n//                                                                                 <div>\r\n//                                                                                     <Form.Item\r\n//                                                                                         {...restField}\r\n//                                                                                         name={[name, \"nft_image\"]}\r\n//                                                                                         // getValueFromEvent={getFile}\r\n//                                                                                         rules={[\r\n//                                                                                             {\r\n//                                                                                                 required: true,\r\n//                                                                                                 message: 'Please select a image',\r\n//                                                                                             },\r\n//                                                                                         ]}\r\n\r\n//                                                                                     >\r\n\r\n//                                                                                         <Upload\r\n//                                                                                             {...fileProps}\r\n//                                                                                             action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n//                                                                                             listType=\"picture-card\"\r\n//                                                                                             // fileList={fileList}\r\n//                                                                                             // onChange={onChange}\r\n//                                                                                             onPreview={handlePreview}\r\n//                                                                                             maxCount={1}\r\n\r\n//                                                                                         >\r\n//                                                                                             + Upload\r\n//                                                                                         </Upload>\r\n\r\n\r\n//                                                                                     </Form.Item>\r\n//                                                                                     <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n//                                                                                         <img\r\n//                                                                                             alt=\"example\"\r\n//                                                                                             style={{\r\n//                                                                                                 width: '100%',\r\n//                                                                                             }}\r\n//                                                                                             src={previewImage} />\r\n//                                                                                     </Modal>\r\n//                                                                                 </div>\r\n//                                                                             </div>\r\n\r\n//                                                                         </div>\r\n//                                                                     </Fragment>\r\n\r\n//                                                                 ))}\r\n\r\n\r\n\r\n//                                                             </></>\r\n//                                                     )}\r\n\r\n//                                                 </Form.List>\r\n//                                                 <Form.Item>\r\n//                                                     <div className=\"col-12\">\r\n//                                                         <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">Add</button>\r\n//                                                     </div>\r\n\r\n//                                                 </Form.Item>\r\n//                                             </Form>\r\n//                                         </div>\r\n\r\n//                                     )}\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </section>\r\n//     );\r\n// };\r\n// export default AddNft;\r\n\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Upload } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddNftAction, CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst AddNft = ({ current, prev }) => {\r\n    const editor = useRef(null);\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    // console.log(data, 'formdta')\r\n    const [count, setCount] = useState(0);\r\n    // const [nft_description, setNft_description] = useState([])\r\n    // console.log('nft_description', nft_description)\r\n\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    // console.log('colldata', coldata)\r\n    // console.log(nft_collection_id)\r\n    // const [coll_id,setCollId] = useState()\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    // console.log(\"collid\", coll_id)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleIncrement = () => {\r\n        setCount(prevCount => prevCount + 1);\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n    const { id } = useParams()\r\n    // function descc(e) {\r\n    //     setNft_description(prev => [...prev, nft_description]);\r\n    // };\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    // this.setState(prev => ({\r\n    //     item: prev.item.map(item => item.name === 'xjz' ? { ...item, age: '10' } : item)\r\n    // }))\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n        defaultValues\r\n    });\r\n    useEffect(() => {\r\n        register(\"nft_description\");\r\n    }, [register]);\r\n\r\n    // const ipfsClient = create('http://127.0.0.1:5001')\r\n    // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n    // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n    // console.log(imaeg, 'imgg')\r\n\r\n\r\n\r\n\r\n    // console.log('col', col)\r\n\r\n\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        setLoading(true)\r\n        const nftImagepromises = values?.nfts?.map(x => uploadNFT(x?.nft_image?.file))\r\n\r\n        const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n        // \r\n\r\n        const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n        // \r\n\r\n        const formData = new FormData()\r\n\r\n\r\n\r\n\r\n\r\n        formData.append('image', addedImage)\r\n        formData.append('title', values?.nfts?.map(x =>\r\n            x.nft_name\r\n        ))\r\n        // const newlist = newList.push(nft_collection_id);\r\n        formData.append('collection_id', coll_id)\r\n        // formData.append('nft_description', nft_description)\r\n        formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n        // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n\r\n        // dispatch(uploadNFT())\r\n        dispatch(AddNftAction(formData, id, setLoading))\r\n        // setLoading(false)\r\n\r\n        // console.log('Received values of form:', values, data)\r\n\r\n    };\r\n    // console.log('title', localStorage.getItem('title'))\r\n    const handleCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n        beforeUpload: () => {\r\n            return false;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    // const getFile = (e) => {\r\n    //     // \r\n    //     console.log('Upload event:', e);\r\n\r\n    //     if (Array.isArray(e)) {\r\n    //         return e;\r\n    //     }\r\n    //     return e && e.fileList;\r\n    // };\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n\r\n                                <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n\r\n\r\n                                <div>\r\n                                    {loading ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n\r\n                                        <div >\r\n                                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                                nfts: nfts\r\n                                            }}\r\n                                                // onSubmit={(event) => handleSubmit(event)}\r\n                                                onFinish={(event) => onFinish(event)}\r\n                                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                                <Form.List name=\"nfts\">\r\n\r\n                                                    {(fields, { add, remove }) => (\r\n                                                        <>\r\n                                                            {/* <div className='steps-center'>\r\n\r\n\r\n                                                <div className='orgicon1'>\r\n\r\n                                                    <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n                                                </div>\r\n\r\n                                                <div className='orgicon1line'>\r\n                                                    <span style={{}}> ----------------------------- </span>\r\n\r\n                                                </div>\r\n                                                <div className='orgicon2'>\r\n\r\n                                                    <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n                                                </div>\r\n                                            </div> */}\r\n                                                            <>\r\n                                                                {fields.map(({ key, name, ...restField }, index) => (\r\n                                                                    // <Space\r\n                                                                    //     key={key}\r\n                                                                    //     style={{\r\n                                                                    //         display: 'flex',\r\n                                                                    //         marginBottom: 8,\r\n                                                                    //     }}\r\n                                                                    //     align=\"baseline\"\r\n                                                                    // >\r\n\r\n                                                                    <Fragment>\r\n                                                                        {/* <div>Artwork {index}</div> */}\r\n                                                                        <div className=\"row\">\r\n\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label>Name</label>\r\n                                                                                <div>\r\n\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_name\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: 'Missing  name',\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <label>Name</label> */}\r\n                                                                                        <Input placeholder=\"Name\" />\r\n                                                                                    </Form.Item>\r\n                                                                                </div>\r\n                                                                                <label>Description</label>\r\n                                                                                <div>\r\n\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_description\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: 'Missing  description',\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <Controller\r\n                                                                            control={control}\r\n                                                                            name=\"nft_description\"\r\n                                                                            defaultValue=\"\"\r\n                                                                            render={({ field: { value, onChange } }) => {\r\n                                                                                return  */}\r\n                                                                                        <JoditEditor\r\n                                                                                            ref={editor}\r\n                                                                                            value={'nft_description'}\r\n                                                                                            // config={config}\r\n\r\n                                                                                            placeholder=\"start typing\"\r\n                                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                                            // onBlur={newContent => 'nft_description'(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                                                            onChange={newContent => { }}\r\n                                                                                        />\r\n                                                                                        {/* }} */}\r\n                                                                                        {/* /> */}\r\n                                                                                    </Form.Item>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            {/* <div className=\"col-md-5 col-12\">\r\n                                                                    <label>Nft</label>\r\n                                                                    <div>\r\n                                                                        <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a image',\r\n                                                                                },\r\n                                                                            ]}\r\n\r\n                                                                        >\r\n\r\n                                                                            <Upload\r\n                                                                                {...fileProps}\r\n                                                                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                                listType=\"picture-card\"\r\n                                                                                // fileList={fileList}\r\n                                                                                // onChange={onChange}\r\n                                                                                onPreview={handlePreview}\r\n                                                                                maxCount={1}\r\n\r\n                                                                            >\r\n                                                                                + Upload\r\n                                                                            </Upload>\r\n\r\n\r\n                                                                        </Form.Item>\r\n                                                                        <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                            <img\r\n                                                                                alt=\"example\"\r\n                                                                                style={{\r\n                                                                                    width: '100%',\r\n                                                                                }}\r\n                                                                                src={previewImage} />\r\n                                                                        </Modal>\r\n                                                                    </div>\r\n                                                                </div> */}\r\n                                                                            {/* <div className=\"col-md-1 col-12\">\r\n                                                                                <MinusCircleOutlined onClick={(e) => { remove(name); handleDecrement(e); }} />\r\n                                                                            </div> */}\r\n                                                                            {/* </div> */}\r\n                                                                            <div className='col-12'>\r\n                                                                                <label className='mt-2 mb-3'>Choose Collection</label>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n\r\n                                                                                {/* <div className=\"col-24\"> */}\r\n\r\n                                                                                <div className=\"form-group\">\r\n\r\n                                                                                    <div className=\"card choose_div\" style={{\r\n                                                                                        background: \"black\",\r\n                                                                                        marginBottom: \"8px\",\r\n                                                                                    }}>\r\n                                                                                        <div className=\"card-body \">\r\n                                                                                            <Button variant=\"primary\" className='collection_btn' onClick={() => setModalShow(true)}>\r\n                                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n                                                                                            </Button>\r\n\r\n                                                                                            <MyVerticallyCenteredModal\r\n                                                                                                show={modalShow}\r\n                                                                                                onHide={() => setModalShow(false)} />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n\r\n                                                                            {col?.map((item, idx) => (\r\n\r\n                                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-6 col-lg-3 col-12 choose_div\">\r\n                                                                                    {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_collection_id\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select nft collection',\r\n                                                                                },\r\n                                                                            ]}\r\n\r\n                                                                        > */}\r\n\r\n\r\n                                                                                    <div id={item.id} onClick={() => onHandleClick(index, item.id)} className=\"card\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                            border: nft_collection_id[index] == item.id ? \"1px solid #fff\" : null\r\n                                                                                        }}>\r\n                                                                                        <div className=\"card-body\">\r\n                                                                                            <div>\r\n\r\n\r\n                                                                                                {item.title}\r\n                                                                                            </div>\r\n\r\n\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    {/* </Form.Item> */}\r\n\r\n                                                                                </div>\r\n                                                                                // </div>\r\n                                                                            ))}\r\n                                                                            <div className=\"col-md-12 col-12\">\r\n                                                                                <label>Upload Nft</label>\r\n                                                                                <div>\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_image\"]}\r\n                                                                                        // getValueFromEvent={getFile}\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: 'Please select a image',\r\n                                                                                            },\r\n                                                                                        ]}\r\n\r\n                                                                                    >\r\n\r\n                                                                                        <Upload\r\n                                                                                            {...fileProps}\r\n                                                                                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                                            listType=\"picture-card\"\r\n                                                                                            // fileList={fileList}\r\n                                                                                            // onChange={onChange}\r\n                                                                                            onPreview={handlePreview}\r\n                                                                                            maxCount={1}\r\n\r\n                                                                                        >\r\n                                                                                            + Upload\r\n                                                                                        </Upload>\r\n\r\n\r\n                                                                                    </Form.Item>\r\n                                                                                    <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                                        <img\r\n                                                                                            alt=\"example\"\r\n                                                                                            style={{\r\n                                                                                                width: '100%',\r\n                                                                                            }}\r\n                                                                                            src={previewImage} />\r\n                                                                                    </Modal>\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n\r\n                                                                ))}\r\n\r\n\r\n\r\n                                                            </></>\r\n                                                    )}\r\n\r\n                                                </Form.List>\r\n                                                <Form.Item>\r\n                                                    <div className=\"col-12\">\r\n                                                        <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">Add</button>\r\n                                                    </div>\r\n\r\n                                                </Form.Item>\r\n                                            </Form>\r\n                                        </div>\r\n\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default AddNft;","import React, { Component, useEffect } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Creates from '../components/Create/Create';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport { isLogin } from '../routers/utils';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UploadNftIndex from '../components/Create';\r\nimport AddNft from '../components/Create/addNft';\r\n\r\nconst AddNFT = () => {\r\n    const history = useHistory();\r\n\r\n    // useEffect(() => {\r\n    //   if (!isLogin()) {\r\n    //     history.push('/login')\r\n    //   }\r\n    // }, [])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AddNft />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddNFT;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { Button } from 'bootstrap';\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from '../TopSeller/fundraiserdetail';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst MyFundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    // console.log(fundprojdetail, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div class=\"row py-0\">\r\n                    <div className='col-12 p-0'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-between px-0\">\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div className='custam_col'>\r\n                            <h5 class=\"user_title\"><div>Description</div></h5>\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n                                    <div className=\"card no-hover detail_single_nfts\">\r\n\r\n                                        <li className='nft_price'>\r\n                                            ${funddetail?.total_fundraised} raised from all projects\r\n\r\n                                        </li>\r\n\r\n\r\n                                        {/* <li className=\"price d-flex justify-content-between\">\r\n                                                <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"> 71% </span>\r\n    \r\n                                            </li> */}\r\n\r\n                                    </div>\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        {/* <li className='card-inner-heading'>\r\n                                            <span style={{}}>Projects</span>\r\n                                        </li> */}\r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    // console.log('todat', date2)\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    // const totaldays = days_difference.slice(0,1)\r\n                                                    // console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                    {/* {(item.created_at).diff(new Date, 'day', true)} */}\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-12'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default MyFundraiserDetail;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreFive';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\nimport MyFundraiserDetail from '../components/Explore/my_fundraise';\r\n\r\nconst FundraiserProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <MyFundraiserDetail />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FundraiserProjects;","import React from \"react\";\r\nimport { BrowserRouter, BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// importing all the themes\r\nimport ThemeOne from \"../themes/theme-one\";\r\nimport ExploreOne from \"../themes/explore-one\";\r\nimport ExploreTwo from \"../themes/project-list\";\r\nimport ReadProject from \"../components/Explore/ProjectList\";\r\nimport ExploreFour from \"../themes/latestProjects\";\r\nimport Auctions from \"../themes/auctions\";\r\nimport ItemDetails from \"../themes/item-details\";\r\nimport Activity from \"../themes/activity\";\r\nimport Blog from \"../themes/blog\";\r\nimport BlogSingle from \"../themes/blog-single\";\r\nimport HelpCenter from \"../themes/help-center\";\r\nimport Authors from \"../themes/authors\";\r\nimport Author from \"../themes/author\";\r\nimport WalletConnect from \"../themes/wallet-connect\";\r\nimport Create from \"../themes/create\";\r\nimport Login from \"../themes/login\";\r\nimport Signup from \"../themes/signup\";\r\nimport Contact from \"../themes/contact\";\r\nimport Forgot from \"../themes/forgotpassword\";\r\nimport PrivateRoute from \"./privateRoutes\";\r\nimport ProjectUpdate from \"../themes/update\";\r\nimport TermsCond from \"../themes/term&cond\";\r\nimport All from \"../themes/viewalllatest\";\r\nimport ColExplore from \"../themes/exploreCollections\";\r\nimport Aboutus from \"../themes/Aboutus\";\r\nimport LiveAuctions from \"../components/Auctions/AuctionsTwo\";\r\nimport NewestProj from \"../themes/newestproj\";\r\nimport latprojDetails from \"../themes/latproj-details\";\r\nimport Showcollections from \"../themes/showcollections\";\r\nimport Collectiondetails from \"../themes/collectn-details\";\r\nimport CollectionDetail from \"../themes/collectn-details\";\r\nimport ProjNft from \"../themes/projnft-details\";\r\nimport Nft from './../themes/nft-list';\r\nimport FundDetail from \"../themes/fund-detail\";\r\nimport { useEffect } from \"react\";\r\nimport latnftprojDetails from \"../themes/Latnft\";\r\nimport ScrollToTop from \"../ScrollToTop\";\r\nimport EditNft from \"../components/Create/editNft\";\r\nimport AddNFT from \"../themes/addnftTheme\";\r\nimport FundraiserProjects from \"../themes/fundraise\";\r\n// import { NavLink } from \"react-router-dom\";\r\n\r\nconst MyRouts = () => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <ScrollToTop />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ThemeOne} />\r\n          <Route exact path=\"/explore-1\" component={ExploreOne} />\r\n          <Route exact path=\"/projectlist\" component={ExploreTwo} />\r\n          <Route exact path=\"/updateproject/:id\" component={ProjectUpdate} />\r\n          {/* <Route exact path=\"/projectlist\" component={ExploreThree} /> */}\r\n          <Route exact path=\"/explore-4\" component={ExploreFour} />\r\n          <Route exact path=\"/auctions\" component={Auctions} />\r\n          <Route exact path=\"/popularcollection/details/:id\" component={ItemDetails} />\r\n          <Route exact path=\"/projdetails/:id\" component={latprojDetails} />\r\n          <Route exact path=\"/nftprojdetails/:id\" component={latnftprojDetails} />\r\n          <Route exact path=\"/fundraiser/detail/:user_id\" component={FundDetail} />\r\n          <Route exact path=\"/myfundraiser/detail/:user_id\" component={FundraiserProjects} />\r\n          <Route exact path=\"/projnftdetails/:id\" component={ProjNft} />\r\n          <Route exact path=\"/nft/details/:id\" component={Nft} />\r\n          <Route exact path=\"/nftedit/:id/:id\" component={EditNft} />\r\n          <Route exact path=\"/addnft/:id\" component={AddNFT} />\r\n          <Route exact path=\"/activity\" component={Activity} />\r\n          <Route exact path=\"/blog\" component={Blog} />\r\n          <Route exact path=\"/blog-single\" component={BlogSingle} />\r\n          <Route exact path=\"/help-center\" component={HelpCenter} />\r\n          <Route exact path=\"/authors\" component={Authors} />\r\n          <Route exact path=\"/profile\" component={Author} />\r\n          <Route exact path=\"/terms&conditions\" component={TermsCond} />\r\n          <Route exact path=\"/all/:type\" component={All} />\r\n          <Route exact path=\"/aboutus\" component={Aboutus} />\r\n          <Route exact path=\"/allcollections\" component={ColExplore} />\r\n          <Route exact path=\"/wallet-connect\" component={WalletConnect} />\r\n          <Route exact path=\"/my-collections\" component={Showcollections} />\r\n          <Route exact path=\"/collection/:id\" component={CollectionDetail} />\r\n          {/* <Route exact path=\"/newest-projects\" component={NewestProj} /> */}\r\n\r\n          <Route exact path=\"/create\" component={Create} />\r\n\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          {/* <PrivateRoute exact path=\"/create-organization\" component={createOrganization} /> */}\r\n          <PrivateRoute exact path=\"/forgotpassword\" component={Forgot} />\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyRouts\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\n// importing MyRouts where we located all of our theme\r\nimport MyRouts from './routers/routes'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MyRouts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport { authReducer, userDetail } from '../redux/Slices/authSlice'\r\nimport { combineReducers } from '@reduxjs/toolkit'\r\nimport { projectReducer } from './Slices/projectSlice'\r\nimport { footerReducer } from './Slices/footerSlice'\r\nimport { fundraiserReducer } from './Slices/fundraiserSlice'\r\nimport { collectionReducer } from './Slices/popularCollectionSlice'\r\n\r\nconst reducer = combineReducers({\r\n    user: authReducer,\r\n    countries: authReducer,\r\n    annualRevenue: authReducer,\r\n    hereAbout: authReducer,\r\n    login: authReducer,\r\n    forgotpassword: authReducer,\r\n    errmessage: authReducer,\r\n    createproject: projectReducer,\r\n    // getproject: projectReducer,\r\n    projectdetails: projectReducer,\r\n    latestprojects: projectReducer,\r\n    fundraiser: fundraiserReducer,\r\n    footer: footerReducer,\r\n    collection: collectionReducer,\r\n    getcollections: collectionReducer,\r\n    getcollectiondetails: collectionReducer,\r\n    getSocialmediaIcons: projectReducer,\r\n    // userDetail: authReducer,\r\n\r\n    // Nftlist: projectReducer\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer,\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css'\r\nimport App from './App';\r\nimport store from '../src/redux/store';\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}