{"version":3,"sources":["components/Signup/styles/styles.module.scss","redux/Slices/authSlice.js","redux/Slices/projectSlice.js","redux/Actions/projectAction.js","components/Wallet/interact.js","redux/Actions/authAction.js","components/Header/Header.js","components/Hero/Hero.js","components/Auctions/AuctionsOne.js","redux/Slices/popularCollectionSlice.js","redux/Actions/popularAction.js","components/Collections/Collections.js","components/Work/Work.js","redux/Slices/footerSlice.js","redux/Actions/footerAction.js","components/Footer/Footer.js","components/Modal/ModalSearch.js","components/Modal/ModalMenu.js","components/Scrollup/Scrollup.js","redux/Slices/fundraiserSlice.js","redux/Actions/fundraiserAction.js","components/TopSeller/topfundraiser.js","redux/Slices/resellNftSlice.js","redux/Actions/resellNftAction.js","components/Auctions/resellNft.js","themes/theme-one.js","components/Breadcrumb/Breadcrumb.js","components/Explore/ExploreTwo.js","themes/explore-one.js","components/Loader/loader.js","components/Explore/ProjectList.js","themes/project-list.js","themes/latestProjects.js","components/Explore/LatestProjects.js","themes/auctions.js","readMore.js","components/TopSeller/fundPaymenttable.js","components/AuthorProfile/userDetails.js","components/Create/projectDetailpopup.js","components/AuthorProfile/userTransTable.js","components/Explore/projDetailtable.js","components/Explore/latProjNftdata.js","components/Auctions/projectnfts.js","components/Collections/collectionNfts.js","components/Explore/popularDetails.js","themes/item-details.js","components/Activity/Activity.js","themes/activity.js","components/HelpCenter/HelpCenter.js","components/Faq/Faq.js","themes/help-center.js","components/Authors/Authors.js","components/TopSeller/TopSellerTwo.js","themes/authors.js","shared/Upload.js","utils/blobfromurl.js","components/Create/editBanner.js","components/AuthorProfile/avatarUpload.js","components/AuthorProfile/bannerUpload.js","components/AuthorProfile/AuthorProfile.js","components/Explore/ExploreSix.js","components/Author/Author.js","themes/author.js","components/Wallet/Wallet.js","themes/wallet-connect.js","components/Create/Context/context.js","components/Create/Create.js","components/Create/createCollection.js","components/Create/3dModal.js","components/Create/ProjectTypePopup.js","components/Create/uploadNft.js","components/Create/index.js","themes/create.js","components/Login/Login.js","themes/login.js","components/Signup/FormCard.js","components/Signup/Context/context.js","components/Signup/Signup.js","components/Signup/createOrganization.js","components/Signup/index.js","themes/signup.js","redux/Slices/contactSlice.js","components/Contact/Contact.js","redux/Actions/contactAction.js","themes/contact.js","components/ForgotPassword/forgotPassword.js","themes/forgotpassword.js","routers/utils.js","routers/privateRoutes.js","components/Create/geoLocation.js","Edit/editProject.js","themes/update.js","components/Footer/t&c.js","themes/term&cond.js","components/Explore/viewAllLatest.js","themes/viewalllatest.js","components/Collections/exploreCollection.js","themes/exploreCollections.js","components/Footer/about.js","themes/Aboutus.js","components/ItemDetails/refralPopup.js","components/Create/editNft.js","components/Explore/nftdataTable.js","components/ItemDetails/GetMAtic.js","components/ItemDetails/viewProdetails.js","themes/latproj-details.js","components/Create/showCollections.js","themes/showcollections.js","components/Create/bread-crumb.js","components/Create/collectionDetail.js","themes/collectn-details.js","components/Create/desPopup.js","components/Create/projdetails.js","themes/projnft-details.js","components/ItemDetails/nftPopup.js","components/Auctions/nftTRansTable.js","components/Explore/latnftTable.js","components/Auctions/buyPopup.js","components/Auctions/nftBuy.js","components/ItemDetails/nftAuctiontable.js","components/ItemDetails/sellPopup.js","components/Create/editNftNamepopup.js","components/Create/editDescPopup.js","components/Create/nftImageeditPopup.js","components/ItemDetails/nftDetails.js","themes/nft-list.js","components/TopSeller/fundraiserdetail.js","components/TopSeller/fundraiserDetails.js","themes/fund-detail.js","themes/Latnft.js","ScrollToTop.js","components/Create/addNft.js","themes/addnftTheme.js","components/Explore/fundraiserProjects.js","themes/allFundproj.js","components/Explore/fundProj.js","themes/fund-projects.js","components/Explore/my_fundraise.js","themes/fundraise.js","components/Footer/reward.js","themes/rwrd.js","components/Header/Allnotifications.js","themes/allnot.js","components/Explore/BuyedNfts.js","themes/buyed-nft.js","components/Explore/NftBuyData.js","components/Explore/NftBuyedDetails.js","themes/buyNft-details.js","components/Signup/roleChangeOrginazationdetails.js","themes/rolechange-organization.js","components/Auctions/resellNftBuy.js","themes/resell-details.js","components/Explore/viewallResell.js","themes/allresellNfts.js","components/Explore/viewReferals.js","themes/all-refrals.js","routers/routes.js","App.js","redux/store.js","index.js","components/Create/styles/styles.module.scss"],"names":["module","exports","userToken","localStorage","getItem","authSlice","createSlice","name","initialState","user","userdetail","role","logout","message","countries","states","city","noti","annualRevenue","hereAbout","updpro","wallesign","organization","reducers","registerSuccess","state","action","payload","data","auth_token","setItem","registerFail","response","allnotification","updateprofile","userDetail","loginSuccess","logoutSuccess","removeItem","forgotpasswordSuccess","createOrganizationSuccess","wallsignin","getCountryList","getStateList","getCityList","getAnnualRevenueList","getHearAboutList","authReducer","reducer","actions","projectSlice","project","projects","nftlist","projectdetails","latestprojectdetails","categories","collections","getcollections","getcollectiondetails","collectiondetails","getSocialmediaIcons","getfundProjDetails","getmostProjActivity","getBuyedNftdetails","getnftwoldetails","settings","nftadd","nftres","nftupdate","updbanner","matic","liveProjects","LatestProjects","RecentCampaigns","createProjectSuccess","createCollectionSuccess","getCollections","getsocial","getCollectionDetails","getNftwolDetails","nftUpd","nftAdd","getfundprojdetails","getmostprojactivity","getbuyednftdetails","getProjectList","getMatic","getCategoriesList","getSettings","getLatestProjectList","createFail","getProjectDetail","getCollectionDetail","Nftres","getNftList","getLatestProjectDetail","updatebanner","publicLiveProjects","type","res","deleteProject","id","filter","item","projectReducer","CreateProjectAction","params","setLoading","history","dispatch","token","config","headers","Authorization","transformRequest","formData","axios","post","process","status","swal","title","text","icon","buttons","timer","then","push","ProjectDetail","slug","get","LatestProjectDetail","ProjectList","NftList","uploadNFT","FormData","append","success","catch","error","getPublicLiveProjects","createAsyncThunk","thunkAPI","projectType","latitude","longitude","UpdateProject","props","window","location","CategoriesAction","GetCollectionsAction","GetSocialMediaIcons","GetSettings","GetNftwol","GetfundraiserProject","UpdateNft","nft_id","onHide","AddNftAction","projid","GetbuyedNftDetails","ResellNft","createAlchemyWeb3","require","contractABI","isMetaMaskInstalled","Boolean","ethereum","web3","Roles","creatorWalletUpdate","selectedAddress","UpdateWalletAddress","ConnectWallet","chainId","networkVersion","request","method","utils","toHex","code","chainName","nativeCurrency","decimals","symbol","rpcUrls","addressArray","obj","address","target","rel","href","getCurrentWalletConnected","length","UpdateStatus","token_id","transaction_hash","pay_from","pay_to","price","start_date","end_date","UpdateContract","collid","contractAddress","CreateMetaDataAndMint","_imgBuffer","_des","_name","setCurrent","nft_file_content","eth","Contract","abi","contract","sendTransaction","to","from","methods","mint","encodeABI","on","hash","receipt","confNumber","tokid","hexToNumber","logs","topics","transactionHash","alert","UpdateBuyHistory","proj_id","refid","txd_id","payFrom","tokenId","values","updateReffid","referral_fees","fees","BuyNft","platformFee","sellingCount","ownerFee","flow","ownerWallet","loadingg","modal","wallets","fee","bala","fromWei","getBalance","console","log","buyer_data","map","x","karmatica_fees","project_data","nftContract","memory_clients","wal","memory_amounts","amt","amountToSend","toWei","transferowner","buyNft","JSON","stringify","Register","GetUserAction","CreateOrganizationAfterRoleChange","CountryList","StateList","CityList","AnnualRevenueList","HearAboutList","UpdateProfileAction","Swal","fire","html","showCloseButton","showConfirmButton","focusConfirm","AllNoti","NotiDelete","delete","Header","useLocation","useHistory","useDispatch","useState","setAddress","add1","slice","toUpperCase","add2","userRole","useSelector","useEffect","getSelectedAddress","accounts","addEventListener","handleBeforeUnload","removeEventListener","e","preventDefault","returnValue","userdet","notiHandler","activeOption","setActiveOption","roleHandler","ChangeUserRole","WalletHandler","is_new_user","continue","skip","value","className","src","alt","exact","activeClassName","onClick","confirmButtonText","confirmButtonAriaLabel","pathname","notification_count","notification","moment","created_at","format","style","color","backgroundColor","email","class","display","user_id","projectTypesMap","Hero","options","enableHighAccuracy","timeout","maximumAge","pos","crd","coords","errors","err","warn","mostactivityProjects","cursor","navigator","geolocation","permissions","query","result","getCurrentPosition","onchange","image","user_data","username","xmlns","viewBox","version","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fill","fillRule","points","dur","repeatCount","attributeName","AuctionsOne","match","join","idx","Math","round","number_of_nft","collectionSlice","collection","collectiondetail","getPopularCollection","getPopularCollectiondetails","collectionReducer","PopularCollectionAction","PopularCollectionActionDetails","Collections","coll","avatar","width","height","nft_data","preHeading","heading","workData","Work","footerSlice","footer","aboutus","getfooter","getabout","footerReducer","getFooter","AboutUsAction","Footer","Date","getFullYear","ModalSearch","placeholder","ModalMenu","Scrollup","fundraiserSlice","fundraiser","fundraiserdetail","getTopFundraiser","getTopFundraiserDetail","fundraiserReducer","TopFundraiserAction","TopFundraiserDetail","Fundraiser","fund","organization_detail","banner_image","organization_name","amount","resellSlice","resell","reselldetails","getResell","getReselldetails","resellReducer","ResellAction","Resell","nfts","Home","Breadcrumb","this","subpage","page","Component","ExploreTwo","exploreData","setState","btnText","img","owner","ExploreOne","Loader","Spinner","animation","margin","GetAllProjects","loading","showDeleteHandler","dangerMode","willDelete","DeleteProject","Map","is_nft_mintted","description","LatestProject","Auctions","ReadMore","isReadMore","setIsReadMore","dangerouslySetInnerHTML","__html","FundTransdataTable","Panel","Collapse","expandIconPosition","funddetail","country","defaultActiveKey","onChange","key","opacity","d","cx","cy","r","header","Table","responsive","payment_history","items","project_id","UserTransdataTable","useParams","ProjDetailPopup","useRef","useForm","register","handleSubmit","formState","setValue","control","watch","setDescription","setType","setCountry","setCity","handleChangeCountry","event","currentTarget","handleChangeState","handleChangeCity","cities","projdetail","cat","Object","keys","category_id","Modal","size","centered","Body","onSubmit","required","render","field","onBlur","ref","disabled","selected","option","defaultValue","min","max","today","dd","String","getDate","padStart","mm","getMonth","disablePastDate","UserdataTable","React","wallet_id","referrers","referral_amount","total_fundraised","ProjdataTable","modalShowproj","setModalShowproj","latprojdetail","date1","updated_at","time_difference","getTime","days_difference","ceil","show","dayjs","country_name","state_name","city_name","category","LatNftdataTable","project_activity","nft_title","ProjNFTS","marginLeft","sold_nft","CollectionNFTS","collNft","CollectionDetails","Web3","providers","HttpProvider","ItemDetails","Activity","tabData_1","tabData_2","tabData_3","filterData","tabTitle_1","tabTitle_2","tabTitle_3","time","seller","widgetTitle","initData","pre_heading","content","HelpCenter","btnClass","quote","contentId","contentClass","Faq","Authors","authorData","author","TopSeller","sellerData","UploadImage","initalImag","setImageSrc","imageSrc","initialImage","borderRadius","language","objectFit","compressInitial","hideDownloadBtn","imageSrcProp","imageChanged","newDataUri","dataURLtoBlob","dataurl","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","Banner","Title","Upload","Button","UpdateBanner","AvatarUpload","BannerUpload","AuthorProfile","modalSho","setModalSho","modalShowavatar","setModalShowavatar","textTransform","filter_1","filter_2","filter_3","filter_4","filter_5","group","likes","Author","Wallet","handleConnect","walletData","WalletConnect","FormContext","createContext","FormProvider","children","setData","Provider","setFormValues","prevValues","useFormData","useContext","Create","current","next","prev","setPrice","setImage","usertype","setUserType","countryName","setCountryName","country_id","mode","imageUri","date","setDate","toISOString","substr","styles","showForm","hideForm","imageBanner","pattern","rules","minLength","tabIndex","newContent","step","entries","MyVerticallyCenteredModal","dat","short_url","CreateCollectionAction","DModal","vdo","refContainer","renderer","setRenderer","source","file","container","scW","clientWidth","scH","clientHeight","THREE","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","outputEncoding","appendChild","domElement","scene","scale","camera","initialCameraPosition","sin","PI","cos","ambientLight","add","controls","OrbitControls","autoRotate","enableZoom","minDistance","minZoom","GLTFLoader","load","gltf","traverse","child","isMesh","m","receiveShadow","castShadow","isLight","l","shadow","bias","mapSize","xhr","animate","loaded","total","req","frame","requestAnimationFrame","p","rotSpeed","sqrt","pow","position","y","z","lookAt","update","cancelAnimationFrame","dispose","left","top","ProTypePopup","defaultValue1","startdate","enddate","nftno","maxLength","UploadNft","editor","count","setCount","nft_description","setNft_description","modalShow","setModalShow","projmodalShow","setProjModalShow","nft_collection_id","setNft_collection_id","nft","setNft","nftwidth","setNftwidth","nftHeight","setNftheight","Pimage","setPimage","startDate","setStartDate","endDate","setEndDate","numberofNfts","setNumberofNfts","coll_id","setSource","sourceType","setSourceType","setNFtExtension","preview","setPreview","projtype","setProjType","nftName","setNftName","nftDescription","convertToBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","previewChange","index","pimage","files","base64","prevState","col","lat","onFinish","nftImagepromises","all","imagesRes","addedImage","image_hash","extension","includes","nft_name","Form","form","nftNameHandler","initialValues","autoComplete","List","fields","remove","transform","restField","accordion","URL","createObjectURL","Item","previ","nftDescriptionHandler","MinusCircleOutlined","prevCount","onHandleClick","background","marginBottom","border","variant","backgroundImage","backgroundSize","backgroundRepeat","maxCount","filetype","fr","Image","handleUpload","accept","backgroundPosition","block","PlusOutlined","steps","UploadNftIndex","Login","login","password","FormCard","currentStep","prevFormStep","formSchema","Yup","shape","confirm_password","oneOf","Signup","formStep","nextFormStep","resolver","yupResolver","errMessage","errmessage","validate","val","CreateOrganization","goBack","socialmedia","logo","goal","url","tax_id","social","social_link","disp","SignupIndex","setFormStep","contactSlice","contact","postContact","contactReducer","Contact","subject","ContactAction","cols","rows","ForgotPassword","forgotpassword","statusCode","Forgot","TOKEN_KEY","PrivateRoute","component","rest","restricted","Geonames","lan","encoding","EditProject","htmlFor","ProjectUpdate","TermsConditions","TermsCond","ExploreAll","All","AllCollections","ColExplore","AboutUs","about","Aboutus","ReferalPopup","copy","setCopy","userRef","userprojurl","TwitterShareButton","TwitterIcon","FacebookShareButton","FacebookIcon","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","EmailIcon","onMouseLeave","EditNft","nftFileType","setNFtFileType","previewnft","setPreviewnft","modalShowcoll","setModalShowcoll","nftdetail","setFieldsValue","collection_id","nft_image","preview_imag","extention","defaultValues","NftdataTable","collectionData","contract_id","GetMatic","setMatic","ProjDetails","search","URLSearchParams","modalShowrefer","setModalShowrefer","Number","project_count","cad","referrer_id","ProgressBar","varient","now","project_percentage","user_invest","latprojDetails","ShowCollections","Showcollections","CollItem","coldetail","GetCollectionDetails","CollectionDetail","DesPopup","ProjNftDetails","setmatic","nftId","modalShowDes","setModalShowDes","is_mint","ProjNft","NftPopup","Step","Steps","closeButton","direction","LoadingOutlined","CheckOutlined","NftTransdataTable","latprojnftdetail","nft_history","LatNftDataTable","CONTRACT_ADDRESS_URL","BuyPopup","LatprojNftDetails","ownwallet","buymodalShow","setBuyModalShow","getSett","find","buyHandler","selling_count","payment_flow","karmatica_fee","reffHandler","Class","owned_by","NftAuctiondataTable","bidstatus","setBidStatus","acceptHandler","UpdateBId","bids","SellPopup","auctiontype","setAuctionType","autionTypeChange","deployContract","MyNFTContract","NFTContract","getGasPrice","deploy","bytecode","arguments","send","ismint","OnSubmit","nftid","defaultChecked","EditNftName","EditNftDesc","EditNftImage","NftDetails","setNftID","projslug","sellmodalShow","setSellModalShow","modalShowedit","setModalShowedit","modalShoweditdes","setModalShoweditdes","modalShoweditimg","setModalShoweditimg","Nft","FunddataTable","tax_number","web_url","FundraiserDetail","fundprojdetail","investHandler","FundDetail","latnftprojDetails","ScrollToTop","scrollTo","AddNft","check","AddNFT","GetAllFundraise","AllFundraiser","GetAllFundraiseProjects","AllFundraiserProjects","MyFundraiserDetail","FundraiserProjects","Rewards","NftReward","AllNotifications","nooti","Notifi","ExploreBuyedNfts","purchase_nft","BuyedNft","NftBuydataTable","BuyedNftDetails","nft_type","BuyNftDetail","RoleChangeOrganizationdetails","createOrganizationafterRoleChange","ResellNftDetails","resellnftdetail","ResellActionDetails","ResellDetail","ExploreAllResell","AllResellNft","RefralTransdataTable","referral_history","collection_slug","collection_name","AllReraltrans","MyRouts","path","ThemeOne","ExploreFour","App","combineReducers","createproject","latestprojects","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5e03d5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3EpRl\",\"formCard\":\"styles_formCard__128GU\",\"formRow\":\"styles_formRow__31I_A\",\"back\":\"styles_back__2acxp\",\"input-error\":\"styles_input-error__1SwWq\",\"error\":\"styles_error__10-bT\",\"disabledBtn\":\"styles_disabledBtn__3b7hK\",\"steps\":\"styles_steps__29JeH\",\"errorText\":\"styles_errorText__Ha8IR\",\"hideForm\":\"styles_hideForm__3in2Q\",\"showForm\":\"styles_showForm__105xC\"};","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\nconst userToken = localStorage.getItem('authToken')\r\n    // ? JSON.parse(localStorage.getItem('user'))\r\n    ? localStorage.getItem('authToken')\r\n    : null\r\n\r\nconst authSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: {},\r\n        userdetail: [],\r\n        userToken,\r\n        role: null,\r\n        // wallToken,\r\n        logout: {},\r\n        message: {},\r\n        countries: [],\r\n        states: [],\r\n        city: [],\r\n        noti: [],\r\n        annualRevenue: [],\r\n        hereAbout: [],\r\n        updpro: [],\r\n        wallesign: [],\r\n        organization: false\r\n    },\r\n    reducers: {\r\n        registerSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.userToken = action.payload.data.data.auth_token;\r\n            state.role = action.payload.data.data.role;\r\n            localStorage.setItem('authToken', action.payload.data.data.auth_token)\r\n        },\r\n        registerFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        allnotification: (state, action) => {\r\n\r\n            state.noti = action.payload.data.data\r\n        },\r\n        updateprofile: (state, action) => {\r\n            // \r\n            state.updpro = action?.payload?.data?.data;\r\n        },\r\n        userDetail: (state, action) => {\r\n            // \r\n            state.userdetail = action.payload.data.data\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.role = action.payload?.data?.data?.role;\r\n            state.message = action.payload?.data?.message\r\n            state.userToken = action.payload?.data?.data?.auth_token;\r\n            localStorage.setItem('authToken', action.payload?.data?.data?.auth_token)\r\n        },\r\n        logoutSuccess: (state) => {\r\n            localStorage.removeItem('authToken')\r\n            state.user.role = null\r\n            state.userToken = null\r\n        },\r\n        forgotpasswordSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.message = action.payload.data.message\r\n\r\n        },\r\n        createOrganizationSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.organization = true\r\n        },\r\n        wallsignin: (state, action) => {\r\n            state.wallesign = action.payload?.data?.data;\r\n        },\r\n        getCountryList: (state, action) => {\r\n            state.countries = action.payload;\r\n        },\r\n        getStateList: (state, action) => {\r\n            state.states = action.payload;\r\n        },\r\n        getCityList: (state, action) => {\r\n            state.city = action.payload;\r\n        },\r\n\r\n        getAnnualRevenueList: (state, action) => {\r\n            state.annualRevenue = action.payload;\r\n        },\r\n\r\n        getHearAboutList: (state, action) => {\r\n            state.hereAbout = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer\r\n\r\nexport const {\r\n    allnotification,\r\n    registerSuccess,\r\n    createOrganizationSuccess,\r\n    getCountryList,\r\n    getStateList,\r\n    getCityList,\r\n    getAnnualRevenueList,\r\n    getHearAboutList,\r\n    loginSuccess,\r\n    forgotpasswordSuccess,\r\n    logoutSuccess,\r\n    registerFail,\r\n    userDetail,\r\n    wallsignin,\r\n    updateprofile\r\n} = authSlice.actions;","import { createSlice } from '@reduxjs/toolkit'\r\n// // Slice\r\n// const userToken = localStorage.getItem('authToken')\r\n//     // ? JSON.parse(localStorage.getItem('user'))\r\n//     ? localStorage.getItem('authToken')\r\n//     : null\r\nconst projectSlice = createSlice({\r\n    name: 'project',\r\n\r\n    initialState: {\r\n        project: [],\r\n        projects: [],\r\n        nftlist: [],\r\n        projectdetails: [],\r\n        latestprojectdetails: [],\r\n        categories: [],\r\n        collections: [],\r\n        getcollections: [],\r\n        getcollectiondetails: [],\r\n        collectiondetails: [],\r\n        getSocialmediaIcons: [],\r\n        getfundProjDetails: [],\r\n        getmostProjActivity: [],\r\n        getBuyedNftdetails: [],\r\n        getnftwoldetails: [],\r\n        settings: [],\r\n        nftadd: [],\r\n        nftres: [],\r\n        nftupdate: [],\r\n        updbanner: [],\r\n        matic: [],\r\n        // liveProjects: [],\r\n        liveProjects: {\r\n            LatestProjects: [],\r\n            RecentCampaigns: []\r\n        },\r\n        message: {},\r\n    },\r\n    reducers: {\r\n        createProjectSuccess: (state, action) => {\r\n            state.project = action.payload;\r\n        },\r\n        createCollectionSuccess: (state, action) => {\r\n            state.collections = action.payload;\r\n        },\r\n        getCollections: (state, action) => {\r\n            // \r\n            state.getcollections = action?.payload?.data?.data;\r\n        },\r\n        getSocialmediaIcons: (state, action) => {\r\n            // \r\n            state.getsocial = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetails: (state, action) => {\r\n            // \r\n            state.getcollectiondetails = action?.payload?.data?.data;\r\n        },\r\n        getNftwolDetails: (state, action) => {\r\n            // \r\n            state.getnftwoldetails = action?.payload?.data?.data;\r\n        },\r\n        nftUpd: (state, action) => {\r\n            // \r\n            state.nftupdate = action?.payload?.data?.data;\r\n        },\r\n        nftAdd: (state, action) => {\r\n            // \r\n            state.nftadd = action?.payload?.data?.data;\r\n        },\r\n        getfundprojdetails: (state, action) => {\r\n            // \r\n            state.getfundProjDetails = action?.payload?.data?.data;\r\n        },\r\n        getmostprojactivity: (state, action) => {\r\n            state.getmostProjActivity = action?.payload?.data?.data;\r\n        },\r\n        getbuyednftdetails: (state, action) => {\r\n            state.getBuyedNftdetails = action?.payload?.data?.data;\r\n        },\r\n        getProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        getMatic: (state, action) => {\r\n            state.matic = action.payload?.data?.data\r\n        },\r\n        getCategoriesList: (state, action) => {\r\n            state.categories = action?.payload?.data?.data;\r\n        },\r\n        getSettings: (state, action) => {\r\n            state.settings = action?.payload?.data?.data;\r\n        },\r\n\r\n        getLatestProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        createFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        getProjectDetail: (state, action) => {\r\n            // \r\n            state.projectdetails = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetail: (state, action) => {\r\n            // \r\n            state.collectiondetails = action?.payload?.data?.data;\r\n        },\r\n        Nftres: (state, action) => {\r\n            // \r\n            state.nftres = action?.payload?.data?.data;\r\n        },\r\n        getNftList: (state, action) => {\r\n            // \r\n            state.nftlist = action?.payload?.data?.data;\r\n        },\r\n        getLatestProjectDetail: (state, action) => {\r\n            // \r\n            state.latestprojectdetails = action?.payload?.data?.data;\r\n        },\r\n        updatebanner: (state, action) => {\r\n            // \r\n            state.updbanner = action?.payload?.data?.data;\r\n        },\r\n        publicLiveProjects: (state, action) => {\r\n            state.liveProjects[action.payload.type] = action.payload.res.data.data.data\r\n            // state.liveProjects = action.payload.data.data.data\r\n            // state.liveProjects['R'] = action.payload.data.data.data\r\n        },\r\n        deleteProject: (state, action) => {\r\n            const { id } = action.payload?.data?.data;\r\n            state.projects = state.projects.filter(item => item.id !== id)\r\n        }\r\n    },\r\n});\r\n\r\nexport const projectReducer = projectSlice.reducer\r\n\r\nexport const {\r\n    createProjectSuccess,\r\n    getProjectList,\r\n    getProjectDetail,\r\n    getLatestProjectDetail,\r\n    publicLiveProjects,\r\n    createCollectionSuccess,\r\n    deleteProject,\r\n    createFail,\r\n    getLatestProjectList,\r\n    getCategoriesList,\r\n    getCollections,\r\n    getbuyednftdetails,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getCollectionDetail,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    Nftres,\r\n    updatebanner,\r\n    getmostprojactivity,\r\n    nftUpd,\r\n    nftAdd,\r\n    getMatic\r\n} = projectSlice.actions;","import axios from \"axios\";\r\nimport {\r\n    createProjectSuccess,\r\n    getProjectDetail,\r\n    getProjectList,\r\n    createFail,\r\n    publicLiveProjects,\r\n    deleteProject,\r\n    getLatestProjectDetail,\r\n    getCategoriesList,\r\n    createCollectionSuccess,\r\n    getCollections,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    updatebanner,\r\n    nftUpd,\r\n    nftAdd,\r\n    getMatic,\r\n    getmostprojactivity,\r\n    getbuyednftdetails\r\n} from \"../Slices/projectSlice\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport swal from \"sweetalert\";\r\n\r\nexport const CreateProjectAction = (params, setLoading, history) => async dispatch => {\r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        // \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(createProjectSuccess(res));\r\n\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal({ title: \"success\", text: res.data.message, icon: 'success', buttons: false, timer: 1500 })\r\n                .then(() => {\r\n                    history.push(\"/projectlist\");\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectDetail = (slug) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/details/${slug}`,\r\n            config)\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        // console.log('details', res)\r\n        dispatch(getProjectDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const LatestProjectDetail = (slug) => async dispatch => {\r\n    // debugger\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjectDetails/${slug}`,\r\n            config)\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getLatestProjectDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectList = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    // setLoading(true)\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/list`,\r\n            config)\r\n\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        await dispatch(getProjectList(res.data?.data));\r\n        // setLoading(false)\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            // setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const NftList = (slug, setLoading) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    setLoading(true)\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdx/${slug}`,\r\n            config)\r\n\r\n        // console.log(res, 'proj')\r\n        await dispatch(getNftList(res));\r\n        setLoading(false)\r\n\r\n\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            setLoading(false)\r\n        }\r\n    }\r\n}\r\nexport const uploadNFT = async (params) => {\r\n    // debugger\r\n    // const [loading, setLoading] = useState()\r\n    // setLoading(true)\r\n    const token = localStorage.getItem('authToken')\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        // transformRequest: formData.append('image', params)\r\n    }\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", params);\r\n    return axios\r\n        .post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n            formData, config)\r\n        .then(function (response) {\r\n            // setLoading(false)\r\n            // console.log(response, 'resss')\r\n            return {\r\n                success: true,\r\n                data: response.data,\r\n            };\r\n        })\r\n        .catch(function (error) {\r\n            // swal('error!', 'NFT not uploaded', 'error')\r\n            // uploadNFT(setLoading(false))\r\n        });\r\n    // formData.append('image',params)\r\n\r\n    // const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n    //     params, config)\r\n    // \r\n    // console.log('rasasses', res)\r\n    // return res\r\n    // await dispatch(Nftres(res))\r\n\r\n}\r\n\r\n\r\nexport const getPublicLiveProjects = createAsyncThunk(\r\n    \"auth/liveProjects\",\r\n\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const { projectType } = params\r\n            const latitude = localStorage.getItem('latitude')\r\n            const longitude = localStorage.getItem('longitude')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjects?page=&latitude=${latitude}&longitude=${longitude}&search_keyword=&category_id=&type`, config)\r\n            // console.log(res, 'projres')\r\n            thunkAPI.dispatch(publicLiveProjects({\r\n                res: res,\r\n                type: projectType,\r\n            }));\r\n            // thunkAPI.dispatch(publicLiveProjects(res));\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n\r\nexport const UpdateProject = (props, params) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/update/${props}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'proj')\r\n        await dispatch(getProjectDetail(res));\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = `/projnftdetails/${props}`;\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const DeleteProject = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/projects/destroy/${id}`,\r\n            config)\r\n        // \r\n        // console.log(res.status, 'proj')\r\n        await dispatch(deleteProject(res));\r\n        if (res.status === 200) {\r\n            dispatch(ProjectList())\r\n            // swal(\"success\", res.data.message, 'success').then(function () {\r\n            //     window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CategoriesAction = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCategories`, config)\r\n        // console.log(res, 'catres')\r\n        dispatch(getCategoriesList(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const GetCollectionsAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollection`,\r\n            config)\r\n        // console.log('colres', res)\r\n        await dispatch(getCollections(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CreateCollectionAction = ({ dat, imageBanner, props }) => async dispatch => {\r\n    try {\r\n        const formData = new FormData()\r\n        formData.append('title', dat.title)\r\n        formData.append('description', dat.description)\r\n        formData.append('short_url', dat.short_url)\r\n        formData.append('symbol', dat.symbol)\r\n        formData.append('image', imageBanner)\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createCollection`, formData,\r\n            config)\r\n        // dispatch(GetCollectionsAction)\r\n        await dispatch(createCollectionSuccess(res));\r\n        if (res?.status === 200) {\r\n\r\n            await dispatch(GetCollectionsAction());\r\n            props.onHide(false)\r\n            // swal(\"success\", 'Collection Created', 'success')\r\n            // .then(function () {\r\n            //     onClick={() => props.onHide()}\r\n            // });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\nexport const GetCollectionDetails = (id) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollectionById/${id}`,\r\n            config)\r\n\r\n        await dispatch(getCollectionDetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSocialMediaIcons = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSocialMediaIcon`,\r\n            config)\r\n        // console.log('social', res)\r\n        await dispatch(getSocialmediaIcons(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateCollection = (id, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${id}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(getLatestProjectDetail(res));\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSettings = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSettings`,\r\n            config)\r\n        // \r\n        // console.log(res, 'sett rres')\r\n        await dispatch(getSettings(res));\r\n\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetNftwol = ({ slug }) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdxWithoutLogin/${slug}`,\r\n            config)\r\n\r\n        await dispatch(getNftwolDetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetfundraiserProject = (slug) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getProjectByfundraiserIdx/${slug}`,\r\n            config)\r\n\r\n        await dispatch(getfundprojdetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateBanner = (formData, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/image_update/${params}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(updatebanner(res));\r\n\r\n        if (res.status === 200) {\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                dispatch(ProjectDetail(params))\r\n                dispatch(LatestProjectDetail(params))\r\n                // window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const UpdateNft = (formData, props, setLoading) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/update/${props.id}/${props.nft_id?.id}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftUpd(res));\r\n\r\n        if (res.status === 200) {\r\n            swal(\"success\", \"updated\", 'success')\r\n            setLoading(false)\r\n            dispatch(NftList(props.nft_id?.id))\r\n            dispatch(ProjectDetail(props.id))\r\n            props.onHide(false)\r\n            // .then(function () {\r\n            //     window.location = `/nft/details/${props.nft_id?.id}?project=${props.id}`;\r\n\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const AddNftAction = (formData, projid, slug, setLoading) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/create/${projid}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftAdd(res));\r\n\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                // dispatch(ProjectDetail(props.id))\r\n                // dispatch(LatestProjectDetail(params))\r\n                window.location = `/projnftdetails/${slug.id}`;\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetMatic = () => async dispatch => {\r\n\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n\r\n        }\r\n        // \r\n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\r\n            config\r\n        )\r\n        await dispatch(getMatic(res))\r\n        console.log('res', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};\r\nexport const getBid = (id) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getBidsDetailByIdx/${id}}`,\r\n            config)\r\n        await dispatch(res)\r\n        console.log('res bid', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};\r\nexport const UpdateBId = ({ id, status }) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/change_bids_status/${id}}`,\r\n            { status: status }, config)\r\n        await dispatch(res)\r\n\r\n        console.log('res bid', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};\r\n\r\nexport const GetMostactivityProject = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getMostActivityProject`,\r\n            config)\r\n\r\n        await dispatch(getmostprojactivity(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetbuyedNftDetails = (slug) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPurchaseNftDetailByIdx/${slug?.slug}`,\r\n            config)\r\n\r\n        await dispatch(getbuyednftdetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ResellNft = (params, props) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/create_resale_nft`,\r\n            params, config)\r\n        await dispatch(res())\r\n        if (res?.status === 200) {\r\n            await dispatch(GetbuyedNftDetails(props.slug?.slug))\r\n            props.onHide(false)\r\n        }\r\n    } catch (e) {\r\n        // console.log(\"error\");\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n};","\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport { NftList } from '../../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\n\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n\r\nconst contractABI = require('../../backend/contracts/artWork.sol/NFTContract.json')\r\n\r\n\r\nfunction isMetaMaskInstalled() {\r\n  return Boolean(window.ethereum);\r\n}\r\n\r\n// const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\n\r\nexport const Roles = {\r\n  \"ADMIN\": 1,\r\n  \"BUYER\": 2,\r\n  \"CREATOR\": 3\r\n}\r\n\r\nexport const creatorWalletUpdate = async (auth_token) => {\r\n  try {\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/wallet/connect`,\r\n      formData, config\r\n    )\r\n\r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n}\r\n\r\nexport const UpdateWalletAddress = async (role, auth_token = null) => {\r\n  try {\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    formData.append('role', Roles[role])\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/sign_in`,\r\n      formData, config\r\n    )\r\n\r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n};\r\n\r\nexport const ConnectWallet = async (role) => {\r\n\r\n  const chainId = 80001// Polygon Mainnet\r\n\r\n  if (window?.ethereum?.networkVersion !== chainId) {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: web3.utils.toHex(chainId) }]\r\n      });\r\n\r\n    } catch (err) {\r\n      // This error code indicates that the chain has not been added to MetaMask\r\n      if (err.code === 4902) {\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainName: 'Mumbai Testnet',\r\n              chainId: web3.utils.toHex(chainId),\r\n              nativeCurrency: { name: 'MATIC', decimals: 18, symbol: 'MATIC' },\r\n              rpcUrls: ['https://rpc-mumbai.maticvigil.com/']\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  }\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n\r\n    if (window.ethereum) {\r\n      try {\r\n        const addressArray = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: web3.utils.toHex('80001') }],\r\n        })\r\n\r\n        const obj = {\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n          address: addressArray[0],\r\n        };\r\n\r\n        const res = await UpdateWalletAddress(role)\r\n        return {\r\n          ...obj,\r\n          res\r\n        }\r\n\r\n      } catch (err) {\r\n        return {\r\n          address: \"\",\r\n          status: \"😥 \" + err.message,\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        address: \"\",\r\n        status: (\r\n          <span>\r\n            <p>\r\n              {\" \"}\r\n              🦊{\" \"}\r\n              <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n                You must install Metamask, a virtual Ethereum wallet, in your\r\n                browser.\r\n              </a>\r\n            </p>\r\n          </span>\r\n        ),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      // \r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      // console.log(addressArray, 'address')\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n          status: \"🦊 Connect to Metamask using the top right button.\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const UpdateStatus = async ({ slug, token_id, transaction_hash, pay_from, pay_to, type }) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('is_mint', '1');\r\n    formData.append('token_id', token_id);\r\n    formData.append('transaction_hash', transaction_hash);\r\n    formData.append('pay_from', pay_from);\r\n    formData.append('pay_to', pay_to);\r\n    formData.append('type', type.type)\r\n    formData.append('price', type.price)\r\n    formData.append('start_date', type.start_date)\r\n    formData.append('end_date', type.end_date)\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/NftUpdate/${slug}`,\r\n      formData, config\r\n\r\n    )\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nconst UpdateContract = async (collid, contractAddress) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('contract_id', contractAddress);\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${collid}`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const sendFileToIPFS = async (fileImg) => {\r\n  if (fileImg) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", fileImg);\r\n\r\n      const resFile = await axios({\r\n        method: \"post\",\r\n        url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\r\n        data: formData,\r\n        headers: {\r\n          'pinata_api_key': `${process.env.REACT_APP_PINATA_API_KEY}`,\r\n          'pinata_secret_api_key': `${process.env.REACT_APP_PINATA_API_SECRET}`,\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        },\r\n      });\r\n\r\n      const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n\r\n      return ImgHash\r\n\r\n    } catch (error) {\r\n      // console.log(\"Error sending File to IPFS: \")\r\n      // console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const CreateMetaDataAndMint = async ({ dispatch, slug, _imgBuffer, _des, _name, setCurrent, contractAddress, collid, nft_file_content, type, price, start_date, end_date }) => {\r\n\r\n  const contract = await new web3.eth.Contract(contractABI.abi, contractAddress);//loadContract();\r\n  // new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\");//loadContract();\r\n\r\n  try {\r\n    let txHash = null\r\n\r\n    // const web3 = new Web3(window.ethereum);\r\n\r\n    await web3.eth.sendTransaction({\r\n      to: contractAddress, // Required except during contract publications.\r\n      // to: \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\", // Required except during contract publications.\r\n      from: window.ethereum.selectedAddress,\r\n      data: contract.methods.mint(nft_file_content).encodeABI() //make call to NFT smart contract\r\n    })\r\n      .on('transactionHash', function (hash) {\r\n        txHash = hash\r\n\r\n        // console.log('txhash11', txHash)\r\n\r\n        setCurrent(1)\r\n      })\r\n      .on('receipt', function (receipt) {\r\n        // console.log(receipt, 'recipt')\r\n        // console.log(receipt.logs[0].topics[3])\r\n        setCurrent(1)\r\n      })\r\n      .on('confirmation', async (confNumber, receipt) => {\r\n        if (confNumber == 1) {\r\n\r\n          if (collid != 1) {\r\n\r\n            await UpdateContract(collid, contractAddress)\r\n          }\r\n\r\n\r\n          // await UpdateContract(collid, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n          const tokid = web3.utils.hexToNumber(receipt.logs[0].topics[3])\r\n\r\n          // console.log(startdate)\r\n          await UpdateStatus({ slug: slug.id, token_id: tokid, transaction_hash: receipt.transactionHash, pay_from: receipt.from, pay_to: receipt.to, type, price, start_date, end_date })\r\n          setCurrent(2)\r\n          await dispatch(NftList(slug.id))\r\n\r\n          // history.push(`nft/details/${slug.id}`)\r\n          // return redirect(`nft/details/${id}`)\r\n          // console.log('tokid', tokid)\r\n        }\r\n      })\r\n      .on('error', function (error) {\r\n\r\n      })\r\n\r\n    // \r\n    // console.log('txHash', txHash)\r\n    return {\r\n      success: true,\r\n      // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n      status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n    }\r\n  } catch (error) {\r\n    // \r\n    alert(\"went wrong\")\r\n    return {\r\n      success: false,\r\n      status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n    }\r\n  }\r\n}\r\n\r\nconst UpdateBuyHistory = async (nft_id, proj_id, refid, txd_id, payFrom, pay_to, tokenId, values) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('price', nft_id.values);\r\n    formData.append('txd_id', nft_id.txd_id);\r\n    formData.append('project_id', nft_id.proj_id);\r\n    formData.append('nft_id', nft_id.nft_id);\r\n    formData.append('pay_from', nft_id.payFrom);\r\n    formData.append('pay_to', nft_id.pay_to);\r\n    formData.append('token_id', nft_id.tokenId);\r\n    formData.append('ref_id', nft_id.refid);\r\n    formData.append('status', '1');\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/transaction/store`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const updateReffid = async ({ tokenId, refid, nft_id, }) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('token_id', tokenId);\r\n    formData.append('ref_id', refid);\r\n    formData.append('nft_id', nft_id);\r\n\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getUserPercentage`,\r\n      formData, config\r\n    )\r\n    // await dispatch(res())\r\n    // const reffee = localStorage.setItem('refamount', res?.data?.data?.referral_fees[0]?.fees)\r\n    if (res?.status === 200) {\r\n      await localStorage.setItem('refamount', res?.data?.data?.referral_fees[0]?.fees)\r\n    }\r\n\r\n    // if (res.status === 200) {\r\n    // setRefamount(res?.data?.data)\r\n    // }\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\nexport const BuyNft = async ({ contractAddress, tokenId, payFrom, values, platformFee, sellingCount, ownerFee, flow, ownerWallet, refid, proj_id, nft_id, loadingg, modal }) => {\r\n  // debugger\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n\r\n    try {\r\n      // if (refid == null) {\r\n      //   setReferalid(\"\")\r\n\r\n      // }\r\n\r\n      let wallets = []\r\n      let fee = []\r\n      // web3.fromWei(web3.eth.getBalance\r\n      const bala = web3.fromWei(web3.eth.getBalance(window.ethereum?.selectedAddress))\r\n      console.log(bala, 'balance')\r\n      // .then(console.log);\r\n      wallets = refid === \"null\" ? [...wallets, ...flow[0]?.buyer_data?.map(x => x.wallets), flow[0]?.karmatica_fees[0]?.wallets, flow[0]?.project_data[0]?.wallets] : [...wallets, ...flow[0]?.buyer_data?.map(x => x.wallets), flow[0]?.karmatica_fees[0]?.wallets, flow[0]?.project_data[0]?.wallets, refid]\r\n      fee = refid === \"null\" ? [...fee, ...flow[0]?.buyer_data?.map(x => x.fees), flow[0]?.karmatica_fees[0]?.fees, flow[0]?.project_data[0]?.fees] : [...fee, ...flow[0]?.buyer_data?.map(x => x.fees), flow[0]?.karmatica_fees[0]?.fees, flow[0]?.project_data[0]?.fees, localStorage.getItem('refamount')]\r\n      console.log(fee)\r\n      console.log(wallets)\r\n\r\n\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      const obj = {\r\n        status: \"👆🏽 Write a message in the text-field above.\",\r\n        address: addressArray[0],\r\n      };\r\n\r\n      const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n      // const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n\r\n      // const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n\r\n      const memory_clients = wallets.map(wal => {\r\n\r\n        return (`${wal}`)\r\n      })\r\n\r\n\r\n\r\n      const memory_amounts = fee.map(amt => {\r\n        const amountToSend = ((amt / 100) * 0.03)\r\n        return web3.utils.toWei(`${amountToSend}`, \"ether\")\r\n      })\r\n\r\n      const transferowner = {\r\n        'from': window.ethereum?.selectedAddress,\r\n        'to': contractAddress,\r\n        // 'to': \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\",\r\n        // 'value': web3.utils.toWei(`${values}`),\r\n        'value': web3.utils.toWei('0.03', 'ether'),\r\n        // 'input': nftContract.methods.buyNft(contractAddress, tokenId).encodeABI()\r\n        'input': nftContract.methods.buyNft(contractAddress, tokenId, memory_clients, memory_amounts).encodeABI()\r\n      };\r\n\r\n      // const txHash = await web3.eth.sendTransaction(tx)\r\n\r\n      // console.log('txhash', txHash)\r\n      await web3.eth.sendTransaction(transferowner)\r\n        .on('transactionHash', function (hash) {\r\n          let txHash = hash\r\n          // console.log('tx', txHash)\r\n\r\n\r\n        })\r\n        .on('receipt', function (receipt) {\r\n          // console.log(receipt, 'recipt')\r\n        })\r\n        .on('confirmation', async (confNumber, receipt) => {\r\n          if (confNumber == 1) {\r\n            console.log(confNumber, 'counttrans')\r\n            console.log(receipt, 'conf')\r\n            // localStorage.setItem('txd_id', receipt.transactionHash)\r\n            // localStorage.setItem('pay_to', receipt.receipt.to)\r\n            UpdateBuyHistory({ nft_id, proj_id, refid, txd_id: receipt.transactionHash, payFrom, pay_to: window.ethereum?.selectedAddress, tokenId, values })\r\n            loadingg(false)\r\n            swal(\"success\", \"Confirmed\", 'success').then(function () {\r\n              window.location = `/my/nfts`;\r\n            });\r\n          }\r\n          // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n          // setModeShow(false)\r\n\r\n          // modalShow(false)\r\n        })\r\n        .on('error', function (error) {\r\n          // console.log(error.message, \"error\")\r\n          swal('error', JSON.stringify(error.message, 'error'))\r\n          // alert(JSON.stringify(error.message))\r\n          modal(false)\r\n          loadingg(false)\r\n        })\r\n        .then(function (receipt) {\r\n          // will be fired once the receipt is mined\r\n        })\r\n    } catch (error) {\r\n      console.log(JSON.stringify(error.message))\r\n      // alert(JSON.stringify(error.message))\r\n\r\n    }\r\n  }\r\n}\r\n\r\nconst UpdateBid = async ({ amount, project_id, nft_id, pay_to, pay_from }) => {\r\n  // debugger\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('amount', amount);\r\n    formData.append('project_id', project_id);\r\n    formData.append('nft_id', nft_id);\r\n    formData.append('pay_from', pay_from);\r\n    formData.append('pay_to', pay_to);\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/project/bids`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const BidNft = async (id, projid) => {\r\n\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n    try {\r\n\r\n\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      const obj = {\r\n        status: \"👆🏽 Write a message in the text-field above.\",\r\n        address: addressArray[0],\r\n      };\r\n\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n      // const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n      // const amountToSendPlatform = ((`${platformFee[0]?.fees}` / 100) * 0.03)\r\n      // const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n      // // const amountToSend = (amountToSendPlatform - amount, \"either\")\r\n      // const amountToSend = (0.0005)\r\n      // const amountToSend = ; // Convert to wei value\r\n      // const memory_clients = [platformFee[0].wallets, ownerWallet[0]]\r\n      // const memory_amounts = [web3.utils.toWei(`${amountToSendPlatform}`, \"ether\"), web3.utils.toWei(`${amountToSendowner}`, \"ether\")]\r\n\r\n      web3.eth.sendTransaction(\r\n        {\r\n          from: window.ethereum?.selectedAddress,\r\n          to: \"0xB79722911A09502fb54De1f7769F6624C301810a\",\r\n          value: web3.utils.toWei(\"0.01\"),\r\n          data: \"0xdf\"\r\n        }, function (err, transactionHash) {\r\n          if (!err)\r\n            console.log(transactionHash + \" success\");\r\n          UpdateBid({ amount: \"0.03\", project_id: projid, nft_id: id, pay_to: \"0xB79722911A09502fb54De1f7769F6624C301810a\", pay_from: window.ethereum?.selectedAddress })\r\n        });\r\n      // await web3.eth.sendTransaction(transferbid)\r\n      //   .on('transactionHash', function (hash) {\r\n      //     let txHash = hash\r\n      //     // console.log('tx', txHash)\r\n\r\n\r\n      //   })\r\n      //   .on('receipt', function (receipt) {\r\n      //     // console.log(receipt, 'recipt')\r\n      //   })\r\n      //   .on('confirmation', async (confNumber, receipt) => {\r\n      //     // \r\n      //     console.log(receipt, 'conf')\r\n      //     // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n      //     // setModeShow(false)\r\n\r\n      //     // modalShow(false)\r\n      //   })\r\n      //   .on('error', function (error) {\r\n\r\n      //   })\r\n      //   .then(function (receipt) {\r\n      //     // will be fired once the receipt is mined\r\n      //   })\r\n    } catch (error) {\r\n      // \r\n      alert(error)\r\n\r\n    }\r\n  }\r\n}","import axios from \"axios\";\r\nimport { allnotification, createOrganizationSuccess, getAnnualRevenueList, getCityList, getCountryList, getHearAboutList, getStateList, loginSuccess, updateprofile, userDetail } from \"../Slices/authSlice\";\r\nimport swal from \"sweetalert\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { creatorWalletUpdate } from \"../../components/Wallet/interact\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const Register = createAsyncThunk(\r\n    \"auth/register\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const token = localStorage.getItem('authToken')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                transformRequest: formData => formData\r\n            }\r\n\r\n            //create oraginization creator login\r\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/signup`,\r\n                params, config)\r\n\r\n            await creatorWalletUpdate(res?.data?.data?.auth_token)\r\n\r\n            thunkAPI.dispatch(loginSuccess(res));\r\n\r\n            if (res.status === 200) {\r\n                swal(\"success\", res.data.message, 'success').then(function () {\r\n                    window.location = \"/create\";\r\n               });\r\n            }\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data) {\r\n                if (e?.response?.data.message) {\r\n\r\n                    swal('error', e?.response?.data?.message, 'error')\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\nexport const LoginAction = (params, history) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/organization_signin`,\r\n            params, config)\r\n\r\n        dispatch(loginSuccess(res));\r\n\r\n    } catch (e) {\r\n\r\n        if (e?.response?.data.message) {\r\n\r\n            swal('error', e?.response?.data?.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ForgotPasswordAction = (params) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/forgot_pssword`,\r\n            params, config)\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = \"/login\";\r\n            });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetUserAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getUserDetails`,\r\n            config)\r\n        // console.log('userres', res)\r\n        dispatch(userDetail(res));\r\n\r\n\r\n    } catch (e) {\r\n        // \r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CreateOrganizationAction = (params) => async dispatch => {\r\n    // \r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\r\n            params, config)\r\n\r\n        dispatch(createOrganizationSuccess(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error').then(function () {\r\n                // dispatch(ProjectDetail(params))\r\n                window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    }\r\n}\r\nexport const CreateOrganizationAfterRoleChange = createAsyncThunk(\r\n    \"auth/register\",\r\n    async (params, thunkAPI) => {\r\n        // debugger\r\n        try {\r\n            const token = localStorage.getItem('authToken')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                transformRequest: formData => formData\r\n            }\r\n\r\n            //create oraginization creator login\r\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\r\n                params, config)\r\n\r\n            // await creatorWalletUpdate(res?.data?.data?.auth_token)\r\n\r\n            // thunkAPI.dispatch(loginSuccess(res));\r\n\r\n            if (res.status === 200) {\r\n                thunkAPI.dispatch(GetUserAction())\r\n                swal(\"success\", res.data.message, 'success').then(function () {\r\n                    window.location = \"/create\";\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data) {\r\n                if (e?.response?.data.message) {\r\n\r\n                    swal('error', e?.response?.data?.message, 'error')\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\nexport const CountryList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCountryList`,\r\n            config)\r\n        dispatch(getCountryList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const StateList = (formData) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getStateById`,\r\n            formData, config)\r\n        // debugger\r\n        dispatch(getStateList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CityList = (formData) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getCityById`,\r\n            formData, config)\r\n        dispatch(getCityList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AnnualRevenueList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAnnualRevenueList`,\r\n            config)\r\n        dispatch(getAnnualRevenueList(res));\r\n    } catch (e) {\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const HearAboutList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getHearAboutList`,\r\n            config)\r\n        dispatch(getHearAboutList(res));\r\n    } catch (e) {\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const UpdateProfileAction = (formData, props) => async dispatch => {\r\n\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/profileUpdate`,\r\n            formData, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        await dispatch(updateprofile(res));\r\n\r\n        if (res.status === 200) {\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                html:\r\n                    'User information saved',\r\n                showCloseButton: false,\r\n                showConfirmButton: false,\r\n                focusConfirm: false,\r\n                timer: 1000\r\n            })\r\n            dispatch(GetUserAction())\r\n            props.onHide(false)\r\n            // swal(\"success\", \"updated\", 'success')\r\n            // .then(function () {\r\n            // dispatch(ProjectDetail(params))\r\n            // window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CountSet = () => async dispatch => {\r\n    // debugger\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/notification/update`,\r\n            {}, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AllNoti = () => async dispatch => {\r\n\r\n\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAllNotification`,\r\n            config)\r\n        // \r\n        console.log(res, 'allnoti rres')\r\n        await dispatch(allnotification(res));\r\n\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const NotiDelete = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/notification/delete/${id}`,\r\n            config)\r\n        // \r\n        console.log(res, 'delete rres')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n            await dispatch(AllNoti())\r\n\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const ChangeUserRole = (history) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/change_user_roles`, \"\",\r\n            config)\r\n        // \r\n        console.log(res, 'user role')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n            if (res?.data?.data?.organization === false) {\r\n                history.push('/create/organization')\r\n            } else {\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { ChangeUserRole, CountSet, GetUserAction, NotiDelete } from '../../redux/Actions/authAction';\r\nimport swal from 'sweetalert';\r\nimport { loginSuccess, logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\nimport { isCancel } from 'axios';\r\nimport moment from \"moment\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Space, Switch, Tooltip } from 'antd';\r\n\r\nconst Header = () => {\r\n    const location = useLocation();\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [address, setAddress] = useState(null)\r\n    const [active, setActive] = useState(null)\r\n    const add1 = address?.slice(0, 4).toUpperCase()\r\n    const add2 = address?.slice(35, 44).toUpperCase()\r\n\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n        setAddress(null)\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state?.user.userdetail?.role\r\n    })\r\n    // console.log(userRole)\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n        getCurrentWalletConnected()\r\n        setAddress(getSelectedAddress)\r\n\r\n        if (window.ethereum) {\r\n            window.ethereum.on('accountsChanged', function (accounts) {\r\n                if (!accounts.length) {\r\n                    setAddress(null)\r\n                    //  setIsLoggedIn(false)\r\n                    localStorage.removeItem('auth_token')\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [dispatch, address])\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n    const showPopconfirm = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setConfirmLoading(true);\r\n\r\n        setTimeout(() => {\r\n            setOpen(false);\r\n            setConfirmLoading(false);\r\n        }, 2000);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n        return () => {\r\n            window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n        };\r\n    }, []);\r\n\r\n    const handleBeforeUnload = (e) => {\r\n        e.preventDefault();\r\n        const message =\r\n            \"Are you sure you want to leave? All provided data will be lost.\";\r\n        e.returnValue = message;\r\n        return message;\r\n    };\r\n\r\n    function getSelectedAddress() {\r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    // const names = Object?.keys(userdet?.notification?.status);\r\n    // console.log(names)\r\n    const notiHandler = () => {\r\n        // debugger\r\n        dispatch(CountSet())\r\n    }\r\n    const deleteHandler = (id) => {\r\n        dispatch(NotiDelete(id))\r\n    }\r\n    const SwitchOptions = [{\r\n        OPTION1: \"Buyer\",\r\n        OPTION2: \"Creator\"\r\n    }]\r\n    const [activeOption, setActiveOption] = useState(false);\r\n\r\n\r\n    const roleHandler = () => {\r\n        dispatch(ChangeUserRole(history))\r\n        setActiveOption(!activeOption)\r\n    }\r\n    const WalletHandler = async () => {\r\n        const response = await ConnectWallet(\"BUYER\")\r\n        const { res } = response\r\n\r\n        // debugger\r\n        if (!res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            history.push('/all/LatestProjects')\r\n        }\r\n        else if (res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            // history.push('/create')\r\n\r\n            swal({\r\n                title: \"Welcome to Karmatica!!!\",\r\n                text: \"Karmatica would like to know more about yourself. Update your profile\",\r\n                icon: \"success\",\r\n                buttons: {\r\n                    continue: '',\r\n                    skip: '',\r\n                }\r\n            }).then((value) => {\r\n                switch (value) {\r\n                    case \"continue\":\r\n                        window.location = '/profile'\r\n                        break;\r\n\r\n                    case \"skip\":\r\n                        window.location = '/all/LatestProjects'\r\n                        break;\r\n\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n        else if (!res?.data?.data?.is_new_user && Roles[\"CREATOR\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        else if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n        else if (!userToken) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n    console.log(activeOption, \"active\")\r\n    return (\r\n        <header id=\"header\">\r\n            {/* Navbar */}\r\n            <nav data-aos=\"zoom-out\" data-aos-delay={800} className=\"navbar navbar-expand\">\r\n                <div className=\"container header\">\r\n                    {/* Navbar Brand*/}\r\n                    {/* <div className=\"your-required-wrapper\" style={{ width: 100, height: 30 }}> */}\r\n\r\n                    {/* </div> */}\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        <img className=\"navbar-brand-sticky desktop_logo\" src=\"/img/karmatica.png\" alt=\"karmatica\" />\r\n                        <img className=\"mobile-logo\" src=\"/img/logo.png\" alt=\"\" />\r\n                    </Link>\r\n                    <div className=\"ml-auto\" />\r\n\r\n\r\n                    {/* Navbar */}\r\n                    <ul className=\"navbar-nav items mx-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact activeClassName=\"navbar__link--active\" className=\"nav-link\" to=\"/\">Explore</NavLink>\r\n                        </li>\r\n                        {/* {log !== null && ( */}\r\n                        <li className=\"nav-item text-left nav-main\" >\r\n                            <a onClick={() => handleCreate()} className={location.pathname === `/create` && \"nav-link-active\"} activeClassName={location.pathname === `/create` && \"navbar__link--active\"} >Create</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact activeClassName=\"navbar__link--active\" to={`/all/${\"LatestProjects\"}`} className=\"nav-link\">Latest</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a target=\"_blank\" href=\"https://changelly.com/?from=btc&to=matic&amount=0.1&ref_id=_-GPCBjccW7TMMjO\" className=\"nav-link\">Swap</a>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    {/* Navbar Toggler */}\r\n                    {window.ethereum?.selectedAddress &&\r\n                        <div className=\"dropdown notification relative\">\r\n                            <i className=\"btn btn-secondary dropdown-toggle fa-sharp fa-solid fa-bell  text-white w-auto m-0 \" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" onClick={() => notiHandler()} ></i>\r\n                            {userdet?.notification_count > 0 &&\r\n\r\n                                <small className='dropdown-notification'>{userdet?.notification_count}</small>\r\n                            }\r\n\r\n                            <ul className=\"creator-dropdown dropdown-menu notification-menu dropdown-scrollbar\" aria-labelledby=\"dropdownMenuButton1\">\r\n\r\n                                {userdet?.notification?.map((item) => {\r\n                                    return (\r\n\r\n                                        <><li>{item.title}</li>\r\n                                            <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\r\n                                                <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\r\n                                    )\r\n                                })}\r\n                                {userdet?.notification?.length > 0 &&\r\n                                    <span><button type='submit' className='noty_all'><Link to='/allnotifications'>See all</Link></button></span>\r\n                                }\r\n                                {userdet?.notification?.length == 0 &&\r\n                                    <li>No new notifications</li>\r\n                                }\r\n                            </ul>\r\n\r\n                        </div>\r\n                    }\r\n                    <ul className=\"navbar-nav toggle\">\r\n                        <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#menu\">\r\n                                <i className=\"fas fa-bars toggle-icon m-0\" />\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Navbar Action Button */}\r\n                    {/* Navbar Action Button */}\r\n                    <ul className=\"navbar-nav action\">\r\n                        {window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? (\r\n\r\n                            <>\r\n\r\n                                <li className=\"nav-item mr-2\">\r\n                                    <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />{add1}...{add2}</a>\r\n                                </li>\r\n                            </>\r\n                        ) : (\r\n\r\n\r\n                            <li className=\"nav-item ml-3\">\r\n                                <Tooltip title='You will be signed in as a buyer' color='#4528dc'> <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />Connect Wallet</a></Tooltip>\r\n                            </li>\r\n\r\n                        )}\r\n\r\n                    </ul>\r\n                    {window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? (\r\n                        <>\r\n\r\n                            <div className=\"dropdown dropdown_login\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <i className=\"fa fa-solid fa-user\"></i>\r\n                                </button>\r\n                                <ul className=\"creator-dropdown dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                    {/* <li>{userdet?.username}</li> */}\r\n                                    <div className=\"background\">\r\n                                        <div className=\"SwitchContainer\">\r\n                                            <div\r\n                                                className=\"ToggleItem\"\r\n                                                style={{\r\n                                                    backgroundColor:\r\n                                                        userRole == 2 ? \"#4528DC\" : \"transparent\"\r\n                                                }}\r\n                                                onClick={() => roleHandler(SwitchOptions.OPTION1)}\r\n                                            >\r\n                                                <div className={\"Text\"}>Buyer</div>\r\n                                            </div>\r\n                                            <div\r\n                                                className=\"ToggleItem\"\r\n                                                style={{\r\n                                                    backgroundColor:\r\n                                                        userRole == 3 ? \"#4528DC\" : \"transparent\"\r\n                                                }}\r\n                                                onClick={() => roleHandler(SwitchOptions.OPTION2)}\r\n                                            >\r\n                                                <div className={\"Text\"}>Creator</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <li>\r\n                                        \r\n                                        <Space direction=\"vertical\">\r\n                                           \r\n\r\n                                            <Switch\r\n                                                className='switch_custom'\r\n                                                checkedChildren={<div onClick={() => roleHandler()}> {userRole == 2 ? 'switch to creator' : 'switch to buyer'}</div>}\r\n                                                unCheckedChildren={<div onClick={() => roleHandler()}>{userRole == 2 ? 'switch to creator' : 'switch to buyer'}</div>}\r\n\r\n                                            />\r\n                                          \r\n                                        </Space>\r\n                                    </li> */}\r\n                                    <li> {userdet?.email}</li>\r\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/profile'><i class=\"fa-regular fa-user\"></i> My Profile</Link></button></li>\r\n                                    {userRole == 2 && (\r\n                                        <li><button type='button' class=\"dropdown-item\"><Link to='/my/nfts'><i class=\"fa-regular fa-file-image\" style={{ color: 'white', display: \"table-cell\" }} /> My NFTs</Link></button></li>\r\n                                    )}\r\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/referals-detail'><i class=\"fa-solid fa-coins\" style={{ color: 'white', display: \"table-cell\" }}></i>Referral Program</Link></button></li>\r\n                                    {userRole == 3 && (\r\n                                        <><li><button type='button' class=\"dropdown-item\"><Link to='/projectlist'><i class=\"fa-regular fa-file\" style={{ color: 'white', display: \"table-cell\" }}></i> My Projects</Link></button></li>\r\n\r\n                                            <li><button type='button' class=\"dropdown-item\"><Link to={`/fundraiser/detail/${userdet.user_id}`}><i class=\"fa-solid fa-hand-holding-heart\" style={{ display: \"table-cell\", color: \"white\" }}></i> Fundraise</Link></button></li></>\r\n                                    )}\r\n                                    {/* {userRole == 2 ? ( */}\r\n\r\n\r\n                                    {/* <li><button type='button' class=\"dropdown-item\" onClick={() => roleHandler()}>Switch to Creator</button></li></> */}\r\n                                    {/* ) : (\r\n                                        <li><button type='button' class=\"dropdown-item\" onClick={() => roleHandler()}>Switch to Buyer</button></li>\r\n                                    )} */}\r\n                                    <li><button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'><i class=\"fa-solid fa-right-from-bracket\" style={{ display: \"table-cell\", color: \"white\" }}></i> Logout</a></button></li>\r\n                                </ul>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <ul className=\"navbar-nav action\">\r\n                            <li className=\"nav-item ml-3\">\r\n                                <Tooltip title='You will be signed in as a creator' color='#4528dc'>  <a className=\"creator-button btn ml-md-auto btn-bordered-white\"\r\n                                    onClick={() => history.push('/wallet-connect')} style={{ color: '#f8f9fa' }}><i className=\"fa fa-user\" />\r\n                                    <div>Creator</div></a></Tooltip>\r\n                                {/* <Link to=\"/login\" className=\"creator-button btn ml-md-auto btn-bordered-white\">\r\n                                    <i className=\"fa fa-user\" />\r\n                                    <div>CREATOR</div>\r\n                                </Link> */}\r\n                            </li>\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </nav >\r\n        </header >\r\n\r\n    )\r\n}\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { Roles } from '../Wallet/interact';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { GetMostactivityProject, getPublicLiveProjects } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst projectTypesMap = {\r\n    \"LatestProjects\": 2,\r\n    \"RecentCampaigns\": 1\r\n}\r\nconst Hero = ({ type }) => {\r\n    const history = useHistory()\r\n\r\n    var options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0,\r\n    };\r\n\r\n    function success(pos) {\r\n        var crd = pos.coords;\r\n\r\n        // console.log(\"Your current position is:\");\r\n        // console.log(`Latitude : ${crd.latitude}`);\r\n        // console.log(`Longitude: ${crd.longitude}`);\r\n        // console.log(`More or less ${crd.accuracy} meters.`);\r\n        localStorage.setItem('latitude', `${crd.latitude}`);\r\n        localStorage.setItem('longitude', `${crd.longitude}`);\r\n        // setLatitude(`${crd.latitude}`)\r\n        // setLongitude(`${crd.longitude}`)\r\n    }\r\n\r\n    function errors(err) {\r\n        console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n    const dispatch = useDispatch()\r\n\r\n    const mostactivityProjects = useSelector(state => {\r\n        return state?.projectdetails?.getmostProjActivity\r\n    })\r\n    console.log(mostactivityProjects, 'mostactivityProjects')\r\n    useEffect(() => {\r\n        dispatch(getPublicLiveProjects({\r\n            cursor: 1,\r\n            type: projectTypesMap[type],\r\n            projectType: type,\r\n        }))\r\n        dispatch(GetMostactivityProject())\r\n    }, [dispatch])\r\n    const currentLocation = () => {\r\n        // \r\n        if (navigator.geolocation) {\r\n            navigator.permissions\r\n                .query({ name: \"geolocation\" })\r\n                .then(function (result) {\r\n                    if (result.state === \"granted\") {\r\n                        // console.log(result.state);\r\n                        //If granted then you can directly call your function here\r\n                        navigator.geolocation.getCurrentPosition(success);\r\n                    } else if (result.state === \"prompt\") {\r\n                        navigator.geolocation.getCurrentPosition(success, errors, options);\r\n                    } else if (result.state === \"denied\") {\r\n                        //If denied then you have to show instructions to enable location\r\n                    }\r\n                    result.onchange = function () {\r\n                        // console.log(result.state);\r\n                    };\r\n                });\r\n        } else {\r\n            alert(\"Sorry Not available!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        currentLocation()\r\n    }, [])\r\n\r\n    const handleCreate = () => {\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                // showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n        else if (!userToken && !localStorage.getItem('authToken')) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                // showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section className=\"hero-section\">\r\n            <div className=\"container\">\r\n                <div className=\"row \">\r\n                    <div className=\"col-12 col-md-6 col-lg-7\">\r\n\r\n                        <h1 className=\"mt-4\">Create NFTs to fund real-life projects. Earn up to 30% by sharing with friends.</h1>\r\n                        {/* <p>Earn rewards by referring your friends.</p> */}\r\n                        {/* Buttons */}\r\n                        <div className=\"button-group\">\r\n                            <Link className=\"btn btn-bordered-white\" to={`/all/${\"LatestProjects\"}`}><i className=\"icon-rocket mr-2\" />Explore</Link>\r\n                            <a className=\"btn btn-bordered-white\" onClick={handleCreate}><i className=\"icon-note mr-2\" />Create </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-md-6 col-lg-4 auction-slider auctions-slides'>\r\n                        {/* {mostactivityProjects[0]?.map((item, idx) => { */}\r\n                        {/* return ( */}\r\n\r\n                        <div key={`auc_${mostactivityProjects[0]?.id}`} className=\"item card\">\r\n\r\n\r\n\r\n                            <div className=\"image-over\">\r\n                                <Link to={`/projects/${mostactivityProjects[0]?.slug}`}>\r\n\r\n                                    <img class=\"card-img-top\" src={mostactivityProjects[0]?.image} alt=\"\"></img>\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"card-caption col-12 p-0\">\r\n\r\n                                <div className=\"card-body pt-0\">\r\n\r\n                                    {/* <a href=\"#\">\r\n                                        <h5 className=\"mb-0\">{mostactivityProjects[0]?.title?.slice(0, 16)}</h5>\r\n                                    </a> */}\r\n                                    {/* <a className=\"seller d-flex align-items-center mb-2\" href=\"#\">\r\n                                        <img className=\"avatar-sm rounded-circle\" src={mostactivityProjects[0]?.user_data?.avatar} alt=\"\" />\r\n                                        <span className=\"ml-2 mb-0\">{mostactivityProjects[0]?.user_data?.username}</span>\r\n                                    </a>\r\n                                    <div className=\"card-bottom d-flex justify-content-between\">\r\n                                        <span>{Math.round(mostactivityProjects[0]?.price)} MATIC</span>\r\n                                        {mostactivityProjects[0]?.number_of_nft == 1 ? (\r\n\r\n                                            <span>{mostactivityProjects[0]?.number_of_nft} NFT</span>\r\n                                        ) : (\r\n                                            <span>{mostactivityProjects[0]?.number_of_nft} NFTs</span>\r\n                                        )\r\n\r\n                                        }\r\n                                    </div> */}\r\n\r\n                                    {/* ) */}\r\n                                    {/* })} */}\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n\r\n                                            {/* <a > */}\r\n                                            <h5 className=\"mb-0\">{mostactivityProjects[0]?.title?.slice(0, 16)}</h5>\r\n                                            {/* </a> */}\r\n\r\n\r\n                                            <div\r\n                                                className=\"seller d-flex align-items-center my-2\"\r\n                                            >\r\n\r\n                                                <a href=\"#\">\r\n                                                    <h6 className=\"ml-2 mb-0\">\r\n                                                        {mostactivityProjects[0]?.user_data.username?.slice(0, 12)}\r\n                                                    </h6>\r\n                                                </a>\r\n\r\n                                                {/* <a > */}\r\n                                                <h6 className=\"ml-2 mb-0\">\r\n                                                    {mostactivityProjects[0]?.user_data.username?.slice(0, 12)}\r\n                                                </h6>\r\n                                                {/* </a> */}\r\n\r\n                                                {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                            </div>\r\n                                            {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                              <span>{Math.round(item.price)} MATIC</span>\r\n                              {item?.number_of_nft == 1 ? (\r\n                                <span>{item.number_of_nft} NFT</span>\r\n                              ) : (\r\n                                <span>{item.number_of_nft} NFTs</span>\r\n                              )}\r\n                            </div> */}\r\n\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Shape */}\r\n            <div className=\"shape\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                    <defs>\r\n                        <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                            <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                            <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                        <polygon points fill=\"url(#linearGradient-1)\">\r\n                            <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                        </polygon>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Hero;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getPublicLiveProjects } from \"../../redux/Actions/projectAction\";\r\nconst projectTypesMap = {\r\n  LatestProjects: 2,\r\n  RecentCampaigns: 1,\r\n};\r\nconst AuctionsOne = ({ type }) => {\r\n  const dispatch = useDispatch();\r\n  const liveProjects = useSelector((state) => {\r\n    return state?.projectdetails?.liveProjects[type];\r\n  });\r\n  console.log(liveProjects, \"liveeproj\");\r\n  useEffect(() => {\r\n    dispatch(\r\n      getPublicLiveProjects({\r\n        cursor: 1,\r\n        type: projectTypesMap[type],\r\n        projectType: type,\r\n      })\r\n    );\r\n  }, [dispatch]);\r\n  return (\r\n    <section className=\"live-auctions-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            {/* Intro */}\r\n            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n              <div className=\"intro-content\">\r\n                <span>Project</span>\r\n                <h3 className=\"mt-3 mb-0\">\r\n                  {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}\r\n                </h3>\r\n              </div>\r\n              <div className=\"intro-btn\">\r\n                {liveProjects?.length > 4 && (\r\n                  <Link to={`/all/${type}`} style={{ color: \"white\" }}>\r\n                    <a className=\"btn content-btn\">View All</a>\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"auctions-slides \">\r\n          <div className=\"swiper-container slider-mid items \">\r\n            <div className=\"swiper-wrapper  \">\r\n              {/* Single Slide */}\r\n              {liveProjects?.map((item, idx) => {\r\n                return (\r\n                  <div\r\n                    key={`auc_${item.id}`}\r\n                    className=\"swiper-slide item card position-relative auctions-slides-card\"\r\n                  >\r\n\r\n                    <div className=\"image-over\">\r\n                      <Link to={`/projects/${item.slug}`}>\r\n                        <img\r\n                          className=\"card-img-top\"\r\n                          src={item?.image}\r\n                          alt=\"\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"card-caption col-12 p-0\">\r\n                      <div className=\"card-body\">\r\n\r\n                        {/* <a> */}\r\n                        <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                        {/* </a> */}\r\n                        <div\r\n                          className=\"seller d-flex align-items-center my-3\"\r\n                        >\r\n                          <span>Owned By</span>\r\n                          {/* <a> */}\r\n                          <h6 className=\"ml-2 mb-0\">\r\n                            {item.user_data.username.slice(0, 12)}\r\n                          </h6>\r\n                          {/* </a> */}\r\n                        </div>\r\n                        <div className=\"card-bottom d-flex justify-content-between nft-price\" >\r\n                       \r\n                          <span><img className=\"mr-1\"src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                          {item?.number_of_nft == 1 ? (\r\n                            <span>{item.number_of_nft} NFT</span>\r\n                          ) : (\r\n                            <span>{item.number_of_nft} NFTs</span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between edit-buttons nft-price \">\r\n                          <a\r\n                            className=\"btn  btn-smaller mt-3 mb-0\"\r\n                            href=\"/login\"\r\n                          ><i className=\"icon-handbag\" />\r\n                          {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                           \r\n                          </a>\r\n                          <a\r\n                            className=\"btn  btn-smaller mt-3 ml-2 mb-0\"\r\n                            href=\"/login\"\r\n                          ><i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                          \r\n                          \r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"swiper-pagination\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default AuctionsOne;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst collectionSlice = createSlice({\r\n    name: 'collection',\r\n\r\n    initialState: {\r\n        collection: [],\r\n        collectiondetail: [],\r\n    },\r\n    reducers: {\r\n        getPopularCollection: (state, action) => {\r\n            // \r\n            state.collection = action.payload;\r\n        },\r\n        getPopularCollectiondetails: (state, action) => {\r\n            // \r\n            state.collectiondetail = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const collectionReducer = collectionSlice.reducer\r\n\r\nexport const {\r\n    getPopularCollection,\r\n    getPopularCollectiondetails\r\n} = collectionSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getPopularCollection, getPopularCollectiondetails } from \"../Slices/popularCollectionSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const PopularCollectionAction = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnection`, config)\r\n            console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollection(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const PopularCollectionActionDetails = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ slug }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnectionByIdx/${slug}`, config)\r\n            // console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollectiondetails(res));\r\n\r\n        } catch (e) {\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { Link } from 'react-router-dom';\r\nconst Collections = () => {\r\n    const dispatch = useDispatch()\r\n    const coll = useSelector(state => {\r\n        //\r\n        return state?.collection?.collection\r\n    })\r\n    console.log(coll, \"coll detail\")\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionAction({}))\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"popular-collections-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>POPULAR</span>\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {coll?.length > 8 &&\r\n\r\n                                    <Link className=\"btn content-btn text-left\" to=\"/allcollections\">Explore More</Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {coll?.slice(0, 8)?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`cd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/popularcollection/details/${item?.slug}`}>\r\n                                            <img className=\"card-img-top\" src={item?.image} alt=\"\" />\r\n                                        </Link>\r\n                                        {/* Seller */}\r\n                                        <div className=\"seller\" >\r\n                                            <div className=\"seller-thumb avatar-lg\">\r\n\r\n                                                <img className='rounded-circle' src={item?.user_data?.avatar} alt='logo' width={50} height={50} />\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            {/* <a> */}\r\n                                            <h5 className=\"\">{item.title.slice(0, 12)} </h5>\r\n                                            {/* </a> */}\r\n                                            <div class=\"align-items-center\">\r\n                                                <div class=\"d-flex justify-content-center text-align-center gap-5\">\r\n                                                    {/* <h5 className=\"mb-0 \">{item.title.slice(0, 12)} </h5> */}\r\n\r\n                                                    <div class=\" align-items-center\">\r\n                                                        <div class=\"d-flex justify-content-center text-align-center gap-5\">\r\n                                                            {item?.nft_data.length == 1 ? (\r\n\r\n                                                                <span>Total NFT :</span>\r\n                                                            ) : (\r\n                                                                <span>Total NFTs :</span>\r\n                                                            )\r\n\r\n                                                            }\r\n                                                            <span>{item?.nft_data?.length}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                        {/* <div>\r\n                                    <div className=\"card position-relative \">\r\n                                        <div className=\"image-over \">\r\n                                            <Link to={`/popularcollection/details/${item?.slug}`}>\r\n                                                <img className=\"card-img-top\" src={item?.image} alt=\"\" />\r\n                                            </Link>\r\n                                        </div> */}\r\n                                        {/* Card Caption */}\r\n                                        {/* <div className=\"card-caption col-12 p-0\">\r\n                                            <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} /> */}\r\n                                        {/* Card Body */}\r\n                                        {/* <div className=\"card-body\">\r\n\r\n                                {/* <div className=\"card-caption col-12 p-0\">\r\n                                            <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} /> */}\r\n\r\n                                        {/* <div className=\"card-caption col-12 p-0\">\r\n                                    <img className='logo' src={item?.organization_detail?.logo} alt='logo' width={50} height={50} /> */}\r\n\r\n                                        {/* Card Body */}\r\n                                        {/* <div className=\"card-body\">\r\n                                                <a>\r\n                                                    <h5 className=\"mb-0 \">{item.title.slice(0, 15)}...</h5>\r\n                                                </a>\r\n                                                <div class=\"\"><p> {item.description.slice(0, 52)}...</p></div>\r\n                                                <div class=\"mb-2 align-items-center\">\r\n                                                    <div class=\"mt-2 mb-2 d-flex justify-content-between text-align-center fundraiser_sale\">\r\n                                                        {item?.nft_data.length == 1 ? (\r\n\r\n                                                            <span>{item?.nft_data.length} NFT</span>\r\n                                                        ) : (\r\n                                                            <span>{item?.nft_data.length} NFTs</span>\r\n                                                        )\r\n\r\n                                                        }\r\n                                                    </div>\r\n                                                </div> */}\r\n                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                    {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span style={{ color: '#8E8E8E' }}>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\">{item?.user_data?.username}</h6>\r\n                                                                </a>\r\n                                                            </div> */}\r\n                                        {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div> */}\r\n                                        {/* <div>\r\n                                    {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div> */}\r\n                                        {/* <div>\r\n                                                                {item.status == '1' ?\r\n                                                                    <Button>Donation</Button>\r\n                                                                    :\r\n                                                                    <Button>Product Sale</Button>\r\n                                                                }\r\n                                                            </div> */}\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                        {/* </div> */}\r\n                                        {/* </div> */}\r\n                                        {/* </div> */}\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                        {/* </div> */}\r\n                                        {/* </div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div >\r\n            </div >\r\n        </section >\r\n    );\r\n}\r\nexport default Collections;","import { React } from 'react';\r\n\r\nconst data = {\r\n    preHeading: \"How It Works\",\r\n    heading: \"Create and sell your NFTs\",\r\n    workData: [\r\n        {\r\n            \"id\": 1,\r\n            \"icon\": \"icons icon-wallet text-effect\",\r\n            \"title\": \"Setup your wallet\",\r\n            \"text\": \"Click Connect Wallet in the top right corner to login and get started.\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"icon\": \"icons icon-grid text-effect\",\r\n            \"title\": \"Create your collection\",\r\n            \"text\": \"Click Creator and set up your organization profile, description, fundraising goal and more.\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"icon\": \"icons icon-drawer text-effect\",\r\n            \"title\": \"Add your NFTs\",\r\n            \"text\": \"Upload your project art or images and description.\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"icon\": \"icons icon-bag text-effect\",\r\n            \"title\": \"List them for sale\",\r\n            \"text\": \"Choose how you want to price and sell your NFTs!\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst Work = () => {\r\n\r\n\r\n    return (\r\n        <section className=\"work-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro mb-4\">\r\n                            <div className=\"intro-content\">\r\n                                <span>{data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {data?.workData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Work */}\r\n                                <div className=\"single-work\">\r\n                                    <i className={item.icon} />\r\n                                    <h4>{item.title}</h4>\r\n                                    <p>{item.text}</p>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Work;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst footerSlice = createSlice({\r\n    name: 'footer',\r\n\r\n    initialState: {\r\n        footer: [],\r\n        aboutus: []\r\n\r\n    },\r\n    reducers: {\r\n\r\n        getfooter: (state, action) => {\r\n            state.footer = action.payload;\r\n        },\r\n        getabout: (state, action) => {\r\n            state.aboutus = action.payload;\r\n        },\r\n\r\n    },\r\n});\r\n\r\nexport const footerReducer = footerSlice.reducer\r\n\r\nexport const {\r\n    getfooter,\r\n    getabout,\r\n} = footerSlice.actions;","import axios from \"axios\";\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getabout, getfooter } from \"../Slices/footerSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const getFooter = createAsyncThunk(\r\n    \"auth/footer\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/term-condition`, config)\r\n            thunkAPI.dispatch(getfooter(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const AboutUsAction = createAsyncThunk(\r\n    \"auth/about\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAbouts`, config)\r\n            thunkAPI.dispatch(getabout(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getFooter } from '../../redux/Actions/footerAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Footer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter())\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n    // console.log(userRole)\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const history = useHistory()\r\n    const handleCreate = () => {\r\n\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        else if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n        else if (!userToken) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    function getYear() {\r\n        return new Date().getFullYear();\r\n    }\r\n    return (\r\n\r\n\r\n        <footer className=\"footer-area\">\r\n            {/* Footer Top */}\r\n            <div className=\"footer-top\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Logo */}\r\n                                <a className=\"navbar-brand\" href=\"/\">\r\n                                    <img src=\"/img/logo.png\" alt=\"\" />\r\n                                </a>\r\n                                <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                                {/* Social Icons */}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Useful Links</h4>\r\n                                <ul>\r\n                                    <li className=\"nav-item\">\r\n                                        <a onClick={() => handleCreate()} className=\"\">Create Project</a>\r\n                                    </li>\r\n                                    {/* <li><Link to=\"/create\" onClick={handleCreate}>Create Project</Link></li> */}\r\n                                    <li><Link to={`/all/${\"LatestProjects\"}`}>Explore NFTs</Link></li>\r\n                                    <li><Link to=\"/terms&conditions\">Terms of Service</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Community</h4>\r\n                                <ul>\r\n                                    <li><a target=\"_blank\" href=\"https://www.canopycrypto.io/our-team/\">About Us</a></li>\r\n                                    {/* <li><Link to='/https://www.canopycrypto.io/our-team/'>About Us</Link></li> */}\r\n                                    <li><Link to='/contact'>Get Support</Link></li>\r\n                                    <li><Link to='/rewards'>Rewards</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Footer Bottom */}\r\n            <div className=\"footer-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Copyright Area */}\r\n                            <div className=\"copyright-area d-flex flex-wrap justify-content-center justify-content-sm-between text-center py-4\">\r\n                                {/* Copyright Left */}\r\n\r\n                                <div className=\"copyright-left\">© {getYear()} Copyright Karmatica.</div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ModalSearch = () => {\r\n    const dispatch = useDispatch()\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n    }\r\n    return (\r\n        <div id=\"search\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        {/* {this.state.data.menuName} <i className={this.state.data.menuIcon} /> */}\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form className=\"row\">\r\n                            <div className=\"col-12 align-self-center\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 pb-3\">\r\n                                        <Link to='/author'>Profile</Link>\r\n                                        <Link to='/projectlist'>My Projects</Link>\r\n                                        {/* <button type='button' class=\"dropdown-item\"><a href='/author'>Profile</a></button>\r\n                <button type='button' class=\"dropdown-item\"><a href='/projectlist'>My Projects</a></button> */}\r\n                                        <button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'>Logout</a></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group mt-4\">\r\n                                        <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group align-self-center\">\r\n                                        {/* <button className=\"btn btn-bordered-white mt-3\">{this.state.data.btnText}</button> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ModalSearch;","import React from 'react';\r\n\r\nconst ModalMenu = () => {\r\n    return (\r\n        <div id=\"menu\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header text-right justify-content-end\" data-dismiss=\"modal\">\r\n                        <i className=\"far fa-times-circle icon-close\" />\r\n                    </div>\r\n                    <div className=\"menu modal-body\">\r\n                        <div className=\"row w-100\">\r\n                            <div className=\"items p-0 col-12 text-center\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalMenu;","import React from 'react';\r\n\r\nconst Scrollup = () => {\r\n    return (\r\n        <div id=\"scroll-to-top\" className=\"scroll-to-top\">\r\n            <a href=\"#header\" className=\"smooth-anchor\">\r\n                <i className=\"fas fa-arrow-up\" />\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scrollup;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst fundraiserSlice = createSlice({\r\n    name: 'fundraiser',\r\n\r\n    initialState: {\r\n        fundraiser: [],\r\n        fundraiserdetail: [],\r\n    },\r\n    reducers: {\r\n        getTopFundraiser: (state, action) => {\r\n            // \r\n            state.fundraiser = action.payload;\r\n\r\n        },\r\n        getTopFundraiserDetail: (state, action) => {\r\n            // \r\n            state.fundraiserdetail = action?.payload?.data?.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const fundraiserReducer = fundraiserSlice.reducer\r\n\r\nexport const {\r\n    getTopFundraiser,\r\n    getTopFundraiserDetail\r\n} = fundraiserSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getTopFundraiser, getTopFundraiserDetail } from \"../Slices/fundraiserSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const TopFundraiserAction = createAsyncThunk(\r\n    \"auth/topfundraiser\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // \r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers`, config)\r\n            // console.log(res, 'fund res')\r\n            thunkAPI.dispatch(getTopFundraiser(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n// export const TopFundraiserDetail = createAsyncThunk(\r\n//     \"auth/topfundraiserdetail\",\r\n//     async (id, thunkAPI) => {\r\n//         // \r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//             }\r\n//             const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${id}`, config)\r\n\r\n//             thunkAPI.dispatch(getTopFundraiserDetail(res?.data?.data));\r\n\r\n//         } catch (e) {\r\n//             if (e?.response?.data.message) {\r\n//                 swal('error', e.response.data.message, 'error')\r\n//             }\r\n//         }\r\n//     })\r\nexport const TopFundraiserDetail = (user_id) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${user_id}`,\r\n            config)\r\n\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getTopFundraiserDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Fundraiser = () => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <section className=\"top-seller-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Fundraisers</span>\r\n                                <h3 className=\"mt-3 mb-0\">Top Fundraisers</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {fund?.length > 5 &&\r\n\r\n                                    <Link className=\"btn content-btn\" to='/allfundraise'>View All</Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {fund?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Seller */}\r\n                                <Link to={`/fundraiser/detail/${item.user_id}`}>\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n\r\n                                            <img className=\"avatar-md rounded-circle\" src={item?.organization_detail?.banner_image} alt=\"\" />\r\n\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3 nft-price\">\r\n                                                <a className=\"seller mb-2 text-capitalize\">{item?.organization_detail?.organization_name}</a>\r\n                                                {/* <span dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 15) }} /> */}\r\n                                                <span><img className=\"mr-1\"src='../img/image14.png' /> ${item.amount} Raised</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Fundraiser;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst resellSlice = createSlice({\r\n    name: 'resell',\r\n\r\n    initialState: {\r\n        resell: [],\r\n        reselldetails: [],\r\n    },\r\n    reducers: {\r\n        getResell: (state, action) => {\r\n            state.resell = action.payload?.data?.data;\r\n        },\r\n        getReselldetails: (state, action) => {\r\n            state.reselldetails = action.payload?.data?.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const resellReducer = resellSlice.reducer\r\nexport const {\r\n    getResell,\r\n    getReselldetails\r\n} = resellSlice.actions;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { getResell, getReselldetails } from \"../Slices/resellNftSlice\";\r\n\r\nexport const ResellAction = () => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getResaleNft`,\r\n            \"\", config)\r\n        console.log(\"resproj\", res)\r\n        dispatch(getResell(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const ResellActionDetails = (slug) => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getResaleNftByIdx/${slug.slug}`,\r\n            slug, config)\r\n        console.log(\"resproj\", res)\r\n        dispatch(getReselldetails(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getPublicLiveProjects } from \"../../redux/Actions/projectAction\";\r\nimport { ResellAction } from \"../../redux/Actions/resellNftAction\";\r\n\r\nconst Resell = ({ type }) => {\r\n    const dispatch = useDispatch();\r\n    const nfts = useSelector((state) => {\r\n        return state?.resell?.resell;\r\n    });\r\n    console.log(nfts[0]?.image, \"resellnfts\");\r\n    useEffect(() => {\r\n        dispatch(ResellAction())\r\n\r\n    }, [dispatch]);\r\n    return (\r\n        <section className=\"live-auctions-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>NFTs</span>\r\n                                <h3 className=\"mt-3 mb-0\">\r\n                                    Latest NFTs\r\n                                </h3>\r\n\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {nfts?.length > 4 && (\r\n                                    <Link to='/all/resll/nfts' style={{ color: \"white\" }}>\r\n                                        <a className=\"btn content-btn\">View All</a>\r\n                                    </Link>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auctions-slides \">\r\n                    <div className=\"swiper-container slider-mid items \">\r\n                        <div className=\"swiper-wrapper  \">\r\n                            {/* Single Slide */}\r\n                            {nfts?.map((item, idx) => {\r\n                                return (\r\n                                    <div\r\n                                        key={`auc_${item.id}`}\r\n                                        className=\"swiper-slide item card position-relative auctions-slides-card\"\r\n                                    >\r\n\r\n                                        <div className=\"image-over\">\r\n                                            <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                                <img\r\n                                                    className=\"card-img-top\"\r\n                                                    src={item?.image}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            <div className=\"card-body\">\r\n\r\n                                                {/* <a> */}\r\n                                                <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                                                {/* </a> */}\r\n                                                <div\r\n                                                    className=\"seller d-flex align-items-center my-3\"\r\n                                                >\r\n                                                    <span>Owned By</span>\r\n                                                    {/* <a> */}\r\n                                                    <h6 className=\"ml-2 mb-0\">\r\n                                                        {item.user_data.username.slice(0, 12)}\r\n                                                    </h6>\r\n                                                    {/* </a> */}\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between nft-price\" >\r\n                                                    <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                    {/* {item?.number_of_nft == 1 ? ( */}\r\n                                                    <span>1 NFT</span>\r\n                                                    {/* ) : ( */}\r\n                                                    {/* <span>{item.number_of_nft} NFTs</span> */}\r\n                                                    {/* )} */}\r\n                                                </div>\r\n                                                <div className=\"d-flex justify-content-between edit-buttons nft-price \">\r\n                                                    <Link to={`/nft/details/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                                        <i className=\"icon-handbag\" />\r\n                                                    </Link>\r\n                                                    <Link to={`/nft/details/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                                        <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"swiper-pagination\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default Resell;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Hero from '../components/Hero/Hero';\r\nimport Auctions from '../components/Auctions/AuctionsOne';\r\nimport Collections from '../components/Collections/Collections';\r\nimport Work from '../components/Work/Work';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\nimport Resell from '../components/Auctions/resellNft';\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Hero />\r\n            <Auctions key=\"latestProjects\" type={\"LatestProjects\"} />\r\n            <Resell />\r\n\r\n            <Fundraiser />\r\n            <Collections />\r\n            <Work />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Breadcrumb extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"breadcrumb-area overlay-dark d-flex align-items-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Breamcrumb Content */}\r\n                            <div className=\"breadcrumb-content text-center\">\r\n                                <h2 className=\"m-0\">{this.props.title}</h2>\r\n                                <ol className=\"breadcrumb d-flex justify-content-center\">\r\n                                    <li className=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\r\n                                    <li className=\"breadcrumb-item\"><a href=\"#\">{this.props.subpage}</a></li>\r\n                                    <li className=\"breadcrumb-item active\">{this.props.page}</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/explore\";\r\n\r\nclass ExploreTwo extends Component {\r\n    state = {\r\n        data: {},\r\n        exploreData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    exploreData: res.data.exploreData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/explore-1\">{this.state.data.btnText}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.exploreData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`edt_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/item-details\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                </a>\r\n                                                <div className=\"seller d-flex align-items-center my-3\">\r\n                                                    <span>Owned By</span>\r\n                                                    <a href=\"/author\">\r\n                                                        <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span>{item.price}</span>\r\n                                                    {/* <span>{item.count}</span> */}\r\n                                                </div>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreTwo;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass ExploreOne extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 1\" />\r\n                <Explore />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreOne;","/**\r\n * Loader Spinner\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n\r\n\r\n\r\n    return (\r\n        // <div style={{position: 'absolute', backgroundColor: '#0002', width: '100%', height: '100%'}}>\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                height: \"100px\",\r\n                width: \"100px\",\r\n                margin: \"auto\",\r\n                display: \"block\",\r\n                // position: 'absolute',\r\n                // left: 'calc(50% - 50px)',\r\n                // top: 'calc(50% - 50px)'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\nimport swal from 'sweetalert';\r\n\r\nconst GetAllProjects = () => {\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const projects = useSelector(state => {\r\n        return state.projectdetails.projects\r\n    })\r\n\r\n    console.log(projects, 'projects')\r\n\r\n    useEffect(() => {\r\n        dispatch(ProjectList())\r\n    }, [dispatch])\r\n\r\n    const showDeleteHandler = (id) => {\r\n        // debugger\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this project!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    dispatch(DeleteProject(id))\r\n                    swal(\"Poof! Your project has been deleted!\", {\r\n                        icon: \"success\",\r\n                    });\r\n                } else {\r\n                    swal(\"Your project is safe!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    {window.ethereum?.selectedAddress && (\r\n\r\n                                        <h3 className=\"mt-3 mb-0\">My Projects</h3>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {projects && projects.length ?\r\n                                [...new Map(projects.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                        return (\r\n                                            // <Link key={`edth_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                            <div className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                                {/* <button onClick={() => showDeleteHandler()}>delete</button> */}\r\n                                                <div className=\"card project_cards\">\r\n                                                    <div className=\"image-over relative \">\r\n                                                        {item.is_nft_mintted !== 1 &&\r\n\r\n                                                            <i class=\"fa-sharp fa-solid fa-trash\" onClick={() => showDeleteHandler(item.id)}></i>\r\n                                                        }\r\n                                                        <Link to={`/projnftdetails/${item.slug}`}>\r\n                                                            {/* <i class=\"fa-solid fa-pen\" ></i> */}\r\n                                                            <img className=\"card-img-top\" src={item?.image} alt={item.nft_data.description} />\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className='token'>\r\n                                                        <span></span>\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            {/* <a> */}\r\n                                                            <h5 className=\"mb-0 pb-0 break-all\">{item.title.slice(0, 16)}</h5>\r\n                                                            {/* </a> */}\r\n                                                            <div className=\"seller d-flex align-items-center my-2\">\r\n                                                                <span>Owned By</span>\r\n\r\n                                                                <h6 className=\"ml-2 mb-0\">You</h6>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                {item?.number_of_nft == 1 ? (\r\n\r\n                                                                    <span>{item?.number_of_nft} NFT </span>\r\n                                                                ) : (\r\n                                                                    // <><span>{item.nft_data.length} NFTs </span>\r\n                                                                    <span> +{item.number_of_nft} NFTs </span>\r\n                                                                )}\r\n                                                            </div>\r\n\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            // </Link>\r\n                                        )\r\n                                    }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    {window.ethereum?.selectedAddress ? (\r\n                                        <h2 className='allproj2'>\r\n                                            You have no projects yet, <Link to=\"/create\">create one now</Link>\r\n                                        </h2>\r\n\r\n                                    ) : (\r\n                                        <h2 className='allproj2'>\r\n                                            Please connect you wallet to continue, <Link to=\"/wallet-connect\">Connect</Link>\r\n                                        </h2>\r\n                                    )}\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllProjects; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport GetAllProjects from '../components/Explore/ProjectList';\r\n\r\nconst ExploreTwo = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExploreTwo;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\n\r\nconst LatestProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AuctionsOne type=\"LatestProjects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LatestProjects;","import React, { Component } from 'react';\r\nimport AuctionsOne from '../Auctions/AuctionsOne';\r\n\r\n\r\n\r\nconst LatestProject = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <AuctionsOne />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default LatestProject;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\n\r\nconst Auctions = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LatestProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Auctions;","\r\nimport React, { useState } from \"react\";\r\n\r\nconst ReadMore = ({ data }) => {\r\n\r\n    const [isReadMore, setIsReadMore] = useState(true);\r\n    console.log(data)\r\n    const toggleReadMore = () => {\r\n        setIsReadMore(!isReadMore);\r\n    };\r\n\r\n    return (\r\n        <p className=\"text\">\r\n            <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: isReadMore ? data?.slice(0, 1000) : data }} />\r\n            {data?.length > 1000 &&\r\n\r\n                <span onClick={toggleReadMore} className=\"read-or-hide\">\r\n                    {isReadMore ? \"...read more\" : \" show less\"}\r\n                </span>\r\n            }\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default ReadMore","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst FundTransdataTable = () => {\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [expandIconPosition] = useState('end');\r\n\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n\r\n\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg class=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></circle><path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {funddetail?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                    {funddetail?.payment_history?.length == 0 &&\r\n                        <div className='nothing'>\r\n                            No matching records found\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FundTransdataTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst UserTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    // const latprojnftdetail = useSelector(state => {\r\n    //     // \r\n    //     return state?.projectdetails?.getnftwoldetails\r\n    // })\r\n    // console.log('lattt', latprojnftdetail.nft_history)\r\n    // useEffect(() => {\r\n    //     dispatch(GetNftwol(props.id))\r\n    // }, [props.id])\r\n    const location = useLocation()\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <tbody>\r\n                            {userdet?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n\r\n\r\n\r\n\r\n                    </Table>\r\n\r\n                </Panel>\r\n                {userdet?.payment_history?.length == 0 &&\r\n                    <div className='nothing'>\r\n                        No matching records found\r\n                    </div>\r\n                }\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserTransdataTable","// import Button from 'react-bootstrap/Button';\r\n// import Modal from 'react-bootstrap/Modal';\r\n// import { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useEffect, useRef, useState } from 'react';\r\n// import { Controller, useForm } from 'react-hook-form';\r\n// import { CopyToClipboard } from 'react-copy-to-clipboard'\r\n// import {\r\n//     EmailShareButton,\r\n//     FacebookIcon,\r\n//     FacebookShareButton,\r\n//     InstapaperShareButton,\r\n//     InstapaperIcon,\r\n//     LineShareButton,\r\n//     LinkedinShareButton,\r\n//     PinterestShareButton,\r\n//     RedditShareButton,\r\n//     TelegramIcon,\r\n//     TelegramShareButton,\r\n//     TwitterIcon,\r\n//     TwitterShareButton,\r\n//     WhatsappIcon,\r\n//     WhatsappShareButton,\r\n//     LinkedinIcon,\r\n//     EmailIcon,\r\n// } from \"react-share\";\r\n// import {\r\n//     FacebookShareCount,\r\n//     HatenaShareCount,\r\n//     OKShareCount,\r\n//     PinterestShareCount,\r\n//     RedditShareCount,\r\n//     TumblrShareCount,\r\n//     VKShareCount\r\n// } from \"react-share\";\r\n// import JoditEditor from 'jodit-react';\r\n// import { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\n// import { useParams } from 'react-router';\r\n// // import 'bootstrap/dist/css/bootstrap.min.css';\r\n// function ProjDetailPopup(props) {\r\n//     const editor = useRef(null);\r\n//     // const [title, setTitle] = useState(\"\");\r\n//     // const [description, setDescription] = useState(\"\");\r\n//     // const [short_url, setShortUrl] = useState(\"\");\r\n//     // const [symbol, setSymbol] = useState(\"\");\r\n//     const dispatch = useDispatch()\r\n//     const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n//     const [description, setDescription] = useState();\r\n//     const id = useParams()\r\n//     const [type, setType] = useState()\r\n//     // const url = window.location.href + '/' + props.userRef\r\n//     // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n//     const { countries } = useSelector(state => state.countries)\r\n//     const [country, setCountry] = useState('')\r\n//     console.log('country', country)\r\n//     const [state, setState] = useState('')\r\n//     const [city, setCity] = useState('')\r\n//     console.log(countries?.data?.data, 'cntry')\r\n//     const states = useSelector(state => {\r\n//         // debugger\r\n//         return state.countries.states\r\n//     })\r\n//     // console.log(countries?.data?.data)\r\n//     useEffect(() => {\r\n//         dispatch(CategoriesAction())\r\n//         dispatch(CountryList())\r\n//         // dispatch(StateList('101'))\r\n\r\n//         // dispatch(StateList(projdetail.country))\r\n//     }, [])\r\n\r\n//     const handleChangeCountry = (event) => {\r\n//         debugger\r\n//         event?.preventDefault()\r\n//         // 👇 Get input value from \"event\"\r\n//         setCountry(event?.currentTarget?.value);\r\n\r\n//         const formData = new FormData()\r\n//         formData.append('country_id', event?.currentTarget?.value)\r\n//         dispatch(StateList(formData))\r\n\r\n//         // if (country) {\r\n\r\n//         //     debugger\r\n//         // }\r\n//     };\r\n//     const handleChangeState = (event) => {\r\n//         // debugger\r\n//         event.preventDefault()\r\n//         // 👇 Get input value from \"event\"\r\n//         setState(event.currentTarget.value);\r\n//         const formData = new FormData()\r\n//         formData.append('country_id', country)\r\n//         formData.append('state_id', event?.currentTarget?.value)\r\n//         dispatch(CityList(formData))\r\n\r\n\r\n//         //     debugger\r\n//         // }\r\n//     };\r\n//     const handleChangeCity = (event) => {\r\n//         // debugger\r\n//         // 👇 Get input value from \"event\"\r\n//         setCity(event?.currentTarget?.value);\r\n\r\n//     };\r\n\r\n//     const cities = useSelector(state => {\r\n//         // debugger\r\n//         return state.countries.city\r\n//     })\r\n\r\n\r\n//     const projdetail = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.projectdetails\r\n//     })\r\n//     console.log(projdetail.nft_data, 'projdatanft')\r\n//     const cat = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.categories\r\n//     })\r\n//     const disablePastDate = () => {\r\n//         const today = new Date();\r\n//         const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n//         const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n//         const yyyy = today.getFullYear();\r\n//         return yyyy + \"-\" + mm + \"-\" + dd;\r\n//     };\r\n//     useEffect(() => {\r\n//         if (projdetail && Object.keys(projdetail).length) {\r\n\r\n//             setValue(\"title\", projdetail.title)\r\n//             setValue(\"address\", projdetail.address)\r\n//             setValue(\"description\", projdetail.description)\r\n//             setValue('state', projdetail.state)\r\n//             setValue('country', projdetail.country)\r\n//             setValue('city', projdetail.city)\r\n//             setValue(\"price\", projdetail.price)\r\n//             setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n//             setValue(\"start_date\", projdetail.start_date)\r\n//             setValue(\"end_date\", projdetail.end_date)\r\n//             setValue(\"type\", projdetail.type)\r\n//             setValue('category_id', projdetail.category_id)\r\n\r\n//             setType(projdetail.type)\r\n//             setCountry(projdetail.country)\r\n//             setDescription(projdetail.description)\r\n//             // setState(projdetail.state)\r\n//             // setCity(projdetail.city)\r\n//             console.log(projdetail.state, 'edit state')\r\n//             console.log(projdetail.city, 'edit city')\r\n//             setValue(\"image\", projdetail.image)\r\n//             const formData = new FormData()\r\n//             // formData.append('country_id', event?.currentTarget?.value)\r\n//             formData.append('country_id', projdetail.country)\r\n//             formData.append('state_id', projdetail.state)\r\n//             dispatch(StateList(formData))\r\n//             dispatch(CityList(formData))\r\n\r\n//         }\r\n//     }, [projdetail]);\r\n\r\n//     const OnSubmit = (data) => {\r\n//         const formData = new FormData()\r\n\r\n//         // formData.append('image', data.image[0])\r\n//         formData.append('title', data.title)\r\n//         formData.append('description', description)\r\n//         formData.append('state', data.state)\r\n//         formData.append('country', data.country)\r\n//         formData.append('city', data.city)\r\n//         formData.append('address', data.address)\r\n//         formData.append('price', data.price)\r\n//         formData.append('number_of_nft', data.number_of_nft)\r\n//         if (data?.type == 1) {\r\n\r\n//             formData.append('start_date', '')\r\n//             formData.append('end_date', '')\r\n//         } else {\r\n\r\n//             formData.append('start_date', data.start_date)\r\n//             formData.append('end_date', data.end_date)\r\n//         }\r\n//         formData.append('type', data.type)\r\n//         formData.append('category_id', data.category_id)\r\n//         debugger\r\n\r\n//         dispatch(UpdateProject(props.id, formData))\r\n//     }\r\n\r\n//     return (\r\n//         <Modal\r\n//             {...props}\r\n//             size=\"lg\"\r\n//             aria-labelledby=\"contained-modal-title-vcenter\"\r\n//             centered\r\n//         >\r\n//             <Modal.Header >\r\n\r\n//                 <div>\r\n//                     <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n//                 </div>\r\n//             </Modal.Header>\r\n//             <Modal.Body>\r\n//                 <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n//                     <div className=\"row\">\r\n\r\n//                         <div className=\"col-6\">\r\n//                             {/* {type == 1 && ( */}\r\n\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Project name</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"title\"\r\n//                                     placeholder=\"Project name\"\r\n//                                     {...register(\"title\", { required: true })}\r\n//                                     aria-invalid={errors.title ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n//                             </div>\r\n//                             {/* )} */}\r\n//                         </div>\r\n//                         <div className=\"col-6\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Web address</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"address\"\r\n//                                     placeholder=\"Web Address\"\r\n//                                     {...register(\"address\", { required: true })}\r\n//                                     aria-invalid={errors.address ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n//                             </div>\r\n//                         </div>\r\n\r\n\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Country</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"country\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"country\"\r\n//                                             {...register(\"country\", { required: true })}\r\n//                                             // value={value}\r\n//                                             // defaultValue={value}\r\n\r\n//                                             onChange={handleChangeCountry}\r\n\r\n//                                         >\r\n\r\n//                                             aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n//                                                 Select your country</option>\r\n//                                             {countries?.data?.data?.map((option, key) => (\r\n//                                                 <>\r\n//                                                     <option key={key.id} value={option.id}  >\r\n\r\n//                                                         {option.name}\r\n\r\n//                                                     </option>\r\n//                                                 </>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>State or Province</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"state\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"state\"\r\n\r\n//                                             {...register(\"state\", { required: true })}\r\n//                                             // defaultValue={value}\r\n//                                             // value={value}\r\n//                                             onChange={handleChangeState} >\r\n//                                             aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n//                                             {states?.data?.data?.map((option, key) => (\r\n\r\n//                                                 <><option key={key.id} value={option.id} >\r\n//                                                     {option.name}\r\n//                                                 </option></>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>City or Region</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"city\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"city\"\r\n//                                             {...register(\"city\", { required: true })}\r\n//                                             // value={value}\r\n//                                             onChange={handleChangeCity}\r\n//                                         >\r\n//                                             aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n//                                             {cities?.data?.data?.map((option, key) => (\r\n//                                                 <><option key={key.id} value={option.id}>\r\n//                                                     {option.name}\r\n//                                                 </option></>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         {/* <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>Country</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"country\"\r\n//                                             // selected={country}\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                                 // onChange={onChange}\r\n\r\n//                                                 <GeoLocation\r\n//                                                     // locationTitle=\"Country\"\r\n//                                                     isCountry\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n//                                                     onChange={setCountry}\r\n//                                                     required={true}\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>State or Province</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"state\"\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n//                                                 <GeoLocation\r\n\r\n//                                                     onChange={setState}\r\n//                                                     geoId={country}\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n\r\n\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>City or Region</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"city\"\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n//                                                 <GeoLocation\r\n\r\n//                                                     onChange={setCity}\r\n//                                                     geoId={state}\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div> */}\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 {projdetail.type == 2 ? (\r\n\r\n//                                     <label>Price</label>\r\n//                                 ) : (\r\n\r\n//                                     <label>Price per NFT</label>\r\n//                                 )}\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"price\"\r\n//                                     placeholder=\"Price\"\r\n//                                     {...register(\"price\", { required: true })}\r\n//                                     aria-invalid={errors.price ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 <label>Number of NFTs</label>\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"number_of_nft\"\r\n//                                     defaultValue={1}\r\n//                                     // disabled={type == 1}\r\n//                                     placeholder=\"Select your number of NFTs (1-10)\"\r\n//                                     min={1}\r\n//                                     max={10}\r\n//                                     {...register(\"number_of_nft\", { required: true })}\r\n//                                     aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n//                                 {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         {projdetail.type == 2 && (\r\n\r\n//                             <><div className=\"col-12 col-md-6\">\r\n//                                 <div className=\"form-group\">\r\n//                                     <label>Campaign Start date</label>\r\n//                                     <input\r\n//                                         type=\"date\"\r\n//                                         className=\"form-control\"\r\n//                                         name=\"start_date\"\r\n//                                         // min={disablePastDate()}\r\n//                                         // placeholder=\"Start date\"\r\n//                                         {...register(\"start_date\", { required: true })}\r\n//                                         aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n//                                     {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n//                                 </div>\r\n//                             </div><div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>Campaign End Date</label>\r\n//                                         <input\r\n//                                             type=\"date\"\r\n//                                             className=\"form-control\"\r\n//                                             name=\"end_date\"\r\n//                                             min={disablePastDate()}\r\n//                                             // placeholder=\"End date\"\r\n//                                             {...register(\"end_date\", { required: true })}\r\n//                                             aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n//                                         {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n//                                     </div>\r\n//                                 </div></>\r\n//                         )}\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 <label>Category</label>\r\n//                                 <select name=\"annual_revenue_range\"\r\n//                                     // defaultValue={}\r\n//                                     {...register(\"category_id\")}>\r\n//                                     {cat?.map((option, key) => (\r\n\r\n//                                         <option key={key.id} value={option.id}>\r\n//                                             {option.title}\r\n\r\n//                                         </option>\r\n//                                     ))}\r\n//                                 </select>\r\n//                             </div>\r\n//                         </div>\r\n\r\n\r\n//                         <div className=\"col-12\">\r\n//                             <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n//                         </div>\r\n//                     </div>\r\n\r\n\r\n\r\n//                 </form>\r\n//             </Modal.Body>\r\n//             {/* <Modal.Footer>\r\n//                 <Button onClick={props.onHide}>Close</Button>\r\n//             </Modal.Footer> */}\r\n//         </Modal >\r\n//     );\r\n// }\r\n\r\n// export default ProjDetailPopup\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\nimport { useParams } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ProjDetailPopup(props) {\r\n    const editor = useRef(null);\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n    const id = useParams()\r\n    const [type, setType] = useState()\r\n    // const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    const { countries } = useSelector(state => state.countries)\r\n    const [country, setCountry] = useState('')\r\n    console.log('country', country)\r\n    const [state, setState] = useState('')\r\n    const [city, setCity] = useState('')\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(countries?.data?.data)\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList('101'))\r\n\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n\r\n    const handleChangeCountry = (event) => {\r\n        event?.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n\r\n        const formData = new FormData()\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // debugger\r\n        event.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeCity = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCity(event?.currentTarget?.value);\r\n\r\n    };\r\n\r\n    const cities = useSelector(state => {\r\n        // debugger\r\n        return state.countries.city\r\n    })\r\n\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            setDescription(projdetail.description)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n        dispatch(UpdateProject(props.id, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-6 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Project name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Project name\"\r\n                                    {...register(\"title\", { required: true })}\r\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <div className=\"col-6 col-12\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    placeholder=\"Web Address\"\r\n                                    {...register(\"address\", { required: true })}\r\n                                    aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Country</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"country\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"country\"\r\n                                            {...register(\"country\", { required: true })}\r\n                                            // value={value}\r\n                                            // defaultValue={value}\r\n\r\n                                            onChange={handleChangeCountry}\r\n\r\n                                        >\r\n\r\n                                            aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                Select your country</option>\r\n                                            {countries?.data?.data?.map((option, key) => (\r\n                                                <>\r\n                                                    <option key={key.id} value={option.id}  >\r\n\r\n                                                        {option.name}\r\n\r\n                                                    </option>\r\n                                                </>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>State or Province</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"state\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"state\"\r\n\r\n                                            {...register(\"state\", { required: true })}\r\n                                            // defaultValue={value}\r\n                                            // value={value}\r\n                                            onChange={handleChangeState} >\r\n                                            aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n                                            {states?.data?.data?.map((option, key) => (\r\n\r\n                                                <><option key={key.id} value={option.id} >\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>City or Region</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"city\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}\r\n                                            // value={value}\r\n                                            onChange={handleChangeCity}\r\n                                        >\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                {projdetail.type == 2 ? (\r\n\r\n                                    <label>Price</label>\r\n                                ) : (\r\n\r\n                                    <label>Price per NFT</label>\r\n                                )}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    placeholder=\"Price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    defaultValue={1}\r\n                                    // disabled={type == 1}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    min={1}\r\n                                    max={10}\r\n                                    {...register(\"number_of_nft\", { required: true })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {projdetail.type == 2 && (\r\n\r\n                            <><div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // min={disablePastDate()}\r\n                                        // placeholder=\"Start date\"\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                        aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                    {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                </div>\r\n                            </div><div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Campaign End Date</label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n                                            name=\"end_date\"\r\n                                            min={disablePastDate()}\r\n                                            // placeholder=\"End date\"\r\n                                            {...register(\"end_date\", { required: true })}\r\n                                            aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                        {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                    </div>\r\n                                </div></>\r\n                        )}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"annual_revenue_range\"\r\n                                    // defaultValue={}\r\n                                    {...register(\"category_id\")}>\r\n                                    {cat?.map((option, key) => (\r\n\r\n                                        <option key={key.id} value={option.id}>\r\n                                            {option.title}\r\n\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default ProjDetailPopup","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nconst UserdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    // const { id } = useParams()\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details' >\r\n\r\n                        <tbody >\r\n\r\n                            <tr>\r\n\r\n                                <td><span>Name </span> <span>{userdet.username}</span></td>\r\n                                <td><span>Wallet ID</span>  <span>{userdet.wallet_id}</span></td>\r\n                                <td><span>Number of Referrals </span> <span>{userdet.referrers}</span></td>\r\n                                <td><span>Referral Amount </span> <span>{userdet.referral_amount} KARMATICA token</span></td>\r\n                                <td><span>Fundraised </span> <span>{userdet.total_fundraised} MATIC</span></td>\r\n\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserdataTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { LatestProjectDetail, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { ProgressBar, Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nimport dayjs from 'dayjs';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\nconst ProjdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { slug } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'userprojdata')\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(latprojdetail, 'userprojdetaaaa')\r\n    // const [projuserID, setProjuserid] = useState()\r\n    // console.log('projjj', projuserID)\r\n    // const projuserid = projdetail?.user_data?.map((item) => {\r\n    //     return (\r\n    //         setProjuserid(item.user_id)\r\n    //     )\r\n    // })\r\n    console.log(userdet.user_id, 'uid')\r\n    useEffect(() => {\r\n        dispatch(LatestProjectDetail(slug))\r\n        dispatch(ProjectDetail(slug))\r\n        dispatch(PopularCollectionActionDetails(props.idx))\r\n    }, [slug])\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    const location = useLocation();\r\n    const date1 = new Date(coll?.updated_at)\r\n    const date2 = new Date()\r\n    const time_difference = date2.getTime() - date1.getTime();\r\n    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n    console.log('days', days_difference)\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details'>\r\n                        {projdetail?.user_data?.user_id === userdet?.user_id && localStorage.getItem('authToken') &&\r\n\r\n                            <div >\r\n                                <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                    setModalShowproj(true)}></i>\r\n                                <ProjDetailPopup\r\n                                    // debugger\r\n                                    id={props.id}\r\n                                    show={modalShowproj}\r\n                                    onHide={() => setModalShowproj(false)} />\r\n                                {/* <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a> */}\r\n\r\n                                {/* <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                {/* </a> */}\r\n                            </div>\r\n                        }\r\n                        <tbody className=''>\r\n                            {/* {projdetail.nft_data?.map((items) => {\r\n                                return ( */}\r\n                            <tr>\r\n\r\n                                {/* {projdetail?.country_name?.map((item) => {\r\n                                    return (\r\n\r\n                                        <tr>Country : {item.name}</tr>\r\n                                    )\r\n                                })} */}\r\n                                {location.pathname === `/projects/${slug}` ? (\r\n\r\n                                    <>\r\n                                        {/* <td><span>Owned By:</span> <span>{latprojdetail?.user_data?.username}</span> </td> */}\r\n                                        {/* <td><span>Total NFT's:</span> <span>{latprojdetail?.number_of_nft}</span></td> */}\r\n                                        <td><span>Chain: </span> <span>Polygon (Matic)</span></td>\r\n                                        <td><span>Created : </span> <span> {dayjs(latprojdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\r\n                                        <td><span>Country </span> <span>{latprojdetail?.country_name?.name}</span></td>\r\n                                        <td><span>State</span>  <span>{latprojdetail?.state_name?.name}</span> </td>\r\n                                        <td><span>City</span>  <span>{latprojdetail?.city_name?.name}</span> </td>\r\n                                        <td><span>Number of NFTs</span>  <span>{latprojdetail?.number_of_nft}</span> </td>\r\n                                        {latprojdetail.type == 2 &&\r\n\r\n                                            <><td><span>Start Date</span>  <span>{latprojdetail?.start_date}</span> </td>\r\n                                                <td><span>End Date </span> <span>{latprojdetail?.end_date}</span> </td></>\r\n                                        }\r\n                                        <td><span>Price </span> <span> {latprojdetail?.price} </span> </td></>\r\n                                ) : (\r\n                                    <>\r\n                                        {location.pathname === `/popularcollection/details/${slug}` ? (\r\n                                            <>\r\n\r\n                                                <td><span>Number of NFTs </span><span> {coll?.nft_data?.length}</span></td>\r\n                                                <td><span>Chain </span> <span>Polygon (Matic)</span></td>\r\n                                                <td><span>Created at</span>  <span>{days_difference} days ago</span> </td>\r\n                                                <td><span>Category</span>  <span>{coll?.category}</span> </td>\r\n                                            </>\r\n                                        ) : (\r\n\r\n                                            <>\r\n                                                <td><span>Chain: </span> <span>Polygon (Matic)</span></td>\r\n                                                <td><span>Created : </span> <span> {dayjs(projdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\r\n                                                <td><span>Country </span> <span>{projdetail.country_name?.name}</span></td>\r\n                                                <td><span>State</span>  <span>{projdetail.state_name?.name}</span> </td>\r\n                                                <td><span>City</span>  <span>{projdetail.city_name?.name}</span> </td>\r\n                                                <td><span>Number of NFTs</span>  <span>{projdetail.number_of_nft}</span> </td>\r\n                                                {projdetail.type == 2 &&\r\n\r\n                                                    <><td><span>Start Date</span>  <span>{projdetail.start_date}</span> </td>\r\n                                                        <td><span>End Date </span> <span>{projdetail.end_date}</span> </td></>\r\n                                                }\r\n                                                <td><span>Price </span> <span> {projdetail.price} </span> </td>\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjdataTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst LatNftdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { slug } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(ProjectDetail(slug))\r\n    }, [slug])\r\n\r\n    return (\r\n        <div className='position-relative'>\r\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\" >\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>Item</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody className='img_table'>\r\n                            {projdetail?.project_activity && projdetail?.project_activity?.length ?\r\n                                [...new Map(projdetail?.project_activity.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                        return (\r\n                                            <tr>\r\n\r\n                                                <td><img\r\n                                                    src={item.image}\r\n                                                    className=\"rounded-circle mr-2\"\r\n                                                    alt=\"Avatar\"\r\n                                                />{item.nft_title.slice(0, 13)}...</td>\r\n                                                <td>{item.price}</td>\r\n                                                <td>{item.pay_from.slice(0, 4)}...{item.pay_from.slice(35, 44)}</td>\r\n                                                <td>{item.pay_to.slice(0, 4)}...{item.pay_to.slice(35, 44)}</td>\r\n                                                <td>{item.txd_id.slice(0, 4)}...{item.txd_id.slice(35, 44)}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) :\r\n                                // <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                <>\r\n\r\n                                </>\r\n                            }\r\n                        </tbody>\r\n                        {/* <div className='nothing col-spam-5' colspan=\"5\">\r\n                            No matching records found\r\n                        </div> */}\r\n                    </Table>\r\n                    <div className='nothing'>\r\n                        {projdetail?.project_activity == 0 &&\r\n                            <span> No matching records found</span>\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftdataTable","\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects, LatestProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\nconst ProjNFTS = (props) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams();\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    useEffect(() => {\r\n        // \r\n        dispatch(LatestProjectDetail(slug))\r\n\r\n    }, [slug])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container\">\r\n                <div className='intro row m-0'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row items\">\r\n\r\n                    {latprojdetail?.nft_data?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* <div className=\"intro text-center\">\r\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                                </div> */}\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.slug}?refid=${props.refid}`}>\r\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0 nfts-detail\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n\r\n\r\n\r\n                                            <h5 className=\"mb-0\">{item.title.slice(0, 16)} ...</h5>\r\n\r\n                                            <div className=\"card-bottom mt-1\">\r\n                                                <p dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                                            </div>\r\n\r\n\r\n                                            <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\r\n                                                {item.sold_nft == 1 ? (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>SOLD OUT</button></a>\r\n                                                ) : (\r\n\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={`/nftprojdetails/${item.slug}?refid=${props.refid}`} style={{ color: \"white\" }}>Invest</Link></button></a>\r\n                                                )}\r\n                                                <a> <img className=\"mr-1\" src='../img/image14.png' />{item.price}</a>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default ProjNFTS;","// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { Link, useParams } from 'react-router-dom';\r\n// import { getPublicLiveProjects, LatestProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\n// const ProjNFTS = () => {\r\n\r\n\r\n//     const dispatch = useDispatch()\r\n//     const { id } = useParams();\r\n//     const latprojdetail = useSelector(state => {\r\n//         // \r\n//         return state.projectdetails.latestprojectdetails\r\n//     })\r\n\r\n//     useEffect(() => {\r\n//         // \r\n//         dispatch(LatestProjectDetail(id))\r\n\r\n//     }, [id])\r\n//     return (\r\n//         <section className=\"live-auctions-area single_project-detail\">\r\n//             <div className=\"container\">\r\n//                 <div className='intro row m-0'>\r\n//                     <div className=\"intro-content\">\r\n//                         <span style={{ marginLeft: \"15px\" }}>NFTs</span>\r\n//                         <h3 className=\"w-full mb-0\">NFTs</h3>\r\n//                     </div>\r\n//                 </div>\r\n\r\n\r\n//                 <div className=\"row items\">\r\n\r\n//                     {latprojdetail?.nft_data?.map((item, idx) => {\r\n//                         return (\r\n//                             <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n//                                 {/* <div className=\"intro text-center\">\r\n//                                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n//                                 </div> */}\r\n//                                 <div className=\"card\">\r\n\r\n//                                     <div className=\"image-over\">\r\n//                                         <Link to={`/nftprojdetails/${item.id}`}>\r\n//                                             <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n//                                         </Link>\r\n//                                     </div>\r\n//                                     {/* Card Caption */}\r\n//                                     <div className=\"card-caption col-12 p-0\">\r\n//                                         {/* Card Body */}\r\n//                                         <div className=\"card-body\">\r\n//                                             <div className=\"countdown-times mb-3\">\r\n//                                                 <div className=\"countdown d-flex\" data-date={item.end_date} />\r\n//                                             </div>\r\n//                                             <a href=\"/item-details\">\r\n//                                                 <h5 className=\"mb-0\">{item.title.toUpperCase()} {item.token_id}</h5>\r\n//                                             </a>\r\n//                                             {/* <a className=\"seller d-flex align-items-center my-3\">\r\n//                                                 <img className=\"avatar-sm rounded-circle\"\r\n//                                                     src='https://images.unsplash.com/photo-1547555999-14e818e09e33?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1032&q=80' alt=\"\" />\r\n//                                                 <span className=\"ml-2\">{item.from}</span>\r\n//                                             </a> */}\r\n//                                             <div className=\"card-bottom d-flex\">\r\n//                                                 <span dangerouslySetInnerHTML={{ __html: item.description.slice(0, 28).toUpperCase() }} /><span></span>\r\n//                                             </div>\r\n\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         );\r\n//                     })}\r\n//                 </div>\r\n//                 {/* {\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col-12 text-center\">\r\n//                         <a className=\"btn btn-bordered-white mt-5\">Load More</a>\r\n//                     </div>\r\n//                 </div>\r\n//                } */}\r\n//             </div>\r\n//         </section >\r\n//     );\r\n\r\n// }\r\n\r\n// export default ProjNFTS;\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects, LatestProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getPopularCollectiondetails } from '../../redux/Slices/popularCollectionSlice';\r\n\r\nconst CollectionNFTS = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams();\r\n    const collNft = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    console.log(collNft, \"collNft\")\r\n    useEffect(() => {\r\n\r\n        dispatch(getPopularCollectiondetails())\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container p-0\">\r\n                <div className='intro row ml-0 mr-0 mt-3'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row items\">\r\n\r\n                    {collNft?.nft_data?.map((item, idx) => {\r\n                        return (\r\n                            // <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                            //     {/* <div className=\"intro text-center\">\r\n                            //         <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                            //     </div> */}\r\n                            //     <div className=\"card\">\r\n\r\n                            //         <div className=\"image-over\">\r\n                            //             <Link to={`/nftprojdetails/${item.slug}`}>\r\n                            //                 <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                            //             </Link>\r\n                            //         </div>\r\n                            //         {/* Card Caption */}\r\n                            //         <div className=\"card-caption col-12 p-0\">\r\n                            //             {/* Card Body */}\r\n                            //             <div className=\"card-body\">\r\n                            //                 {/* <div className=\"countdown-times mb-3\">\r\n                            //                     <div className=\"countdown d-flex\" data-date={item.end_date} />\r\n                            //                 </div> */}\r\n                            //                 <a href=\"/item-details\">\r\n                            //                     <h5 className=\"mb-0\">{item.title.slice(0,20)}...</h5>\r\n                            //                 </a>\r\n                            //                 {/* <a className=\"seller d-flex align-items-center my-3\">\r\n                            //                     <img className=\"avatar-sm rounded-circle\"\r\n                            //                         src='https://images.unsplash.com/photo-1547555999-14e818e09e33?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1032&q=80' alt=\"\" />\r\n                            //                     <span className=\"ml-2\">{item.from}</span>\r\n                            //                 </a> */}\r\n                            //                 <div className=\"card-bottom d-flex\">\r\n                            //                     <span dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                            //                 </div>\r\n\r\n                            //             </div>\r\n                            //         </div>\r\n                            //     </div>\r\n                            // </div>\r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* <div className=\"intro text-center\">\r\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                                </div> */}\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.slug}`}>\r\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0 nfts-detail\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n\r\n\r\n\r\n                                            <h5 className=\"mb-0\">{item.title.slice(0, 16)} ...</h5>\r\n\r\n                                            <div className=\"card-bottom mt-1\">\r\n                                                <p dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                                            </div>\r\n\r\n\r\n                                            <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\r\n                                                {item.sold_nft == 1 ? (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled><i className=\"icon-handbag mr-1\" />SOLD OUT</button></a>\r\n                                                ) : (\r\n\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={`/nftprojdetails/${item.slug}`} style={{ color: \"white\" }}>Invest</Link></button></a>\r\n                                                )}\r\n                                                <a> <img className=\"mr-1\" src='../../img/image14.png' />{item.price}</a>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n\r\n                </div>\r\n                {/* {\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <a className=\"btn btn-bordered-white mt-5\">Load More</a>\r\n                    </div>\r\n                </div>\r\n               } */}\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default CollectionNFTS;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Nftprice, Nftdeatil } from './nftprice'\r\nimport { useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport ReadMore from '../../readMore';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport UserdataTable from '../AuthorProfile/userTransTable';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport ProjdataTable from './projDetailtable';\r\nimport LatNftdataTable from './latProjNftdata';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { getPopularCollection } from '../../redux/Slices/popularCollectionSlice';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\nimport CollectionNFTS from '../Collections/collectionNfts';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst CollectionDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const slug = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionActionDetails(slug))\r\n\r\n\r\n    }, [slug])\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    console.log(coll, 'coll')\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail collection_detail\">\r\n            <div className=\"container\">\r\n                <div className='col-12 col-lg-12 '>\r\n                    <span className=\"p-0 title_main \">{coll?.title}</span>\r\n                </div>\r\n                <div className=\"row\">\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n\r\n                                <img src={coll?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12 col-lg-4 '>\r\n                        <div class=\"user-description mt-4 mt-sm-0\">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={coll?.description?.slice(0, 505)} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: coll.description }} /> */}\r\n                        </div>\r\n\r\n                        {/* <div className='content content_project'>\r\n                        <div className='card no-hover position-relative'>\r\n                        <div><span className='boldertext'>Number of NFTs :</span><span> {coll?.nft_data?.length}</span></div>\r\n                        <div><span className='boldertext'>Chain :</span> <span>Polygon (Matic)</span></div>\r\n                        <div><span className='boldertext'>Created at:</span>  <span> {days_difference}12  days ago</span></div>\r\n                        <div><span className='boldertext'>Category:</span>  <span>{coll?.category}</span></div>\r\n                        </div>\r\n\r\n                    </div> */}\r\n                        {/* \r\n                        <div className='table-main-detail mt-3 mt-lg-0 position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                                idx={slug}\r\n                            />\r\n                        </div> */}\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {/* <div className=\"col-lg-4 col-12 mt-3 mt-lg-0\">\r\n                        <div>\r\n                            <div className=\" mb-3\">\r\n\r\n\r\n\r\n\r\n\r\n                                {coll?.user_invest?.slice(0, 3)?.map((items) => {\r\n                                    const date1 = new Date(items.updated_at)\r\n                                    const date2 = new Date()\r\n                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                    console.log('days', days_difference)\r\n                                    return (\r\n\r\n                                        <ul className=\"m-0 custom_lis pl-0\">\r\n                                            <li>\r\n                                                <div className='lorem_done p-0'>\r\n                                                    <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    </svg>\r\n                                                    </span>\r\n\r\n                                                   \r\n                                                </div>\r\n                                            </li>\r\n\r\n\r\n                                        </ul>\r\n\r\n                                    )\r\n                                })}\r\n\r\n\r\n                                <p className='see_all'>See all</p>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-12 col-lg-12 mt-3\">\r\n                        {/* <div className='row'>\r\n                            <div className='filter'>\r\n                                <div className='filter-main-name'>\r\n                                    <div>Short</div>\r\n                                    <div>\r\n                                        <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"0\" fill=\"none\" width=\"24\" height=\"24\"/><g><path d=\"M7 10l5 5 5-5\" fill=\"#fff\"/></g></svg>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='filter-main'>\r\n                                    <ul>\r\n                                        <li>Latest</li>\r\n                                        <li>Oldest</li>\r\n                                        <li>Price:Low to Heigh</li>\r\n                                        <li>Price:Heigh to Low </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n\r\n\r\n\r\n                        {/* <div>\r\n\r\n                        <ProjdataTable\r\n                            idx={id}\r\n                        //  id={id}\r\n                        />\r\n                    </div> */}\r\n\r\n                        {/* </div> */}\r\n\r\n                        {/* <div className='col-12'>\r\n                        <div className='mt-3'>\r\n                            <div className='table-detail'>\r\n                                <LatNftdataTable />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div> */}\r\n\r\n                        <div className=\" col-12 mt-3 p-0\">\r\n                            <div className=\"items mt-0 explore-items p-0\">\r\n                                <CollectionNFTS />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default CollectionDetails;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Explore/popularDetails';\r\n\r\nconst ItemDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <CollectionDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ItemDetails;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/activity\";\r\n\r\nclass Activity extends Component {\r\n    state = {\r\n        data: {},\r\n        tabData_1: [],\r\n        tabData_2: [],\r\n        tabData_3: [],\r\n        filterData: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    tabData_1: res.data.tabData_1,\r\n                    tabData_2: res.data.tabData_2,\r\n                    tabData_3: res.data.tabData_3,\r\n                    filterData: res.data.filterData \r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"activity-area load-more\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro mb-4\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        <div className=\"col-12 col-md-6 col-lg-8\">\r\n                            {/* Netstorm Tab */}\r\n                            <ul className=\"netstorm-tab nav nav-tabs\" id=\"nav-tab\">\r\n                                <li>\r\n                                    <a className=\"active\" id=\"nav-home-tab\" data-toggle=\"pill\" href=\"#nav-home\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_1}</h5>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a id=\"nav-profile-tab\" data-toggle=\"pill\" href=\"#nav-profile\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_2}</h5>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a id=\"nav-contact-tab\" data-toggle=\"pill\" href=\"#nav-contact\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_3}</h5>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                            {/* Tab Content */}\r\n                            <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                                <div className=\"tab-pane fade show active\" id=\"nav-home\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_1.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`ato_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"nav-profile\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_2.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`att_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"nav-contact\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_3.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`atth_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            {/* Activity Content */}\r\n                            <div className=\"activity-content mt-5 mt-lg-0\">\r\n                                {/* Single Widget */}\r\n                                <div className=\"single-widget\">\r\n                                    {/* Search Widget */}\r\n                                    <div className=\"widget-content search-widget\">\r\n                                        <form action=\"#\">\r\n                                            <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Single Widget */}\r\n                                <div className=\"single-widget\">\r\n                                    {/* Filter Widget */}\r\n                                    <div className=\"widget filter-widget\">\r\n                                        <h4 className=\"title\">{this.state.data.widgetTitle}</h4>\r\n                                        {/* Filter Widget Content */}\r\n                                        <div className=\"widget-content\">\r\n                                            {/* Tags Widget Items */}\r\n                                            <div className=\"widget-content filter-widget-items mt-3\">\r\n                                                {this.state.filterData.map((item, idx) => {\r\n                                                    return (\r\n                                                        <a key={`fd_${idx}`} href=\"#\" className=\"badge tag\">{item.title}</a>\r\n                                                    );\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Activities from '../components/Activity/Activity';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Activity extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Activity\" subpage=\"Pages\" page=\"Activity\" />\r\n                <Activities />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Help Center\",\r\n    heading: \"How can we help you?\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        icon: \"icon icon-plane text-effect\",\r\n        title: \"Getting Started\",\r\n        content: \"Learn how to create an account, set up your wallet, and what you can do on NetStorm\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        icon: \"icon icon-note text-effect\",\r\n        title: \"Creating\",\r\n        content: \"Learn how to create your very first NFT and how to create your NFT collections so you can begin selling and sharing\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        icon: \"icon icon-handbag text-effect\",\r\n        title: \"Buying\",\r\n        content: \"Learn how to purchase your first NFT and understand gas fees and what's gas free on NetStorm\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        icon: \"icon icon-chart text-effect\",\r\n        title: \"Selling\",\r\n        content: \"Learn how list your NFTs for sale and understand the different ways to list your NFTs\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        icon: \"icon icon-link text-effect\",\r\n        title: \"Partners\",\r\n        content: \"Learn how you can partner with us to showcase your NFT drops\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        icon: \"icon icon-flag text-effect\",\r\n        title: \"Developers\",\r\n        content: \"Learn how you can develop with NetStorm &amp; sell them on Marketplace\"\r\n    }\r\n]\r\n\r\nclass HelpCenter extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"help-center-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`hd_${idx}`} className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                    {/* Help Card */}\r\n                                    <div className=\"card help-card\">\r\n                                        <a className=\"d-block text-center\" href=\"#\">\r\n                                            <i className={item.icon} />\r\n                                            <h4>{item.title}</h4>\r\n                                            <p>{item.content}</p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"FAQ\",\r\n    heading: \"Frequently Asked Questions\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        btnClass: \"btn d-block text-left w-100 py-4\",\r\n        target: \"#collapseOne\",\r\n        quote: \"How do I create an NetStorm account?\",\r\n        contentId: \"collapseOne\",\r\n        contentClass: \"collapse show\",\r\n        content: \"The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text.\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseTwo\",\r\n        quote: \"Where can I see transaction details?\",\r\n        contentId: \"collapseTwo\",\r\n        contentClass: \"collapse\",\r\n        content: \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source.\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseThree\",\r\n        quote: \"How do royalties work on NetStorm?\",\r\n        contentId: \"collapseThree\",\r\n        contentClass: \"collapse\",\r\n        content: \"It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFour\",\r\n        quote: \"How do I list an NFT to sell?\",\r\n        contentId: \"collapseFour\",\r\n        contentClass: \"collapse\",\r\n        content: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFive\",\r\n        quote: \"How do I create an NFT?\",\r\n        contentId: \"collapseFive\",\r\n        contentClass: \"collapse\",\r\n        content: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"\r\n    }\r\n]\r\n\r\nclass Faq extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"faq-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* FAQ Content */}\r\n                            <div className=\"faq-content\">\r\n                                {/* Netstorm Accordion */}\r\n                                <div className=\"accordion\" id=\"netstorm-accordion\">\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <div className=\"col-12 col-md-10\">\r\n                                            {/* Single Accordion Item */}\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <div key={`fd_${idx}`} className=\"single-accordion-item p-3\">\r\n                                                        {/* Card Header */}\r\n                                                        <div className=\"card-header bg-inherit border-0 p-0\">\r\n                                                            <h2 className=\"m-0\">\r\n                                                                <button className={item.btnClass} type=\"button\" data-toggle=\"collapse\" data-target={item.target}>\r\n                                                                    {item.quote}\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id={item.contentId} className={item.contentClass} data-parent=\"#netstorm-accordion\">\r\n                                                            {/* Card Body */}\r\n                                                            <div className=\"card-body py-3\">\r\n                                                                {item.content}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Faq;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Help from '../components/HelpCenter/HelpCenter';\r\nimport Faq from '../components/Faq/Faq';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass HelpCenter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Help Center\" subpage=\"Community\" page=\"Help Center\" />\r\n                <Help />\r\n                <Faq />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/authors\";\r\n\r\nclass Authors extends Component {\r\n    state = {\r\n        data: {},\r\n        authorData: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    authorData: res.data.authorData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                <p>{this.state.data.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.authorData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`ad_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card no-hover text-center\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/author\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                            {/* Seller */}\r\n                                            <a className=\"seller\" href=\"/author\">\r\n                                                <div className=\"seller-thumb avatar-lg\">\r\n                                                    <img className=\"rounded-circle\" src={item.avatar} alt=\"\" />\r\n                                                </div>\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body mt-4\">\r\n                                                <a href=\"/author\">\r\n                                                    <h5 >{item.author}</h5>\r\n                                                </a>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authors;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/seller\";\r\n\r\nclass TopSeller extends Component {\r\n    state = {\r\n        data: {},\r\n        sellerData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    sellerData: res.data.sellerData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"top-seller-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/authors\">View All</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.sellerData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-4 item\">\r\n                                    {/* Single Seller */}\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n                                            <a href=\"/author\">\r\n                                                <img className=\"avatar-md rounded-circle\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3\">\r\n                                                <a className=\"seller mb-2\" href=\"/author\">{item.seller}</a>\r\n                                                <span>{item.price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopSeller;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Author from '../components/Authors/Authors';\r\nimport TopSeller from '../components/TopSeller/TopSellerTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Authors extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Authors\" subpage=\"Pages\" page=\"Authors\" />\r\n                <Author />\r\n                <TopSeller />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authors;","import { React } from 'react';\r\nimport ReactImagePickerEditor from 'react-image-picker-editor';\r\n\r\nimport 'react-image-picker-editor/dist/index.css'\r\n\r\nconst UploadImage = ({ initalImag, imageSrc, setImageSrc, show = true }) => {\r\n  const config2 = {\r\n    borderRadius: '8px',\r\n    language: 'en',\r\n    width: '330px',\r\n    height: '250px',\r\n    objectFit: 'contain',\r\n    compressInitial: null,\r\n    hideDownloadBtn: true\r\n  };\r\n\r\n  const initialImage = initalImag;\r\n\r\n  return <div className='image-container'>\r\n    < ReactImagePickerEditor\r\n      config={config2}\r\n      // initialImage={im}\r\n      imageSrcProp={initialImage}\r\n      imageChanged={(newDataUri) => { setImageSrc(newDataUri) }} />\r\n    {/* <br /> <br />\r\n    <hr />\r\n    <br /> */}\r\n    {/* <p>Image preview:</p> */}\r\n    {/* {imageSrc && <img src={imageSrc} alt=\"example\" style={{ maxHeight: '900px', maxWidth: '100%', objectFit: 'contain', background: 'black' }} />}\r\n    {!imageSrc && <h2 style={{ textAlign: 'center', color: '#FFF' }}>No image loaded yet</h2>} */}\r\n\r\n  </div>\r\n}\r\n\r\nexport default UploadImage;\r\n\r\n\r\n","export const dataURLtoBlob = (dataurl) => {\r\n    var arr = dataurl?.split(','), mime = arr[0]?.match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr?.length, u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new Blob([u8arr], { type: mime });\r\n}\r\n\r\nexport const blobToDataURl = (blob) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = _e => resolve(reader.result);\r\n        reader.onerror = _e => reject(reader.error);\r\n        reader.onabort = _e => reject(new Error(\"Read aborted\"));\r\n        reader.readAsDataURL(blob);\r\n    });\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {  UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage  from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\n\r\nfunction Banner(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const image = dataURLtoBlob(imageSrc)\r\n        formData.append('image', image)\r\n        dispatch(UpdateBanner(formData, props.id))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Project Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default Banner","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\n\r\nfunction AvatarUpload(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        // const banner_image = dataURLtoBlob(imageSrc)\r\n        const avatar = dataURLtoBlob(imageSrc)\r\n        formData.append('avatar', avatar)\r\n        formData.append('username', userdet.username)\r\n        // formData.append('banner_image', banner_image)\r\n        dispatch(UpdateProfileAction(formData, props))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    User Image\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default AvatarUpload","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\n\r\nfunction BannerUpload(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const banner_image = dataURLtoBlob(imageSrc)\r\n        // formData.append('avatar', userdet.avatar)\r\n        formData.append('username', userdet.username)\r\n        formData.append('banner_image', banner_image)\r\n        dispatch(UpdateProfileAction(formData, props))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Profile Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default BannerUpload","\r\nimport React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GetUserAction, UpdateProfileAction } from \"../../redux/Actions/authAction\";\r\nimport { useEffect } from \"react\";\r\nimport UserTransdataTable from \"./userTransTable\";\r\nimport UserdataTable from \"./userDetails\";\r\nimport Banner from \"../Create/editBanner\";\r\nimport AvatarUpload from \"./avatarUpload\";\r\nimport BannerUpload from \"./bannerUpload\";\r\nimport { Link } from \"react-router-dom\";\r\n// const BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/author\";\r\n\r\nconst AuthorProfile = () => {\r\n    const [modalSho, setModalSho] = React.useState(false);\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowavatar, setModalShowavatar] = React.useState(false);\r\n    const [loading, setLoading] = useState('')\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet, 'user')\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('username', data.username)\r\n        formData.append('email', data.email)\r\n        dispatch(UpdateProfileAction(formData))\r\n\r\n    }\r\n    useEffect(() => {\r\n        dispatch(GetUserAction());\r\n    }, []);\r\n    useEffect(() => {\r\n        if (userdet && Object.keys(userdet).length) {\r\n            setValue(\"avatar\", userdet.avatar);\r\n            setValue(\"username\", userdet.username);\r\n            setValue(\"email\", userdet.email);\r\n        }\r\n    }, [userdet]);\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"container\">\r\n                {/* <h3 class=\"p-0\">Author Name </h3> */}\r\n                <div className=\"row pt-0\">\r\n                    <div className='col-md-8'>\r\n                        <div className=\"banner item-thumb text-center\">\r\n                            <div>\r\n                                <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                    onClick={() => setModalSho(true)}\r\n                                ></i>\r\n                                <BannerUpload\r\n\r\n                                    show={modalSho}\r\n                                    onHide={() => setModalSho(false)} />\r\n\r\n                            </div>\r\n                            <img src={userdet.banner_image} alt=\"first nft\" />\r\n                        </div>\r\n                        <div className=\"table-detail mt-4\">\r\n                            <UserdataTable />\r\n\r\n                        </div>\r\n                        <div className=\"profile_detail mt-4 position-relative\">\r\n\r\n                            <UserTransdataTable />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4 mt-4 mt-lg-0\">\r\n                        <div className=\"profile_main_right card wrap_card no-hover text-center\">\r\n\r\n                            <div className=\"image-over\">\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                        onClick={() => setModalShowavatar(true)}\r\n                                    ></i>\r\n                                    <AvatarUpload\r\n\r\n                                        show={modalShowavatar}\r\n                                        onHide={() => setModalShowavatar(false)} />\r\n\r\n                                </div>\r\n                                <img className=\"card-img-top\" src={userdet.avatar} alt=\"\" />\r\n                            </div>\r\n                            {/* Card Caption */}\r\n                            <div className=\"card-caption col-12 p-0\">\r\n                                {/* Card Body */}\r\n\r\n\r\n                            </div>\r\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover p-0\">\r\n\r\n                                <div className=\"card-body\">\r\n                                    <from className=\"Edite_able\" >\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n\r\n                                                style={{ textTransform: 'none' }}\r\n                                                name=\"username\"\r\n                                                placeholder=\"username\"\r\n                                                {...register(\"username\", { required: true })}\r\n                                                aria-invalid={errors.username ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n                                            <i class=\"fa-solid fa-pen\"></i>\r\n                                        </label>\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control \"\r\n                                                name=\"email\"\r\n                                                disabled={userdet.role == 3 ? true : false}\r\n                                                // value={userdet.role == 3 && userdet.email}\r\n                                                placeholder=\"email\"\r\n                                                {...register(\"email\")}\r\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {/* {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>} */}\r\n                                            {userdet.role == 2 &&\r\n\r\n                                                <i class=\"fa-solid fa-pen\"></i>\r\n                                            }\r\n                                        </label>\r\n\r\n                                        {/* Social Icons */}\r\n                                        {/* <div className=\"social-icons d-flex justify-content-center my-3\">\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-facebook-f fa-w-10\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"facebook-f\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 320 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-twitter fa-w-16\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"twitter\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 512 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-google-plus-g fa-w-20\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"google-plus-g\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 640 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M386.061 228.496c1.834 9.692 3.143 19.384 3.143 31.956C389.204 370.205 315.599 448 204.8 448c-106.084 0-192-85.915-192-192s85.916-192 192-192c51.864 0 95.083 18.859 128.611 50.292l-52.126 50.03c-14.145-13.621-39.028-29.599-76.485-29.599-65.484 0-118.92 54.221-118.92 121.277 0 67.056 53.436 121.277 118.92 121.277 75.961 0 104.513-54.745 108.965-82.773H204.8v-66.009h181.261zm185.406 6.437V179.2h-56.001v55.733h-55.733v56.001h55.733v55.733h56.001v-55.733H627.2v-56.001h-55.733z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-vine fa-w-12\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"vine\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 384 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M384 254.7v52.1c-18.4 4.2-36.9 6.1-52.1 6.1-36.9 77.4-103 143.8-125.1 156.2-14 7.9-27.1 8.4-42.7-.8C137 452 34.2 367.7 0 102.7h74.5C93.2 261.8 139 343.4 189.3 404.5c27.9-27.9 54.8-65.1 75.6-106.9-49.8-25.3-80.1-80.9-80.1-145.6 0-65.6 37.7-115.1 102.2-115.1 114.9 0 106.2 127.9 81.6 181.5 0 0-46.4 9.2-63.5-20.5 3.4-11.3 8.2-30.8 8.2-48.5 0-31.3-11.3-46.6-28.4-46.6-18.2 0-30.8 17.1-30.8 50 .1 79.2 59.4 118.7 129.9 101.9z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                        </div> */}\r\n                                        <button className=\"btn btn-bordered-white btn-smaller\" type=\"submit\" >\r\n                                            Update\r\n                                        </button>\r\n                                        <div>\r\n                                            <br />\r\n                                            {userdet.role == 3 ? (\r\n                                                <>You are logged in as a Creator/merchant<br />\r\n                                                    <span>click here to <Link to=\"/create\">create project</Link></span></>\r\n\r\n                                            ) : (\r\n                                                <span>You are logged in as a Buyer</span>\r\n                                            )}\r\n                                        </div>\r\n                                    </from>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\" \"}\r\n            </div>\r\n            {\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthorProfile;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Explore\",\r\n    heading: \"Exclusive Digital Assets\",\r\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n    filter_1: \"All\",\r\n    filter_2: \"Art\",\r\n    filter_3: \"Music\",\r\n    filter_4: \"Collectibles\",\r\n    filter_5: \"Sports\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_1.jpg\",\r\n        author: \"/img/avatar_1.jpg\",\r\n        title: \"Virtual Worlds\",\r\n        content: \"ERC-729\",\r\n        price: \"4.37 BNB\",\r\n        likes: \"154\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        group: '[\"music\"]',\r\n        img: \"/img/auction_2.jpg\",\r\n        author: \"/img/avatar_2.jpg\",\r\n        title: \"Walking On Air\",\r\n        content: \"ERC-543\",\r\n        price: \"2.37 BNB\",\r\n        likes: \"74\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        group: '[\"music\",\"collectibles\"]',\r\n        img: \"/img/auction_3.jpg\",\r\n        author: \"/img/avatar_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        content: \"ERC-932\",\r\n        price: \"1.89 BNB\",\r\n        likes: \"\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        group: '[\"music\",\"sports\",\"art\",\"collectibles\"]',\r\n        img: \"/img/auction_4.jpg\",\r\n        author: \"/img/avatar_4.jpg\",\r\n        title: \"Sports\",\r\n        content: \"ERC-250\",\r\n        price: \"0.74 BNB\",\r\n        likes: \"184\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        group: '[\"sports\",\"art\",\"music\"]',\r\n        img: \"/img/auction_5.jpg\",\r\n        author: \"/img/avatar_5.jpg\",\r\n        title: \"Cartoon Heroes\",\r\n        content: \"ERC-167\",\r\n        price: \"4.23 BNB\",\r\n        likes: \"126\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_6.jpg\",\r\n        author: \"/img/avatar_6.jpg\",\r\n        title: \"Domain Names\",\r\n        content: \"ERC-037\",\r\n        price: \"3.41 BNB\",\r\n        likes: \"23\"\r\n    }\r\n]\r\n\r\nclass ExploreSix extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                    <div className=\"col-12\">\r\n                        {/* Explore Menu */}\r\n                        <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n                            <label className=\"btn active d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"all\" defaultChecked className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_1}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"art\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_2}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"music\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_3}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"collectibles\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_4}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_5}</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items explore-items\">\r\n                    {this.state.data.map((item, idx) => {\r\n                        return (\r\n                            <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" data-groups={item.group}>\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <a href=\"/item-details\">\r\n                                            <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                        </a>\r\n                                        {/* Author */}\r\n                                        <a className=\"author\" href=\"/authors\">\r\n                                            <div className=\"author-thumb avatar-lg\">\r\n                                                <img className=\"rounded-circle\" src={item.author} alt=\"\" />\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            <a href=\"/item-details\">\r\n                                                <h5 className=\"mb-2\">{item.title}</h5>\r\n                                            </a>\r\n                                            <span>{item.content}</span>\r\n                                            <hr />\r\n                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                <span>{item.price}</span>\r\n                                                <span><i className=\"icon-heart mr-2\" />{item.likes}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreSix;","import React, { Component } from 'react';\r\nimport AuthorProfile from '../AuthorProfile/AuthorProfile';\r\nimport Explore from '../Explore/ExploreSix';\r\n\r\nclass Author extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"author-area explore-area author-details-area  popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-12\">\r\n                            <AuthorProfile />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Author;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport AuthorProfile from '../components/Author/Author';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst Author = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AuthorProfile />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Author;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ConnectWallet } from './interact';\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginSuccess } from '../../redux/Slices/authSlice';\r\n\r\nconst data = {\r\n    \"preHeading\": \"Wallet Connect\",\r\n    \"heading\": \"Connect your Wallet\",\r\n    \"content\": \"Connect your wallet to continue browsing our website\",\r\n    \"walletData\": [\r\n        {\r\n            \"id\": 1,\r\n            \"img\": \"/img/metamask.png\",\r\n            \"title\": \"MetaMask\",\r\n            \"content\": \"A browser extension with great flexibility. The web's most popular wallet\"\r\n        },\r\n    ]\r\n}\r\n\r\nconst Wallet = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleConnect = async () => {\r\n        const res = await ConnectWallet(\"CREATOR\")\r\n\r\n        if (res?.res?.response?.status === 401) {\r\n            history.push('/signup')\r\n        }\r\n        else {\r\n            dispatch(loginSuccess(res?.res))\r\n            localStorage.setItem('authToken', res?.res?.data?.data?.auth_token)\r\n            history.push('/projectlist')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"wallet-connect-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mt-4 pt-2 mb-1\">\r\n                            {/* <span>{data.preHeading}</span> */}\r\n                            <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            <p>{data.content}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center items\">\r\n                    {data?.walletData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} onClick={handleConnect}\r\n                                className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                {/* Single Wallet */}\r\n                                <div className=\"card single-wallet\">\r\n                                    <a className=\"d-block text-center\">\r\n                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                        <h4 className=\"mb-0\">{item.title}</h4>\r\n                                        <p>{item.content}</p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Wallet;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Wallet from '../components/Wallet/Wallet';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst WalletConnect = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Wallet />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default WalletConnect;","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    console.log(data, 'dataaacreate')\r\n    // localStorage.setItem(\"data\", JSON.stringify(data))\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport React, { Component, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { CategoriesAction, CreateProjectAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\n\r\nimport 'reactjs-popup/dist/index.css';\r\nimport styles from \"./styles/styles.module.scss\"\r\nimport { useFormData } from './Context/context';\r\nimport JoditEditor from 'jodit-react'; import { CityList, CountryList, GetUserAction, StateList } from '../../redux/Actions/authAction';\r\nimport UploadImage from '../../shared/Upload';\r\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\r\nimport { Autosave } from 'react-autosave';\r\n\r\n\r\nconst Create = ({ current, next, prev }) => {\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues, prevValues } = useFormData();\r\n    console.log(data.city)\r\n    const [description, setDescription] = useState()\r\n    console.log('disss', description)\r\n    const [country, setCountry] = useState(\"\");\r\n    console.log('country', country)\r\n    const [state, setState] = useState(\"\");\r\n    console.log('state', state)\r\n    const [city, setCity] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    console.log('price', price)\r\n    console.log('city', city)\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n    const [collection_id, setCollectionId] = useState(0);\r\n    const [usertype, setUserType] = useState(\"1\");\r\n    console.log(\"type\", usertype)\r\n\r\n    // const schema = yup.object().shape({\r\n    //     description: yup.string().required()\r\n    //     // password: yup.string().required(),\r\n    // });\r\n    const [nonft, setNonft] = useState('1')\r\n    function onHandleClick(event) {\r\n        setCollectionId(event.currentTarget.id);\r\n    };\r\n\r\n    console.log(data, \"_________DATA_IN_CREATE______\")\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [countryName, setCountryName] = useState(\" \")\r\n    console.log(countryName, 'countryname')\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n\r\n    console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(\"userCountry\", userdet.organization_detail?.country_id)\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({\r\n        mode: \"all\",\r\n    });\r\n\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    // console.log(col, 'col')\r\n    const onSubmit = (data) => {\r\n        // debugger\r\n        const imageBanner = dataURLtoBlob(image)\r\n\r\n        setFormValues({ ...data, description, type: usertype, image: imageBanner, imageUri: image });\r\n        // localStorage.setItem('country', JSON.stringify(country))\r\n        next()\r\n    }\r\n    // const bannerimage =\r\n    // console.log('bannerimg', bannerimage)\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n\r\n        dispatch(GetUserAction())\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        if (prev) {\r\n\r\n            setValue('title', data.title)\r\n            setValue('address', data.address)\r\n            setValue('category_id', data.category_id)\r\n            setValue('country', data.country)\r\n            setValue('state', data.state)\r\n            setValue('city', data.city)\r\n            setValue('description', data.description)\r\n            // setValue('number_of_nft', data.number_of_nft)\r\n            setValue('price', data.price)\r\n            // setValue('start_date', data.start_date)\r\n            setValue('type', data.usertype)\r\n            setValue('image', data.imageUri)\r\n\r\n            setUserType(data.usertype)\r\n            setCountry(data.country)\r\n            setDescription(data.description)\r\n            setImage(data.imageUri)\r\n            setState(data.state)\r\n            setCity(data.city)\r\n\r\n            // setValue('end_date', data.end_date)\r\n        }\r\n        handleChangeCountry()\r\n\r\n    }, [data])\r\n\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n\r\n    const handleChangeCountry = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        const formData = new FormData()\r\n        if (event?.currentTarget?.value) {\r\n\r\n            setCountry(event?.currentTarget?.value);\r\n            formData.append('country_id', event?.currentTarget?.value)\r\n        } else {\r\n            setCountryName(userdet?.organization_detail?.country)\r\n            setCountry(userdet?.organization_detail?.country_id);\r\n            formData.append('country_id', userdet?.organization_detail?.country_id)\r\n        }\r\n        dispatch(StateList(formData)) // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setCountry(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event.currentTarget.value)\r\n        dispatch(CityList(formData))\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    function imposeMinMax(el) {\r\n        if (el?.value != \"\") {\r\n            if (parseInt(el?.value) < parseInt(el?.min)) {\r\n                el.value = el?.min;\r\n            }\r\n            if (parseInt(el?.value) > parseInt(el?.max)) {\r\n                el.value = el.max;\r\n            }\r\n        }\r\n    }\r\n\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate())\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n\r\n    const handleSubmitDraft = (data) => {\r\n        // debugger\r\n        // \r\n        const imageBanner = dataURLtoBlob(image)\r\n        const formData = new FormData()\r\n        for (const [key, value] of Object.entries(data)) {\r\n            formData.append(key, value)\r\n        }\r\n\r\n        // formData.append(\"type\", data.usertype)\r\n        formData.append(\"image\", imageBanner)\r\n        formData.append(\"type\", \"1\")\r\n        formData.append(\"status\", 3)\r\n        formData.append(\"number_of_nft\", \"1\")\r\n        formData.append(\"on_which_step_left\", 0)\r\n        // if (data.usertype == 1) {\r\n        //     formData.append('start_date', '')\r\n        //     formData.append('end_date', '')\r\n        // }\r\n\r\n        dispatch(CreateProjectAction(formData, setLoading, history))\r\n    }\r\n    return (\r\n\r\n        <div className={current === 0 ? styles.showForm : styles.hideForm}>\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover\">\r\n                <div className=\"row\">\r\n\r\n                    {/* <div className=\"col-12 \">\r\n                        <div className=\"form-group mt-3\">\r\n                            <div className=\"form-check form-check-inline mr-2\">\r\n                                <>\r\n                                    <input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"1\"\r\n                                        value=\"1\"\r\n                                        defaultChecked={data.usertype == 1 ? true : !usertype ? true : false}\r\n                                        {...register(\"usertype\", { required: true })}\r\n                                        aria-invalid={errors.usertype ? \"true\" : \"false\"}\r\n                                        onChange={(e) => setUserType(e.target.value)}\r\n                                    />\r\n                                    <label className=\"form-check-label mr-2\" htmlFor=\"donation\">Single</label>\r\n                                </>\r\n\r\n                                <><input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    name=\"radiobutton\"\r\n                                    id=\"2\"\r\n                                    value=\"2\"\r\n                                    {...register(\"usertype\", { required: true })}\r\n                                    defaultChecked={data.usertype == 2 ? true : false}\r\n                                    onChange={(e) => setUserType(e.target.value)}\r\n                                    aria-invalid={errors.type ? \"true\" : \"false\"}\r\n\r\n                                />\r\n                                    <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label></>\r\n                            </div>\r\n\r\n                            {errors.usertype?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Type is required</p>}\r\n\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n\r\n                    {/* <Autosave onSave={handleSubmitDraft} data={}/> */}\r\n\r\n                    <div className=\"col-md-6 col-12\">\r\n                        {/* {type == 1 && ( */}\r\n\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Project name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"title\"\r\n                                placeholder=\"Project name\"\r\n                                {...register(\"title\", { required: true, pattern: { value: /[A-Za-z]/ } })}\r\n                                aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>}\r\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                        </div>\r\n                        {/* )} */}\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Web address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                // required={false}\r\n                                name=\"address\"\r\n                                placeholder=\"Web address\"\r\n                                {...register(\"address\", {\r\n                                    required: true,\r\n                                    pattern: {\r\n                                        value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                    }\r\n                                })}\r\n                                aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                            />\r\n\r\n\r\n                            {errors.address && errors.address?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                            {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <label>Description</label>\r\n                        <div className=\"form-group\">\r\n\r\n\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"description\"\r\n                                defaultValue=\"\"\r\n                                rules={{ required: true, minLength: 100 }}\r\n\r\n\r\n                                render={({ field }) => {\r\n                                    return <JoditEditor\r\n                                        ref={field.ref}\r\n                                        // value={description}\r\n                                        // {...register(\"description\", { required: true })}\r\n                                        // config={config}\r\n                                        value={field.value}\r\n\r\n                                        placeholder=\"start typing\"\r\n                                        aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        tabIndex={1} // tabIndex of textarea\r\n                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                        onChange={field.onChange}\r\n                                    />\r\n\r\n                                }}\r\n                            />\r\n                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            {errors.description && errors.description.type === \"minLength\" && (\r\n                                <p style={{ color: 'red' }}>\r\n                                    min length of words is 100\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n\r\n                            <label>Country</label>\r\n\r\n                            <select name=\"country\"\r\n\r\n                                {...register(\"country\", { required: true })} onChange={handleChangeCountry}>\r\n                                aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n                                <option value={userdet?.organization_detail?.country_id} selected>{countryName}</option>\r\n                                {countries?.data?.data?.map((option, key) => (\r\n                                    <>\r\n\r\n\r\n                                        <option key={key.id} value={option.id}>\r\n\r\n                                            {option.name}\r\n\r\n                                        </option>\r\n\r\n\r\n                                    </>\r\n\r\n                                ))}\r\n                            </select>\r\n                            {/* {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>} */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>State or province</label>\r\n\r\n                            <select name=\"state\"\r\n                                {...register(\"state\")} onChange={handleChangeState}>\r\n                                aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state/province</option>\r\n                                {states?.data?.data?.map((option, key) => (\r\n\r\n                                    <><option key={key.id} value={option.id}  >\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                            {/* {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>} */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group\">\r\n                            <label>City or Region</label>\r\n\r\n                            <select name=\"city\"\r\n                                {...register(\"city\")}>\r\n                                aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city/region</option>\r\n                                {cities?.data?.data?.map((option, key) => (\r\n                                    <><option key={key.id} value={option.id}>\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                            {/* {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>} */}\r\n                        </div>\r\n\r\n                        {/* {!usertype || usertype == 1 ? (\r\n\r\n                            <div className=\"col-12 col-md-12 pl-0 pr-0\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Number of NFTs</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n\r\n                                        className=\"form-control\"\r\n                                        name=\"number_of_nft\"\r\n\r\n                                        value={nonft}\r\n                                        onChange={() => setNonft('1')}\r\n                                        defaultValue={nonft}\r\n                                        min={1}\r\n                                        max={1}\r\n\r\n                                        maxLength={1}\r\n                                        placeholder=\"number of NFT (1 allowed)\"\r\n                                        {...register(\"number_of_nft\", { required: true, min: 1, max: 1 })}\r\n                                        aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                    />\r\n               \r\n                                   \r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"col-12 col-md-12 pl-0 pr-0\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Number of NFTs</label>\r\n                                    <input\r\n                                      \r\n                                        type=\"number\"\r\n                                        className=\"form-control\"\r\n                                        name=\"number_of_nft\"\r\n\r\n                                        min={1}\r\n                                        max={10}\r\n                                        maxLength={10}\r\n\r\n                                        \r\n                                        placeholder=\"Select your number of NFTs (1-10)\"\r\n                                        {...register(\"number_of_nft\", { required: true, min: 1, max: 10 })}\r\n\r\n                                        aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                    />\r\n                                    {errors.number_of_nft && errors.number_of_nft.type === \"max\" && (\r\n                                        <p style={{ color: 'red' }}>\r\n                                            10 NFTs Maximum per Campaign\r\n                                        </p>\r\n                                    )}\r\n                                    {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFTs per project is required with a limit of 10</p>}\r\n                                </div>\r\n                            </div>\r\n                        )} */}\r\n\r\n\r\n                        <div className=\"col-12 col-md-12 pr-0 pl-0\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"category_id\"\r\n                                    {...register(\"category_id\", { required: true })}\r\n                                >\r\n                                    aria-invalid={errors.category_id ? \"true\" : \"false\"}\r\n                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select category </option>\r\n                                    {cat?.map((option, key) => (\r\n\r\n                                        <option key={key.id} value={option.id} >\r\n                                            {option.title}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {errors.category_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Category is required</p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            {usertype == 2 ? (\r\n\r\n                                <label>Price per NFT (In MATIC tokens)</label>\r\n                            ) : (\r\n                                <label>Price (In MATIC tokens)</label>\r\n\r\n                            )}\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                step=\"0.01\"\r\n                                name=\"price\"\r\n                                placeholder=\"Price\"\r\n                                {...register(\"price\", { required: true })}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                                aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <div className=\"form-group pricing-detail\">\r\n                                <p><span>Price</span> <span>{price ? price : '--'} MATIC</span></p>\r\n                                <p><span>Karmatica Fee</span><span>1%</span></p>\r\n                                <p><span>You will receive </span><span>{99 * price / 100 ? 99 * price / 100 : \"--\"} MATIC</span></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* {usertype == 2 && (\r\n\r\n                        <><div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Campaign Start date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"start_date\"\r\n                                    min={disablePastDate()}\r\n                                    defaultValue={defaultValue}\r\n\r\n                                    {...register(\"start_date\", { required: true })}\r\n                                    aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        defaultValue={defaultValue1}\r\n                                        min={disablePastDate()}\r\n\r\n                                        {...register(\"end_date\", { required: true })}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    <div >\r\n\r\n                                        <span className='logo-dis'>End date should be greater then or equal to start date</span>\r\n                                    </div>\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div></>\r\n                    )} */}\r\n                    <div className=\" col-12\">\r\n                        <div className=\"form-group\">\r\n                            <label>Banner image</label>\r\n                            <UploadImage\r\n                                imageSrc={image}\r\n                                // src={image}\r\n                                initalImag={data.imageUri}\r\n\r\n                                setImageSrc={setImage}\r\n                            />\r\n                            <div >\r\n\r\n                                <div className='logo-dis logo-dis-img'>\r\n                                    <span>Allowed types: JPG, PNG, GIF</span><span>Banner should be 800 px wide x 500 px high, 10MB max</span>\r\n                                </div>\r\n                            </div>\r\n                            {/* {errors.end_date && errors?.end_date?.type === 'min' && <p style={{ color: 'red' }} role=\"alert\">End date should be greater or equal to startdate</p>} */}\r\n                            {/* {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>} */}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-6\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={handleSubmit(handleSubmitDraft)}>\r\n                            Save as Draft\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Create;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\r\nimport UploadImage from '../../shared/Upload';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction MyVerticallyCenteredModal(props) {\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const [image, setImage] = useState()\r\n    const OnSubmit = (dat) => {\r\n        // debugger\r\n        const imageBanner = dataURLtoBlob(image)\r\n        // \r\n        // data.preventDefault()\r\n        dispatch(CreateCollectionAction({ dat, imageBanner, props }))\r\n        // console.log(data?.statusCode)\r\n\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Create Collection\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className='row'>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Display name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                    placeholder=\"Enter collection name\"\r\n                                    {...register('title', { required: true })}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n                            </div>\r\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">collection name is required</p>}\r\n                        </div>\r\n\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Symbol</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"symbol\"\r\n                                    aria-invalid={errors.symbol ? \"true\" : \"false\"}\r\n                                    placeholder=\"Enter token symbol\"\r\n                                    {...register('symbol', { required: true })}\r\n                                // value={symbol}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setSymbol(e.target.value);\r\n                                // }} \r\n                                />\r\n                                {errors.symbol?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">symbol is required</p>}\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Description</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"description\"\r\n                                    aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                    {...register('description', { required: true })}\r\n                                    // value={description}\r\n                                    // onChange={(e) => {\r\n\r\n                                    //     setDescription(e.target.value);\r\n                                    // }}\r\n                                    placeholder=\"Spread some words about your collection\"\r\n                                />\r\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">description is required</p>}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web URL</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    aria-invalid={errors.short_url ? \"true\" : \"false\"}\r\n                                    name=\"short_url\"\r\n                                    placeholder=\"Web URL\"\r\n\r\n                                    {...register('short_url', { required: true })}\r\n                                // value={short_url}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setShortUrl(e.target.value);\r\n                                // }} \r\n                                />\r\n                                {errors.short_url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Web URL is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Banner image</label>\r\n                                <UploadImage\r\n                                    imageSrc={image}\r\n                                    // initalImag={image}\r\n                                    setImageSrc={setImage}\r\n                                />\r\n\r\n                                <div >\r\n\r\n                                    <span className='logo-dis'>Allowed types: JPG, PNG, GIF<br />Banner should be 1500 px wide x 500 px high</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"modal-footer\"> */}\r\n                    <Button key=\"create-collection\" type=\"submit\" className=\"btn btn-primary\">Create</Button>\r\n                    {/* </div> */}\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default MyVerticallyCenteredModal","import { useState, useEffect, useRef } from \"react\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { Source } from \"three\";\r\n\r\nfunction loadGLTFModel(scene, glbPath, options) {\r\n    const { receiveShadow, castShadow } = options;\r\n    return new Promise((resolve, reject) => {\r\n        const loader = new GLTFLoader();\r\n        loader.load(\r\n\r\n\r\n            glbPath,\r\n            (gltf) => {\r\n                const obj = gltf.scene;\r\n                obj.name = \"dinosaur\";\r\n                obj.position.y = 0;\r\n                obj.position.x = 0;\r\n                obj.receiveShadow = receiveShadow;\r\n                obj.castShadow = castShadow;\r\n                scene.add(obj);\r\n\r\n                obj.traverse(function (child) {\r\n                    if (child.isMesh) {\r\n                        child.castShadow = castShadow;\r\n                        child.receiveShadow = receiveShadow;\r\n                    }\r\n                });\r\n\r\n                resolve(obj);\r\n            },\r\n            undefined,\r\n            function (error) {\r\n                console.log(error);\r\n                reject(error);\r\n            }\r\n        );\r\n    });\r\n}\r\n\r\nfunction easeOutCirc(x) {\r\n    return Math.sqrt(1 - Math.pow(x - 1, 4));\r\n}\r\n\r\nconst DModal = ({ vdo }) => {\r\n    // debugger\r\n    // const { vdo } = props\r\n    const refContainer = useRef();\r\n    const [loading, setLoading] = useState(true);\r\n    const [renderer, setRenderer] = useState();\r\n    const [source, setSource] = useState('')\r\n    console.log('source', source)\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        const file = vdo;\r\n        // if (file?.name?.includes(\"gltf\")) {\r\n\r\n        //     const gltfToGlb = gltfPipeline.gltfToGlb;\r\n        //     const gltf = fsExtra.readJsonSync(file);\r\n        //     gltfToGlb(gltf).then(function (results) {\r\n        //         fsExtra.writeFileSync(file, results.glb);\r\n        //     });\r\n        //     console.log('yessss')\r\n        // }\r\n        // let url = URL.createObjectURL(file);\r\n        // url = window.URL.createObjectURL(new Blob([url]));\r\n        // // const url = window.URL.createObjectURL(new Blob([Response.data]));\r\n        // // this?.loaders?.gltfLoader?.load(url, (file) => {\r\n\r\n        // // });\r\n\r\n        // setSource(url);\r\n\r\n        const { current: container } = refContainer;\r\n        if (container && !renderer) {\r\n            const scW = container.clientWidth;\r\n            const scH = container.clientHeight;\r\n            const renderer = new THREE.WebGLRenderer({\r\n                antialias: true,\r\n                alpha: true\r\n            });\r\n            renderer.setPixelRatio(window.devicePixelRatio);\r\n            renderer.setSize(scW, scH);\r\n            renderer.outputEncoding = THREE.sRGBEncoding;\r\n            container.appendChild(renderer.domElement);\r\n            setRenderer(renderer);\r\n\r\n            const scene = new THREE.Scene();\r\n            const scale = 5.6;\r\n            const camera = new THREE.OrthographicCamera(\r\n                -scale,\r\n                scale,\r\n                scale,\r\n                -scale,\r\n                0.01,\r\n                50000\r\n            );\r\n            const target = new THREE.Vector3(-0.5, 1.2, 0);\r\n            const initialCameraPosition = new THREE.Vector3(\r\n                20 * Math.sin(0.2 * Math.PI),\r\n                10,\r\n                20 * Math.cos(0.2 * Math.PI)\r\n            );\r\n            const ambientLight = new THREE.AmbientLight(0xcccccc, 1);\r\n            scene.add(ambientLight);\r\n            const controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.autoRotate = false;\r\n            controls.enableZoom = true;\r\n            controls.minDistance = 0\r\n            controls.minZoom = 0\r\n            controls.target = target;\r\n\r\n            const loader = new GLTFLoader()\r\n\r\n            loader.load(\r\n                file,\r\n                function (gltf) {\r\n                    gltf.scene.traverse(function (child) {\r\n                        if (child.isMesh) {\r\n                            const m = child\r\n                            m.receiveShadow = true\r\n                            m.castShadow = true\r\n                        }\r\n                        if (child.isLight) {\r\n                            const l = child\r\n                            l.castShadow = true\r\n                            l.shadow.bias = -0.003\r\n                            l.shadow.mapSize.width = 2048\r\n                            l.shadow.mapSize.height = 2048\r\n                        }\r\n                    })\r\n                    scene.add(gltf.scene)\r\n                },\r\n                (xhr) => {\r\n                    animate();\r\n                    setLoading(false);\r\n                    // mdl(file)\r\n                    console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\r\n                },\r\n                (error) => {\r\n                    // debugger\r\n                    console.log(error)\r\n                }\r\n            )\r\n            // loadGLTFModel(url, function (gltf) {\r\n            //     const model = gltf.scene;\r\n            //     URL.revokeObjectURL(url);\r\n            // }, function () { }, function () {\r\n            //     URL.revokeObjectURL(url);\r\n            // }).\r\n\r\n            // loadGLTFModel(scene, url, {\r\n            //     receiveShadow: false,\r\n            //     castShadow: false\r\n            // })\r\n\r\n            let req = null;\r\n            let frame = 0;\r\n            const animate = () => {\r\n                req = requestAnimationFrame(animate);\r\n                frame = frame <= 100 ? frame + 1 : frame;\r\n\r\n                if (frame <= 100) {\r\n                    const p = initialCameraPosition;\r\n                    const rotSpeed = -easeOutCirc(frame / 120) * Math.PI * 20;\r\n\r\n                    camera.position.y = 10;\r\n                    camera.position.x =\r\n                        p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed);\r\n                    camera.position.z =\r\n                        p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed);\r\n                    camera.lookAt(target);\r\n                } else {\r\n                    controls.update();\r\n                }\r\n\r\n                renderer.render(scene, camera);\r\n            };\r\n\r\n            return () => {\r\n                cancelAnimationFrame(req);\r\n                renderer.dispose();\r\n            };\r\n        }\r\n    }, [vdo]);\r\n\r\n    return (\r\n\r\n        <div\r\n            style={{ height: \"270px\", width: \"300px\", position: \"relative\" }}\r\n            ref={refContainer}\r\n        >\r\n\r\n            {loading && (\r\n                <span style={{ position: \"absolute\", left: \"50%\", top: \"50%\" }}>\r\n                    Loading...\r\n                </span>\r\n            )}\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default DModal\r\n// export default function App() {\r\n//   return (\r\n//     <div style={{ width: \"100%\", margin: \"0 auto\" }}>\r\n//       <p>Click and hold to move around</p>\r\n//       <p>\r\n//         Credits for the model: \"Dinosaur\" (https://skfb.ly/6ZBXA) by\r\n//         jeilocreativedesignworld is licensed under Creative Commons Attribution\r\n//         (http://creativecommons.org/licenses/by/4.0/).\r\n//       </p>\r\n//       <Dinosaur />\r\n//     </div>\r\n//   );\r\n// }","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nfunction ProTypePopup(props) {\r\n\r\n    // const { data, setFormValues, prevValues } = useFormData();\r\n    // const [type, setType] = useState()\r\n    // const [dataStartdate, setDatastartDate] = useState(\"\")\r\n    // console.log('dataStartdate', dataStartdate)\r\n    // const [dataEnddate, setDataEndDate] = useState(\"\")\r\n    // console.log('dataEnddate', dataEnddate)\r\n    // const [numberNft, setNumberNft] = useState(\"\")\r\n    // console.log('nonft', numberNft)\r\n    // const dispatch = useDispatch()\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n\r\n\r\n    const OnSubmit = (data) => {\r\n        // debugger\r\n        // setFormValues\r\n        // setDatastartDate(data.start_date)\r\n        // setDataEndDate(data.end_date)\r\n        // setNumberNft(data.number_of_nft)\r\n        // if (dataStartdate && dataEnddate && numberNft) {\r\n\r\n        props.startdate(data.start_date)\r\n        props.enddate(data.end_date)\r\n        props.nftno(data.number_of_nft)\r\n        props.onHide(true)\r\n        // }\r\n        // startDateHandler()\r\n        // endDateHandler()\r\n        // nftNumbereHandler()\r\n\r\n    }\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate())\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     startDateHandler()\r\n    //     endDateHandler()\r\n    //     nftNumbereHandler()\r\n    // })\r\n\r\n    // const startDateHandler = (event) => {\r\n\r\n    //     props.startdate(dataStartdate)\r\n    // }\r\n    // const endDateHandler = (event) => {\r\n\r\n    //     props.enddate(dataEnddate)\r\n    // }\r\n    // const nftNumbereHandler = (event) => {\r\n    //     props.nftno(numberNft)\r\n\r\n    // }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div>\r\n                    <label>Switch to Campaign for multiple NFTs</label><br />\r\n                    <span>fill the following mandatory fields to continue</span>\r\n                </div>\r\n                <div>\r\n\r\n                    {/* <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a> */}\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n\r\n                        <><div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Campaign Start date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    // placeholder='dd-mm-yy'\r\n                                    // hidden={data.type == 1}\r\n                                    className=\"form-control\"\r\n                                    name=\"start_date\"\r\n                                    min={disablePastDate()}\r\n                                    defaultValue={defaultValue}\r\n                                    // onChange={startDateHandler}\r\n                                    // placeholder=\"Start date :\"\r\n                                    {...register(\"start_date\", { required: true })}\r\n                                    aria-invalid={errors.start_date ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        // hidden={data.type == 1}\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        defaultValue={defaultValue1}\r\n                                        min={disablePastDate()}\r\n                                        // onChange={endDateHandler}\r\n                                        // value={endDateHandler}\r\n\r\n                                        // placeholder=\"End date\"\r\n                                        {...register(\"end_date\", { required: true })}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    {/* <div >\r\n\r\n                                        <span className='logo-dis'>End date should be greater then or equal to start date</span>\r\n                                    </div> */}\r\n                                    {errors.end_date && errors?.end_date?.type === 'min' && <p style={{ color: 'red' }} role=\"alert\">End date should be greater or equal to startdate</p>}\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div></>\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    // onInput={(e) => {\r\n                                    //     if (e?.target?.value?.length < e.target.maxLength)\r\n                                    //         e.target.value = e.target.value.slice(0, e.target.maxLength);\r\n                                    // }}\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    // onChange={nftNumbereHandler}\r\n                                    // defaultValue={1}\r\n                                    min={1}\r\n                                    max={10}\r\n                                    maxLength={10}\r\n\r\n                                    // onKeyUp={imposeMinMax()}\r\n                                    // min=1 max=4 onkeyup=imposeMinMax(this)\r\n\r\n                                    // disabled={type == 1}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    {...register(\"number_of_nft\", { required: true, min: 1, max: 10 })}\r\n\r\n                                    // {...register(\"number_of_nft\", { maxLength: 12 })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                {/* {errors.number_of_nft && errors.number_of_nft.type === \"max\" && (\r\n                                    <p style={{ color: 'red' }}>\r\n                                        10 NFTs Maximum per Campaign\r\n                                    </p> */}\r\n                                {/* )} */}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFTs per project is required with a limit of 10</p>}\r\n                                {/* {errors.number_of_nft?.type === \"maxLength\" && <p style={{ color: 'red' }} role=\"alert\">Max length exceeded</p>} */}\r\n                            </div>\r\n                        </div>\r\n                        {/* {numberNft > 0 && */}\r\n\r\n                        <div className=\"col-12\">\r\n                            {/* <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => numberNft && props.onHide}>switch</button> */}\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type='submit'>switch</button>\r\n                        </div>\r\n                        {/* } */}\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default ProTypePopup","\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Tooltip } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\n\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router';\r\nimport DModal from './3dModal';\r\nimport ProTypePopup from './ProjectTypePopup';\r\n\r\n\r\nconst UploadNft = ({ current, prev }) => {\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n\r\n    const [count, setCount] = useState(1);\r\n    console.log(\"count\", count)\r\n    const [nft_description, setNft_description] = useState([])\r\n    console.log(\"nftdescr\", nft_description)\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [projmodalShow, setProjModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: '1' });\r\n    const [nftFileType, setNFtFileType] = useState()\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [size, setSize] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    const [startDate, setStartDate] = useState(\"\")\r\n    console.log(\"startdate\", startDate)\r\n    const [endDate, setEndDate] = useState(\"\")\r\n    console.log(\"enddate\", endDate)\r\n    const [numberofNfts, setNumberofNfts] = useState(\"\")\r\n    console.log(\"noof nfts\", numberofNfts)\r\n\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    const [source, setSource] = useState([])\r\n    const [sourceType, setSourceType] = useState()\r\n\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [modal, setModal] = useState()\r\n    const [NFtFileExtension, setNFtExtension] = useState()\r\n    const [preview, setPreview] = useState([])\r\n    console.log('previwimg', preview[0])\r\n    const [projtype, setProjType] = useState(\"1\")\r\n\r\n    console.log(nft_collection_id, \"nft collections\")\r\n    const [nftName, setNftName] = useState([])\r\n    const [nftDescription, setNftDescription] = useState([])\r\n    console.log(\"nftDescription\", nftDescription)\r\n    console.log(\"nftName\", nftName)\r\n\r\n\r\n    const handleIncrement = () => {\r\n        // if (startDate && endDate && numberofNfts) {\r\n\r\n        setCount(prevCount => prevCount + 1);\r\n        // }\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n        setPreview(prevState => {\r\n            // debugger\r\n            prevState[index] = e?.target?.files[0]\r\n\r\n            return [...prevState]\r\n        })\r\n\r\n        // setPreview(pimage)\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n        // debugger\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n\r\n\r\n    const defaultValues = {\r\n        setNft_description: null,\r\n    }\r\n\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n    useEffect(() => {\r\n\r\n        register(\"nft_description\");\r\n        // let sType = source?.map((element) => element);\r\n        // console.log('stype',sType)\r\n        // setSourceType(sType) \r\n\r\n    }, [register]);\r\n\r\n    // const ipfsClient = create('http://127.0.0.1:5001')\r\n    // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n    // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n    // console.log(imaeg, 'imgg')\r\n    // const { nodes, materials } = useGLTF(\"/img/adamHead.gltf\");\r\n    const OnSubmit = (values) => {\r\n        // e.preventDefault\r\n        // setColData(col)\r\n        // \r\n        setFormValues(values)\r\n\r\n    }\r\n    // program to get the dimensions of an image\r\n\r\n\r\n\r\n    // console.log('col', col)\r\n    const handleUpload = (e, index) => {\r\n        const filetype = e.target.files[0].type\r\n        setNFtExtension(filetype)\r\n        // debugger\r\n        setNft(e.target.files[0])\r\n\r\n\r\n\r\n        var fr = new FileReader;\r\n\r\n        fr.onload = function () { // file is loaded\r\n            var img = new Image;\r\n\r\n            img.onload = function () {\r\n                setSize(e.target.files[0].size); // image is loaded; sizes are available\r\n                setNftwidth(img.width)\r\n                setNftheight(img.height)\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n\r\n        let type = \"Image\"\r\n\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert('Filesize must 100mb or below');\r\n        } else {\r\n\r\n\r\n            switch (filetype) {\r\n                case 'image/png':\r\n                case 'image/jpg':\r\n                case 'image/gif':\r\n                case 'image/svg':\r\n                    type = \"Image\"\r\n                    break;\r\n                case 'audio/mpeg':\r\n                case 'audio/ogg':\r\n                case 'video/mp4':\r\n                case 'video/webm':\r\n                    type = 'Player'\r\n                    break;\r\n                case '':\r\n                    // if (nft?.name?.str.includes(\".glb\")) {\r\n                    type = 'modal'\r\n                    // }\r\n                    break;\r\n                default:\r\n                    type = 'Image'\r\n            }\r\n\r\n            // setNFtFileType(type)\r\n\r\n            setSource(prevState => {\r\n                // debugger\r\n                prevState[index] = { file: e.target.files[0], type: type }\r\n                setSourceType(type)\r\n\r\n                return [...prevState]\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, [])\r\n    const nftDescriptionHandler = (index, item) => {\r\n        // setNft_description(event?.currentTarget?.value)\r\n        setNft_description(previ => {\r\n            return {\r\n                ...previ,\r\n                [item]: index\r\n            }\r\n        })\r\n        // setNft_description(nftDescription[index])\r\n    }\r\n    // function onHandleClick(index, item) {\r\n\r\n    //     setNft_collection_id(previ => {\r\n    //         previ[index] = item\r\n    //         return {\r\n    //             ...previ,\r\n    //         }\r\n    //     }\r\n    //     );\r\n    // };\r\n\r\n    const onFinish = async (values) => {\r\n        // debugger\r\n        try {\r\n            setLoading(true)\r\n            // debugger\r\n            // const nftImagepromises = values?.nfts?.map(x => uploadNFT(x?.nft_image?.file))\r\n            const nftImagepromises = values?.nfts?.map(x => uploadNFT(nft))\r\n\r\n            const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n            // \r\n            // debugger\r\n            const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n            const addedImagetype = imagesRes?.map(x => x?.data?.data?.extension)\r\n            var str = addedImage;\r\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n            // console.log(check)\r\n            // console.log(addedImage.includes('undefined'), 'add')\r\n\r\n            const formData = new FormData()\r\n\r\n            // debugger\r\n            // if (check === false) {\r\n            console.log('uploaded')\r\n            formData.append('title', data.title)\r\n            formData.append('description', data.description)\r\n            formData.append('address', data.address)\r\n\r\n            formData.append('country', data.country)\r\n            if (!data.state) {\r\n\r\n                formData.append('state', '')\r\n            } else {\r\n                formData.append('state', data.state)\r\n            }\r\n            if (!data.city) {\r\n                formData.append('city', '')\r\n            } else {\r\n\r\n                formData.append('city', data.city)\r\n            }\r\n            formData.append('latitude', lat)\r\n            formData.append('logitude', log)\r\n            formData.append('price', data.price)\r\n\r\n            formData.append('image', data.image)\r\n            if (projtype == 1) {\r\n                formData.append('preview_imag', \"\")\r\n                formData.append('number_of_nft', \"1\")\r\n                formData.append('start_date', '')\r\n                formData.append('end_date', '')\r\n            } else {\r\n                formData.append('preview_imag', Pimage)\r\n                formData.append('number_of_nft', numberofNfts)\r\n                formData.append('start_date', startDate)\r\n                formData.append('end_date', endDate)\r\n            }\r\n            formData.append('type', projtype)\r\n            formData.append('category_id', data.category_id)\r\n\r\n\r\n            formData.append('nft_image', addedImage)\r\n            formData.append('extention', sourceType)\r\n            formData.append('nft_name', values?.nfts?.map(x =>\r\n                x.nft_name\r\n            ))\r\n\r\n            formData.append('nft_collection_id', coll_id)\r\n            formData.append('nft_description', Object?.values(nft_description))\r\n\r\n\r\n            dispatch(CreateProjectAction(formData, setLoading, history))\r\n            // } else {\r\n\r\n            //     console.log('fail')\r\n            //     setLoading(false)\r\n            //     swal('error!', 'Nft not uploaded', 'error')\r\n\r\n            // }\r\n        } catch (error) {\r\n            console.log(error, 'error')\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n\r\n        beforeUpload: file => {\r\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n            if (!isJpgOrPng) {\r\n\r\n                alert('You can only upload JPG/PNG file!');\r\n            }\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader?.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    // const getFile = (e) => {\r\n    //     // \r\n    //     console.log('Upload event:', e);\r\n\r\n    //     if (Array.isArray(e)) {\r\n    //         return e;\r\n    //     }\r\n    //     return e && e.fileList;\r\n    // };\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n    const nftNameHandler = (event, index) => {\r\n        // debugger\r\n        setNftName(prevState => {\r\n            return {\r\n                ...prevState,\r\n                [index]: event?.target?.value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // const headerDetail = Object?.values(nft_description)\r\n    // console.log(\"headerdata\", headerDetail)\r\n    return (\r\n        // <section className=\"author-area\">\r\n        <div className=\"main-create \">\r\n\r\n            {loading ? (\r\n                <Loader />\r\n\r\n            ) : (\r\n                <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                    <Form\r\n                        form={form}\r\n                        name=\"dynamic_form_nest_item\"\r\n                        initialValues={{\r\n                            nfts: nfts,\r\n                        }}\r\n                        // onSubmit={(event) => handleSubmit(event)}\r\n                        onFinish={(event) => onFinish(event)}\r\n                        onSubmit={OnSubmit}\r\n                        onChange={nftNameHandler}\r\n                        autoComplete=\"off\"\r\n                        className=\"item-form card no-hover\"\r\n                    >\r\n                        <Form.List name=\"nfts\">\r\n                            {(fields, { add, remove }) => (\r\n                                <>\r\n                                    <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                        <svg\r\n                                            width=\"16px\"\r\n                                            height=\"16px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                            <path\r\n                                                fill=\"none\"\r\n                                                stroke=\"#fff\"\r\n                                                stroke-width=\"2\"\r\n                                                d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\r\n                                                transform=\"matrix(-1 0 0 1 24 0)\"\r\n                                            />\r\n                                        </svg>\r\n                                        Previous\r\n                                    </Button>\r\n                                    {/* <div className='steps-center'>\r\n    \r\n    \r\n                                                    <div className='orgicon1'>\r\n    \r\n                                                        <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n                                                    </div>\r\n    \r\n                                                    <div className='orgicon1line'>\r\n                                                        <span style={{}}> ----------------------------- </span>\r\n    \r\n                                                    </div>\r\n                                                    <div className='orgicon2'>\r\n    \r\n                                                        <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n                                                    </div>\r\n                                                </div> */}\r\n                                    <>\r\n                                        {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                            // setSourceType(source[index]?.file),\r\n                                            // <Space\r\n                                            //     key={key}\r\n                                            //     style={{\r\n                                            //         display: 'flex',\r\n                                            //         marginBottom: 8,\r\n                                            //     }}\r\n                                            //     align=\"baseline\"\r\n                                            // >\r\n                                            <Collapse accordion\r\n                                                defaultActiveKey={[count]}\r\n                                                onChange={onChange}\r\n                                                expandIconPosition={expandIconPosition}\r\n                                            >\r\n\r\n                                                <Panel key={count} header={[nftName[index] ? <div className='Collapse-text'> {nftName[index].slice(0, 50)}  </div> : \"Detail\", source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? <div> <img src={URL.createObjectURL(source[index].file)} className=\"images-Collapse\" /></div> : <div> <img src={preview?.[index] && window.URL.createObjectURL(preview[index])} className=\"images-Collapse\" /></div>]} className=\"p-0 nft-Collapse\">\r\n\r\n\r\n                                                    <Fragment>\r\n                                                        {/* <div>Artwork {index}</div> */}\r\n                                                        <div className=\"row relative\">\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: \"Name is required\",\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" onChange={e => nftNameHandler(e, index)} />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n                                                                    {/* <Controller\r\n                                                                            control={control}\r\n                                                                            name=\"nft_description\"\r\n                                                                            defaultValue=\"\"\r\n                                                                            rules={{ required: true, minLength: 300 }}\r\n                                                                            render={({ field }) => {\r\n                                                                                return <JoditEditor\r\n                                                                                    ref={field.ref}\r\n                                                                                    value={field.value}\r\n                                                                                    \r\n                                                                                    aria-invalid={errors.nft_description ? \"true\" : \"false\"}\r\n                                                                                    placeholder=\"start typing\"\r\n                                                                                    tabIndex={1} \r\n                                                                                    onBlur={newContent => setNft_description(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                                                    onChange={field.onChange}\r\n                                                                                />\r\n                                                                            }}\r\n    \r\n    \r\n                                                                        /> */}\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: \"Missing  description\",\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <Controller\r\n                                                                                control={control}\r\n                                                                                name=\"nft_description\"\r\n                                                                                defaultValue=\"\"\r\n                                                                                render={({ field: { value, onChange } }) => {\r\n                                                                                    return  */}\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            // value={nft_description[index]}\r\n                                                                            // aria-invalid={errors.nft_description ? \"true\" : \"false\"}\r\n\r\n                                                                            // config={config}\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                            // onBlur={(newContent, e) => setNft_description(newContent)}\r\n                                                                            // preferred to use only this option to update the content for performance reasons\r\n                                                                            onChange={e => nftDescriptionHandler(e, index)}\r\n                                                                        />\r\n                                                                        {/* {nft_description.length == 0 && <p style={{ color: 'red' }} role=\"alert\">Category is required</p>} */}\r\n                                                                        {/* {errors.nft_description === 'required' && <p style={{ color: 'red' }} role=\"alert\">Category is required</p>} */}\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                    {errors.nft_description?.type ===\r\n                                                                        \"required\" && (\r\n                                                                            <p style={{ color: \"red\" }} role=\"alert\">\r\n                                                                                Description is required\r\n                                                                            </p>\r\n                                                                        )}\r\n                                                                    {errors.nft_description &&\r\n                                                                        errors.nft_description.type ===\r\n                                                                        \"minLength\" && (\r\n                                                                            <p style={{ color: \"red\" }}>\r\n                                                                                min length of words is 300\r\n                                                                            </p>\r\n                                                                        )}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {/* <div className=\"col-md-5 col-12\">\r\n                                                                        <label>Nft</label>\r\n                                                                        <div>\r\n                                                                            <Form.Item\r\n                                                                                {...restField}\r\n                                                                                name={[name, \"nft_image\"]}\r\n                                                                                // getValueFromEvent={getFile}\r\n                                                                                rules={[\r\n                                                                                    {\r\n                                                                                        required: true,\r\n                                                                                        message: 'Please select a image',\r\n                                                                                    },\r\n                                                                                ]}\r\n    \r\n                                                                            >\r\n    \r\n                                                                                <Upload\r\n                                                                                    {...fileProps}\r\n                                                                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                                    listType=\"picture-card\"\r\n                                                                                    // fileList={fileList}\r\n                                                                                    // onChange={onChange}\r\n                                                                                    onPreview={handlePreview}\r\n                                                                                    maxCount={1}\r\n    \r\n                                                                                >\r\n                                                                                    + Upload\r\n                                                                                </Upload>\r\n    \r\n    \r\n                                                                            </Form.Item>\r\n                                                                            <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                                <img\r\n                                                                                    alt=\"example\"\r\n                                                                                    style={{\r\n                                                                                        width: '100%',\r\n                                                                                    }}\r\n                                                                                    src={previewImage} />\r\n                                                                            </Modal>\r\n                                                                        </div>\r\n                                                                    </div> */}\r\n\r\n                                                            <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                <MinusCircleOutlined\r\n                                                                    onClick={(e) => {\r\n                                                                        remove(name);\r\n                                                                        handleDecrement(e);\r\n                                                                    }}\r\n                                                                />\r\n                                                            </div>\r\n                                                            {/* </div> */}\r\n                                                            <div className=\"col-12\">\r\n                                                                <label className=\"mt-2 mb-3\">\r\n                                                                    Choose Collection\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div className='d-flex flex-wrap gap-10 col-12'>\r\n\r\n\r\n\r\n                                                                {col?.map((item, idx) => (\r\n                                                                    <div\r\n                                                                        key={`auc_${idx}`}\r\n                                                                        id={item.id}\r\n                                                                        className=\"choose_div\"\r\n                                                                    >\r\n                                                                        <div\r\n                                                                            id={item.id}\r\n                                                                            onClick={() =>\r\n                                                                                onHandleClick(index, item.id)\r\n                                                                            }\r\n                                                                            className=\"\"\r\n                                                                            style={{\r\n                                                                                background: \"black\",\r\n                                                                                marginBottom: \"8px\",\r\n                                                                                border:\r\n                                                                                    nft_collection_id[index] == item.id\r\n                                                                                        ? \"1px solid #fff\"\r\n                                                                                        : null,\r\n                                                                            }}\r\n                                                                        >\r\n\r\n                                                                            <div>{item.title}</div>\r\n\r\n                                                                        </div>\r\n                                                                        {/* </Form.Item> */}\r\n                                                                    </div>\r\n\r\n\r\n\r\n                                                                ))}\r\n                                                                <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                    {/* <div className=\"col-24\"> */}\r\n\r\n                                                                    <div className=\"form-group\">\r\n                                                                        <div\r\n                                                                            className=\"card choose_div\"\r\n                                                                            style={{\r\n                                                                                background: \"black\",\r\n                                                                                marginBottom: \"8px\",\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <div className=\"card-body \">\r\n                                                                                <Button\r\n                                                                                    variant=\"primary\"\r\n                                                                                    className=\"collection_btn\"\r\n                                                                                    onClick={() => setModalShow(true)}\r\n                                                                                >\r\n                                                                                    <i className=\"f1a-regular fa-plus\"></i>{\" \"}\r\n                                                                                    Create Collection\r\n                                                                                </Button>\r\n\r\n\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                        <label className=\"mt-3\">Upload NFT</label>\r\n                                                                        <div\r\n                                                                            className=\"position-relative upload_nft\"\r\n                                                                            style={{\r\n                                                                                backgroundImage: \"url('')\",\r\n                                                                                backgroundSize: \"contain\",\r\n                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a image',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        > */}\r\n                                                                            {/* <div className='uploadnftpopup-input Icon_cam' > */}\r\n                                                                            <div\r\n                                                                                className={\r\n                                                                                    source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\r\n                                                                                        ? \" inputdragVedio\"\r\n                                                                                        : \"inputtdrag\"\r\n                                                                                }\r\n                                                                            >\r\n                                                                                <input\r\n                                                                                    type=\"file\"\r\n                                                                                    // onChange={handleUpload}\r\n                                                                                    maxCount={1}\r\n                                                                                    onChange={e => handleUpload(e, index)}\r\n                                                                                    accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                                />\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\r\n                                                                                    <div>\r\n                                                                                        {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\r\n                                                                                        {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? (\r\n\r\n\r\n                                                                                            <img\r\n                                                                                                src={URL.createObjectURL(source[index].file)}\r\n                                                                                                className=\"nft-image\"\r\n                                                                                            />\r\n                                                                                        ) : (\r\n                                                                                            <>\r\n                                                                                                <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                    Image width & height should be 500x500\r\n                                                                                                </p>\r\n                                                                                                <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                    Image size should be max 1mb\r\n                                                                                                </p>\r\n                                                                                            </>\r\n                                                                                        )\r\n\r\n                                                                                        }\r\n                                                                                    </div>\r\n                                                                                }\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\r\n                                                                                    <div>\r\n                                                                                        {/* { source?.length && source?.[index] && source[index]?.type === \"Player\" && ( */}\r\n                                                                                        <video\r\n                                                                                            // className=\"VideoInput_video\"\r\n                                                                                            width=\"100%\"\r\n                                                                                            // height={height}\r\n                                                                                            controls\r\n                                                                                            src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                        // onChange={setSource}\r\n                                                                                        />\r\n                                                                                        {/* )} */}\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p>\r\n                                                                                                Because you’ve included\r\n                                                                                                multimedia, you’ll need to provide\r\n                                                                                                an image (PNG, JPG, or GIF) for\r\n                                                                                                the card display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage:\r\n                                                                                                    \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={e => previewChange(e, index)}\r\n                                                                                            // onChange={previewChange}\r\n                                                                                            />\r\n                                                                                            {preview?.length && preview?.[index] &&\r\n                                                                                                <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                    {preview?.length && preview?.[index] && (\r\n                                                                                                        <img\r\n                                                                                                            className=\"preview_image\"\r\n                                                                                                            src={URL.createObjectURL(preview[index])}\r\n\r\n\r\n                                                                                                        // onChange={setPimage}\r\n                                                                                                        />\r\n                                                                                                    )}\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n                                                                                }\r\n\r\n                                                                                {/* )} */}\r\n                                                                                {/* <div className=\"VideoInput_footer\">{vdo || \"Nothing selectd\"}</div> */}\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\r\n                                                                                    <div>\r\n                                                                                        <DModal\r\n                                                                                            vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                        // mdl={setModal}\r\n                                                                                        />\r\n\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p className=\"\">\r\n                                                                                                Because you’ve included multimedia,\r\n                                                                                                you’ll need to provide an image\r\n                                                                                                (PNG, JPG, or GIF) for the card\r\n                                                                                                display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage:\r\n                                                                                                    \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={e => previewChange(e, index)}\r\n                                                                                            />\r\n                                                                                            {preview?.length && preview?.[index] &&\r\n                                                                                                <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                    {preview?.length && preview?.[index] && (\r\n                                                                                                        <img\r\n                                                                                                            className=\"preview_image\"\r\n                                                                                                            src={URL.createObjectURL(preview[index])} />\r\n                                                                                                    )}\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                            </div>\r\n                                                                            {/* </Form.Item> */}\r\n                                                                            {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a MP4 File',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        >\r\n    \r\n                                                                            <VideoInput width={400} height={300} />\r\n    \r\n    \r\n                                                                        </Form.Item> */}\r\n\r\n                                                                            {/* <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>MP4 & MP3 </label>\r\n                                                                                <VideoInput width={400} height={300} />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>3D Modal </label>\r\n                                                                                <Dinosaur />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                               \r\n    \r\n                                                                            </div>\r\n                                                                        </div> */}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Fragment>\r\n                                                </Panel>\r\n                                            </Collapse>\r\n                                        ))}\r\n\r\n                                        {/* {!((data?.number_of_nft === count)) ? */}\r\n                                        {sourceType &&\r\n\r\n                                            <Form.Item>\r\n                                                <Tooltip title={count == 1 ? \"Switch to Campaign for multiple NFTs\" : 'Add more NFTs'} color='#4528dc'>\r\n                                                    <Button\r\n                                                        type=\"dashed\"\r\n                                                        onClick={(e) => {\r\n                                                            {\r\n                                                                count == 1 &&\r\n                                                                    setProjModalShow(true)\r\n                                                            }\r\n\r\n                                                            // {\r\n                                                            //     count == 2 &&\r\n\r\n\r\n                                                            // }\r\n                                                            {\r\n                                                                numberofNfts && startDate && endDate &&\r\n                                                                    add(e)\r\n                                                                setProjType(\"2\")\r\n                                                                handleIncrement(e);\r\n                                                                // setPannelKey(pannelKey + 1)\r\n\r\n                                                            };\r\n                                                            // {startDate && endDate && numberofNfts && \r\n\r\n\r\n                                                            // }\r\n\r\n                                                        }}\r\n                                                        block\r\n\r\n                                                        icon={<PlusOutlined />}\r\n                                                    // disabled={data?.number_of_nft == count}\r\n                                                    >\r\n                                                        Add NFT\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n\r\n                                            </Form.Item>\r\n\r\n\r\n                                        }\r\n                                        {/* : null} */}\r\n                                    </>\r\n                                </>\r\n                            )}\r\n                        </Form.List>\r\n                        <Form.Item>\r\n                            <div className=\"col-12\">\r\n                                <button key=\"create-project\" className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\r\n                                    Create\r\n                                </button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <ProTypePopup\r\n                        show={projmodalShow}\r\n                        onHide={() => setProjModalShow(false)}\r\n                        enddate={setEndDate}\r\n                        startdate={setStartDate}\r\n                        nftno={setNumberofNfts}\r\n\r\n                    />\r\n                    <MyVerticallyCenteredModal\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                    />\r\n\r\n                </div>\r\n            )\r\n            }\r\n        </div >\r\n    )\r\n}\r\nexport default UploadNft","import { useEffect, useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Create from \"./Create\";\r\nimport UploadNft from \"./uploadNft\";\r\nimport FormProvider, { useFormData } from \"./Context/context\";\r\n\r\nimport { Button, message, Steps } from 'antd';\r\nimport { set, useForm } from \"react-hook-form\";\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Create Project',\r\n    content: <Create />\r\n  },\r\n  {\r\n    title: 'Upload NFT',\r\n    content: <UploadNft />,\r\n  },\r\n];\r\nconst UploadNftIndex = () => {\r\n\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const { setValue } = useForm();\r\n\r\n  const prev = () => {\r\n    // \r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const items = steps.map((item) => ({ key: item.title, title: item.title }));\r\n  return (\r\n    <section className=\"author-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n\r\n\r\n          <div className=\"col-14 col-md-9 mt-10\">\r\n            {/* Intro */}\r\n            <div className=\"intro mt-5  mb-4 mb-lg-5\">\r\n              <div className=\"intro-content\">\r\n                <span>Get Started</span>\r\n                {current === 0 ? (\r\n\r\n                  <h3 className=\"mt-3 mb-0\">Create Project</h3>\r\n                ) : (\r\n\r\n                  <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <FormProvider>\r\n\r\n              {/* <FormCard currentStep={formStep} prevFormStep={prevFormStep}> */}\r\n              <div className=\"steps-content\">\r\n                <Steps current={current} items={items} />\r\n                {current === 0 && (\r\n\r\n                  <Create current={current} next={next} prev={prev} />\r\n                )}\r\n\r\n                {current === 1 && <><UploadNft prev={prev} />\r\n                  {/* <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                    Previous\r\n                  </Button> */}\r\n                </>\r\n                }\r\n                {/* <div className=\"steps-action\">\r\n          {current < steps.length - 1 && (\r\n            <Button type=\"primary\" onClick={() => next()}>\r\n              Next\r\n            </Button>\r\n          )}\r\n\r\n          {current > 0 && (\r\n            <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n              Previous\r\n            </Button>\r\n          )}\r\n        </div> */}\r\n              </div>\r\n              {/* </FormCard> */}\r\n            </FormProvider>\r\n          </div>\r\n        </div >\r\n      </div >\r\n    </section >\r\n  );\r\n};\r\n\r\nexport default UploadNftIndex;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nimport UploadNftIndex from '../components/Create';\r\n\r\nconst Create = () => {\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n      <UploadNftIndex />\r\n      <Footer />\r\n      <ModalSearch />\r\n      <ModalMenu />\r\n      <Scrollup />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => {\r\n        // \r\n        // console.log(login.authToken, 'login')\r\n        return state.login\r\n    })\r\n    // console.log(user, 'user')\r\n\r\n    if (user?.status === 200) {\r\n        history.push('/')\r\n    }\r\n\r\n    const mesg = useSelector(state => {\r\n        // \r\n        return state.user.message\r\n    })\r\n    // if (login?.userToken) {\r\n    //     console.log('hello')\r\n    // }\r\n    // console.log(login?.status)\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        // \r\n        dispatch(LoginAction(data))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"Enter your Password\"\r\n                                            {...register(\"password\", { required: \"Password is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" defaultChecked />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Log In</button>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\"><Link to=\"/forgotpassword\">Forgot Password</Link></span>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\">If not registered? <Link to=\"/signup\"><b>Sign Up</b></Link></span>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport LoginSection from '../components/Login/Login';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LoginSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","export default function FormCard({ children, currentStep, prevFormStep }) {\r\n    return (\r\n        <div >\r\n            {currentStep < 1 && (\r\n                <>\r\n                    {currentStep > 0 && (\r\n                        <button\r\n                            onClick={prevFormStep}\r\n                            type=\"button\"\r\n                        >\r\n                            back\r\n                        </button>\r\n                    )}\r\n\r\n                </>\r\n\r\n            )}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    // console.log(data, 'dataaa')\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport { React } from 'react'\r\nimport { useDispatch, useSelector, } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as Yup from 'yup'\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required(\"Email is required\"),\r\n    // wallet_id: Yup.string()\r\n    //     .wallet_id()\r\n    //     .required(\"Wallet address is required\"),\r\n    // goal: Yup.string()\r\n    //     .goal()\r\n    //     .required(\"Fundraising goal is required\"),\r\n\r\n    password: Yup.string()\r\n        .required(\"Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\"),\r\n    confirm_password: Yup.string()\r\n        .required(\"Confirm Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\")\r\n        .oneOf([Yup.ref(\"password\")], \"Passwords do not match\")\r\n});\r\n\r\n\r\nconst Signup = ({ formStep, nextFormStep }) => {\r\n    const { setFormValues } = useFormData();\r\n    const dispatch = useDispatch()\r\n    const { register, watch, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"all\",\r\n        resolver: yupResolver(formSchema)\r\n    });\r\n\r\n    // const [role, setRole] = useState()\r\n    // console.log('role', role)\r\n    const OnSubmit = (data) => {\r\n        // dispatch(Register(data))\r\n        setFormValues({ ...data });\r\n        // if (role == 3) {\r\n\r\n        nextFormStep();\r\n        // }\r\n        // if (role == 2) {\r\n        //     const formData = new FormData()\r\n        //     formData.append('email', data.email)\r\n        //     // formData.append('goal', data.goal)\r\n        //     formData.append('password', data.password)\r\n        //     formData.append('confirm_password', data.confirm_password)\r\n        //     // formData.append('wallet_id', data.wallet_id)\r\n        //     // formData.append('role', role)\r\n        //     dispatch(Register(formData))\r\n        // }\r\n    }\r\n\r\n    const { user } = useSelector(state => state.user)\r\n\r\n\r\n    const { errMessage } = useSelector(state => {\r\n        return state?.errmessage?.message\r\n    })\r\n\r\n    return (\r\n        < section className=\"author-area\" >\r\n            <div className=\"container\">\r\n\r\n                <>\r\n                    <div>\r\n                        {errMessage && <p>{errMessage}</p>}\r\n\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 co  l-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span></span>\r\n                                <h3 className=\"mt-3 mb-0\"></h3>\r\n                                <p></p>\r\n                            </div>\r\n                            {/* Item Form */}\r\n                            <div className={formStep === 0 ? styles.showForm : styles.hideForm}>\r\n                                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                    <div className=\"row\">\r\n                                        <div className='steps-center'>\r\n                                            <div className='step1icon'>\r\n\r\n                                                <i className=\"fa-solid fa-circle-check\"> Step 1 </i>\r\n                                            </div>\r\n                                            <div className='stepperline'>\r\n                                                <i style={{ color: '#452868' }}>  ----------------------------- </i>\r\n\r\n                                            </div>\r\n                                            <div className='step2icon'>\r\n\r\n                                                <i className=\"fa-regular fa-circle\" > Step 2 </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Email</label>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    {...register(\"email\", { required: 'Email address is required' })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.email ? \"true\" : \"false\"} />\r\n                                                {/* {errors.errMessage} */}\r\n                                                {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                                {/* {errMessage && <p>{errMessage}</p>} */}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"password\"\r\n                                                    placeholder=\"Password\"\r\n                                                    {...register(\"password\", { required: true })}\r\n                                                    aria-invalid={errors.password ? \"true\" : \"false\"} />\r\n                                                {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Confirm Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"confirm_password\"\r\n                                                    placeholder=\"Confirm password\"\r\n                                                    {...register(\"confirm_password\",\r\n                                                        {\r\n                                                            required: true,\r\n                                                            validate: (val) => {\r\n                                                                if (watch('password') != val) {\r\n                                                                    return \"Your passwords do no match\";\r\n                                                                }\r\n                                                            },\r\n                                                        })}\r\n                                                    aria-invalid={errors.confirm_password ? \"true\" : \"false\"} />\r\n                                                {errors.confirm_password && <p style={{ color: 'red' }} role=\"alert\">{errors.confirm_password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Fundraising Goal</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"goal\"\r\n                                                    placeholder=\"Fundraising goal (MATIC)\"\r\n                                                    {...register(\"goal\",\r\n                                                        {\r\n                                                            required: true,\r\n\r\n                                                        })}\r\n                                                    aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                                {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Wallet Address</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"wallet_id\"\r\n                                                    // defaultValue='1'\r\n                                                    placeholder=\"Wallet address\"\r\n                                                    {...register(\"wallet_id\", { required: true })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                                />\r\n                                                {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"3\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                                </div>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"2\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <div className=\"form-check form-check-inline\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n                                        <div className=\"col-12\">\r\n                                            {/* {role == 2 ? ( */}\r\n                                            {/* <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Signup</button> */}\r\n                                            {/* ) : ( */}\r\n\r\n                                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                                            {/* )} */}\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <span className=\"d-block text-center mt-4\">Already have an account? <Link to=\"/login\"><b>Login</b></Link></span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        </section >\r\n\r\n    )\r\n}\r\n\r\nexport default Signup\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnnualRevenueList, CountryList, HearAboutList, Register } from '../../redux/Actions/authAction'\r\nimport { Controller, useForm } from 'react-hook-form'\r\n\r\nimport { useHistory } from 'react-router'\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\r\nimport { useState } from 'react'\r\nimport JoditEditor from 'jodit-react';;\r\n\r\n// import { Widget } from \"@uploadcare/react-widget\";\r\n// import FileUpload from \"react-material-file-upload\";\r\n// import { uploadcare } from '../lib/uploadcare.min.js';\r\nconst CreateOrganization = ({ formStep, nextFormStep, goBack }) => {\r\n\r\n    const [description, setDescription] = useState()\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const organization = useSelector(state => {\r\n        return state.user.organization\r\n    })\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n    const { annualRevenue } = useSelector(state => state.annualRevenue)\r\n\r\n    // }\r\n    const { hereAbout } = useSelector(state => state.hereAbout)\r\n    // console.log(user, 'user')\r\n\r\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    const OnSubmit = (values) => {\r\n        setFormValues(values)\r\n        // FormData.append('email', data.email)\r\n        // FormData.append('password', data.password)\r\n        // FormData.append('confirm_password', data.confirm_password)\r\n        const formData = new FormData()\r\n        formData.append('banner_image', values.banner_image[0])\r\n        formData.append('logo', values.logo[0])\r\n        formData.append('email', data.email)\r\n        formData.append('password', data.password)\r\n        formData.append('wallet_id', values.wallet_id)\r\n        // formData.append('role', data.role)\r\n        formData.append('goal', values.goal)\r\n        formData.append('confirm_password', data.confirm_password)\r\n        formData.append('organization_name', values.organization_name)\r\n        formData.append('url', values.url)\r\n        formData.append('country', values.country)\r\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\r\n        formData.append('tax_id', values.tax_id)\r\n\r\n        formData.append('social', values.social)\r\n        formData.append('social_link', values.social_link)\r\n        formData.append('description', description)\r\n        // formData.append('method_heard_detail', values.method_heard_detail)\r\n\r\n        dispatch(Register(formData))\r\n        // if (formData) {\r\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\r\n        //     history.push('/login')\r\n        // }\r\n    }\r\n\r\n    const socialmedia = useSelector(state => {\r\n        return state?.getSocialmediaIcons?.getsocial\r\n    })\r\n    // console.log('social', socialmedia)\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n        dispatch(AnnualRevenueList())\r\n        dispatch(HearAboutList())\r\n        dispatch(GetSocialMediaIcons())\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <div className={formStep === 1 ? styles.showForm : styles.hideForm}>\r\n                            <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                {/* <button\r\n                                    // className={styles.back}\r\n                                    onClick={prevFormStep}\r\n                                    type=\"button\"\r\n                                >\r\n                                    back\r\n                                </button> */}\r\n                                <div className=\"row\">\r\n                                    <div className='col-12 d-flex justify-content-center'>\r\n                                        <div className='orgicon1'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 1</i>\r\n                                        </div>\r\n\r\n                                        <div className='orgicon1line'>\r\n                                            <span style={{ color: '#452868' }}> ----------------------------- </span>\r\n\r\n                                        </div>\r\n                                        <div className='orgicon2'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 2</i>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Fundraising Goal</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"goal\"\r\n                                                step=\"0.01\"\r\n                                                placeholder=\"Fundraising goal (MATIC)\"\r\n                                                {...register(\"goal\",\r\n                                                    {\r\n                                                        required: true,\r\n\r\n                                                    })}\r\n                                                aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                            {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Funding Wallet </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"wallet_id\"\r\n                                                // defaultValue='1'\r\n                                                placeholder=\"Funding Wallet\"\r\n                                                {...register(\"wallet_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Name</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"organization_name\"\r\n                                                placeholder=\"Organization name\"\r\n                                                {...register(\"organization_name\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.organization_name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Website</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"url\"\r\n                                                placeholder=\"Website\"\r\n                                                {...register(\"url\", {\r\n                                                    required: true,\r\n                                                    pattern: {\r\n                                                        value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                                    }\r\n                                                })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.url ? \"true\" : \"false\"}\r\n                                            />\r\n\r\n                                            {errors.url && errors.url?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                                            {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Describe your project\"\r\n\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <Controller\r\n                                                control={control}\r\n                                                name=\"description\"\r\n                                                defaultValue=\"\"\r\n\r\n                                                // {...register(\"description\", { required: true })}\r\n                                                rules={{ required: true, min: 150 }}\r\n                                                // rules={{\r\n                                                //     required: true, pattern: {\r\n\r\n                                                //         message: \"Description is required\",\r\n                                                //     },\r\n                                                // }}\r\n                                                render={({ field }) => {\r\n                                                    return <JoditEditor\r\n                                                        ref={field.ref}\r\n                                                        value={field.value}\r\n                                                        // config={config}\r\n                                                        aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                                        placeholder=\"start typing\"\r\n                                                        tabIndex={1} // tabIndex of textarea\r\n                                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                        onChange={field.onChange}\r\n                                                    />\r\n                                                }}\r\n                                            />\r\n                                            {errors?.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Country</label>\r\n\r\n                                            <select name=\"country\"\r\n                                                {...register(\"country\", { required: true })}>\r\n                                                aria-invalid={errors.country ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                                {countries.data?.data?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.name}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"annual_revenue_range\"\r\n                                                {...register(\"annual_revenue_range\", { required: true })}>\r\n                                                {annualRevenue?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key.id} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>EIN Number/Tax Id</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"tax_id\"\r\n                                                placeholder=\"EIN Number/Tax Id(optional)\"\r\n                                                {...register(\"tax_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (required)</label>\r\n                                            <select name=\"social\"\r\n                                                {...register(\"social\", { required: true })}>\r\n                                                aria-invalid={errors.social ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\r\n                                                {socialmedia?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.title}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (secondary)</label>\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"social_link\"\r\n                                                    placeholder=\"social link(optional) \"\r\n                                                    {...register(\"social_link\")}\r\n                                                // {...register(\"email\")}\r\n                                                // aria-invalid={errors.social_link ? \"true\" : \"false\"}\r\n                                                />\r\n                                            </div>\r\n                                            {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"project\"\r\n                                                {...register(\"hear_about\", { required: true })}>\r\n                                                {hereAbout?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Banner</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n\r\n                                                name=\"banner_image\"\r\n                                                placeholder=\"Select file\"\r\n                                                disp\r\n                                                {...register(\"banner_image\", { required: true })}\r\n                                                aria-invalid={errors.banner_image ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\r\n\r\n                                            {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Logo</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n                                                name=\"logo\"\r\n                                                placeholder=\"Select file\"\r\n                                                {...register(\"logo\", { required: true })}\r\n                                                aria-invalid={errors.logo ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <div className='logo_one'>\r\n\r\n                                                <span className='logo-dis'>maximum height should be 250 pixels</span>\r\n                                            </div>\r\n                                            {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\r\n                                    </div>\r\n                                    {/* <div className=\"col-3\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => goBack()}>Previous</button>\r\n                                    </div> */}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CreateOrganization","import { useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Signup from './Signup'\r\nimport CreateOrganization from './createOrganization';\r\nimport FormProvider from \"./Context/context\";\r\n\r\n\r\nconst SignupIndex = () => {\r\n  const [formStep, setFormStep] = useState(0);\r\n\r\n  const nextFormStep = () => setFormStep((currentStep) => currentStep + 1);\r\n\r\n  const prevFormStep = () => setFormStep((currentStep) => currentStep - 1);\r\n\r\n  return (\r\n    <FormProvider>\r\n\r\n      <FormCard currentStep={formStep} prevFormStep={prevFormStep}>\r\n        {formStep === 0 && (\r\n          <Signup formStep={formStep} nextFormStep={nextFormStep} />\r\n        )}\r\n        {formStep === 1 && <CreateOrganization goBack={prevFormStep} />\r\n        }\r\n      </FormCard>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default SignupIndex;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport SignupSection from '../components/Signup';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Signup = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <SignupSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contact',\r\n\r\n    initialState: {\r\n        contact: [],\r\n\r\n\r\n    },\r\n    reducers: {\r\n\r\n        postContact: (state, action) => {\r\n            state.contact = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const contactReducer = contactSlice.reducer\r\n\r\nexport const {\r\n    postContact\r\n} = contactSlice.actions;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ContactAction } from '../../redux/Actions/contactAction';\r\nimport Loader from '../Loader/loader';\r\n\r\n\r\nconst Contact = () => {\r\n    const [loading, setLoading] = useState()\r\n    const dispatch = useDispatch()\r\n    // useEffect(() => {\r\n    //     dispatch(ContactAction())\r\n    // })\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        setLoading(true)\r\n        const formData = new FormData()\r\n        formData.append('name', data.name)\r\n        formData.append('subject', data.subject)\r\n        formData.append('email', data.email)\r\n        formData.append('description', data.description)\r\n        dispatch(ContactAction(formData, setLoading))\r\n    }\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>Contact</span>\r\n                            <h3 className=\"mt-3 mb-0\">Get In Touch</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form id=\"contact-form\" className=\"item-form card no-hover\" onSubmit={handleSubmit(OnSubmit)} >\r\n                            {loading ? (\r\n                                <Loader />\r\n                            ) : (\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name\"  {...register(\"name\", { required: true })}\r\n                                                aria-invalid={errors.name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Name is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" {...register(\"email\", { required: true })}\r\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.email?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Email is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"subject\" placeholder=\"Subject\"  {...register(\"subject\", { required: true })}\r\n                                                aria-invalid={errors.subject ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.subject?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Subject is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <textarea className=\"form-control\" name=\"message\" placeholder=\"Message\" cols={30} rows={3} defaultValue={\"\"}  {...register(\"description\", { required: true })}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Message is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\"><i className=\"icon-paper-plane mr-2\" />Send Message</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </form>\r\n                        <p className=\"form-message\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Contact;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { postContact } from \"../Slices/contactSlice\";\r\nexport const ContactAction = (params, setLoading) => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/contact-us/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(postContact(res));\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", res.data.message, 'success')\r\n                .then(function () {\r\n                    window.location = \"/\";\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport ContactSection from '../components/Contact/Contact';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst Contact = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ContactSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Contact;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ForgotPasswordAction, LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { forgotpassword, message, statusCode } = useSelector(state => {\r\n        // \r\n        return state.forgotpassword\r\n    })\r\n\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        dispatch(ForgotPasswordAction(data)).then(() => {\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors?.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div>{errors.username && errors.username.message}</div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Send Reset Link</button>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                    <hr />\r\n                                    <div className=\"other-option\">\r\n                                        Social Icons\r\n                                        <div className=\"social-icons d-flex justify-content-center\">\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <a key={`lsd_${idx}`} className={item.link} href=\"#\">\r\n                                                        <i className={item.icon} />\r\n                                                        <i className={item.icon} />\r\n                                                    </a>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport ForgotPassword from '../components/ForgotPassword/forgotPassword';\r\n\r\nconst Forgot = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ForgotPassword />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forgot\r\n","export const TOKEN_KEY = localStorage.getItem('authToken')\r\n\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"authToken\");\r\n}\r\n\r\nexport const isLogin = () => {\r\n  return TOKEN_KEY ? true : false\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from './utils';\r\n\r\nconst PrivateRoute = ({ component: Component, restricted, ...rest }) => {\r\n    // const isLog = isLogin()\r\n    // \r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Redirect to=\"/\" />\r\n                : <Component {...props} />\r\n\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Geonames from \"geonames.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nconst geonames = new Geonames({\r\n    username: \"fullstackdeveloper91\",\r\n    lan: \"en\",\r\n    encoding: \"JSON\"\r\n});\r\n// const useStyles = makeStyles(theme => ({\r\n//     formControl: {\r\n//         minWidth: \"100%\",\r\n//         // background: 'black',\r\n//         // color: \"#FFF\"\r\n//     },\r\n//     selectEmpty: {\r\n//         marginTop: theme.spacing(2)\r\n//     }\r\n// }));\r\nexport default function GeoLocation(props) {\r\n    // const classes = useStyles();\r\n    const { locationTitle, geoId, onChange, isCountry } = props;\r\n    const [options, setOptions] = useState([]);\r\n    // console.log(options, 'opttt')\r\n    const [currentItem, setCurrentItem] = useState(\"\");\r\n    const [labelWidth, setLabelWidth] = useState(0);\r\n    useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n        {\r\n            !currentItem && (\r\n                setCurrentItem(props?.selected)\r\n            )\r\n        }\r\n    }, [props]);\r\n    // http://api.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en\r\n    // https://secure.geonames.org/countryInfoJSON?username=jhon_doe&lang=en\r\n    useEffect(() => {\r\n        try {\r\n            const data = async () => {\r\n                (await isCountry)\r\n                    ? axios?.get(`https://secure.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en`)?.then(res => {\r\n                        // \r\n                        setOptions(res);\r\n                        console.log(res, \"countries\")\r\n                    })\r\n                    // \"https://secure.geonames.org/childrenJSON?geonameId=\" + id\r\n                    : axios?.get(`https://secure.geonames.org/childrenJSON?username=fullstackdeveloper91&lang=en&geonameId=${geoId}`)?.then(res => {\r\n                        setOptions(res);\r\n                        console.log(res, \"cities\")\r\n                    });\r\n            };\r\n            data();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }, [geoId, isCountry]);\r\n    const inputLabel = useRef(null);\r\n    const handleChange = e => {\r\n        setCurrentItem(e.target.value);\r\n        onChange(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <form >\r\n            <label ref={inputLabel} id=\"demo-simple-select-outlined-label\" style={{ display: 'none' }}>\r\n                {locationTitle}\r\n            </label>\r\n            <select\r\n                label=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={currentItem}\r\n                onChange={handleChange}\r\n                labelWidth={labelWidth}\r\n            >\r\n                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select </option>\r\n                {options?.data?.geonames?.map((v, index) => (\r\n                    <option key={index} value={v?.geonameId}>\r\n                        {isCountry ? v?.countryName : v?.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </form>\r\n    );\r\n}\r\nGeoLocation.propTypes = {\r\n    locationTitle: PropTypes.string,\r\n    geoId: PropTypes.node,\r\n    isCountry: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\nGeoLocation.defaultProps = {\r\n    onChange: undefined\r\n};","// import { getValue } from '@mui/system';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { CategoriesAction, ProjectDetail, UpdateProject } from '../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\nimport GeoLocation from '../components/Create/geoLocation';\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../redux/Actions/authAction';\r\n\r\nconst EditProject = () => {\r\n    const editor = useRef(null);\r\n    const [country, setCountry] = useState();\r\n    console.log(country)\r\n    const [state, setState] = useState();\r\n    const [city, setCity] = useState();\r\n    const [description, setDescription] = useState();\r\n    // const [descriptionup, setDescriptionup] = useState();\r\n    // console.log(descriptionup, 'discup')\r\n    const [type, setType] = useState();\r\n    const { id } = useParams();\r\n    // console.log(id, \"idd\")\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    const dis = projdetail.description\r\n    // setDescriptionup(dis)\r\n    // console.log(dis, 'dis')\r\n    // console.log(projdetail, \"gfgfhghgghhgh\")\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n\r\n    }, [id])\r\n    const config = {\r\n        placeholderText: 'Edit Your Content Here!',\r\n        charCounterCount: false\r\n    }\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(first)\r\n\r\n    // console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            // const formData = new FormData()\r\n            // // formData.append('country_id', event?.currentTarget?.value)\r\n            // formData.append('country_id', projdetail.country)\r\n            // dispatch(StateList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n\r\n        dispatch(UpdateProject(id, formData))\r\n    }\r\n\r\n\r\n\r\n        const disablePastDate = () => {\r\n            const today = new Date();\r\n            const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n            const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n            const yyyy = today.getFullYear();\r\n            return yyyy + \"-\" + mm + \"-\" + dd;\r\n        };\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    // console.log(cat, 'cat')\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n    const handleChangeCountry = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n        const formData = new FormData()\r\n        // formData.append('country_id', event?.currentTarget?.value)\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    return (\r\n        // <Modal\r\n        //     {...props}\r\n        //     size=\"lg\"\r\n        //     aria-labelledby=\"contained-modal\"\r\n        //     centered\r\n        // >\r\n        //     <Modal.Header closeButton>\r\n        //         <Modal.Title id=\"contained-modal\">\r\n        //             Collection\r\n        //         </Modal.Title>\r\n        //     </Modal.Header>\r\n        //     <Modal.Body>\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n                    <div className=\"col-12 col-md-7\">\r\n                        <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Get Started</span>\r\n                                <h3 className=\"mt-3 mb-0\">Update Project</h3>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"2\" onChange={(e) => setType(e.target.value)} {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                        </div>\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"1\" onChange={(e) => setType(e.target.value)}  {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {/* {type == 1 && ( */}\r\n\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Project name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"title\"\r\n                                            placeholder=\"Project name\"\r\n                                            {...register(\"title\", { required: true })}\r\n                                            aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                                    </div>\r\n                                    {/* )} */}\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Web address</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"address\"\r\n                                            placeholder=\"Web Address\"\r\n                                            {...register(\"address\", { required: true })}\r\n                                            aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <label>Description</label>\r\n                                    <div className=\"form-group\">\r\n                                        {/* <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"textarea\"\r\n                                            // data-provide=\"markdown-editable\" rows=\"10\"\r\n                                            placeholder=\"Description\"\r\n                                            cols={30}\r\n                                            {...register(\"description\", { required: true })}\r\n                                            aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        /> */}\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n                                            render={({ field: { value, onChange } }) => {\r\n                                                return <JoditEditor\r\n                                                    ref={editor}\r\n                                                    value={value}\r\n                                                    // config={config}\r\n\r\n                                                    placeholder=\"start typing\"\r\n                                                    tabIndex={1} // tabIndex of textarea\r\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                    onChange={newContent => { }}\r\n                                                />\r\n                                            }}\r\n                                        />\r\n                                        {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                        {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"country\"\r\n                                                    {...register(\"country\", { required: true })}\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeCountry()\r\n                                                    }>\r\n\r\n                                                    aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                        Select your country</option>\r\n                                                    {countries?.data?.data?.map((option, key) => (\r\n                                                        <>\r\n                                                            <option key={key.id} value={option.id} >\r\n\r\n                                                                {option.name}\r\n\r\n                                                            </option>\r\n                                                        </>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"state\"\r\n\r\n                                                    {...register(\"state\", { required: true })}\r\n                                                    //  onChange={handleChangeState}\r\n\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeState\r\n                                                    } >\r\n                                                    aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state</option>\r\n                                                    {states?.data?.data?.map((option, key) => (\r\n\r\n                                                        <><option key={key.id} value={option.id}  >\r\n                                                            {option.name}\r\n                                                        </option></>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>City or Region</label>\r\n\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}>\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        {type == 2 ? (\r\n\r\n                                            <label>Price</label>\r\n                                        ) : (\r\n\r\n                                            <label>Price per NFT</label>\r\n                                        )}\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"price\"\r\n                                            placeholder=\"Price\"\r\n                                            {...register(\"price\", { required: true })}\r\n                                            aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Number of NFTs</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"number_of_nft\"\r\n                                            defaultValue={1}\r\n                                            disabled={type == 1}\r\n                                            placeholder=\"Select your number of NFTs (1-10)\"\r\n                                            min={1}\r\n                                            max={10}\r\n                                            {...register(\"number_of_nft\", { required: true })}\r\n                                            aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                        {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {type == 2 && (\r\n\r\n                                    <><div className=\"col-12 col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Campaign Start date</label>\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control\"\r\n                                                name=\"start_date\"\r\n                                                min={disablePastDate()}\r\n                                                // placeholder=\"Start date\"\r\n                                                {...register(\"start_date\", { required: true })}\r\n                                                aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                            {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                        </div>\r\n                                    </div><div className=\"col-12 col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Campaign End Date</label>\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"end_date\"\r\n                                                    min={disablePastDate()}\r\n                                                    // placeholder=\"End date\"\r\n                                                    {...register(\"end_date\", { required: true })}\r\n                                                    aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                                {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                            </div>\r\n                                        </div></>\r\n                                )}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category</label>\r\n                                        <select name=\"annual_revenue_range\"\r\n                                            // defaultValue={}\r\n                                            {...register(\"category_id\")}>\r\n                                            {cat?.map((option, key) => (\r\n\r\n                                                <option key={key.id} value={option.id}  >\r\n                                                    {option.title}\r\n\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        //     </Modal.Body>\r\n        // </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default EditProject;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport EditProject from '../Edit/editProject';\r\n\r\nconst ProjectUpdate = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <EditProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjectUpdate;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst TermsConditions = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter())\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{footer?.footer?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: footer?.footer?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default TermsConditions","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport TermsConditions from '../components/Footer/t&c';\r\n\r\n\r\nconst TermsCond = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <TermsConditions />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TermsCond\r\n","import React, { Component, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  CategoriesAction,\r\n  getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\n\r\nconst projectTypesMap = {\r\n  LatestProjects: 2,\r\n  RecentCampaigns: 1,\r\n};\r\n\r\nconst ExploreAll = () => {\r\n  const { type } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const liveProjects = useSelector((state) => {\r\n    return state?.projectdetails?.liveProjects[type];\r\n  });\r\n  console.log(liveProjects?.nft_data?.image, \"live\");\r\n\r\n\r\n  useEffect(() => {\r\n    //\r\n    dispatch(\r\n      getPublicLiveProjects({\r\n        cursor: 1,\r\n        type: projectTypesMap[type],\r\n        projectType: type,\r\n      })\r\n    );\r\n  }, [dispatch, type]);\r\n\r\n  return (\r\n    <section className=\"explore-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-8 col-lg-7\">\r\n            <div className=\"intro text-center mb-4\">\r\n              <h3 className=\"mt-3 mb-0\">\r\n                {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}\r\n              </h3>\r\n              <p>\r\n                Invest in NFTs that are based on real-life projects or events\r\n                related to important causes\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row items explore-items h-auto\">\r\n          {liveProjects && liveProjects.length ? (\r\n            [\r\n              ...new Map(\r\n                liveProjects?.map((item) => [item[\"title\"], item])\r\n              ).values(),\r\n            ].map((item, idx) => {\r\n              return (\r\n                <Link\r\n                  key={`edth_${idx}`}\r\n                  className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                >\r\n                  <div>\r\n                    <Link to={`/projects/${item.slug}`}>\r\n                      <div className=\"card\">\r\n                        <div className=\"image-over\">\r\n                          <Link to={`/projects/${item.slug}`}>\r\n                            <img\r\n                              className=\"card-img-top\"\r\n                              src={item.image}\r\n                              alt=\"\"\r\n                            />\r\n                          </Link>\r\n                          {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                        </div>\r\n\r\n                        <div className=\"card-caption col-12 p-0\">\r\n                          {/* Card Body */}\r\n                          <div className=\"card-body\">\r\n                            {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                            {/* <a > */}\r\n                            <h5 className=\"mb-0\">\r\n                              {item.title.slice(0, 15)}\r\n                            </h5>\r\n                            {/* </a> */}\r\n                            <div\r\n                              className=\"seller d-flex align-items-center my-3\"\r\n\r\n                            >\r\n                              <span>Owned By</span>\r\n                              {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                              {/* <a > */}\r\n                              <h6 className=\"ml-2 mb-0\">\r\n                                {item.user_data.username.slice(0, 12)}\r\n                              </h6>\r\n                              {/* </a> */}\r\n\r\n                              {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                            </div>\r\n                            <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                              <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                              {item?.number_of_nft == 1 ? (\r\n                                <span>{item.number_of_nft} NFT</span>\r\n                              ) : (\r\n                                <span>{item.number_of_nft} NFTs</span>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                              <Link to={`/projects/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                <i className=\"icon-handbag\" />\r\n                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                              </Link>\r\n                              <Link to={`/projects/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"col-12 col-sm-12 col-lg-12\">\r\n              <h2 className=\"allproj2\">No latest project found</h2>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default ExploreAll;\r\n","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreAll from '../components/Explore/viewAllLatest';\r\n\r\nconst All = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ExploreAll type=\"Latest Projects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default All;","import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst AllCollections = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state.collection.collection\r\n    })\r\n    // console.log(coll, \"coll\")\r\n    useEffect(() => {\r\n\r\n        dispatch(PopularCollectionAction())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center mb-4\">\r\n\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center text-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* Explore Menu */}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items explore-items h-auto\">\r\n                        {coll && coll.length ?\r\n                            [...new Map(coll?.map(item =>\r\n                                [item[\"title\"], item])).values()]?.map((item, idx) => {\r\n                                    return (\r\n                                        <Link key={`edth_${idx}`} to={`/popularcollection/details/${item.slug}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\" >\r\n                                            <div>\r\n                                                <div className=\"card position-relative \">\r\n                                                    <div className=\"image-over \">\r\n                                                        <img className=\"card-img-top\" src={item.image} />\r\n                                                    </div>\r\n\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <a>\r\n                                                                <h5 className=\"mb-0 mt-3\">{item.title.slice(0, 15)}...</h5>\r\n                                                            </a>\r\n\r\n                                                            <div class=\"\"><p>{item.description.slice(0, 50)}...</p></div>\r\n\r\n                                                            <div class=\"mb-2 align-items-center justify-content-between\">\r\n                                                                <div class=\"mt-2 mb-2 d-flex justify-content-between text-align-center fundraiser_sale\">\r\n                                                                    {item?.nft_data.length == 1 ? (\r\n\r\n                                                                        <span>{item.nft_data.length} NFT</span>\r\n                                                                    ) : (\r\n                                                                        <span>{item.nft_data.length} NFTs</span>\r\n                                                                    )\r\n\r\n                                                                    }\r\n                                                                    {/* <span>Total NFTs</span>\r\n                                                                    <span>{item.nft_data.length}</span> */}\r\n\r\n                                                                    {/* <div>\r\n                                                                        <span>Sale</span>\r\n                                                                        <div>100</div>\r\n                                                                    </div> */}\r\n                                                                </div>\r\n                                                                {/* <span class=\"share\">\r\n                                                                    <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\"></path></svg>\r\n                                                                </span> */}\r\n                                                            </div>\r\n                                                            {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span style={{ color: '#8E8E8E' }}>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\">{item?.user_data?.username}</h6>\r\n                                                                </a>\r\n                                                            </div> */}\r\n\r\n\r\n                                                            {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div> */}\r\n                                                            {/* <div>\r\n                                                                {item.status == '1' ?\r\n                                                                    <Button>Donation</Button>\r\n                                                                    :\r\n\r\n                                                                    <Button>Product Sale</Button>\r\n                                                                }\r\n                                                            </div> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                            <div className=\"col-12 col-sm-12 col-lg-12 no-data\">\r\n                                <h2>\r\n                                    No Popular Collections\r\n                                </h2>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default AllCollections; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AllCollections from '../components/Collections/exploreCollection';\r\n\r\nconst ColExplore = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AllCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ColExplore;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AboutUsAction, getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst AboutUs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const about = useSelector(state => {\r\n        return state.footer.aboutus\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(AboutUsAction())\r\n    }, [])\r\n    // console.log(about, 'footerabout')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{about?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: about?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AboutUs","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AboutUs from '../components/Footer/about';\r\n\r\nconst Aboutus = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AboutUs />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Aboutus;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ReferalPopup(props) {\r\n    const location = useLocation();\r\n    const [copy, setCopy] = useState(false)\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n    const url = window.location.href + `?refid=${props.userRef}`\r\n    const userprojurl = `https://app.karmatica.io/projects/${props.id}` + `?refid=${props.userRef}`\r\n    console.log(userprojurl)\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header className=' align-items-start'>\r\n                {window.ethereum?.selectedAddress ? (\r\n\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Refer your friends\r\n                        <p>Earn Royalties When You Share: <br />30% of NFTs for first level and 5% for secondary referrals.</p>\r\n\r\n\r\n                    </Modal.Title>\r\n                ) : (\r\n                    <Modal.Title id=\"contained-modal-title-vcenter \">\r\n\r\n                        <p>Earn When You Share: <br />30% of NFT sales for first level referral </p>\r\n                        <p style={{ color: \"red\" }}>Connect your wallet to earn referral income in MATIC when you share projects</p>\r\n\r\n\r\n                    </Modal.Title>\r\n                )}\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className='refer-frnd'>\r\n                <form className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-10 p-0\">\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                {/* <label>Display name</label> */}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"display_name\"\r\n                                    value={location.pathname === `/projnftdetails/${props.id}` ? userprojurl : url}\r\n                                    disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}\r\n                                // required\r\n                                // placeholder=\"Enter collection name\"\r\n                                // {...register('title')}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n\r\n                            </div>\r\n                            {/* <FacebookShareCount url={\"shareUrl\"}>\r\n                            {shareCount => <span className=\"myShareCountWrapper\">{shareCount}</span>}\r\n                        </FacebookShareCount> */}\r\n\r\n\r\n                            <hr />\r\n                            <div className=\"refer-icons\">\r\n                                {location.pathname === `/projnftdetails/${props.id}` ? (\r\n                                    <>  <TwitterShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                        <FacebookShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                        <WhatsappShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                        <TelegramShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                        <InstapaperShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" >  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                        <LinkedinShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                        <EmailShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><EmailIcon size={32} round={true} /></EmailShareButton></>\r\n                                ) : (\r\n\r\n                                    <><TwitterShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                        <FacebookShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                        <WhatsappShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                        <TelegramShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                        <InstapaperShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\">  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                        <LinkedinShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                        <EmailShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><EmailIcon size={32} round={true} /></EmailShareButton></>\r\n                                )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 p-0 text-right\">\r\n                            {location.pathname === `/projnftdetails/${props.id}` ? (\r\n                                <CopyToClipboard text={userprojurl} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                            ) : (\r\n\r\n                                <CopyToClipboard text={url} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                            )}\r\n                            {copy == true &&\r\n                                <span className='copytext'>Copied!</span>\r\n\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ReferalPopup","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNft = (props) => {\r\n    // debugger\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id, props.id))\r\n    }, [props.nft_id, props.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\" >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div>\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                    <Fragment>\r\n\r\n                                                        <div className=\"row relative\">\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  name',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  description',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={'nft_description'}\r\n\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n\r\n                                                                            onChange={newContent => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            <div className='col-12'>\r\n                                                                <label className='mt-2 mb-3'>Choose Collection</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n\r\n\r\n                                                                <div className=\"form-group\">\r\n\r\n                                                                    <div className=\"card choose_div\" style={{\r\n                                                                        background: \"black\",\r\n                                                                        marginBottom: \"8px\",\r\n                                                                    }}>\r\n                                                                        <div className=\"card-body \">\r\n                                                                            <Button variant=\"primary\" className='collection_btn' onClick={() => setModalShowcoll(true)}>\r\n                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n                                                                            </Button>\r\n\r\n                                                                            <CollPopup\r\n                                                                                show={modalShowcoll}\r\n                                                                                onHide={() => setModalShowcoll(false)} />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            {col?.map((item, idx) => (\r\n\r\n                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-6 col-lg-3 col-12 choose_div\">\r\n\r\n\r\n\r\n                                                                    <div id={item.id} onClick={() => setNft_collection_id(item.id)} className=\"card\"\r\n                                                                        style={{\r\n                                                                            background: \"black\",\r\n                                                                            marginBottom: \"8px\",\r\n                                                                            border: nft_collection_id == item.id ? \"1px solid #fff\" : null\r\n                                                                        }}>\r\n                                                                        <div className=\"card-body\">\r\n                                                                            <div>\r\n\r\n\r\n                                                                                {item.title}\r\n                                                                            </div>\r\n\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n\r\n                                                            ))}\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                    <div\r\n                                                                        className=\"position-relative upload_nft\"\r\n                                                                        style={{\r\n                                                                            backgroundImage: \"url('')\",\r\n                                                                            backgroundSize: \"contain\",\r\n                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                        }}\r\n                                                                    >\r\n\r\n                                                                        <div\r\n                                                                            className={\r\n                                                                                nftFileType === \"Player\" || nftFileType === \"modal\"\r\n                                                                                    ? \" inputdragVedio\"\r\n                                                                                    : \"inputtdrag\"\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <input\r\n                                                                                type=\"file\"\r\n                                                                                onChange={handleUpload}\r\n                                                                                maxCount={1}\r\n                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                            />\r\n\r\n                                                                            {(nftFileType === \"Image\") &&\r\n                                                                                <div>\r\n\r\n                                                                                    {source ? (\r\n\r\n                                                                                        <img\r\n                                                                                            src={source}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <img\r\n                                                                                            src={image}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    )}\r\n\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n                                                                            {nftFileType === \"Player\" &&\r\n                                                                                <div>\r\n\r\n                                                                                    {source ? (\r\n\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={source}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={image}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p>\r\n                                                                                            Because you’ve included\r\n                                                                                            multimedia, you’ll need to provide\r\n                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                            the card display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft}\r\n\r\n                                                                                                />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview}\r\n\r\n                                                                                                />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n\r\n\r\n\r\n                                                                            {nftFileType === \"modal\" &&\r\n                                                                                <div>\r\n                                                                                    {!source ? (\r\n                                                                                        <DModal\r\n                                                                                            vdo={image}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <DModal\r\n                                                                                            vdo={source}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p className=\"\">\r\n                                                                                            Because you’ve included multimedia,\r\n                                                                                            you’ll need to provide an image\r\n                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                            display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft} />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview} />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                        </div>\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const slug = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    useEffect(() => {\r\n        dispatch(NftList(props.slug?.id))\r\n        // dispatch(ProjectDetail(slug))\r\n    }, [props.slug?.id])\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n                        <thead>\r\n                            {/* {latprojnftdetail?.map((items) => { \r\n                         return (  */}\r\n\r\n                            <><tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr><tr className='contract-address'>\r\n                                    <th >Contract</th>\r\n                                    <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${nftdetail?.collectionData?.contract_id}`} >{nftdetail.collectionData?.contract_id?.slice(0, 5)}.....{nftdetail.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                </tr><tr>\r\n                                    <th>Token ID</th>\r\n                                    <td>{nftdetail.token_id}</td>\r\n                                </tr><tr>\r\n                                    <th>Token Stranded</th>\r\n                                    <td>ERC721</td>\r\n                                </tr></>\r\n\r\n                            {/* )})} */}\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* {projdetail.nft_data?.map((items) => { */}\r\n                            {/* // return ( */}\r\n                            <tr>\r\n\r\n                                <td>\r\n                                    {/* {items.collectionData?.contract_id} */}\r\n                                </td>\r\n                                <td>\r\n                                    {/* {items.token_id} */}\r\n                                </td>\r\n                                {/* <td>ERC721</td> */}\r\n                                {/* <td>Polygon (Matic)</td> */}\r\n                            </tr>\r\n                            {/* // ) */}\r\n                            {/* })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n                {/* <div className='nothing'>\r\n                No matching records found\r\n                        </div> */}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftdataTable","import axios from \"axios\";\r\n\r\nexport const GetMatic = async (setMatic) => {\r\n\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\r\n            config\r\n        )\r\n        setMatic(res?.data)\r\n        console.log('res', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, LatestProjectDetail, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport { BuyNft } from '../Wallet/interact';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport MyVerticallyCenteredModal from './refralPopup';\r\nimport swal from 'sweetalert';\r\nimport Banner from '../Create/editBanner';\r\nimport EditNft from '../Create/editNft';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport latNftdataTable from './../Explore/latProjNftdata';\r\nimport LatNftdataTable from './../Explore/latProjNftdata';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReferalPopup from './refralPopup';\r\nimport ReadMore from '../../readMore';\r\nimport { GetMatic } from './GetMAtic';\r\nimport FormItem from 'antd/es/form/FormItem';\r\nimport { useLocation } from \"react-router-dom\";\r\nconst ProjDetails = () => {\r\n\r\n\r\n    const { slug } = useParams();\r\n    const search = useLocation().search;\r\n    const refid = new URLSearchParams(search).get('refid');\r\n    console.log(refid, 'refid')\r\n    const [tok, setTok] = useState('')\r\n    // console.log('tok', tok)\r\n    const dispatch = useDispatch()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    // const [matic, setmatic] = useState('')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(\"latround\", Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad)))\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    console.log('latproj', latprojdetail?.nft_data)\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n\r\n\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(LatestProjectDetail(slug))\r\n        dispatch(GetUserAction())\r\n\r\n    }, [slug])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className='col-12'>\r\n                        <span className=\"p-0 title_main\">{latprojdetail.title}</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <><div>\r\n                                    {latprojdetail?.user_data?.user_id === userdet?.user_id && localStorage.getItem('authToken') &&\r\n                                        <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() => setModalShow(true)}></i>\r\n\r\n\r\n                                    }\r\n                                    <Banner\r\n                                        id={slug}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div><img src={latprojdetail?.image} alt=\"first nft\" /></>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"fundraiser mt-4 \">\r\n                            <div className='lorem_done'>\r\n                                <img width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" src={latprojdetail?.user_data?.organization_detail?.logo} />\r\n                                {/* <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg> */}\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 col-12 mt-4 mt-lg-0\">\r\n                        <div className='proj-left user_icon'>\r\n                            <div className=\"progress_nft \">\r\n                                <div className='progress_main '><span>\r\n                                    {/* ({Number(latprojdetail.project_count) * Number(matic['matic-network']?.cad)} of {Number(latprojdetail.price) * Number(Math.round(matic['matic-network']?.cad))} MATIC ) */}\r\n                                    <span className='nft_price'>${Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad))} raised of ${Math.round(Number(latprojdetail.price)) * Number(Math.round(matic['matic-network']?.cad))} Cdn Goal</span>\r\n                                    <div>\r\n\r\n                                        {/* ${Math.round(latprojdetail.project_count)} raised of ${Math.round(latprojdetail.price)} Cdn Goal */}\r\n                                        <span className='nft_price'>({Math.round(latprojdetail.project_count)} of {Math.round(latprojdetail.price)} MATIC) </span>\r\n                                    </div>\r\n                                    {/* <span className='nft_price'>{latprojdetail.project_count} raised of {latprojdetail.price} Cdn goal (150 of 758 MATIC)</span><small>  </small> */}\r\n                                    <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                    </div>\r\n                                    <p className='donation-count'> ${latprojdetail.project_count} RAISED</p>\r\n                                </span>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex flex-wrap gap-5 justify-content-start\">\r\n\r\n\r\n                                    <>\r\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Invest\r\n                                        </Button>\r\n\r\n\r\n\r\n                                        </a>\r\n                                        <Button className=\"btn sm:ml-2 btn-bordered-white m-0\" variant=\"primary\" onClick={() => setModalShowrefer(true)}>\r\n\r\n\r\n                                            Share\r\n                                        </Button><ReferalPopup\r\n                                            id={slug}\r\n                                            userRef={userDetail}\r\n                                            show={modalShowrefer}\r\n                                            onHide={() => setModalShowrefer(false)} /></>\r\n\r\n\r\n                                </div>\r\n                                {latprojdetail?.user_invest && latprojdetail?.user_invest?.length ?\r\n                                    [...new Map(latprojdetail?.user_invest?.slice(0, 3)?.map(item =>\r\n                                        [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                            const date1 = new Date(item.updated_at)\r\n                                            const date2 = new Date()\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            console.log('days', days_difference)\r\n                                            return (\r\n                                                <ul className=\"m-0 custom_lis pl-0 \">\r\n                                                    <li>\r\n                                                        <div className='lorem_done p-0'>\r\n                                                            <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                            </svg>\r\n                                                            </span>\r\n\r\n                                                            <span><div className=\"progress_name\">{item.username} </div> <div> ${item.price} Cdn / {Math.round(Number(latprojdetail.price) * Number(matic['matic-network']?.cad))} MATIC ({days_difference} days ago)</div></span>\r\n                                                        </div>\r\n                                                    </li>\r\n\r\n\r\n                                                </ul>\r\n                                            )\r\n                                        }) :\r\n                                    <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\r\n\r\n                                        <span className='allproj2 w-100'>\r\n                                            No user has invested yet\r\n                                        </span>\r\n\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n\t\t\t\t\t\t<i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={latprojdetail.description} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-4'>\r\n\r\n\r\n                        <div className='table-main-detail position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-12'>\r\n                        <div className='mt-4'>\r\n                            <div className='table-detail'>\r\n                                <LatNftdataTable />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\" col-12 mt-4\">\r\n                        <div id=\"invest\" className=\"items mt-0 explore-items p-0\">\r\n                            <ProjNFTS\r\n                                refid={refid}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ProjDetails from '../components/ItemDetails/viewProdetails';\r\n\r\n\r\nconst latprojDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ProjDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default latprojDetails;","import React, { useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { GetCollectionsAction } from '../../redux/Actions/projectAction'\r\n\r\nconst ShowCollections = () => {\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    // const val = localStorage.getItem(\"values\")\r\n    // console.log(val.address, 'vall')\r\n    // console.log(col, 'col')\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n    }, [])\r\n    // useEffect(() => {\r\n\r\n    // })\r\n    // var dat = localStorage.getItem(\"values\");\r\n    // dat = JSON.parse(dat);\r\n    // console.log('dat', dat?.nfts[0]?.image?.fileList[0]?.thumbUrl)\r\n    // console.log('valus', localStorage.getItem('values', 'address'))\r\n    // localStorage.setItem(\"values\", JSON.stringify({\r\n    //     ...data,\r\n    //     nfts: values.nfts.map(x => {\r\n    //         return {\r\n    //             name: x.name,\r\n    //             description: x.description,\r\n    //             image: x.image,\r\n    //         }\r\n    //     })\r\n    // }));\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <span>Explore</span>\r\n                            <h3 className=\"mt-3 mb-0\">My Collections</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {/* {val?.map((item, idx) => { */}\r\n                    {/* return ( */}\r\n                    <Link to={`/collection/${''}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                        <div>\r\n                            <div className=\"card\">\r\n                                <div className=\"image-over\">\r\n                                    {/* <Link to={`/collection/${''}`}> */}\r\n                                    <img className=\"card-img-top\" src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                                    {/* </Link> */}\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 p-0\">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-0\">{col.name}</h5>\r\n                                        </a>\r\n                                        <div className=\"seller d-flex align-items-center my-3\">\r\n                                            <span style={{ color: '#8E8E8E' }}>{col?.nfts?.[0]?.name}</span>\r\n                                            <a href=\"/author\">\r\n                                                <h6 className=\"ml-2 mb-0\"> </h6>\r\n                                            </a>\r\n                                        </div>\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n\r\n                                            <span> {col.price}</span>\r\n                                            <span> {col.number_of_nft}</span>\r\n                                        </div>\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />dfg</a> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                    {/* ) */}\r\n                    {/* })} */}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ShowCollections","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ShowCollections from '../components/Create/showCollections';\r\n\r\nconst Showcollections = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ShowCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Showcollections;","import React, { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\nconst CollItem = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch()\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    // console.log(projdetail, 'projdata')\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    {/* Explore Menu */}\r\n                    <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row items explore-items\">\r\n                {Object.keys(projdetail).map((item, idx) => {\r\n                    // {projdetail?.map((item, idx) => {\r\n                    return (\r\n                        <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" >\r\n                            <div className=\"card no-hover text-center\">\r\n                                <div className=\"image-over\">\r\n                                    <a href=\"/item-details\">\r\n                                        {/* <img className=\"card-img-top\" src={item.img} alt=\"\" /> */}\r\n                                    </a>\r\n                                    {/* Author */}\r\n                                    <a className=\"author\" href=\"/authors\">\r\n                                        <div className=\"author-thumb avatar-lg\">\r\n                                            <img className=\"rounded-circle\" src={item?.nft_data?.title} alt=\"\" />\r\n                                        </div>\r\n                                    </a>\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 \">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body mt-4\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-2\">{item?.nft_data?.title}</h5>\r\n                                        </a>\r\n                                        {/* <span>{item.content}</span> */}\r\n                                        <hr />\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                            {/* <span>{item.price}</span> */}\r\n                                            {/* <span><i className=\"icon-heart mr-2\" />{item.likes}</span> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CollItem;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetCollectionDetails, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Author from '../Author/Author';\r\nimport CollItem from './bread-crumb';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst CollectionDetails = () => {\r\n\r\n    const initData = {\r\n        itemImg: \"/img/avtar1.png\",\r\n        date: \"2022-03-30\",\r\n        tab_1: \"Bids\",\r\n        tab_2: \"History\",\r\n        tab_3: \"Details\",\r\n        ownerImg: \"/img/avtar1.png\",\r\n        itemOwner: \"Themeland\",\r\n        created: \"15 Jul 2021\",\r\n        title: \"Walking On Air\",\r\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n        price_1: \"1.5 ETH\",\r\n        price_2: \"$500.89\",\r\n        count: \"1 of 5\",\r\n        size: \"14000 x 14000 px\",\r\n        volume: \"64.1\",\r\n        highest_bid: \"2.9 BNB\",\r\n        bid_count: \"1 of 5\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n    const tabData_1 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"14 ETH\",\r\n            time: \"4 hours ago\",\r\n            author: \"@arham\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"10 ETH\",\r\n            time: \"8 hours ago\",\r\n            author: \"@junaid\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"12 ETH\",\r\n            time: \"3 hours ago\",\r\n            author: \"@yasmin\"\r\n        }\r\n    ]\r\n\r\n    const tabData_2 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"32 ETH\",\r\n            time: \"10 hours ago\",\r\n            author: \"@hasan\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"24 ETH\",\r\n            time: \"6 hours ago\",\r\n            author: \"@artnox\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"29 ETH\",\r\n            time: \"12 hours ago\",\r\n            author: \"@meez\"\r\n        }\r\n    ]\r\n\r\n    const sellerData = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            seller: \"@ArtNoxStudio\",\r\n            post: \"Creator\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            seller: \"Virtual Worlds\",\r\n            post: \"Collection\"\r\n        }\r\n    ]\r\n\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coldetail = useSelector(state => {\r\n        return state?.projectdetails?.getcollectiondetails\r\n    })\r\n    // console.log(coldetail, 'coldetail')\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionDetails(id))\r\n    }, [id])\r\n\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(id))\r\n    // }\r\n\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n                                <img src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                            </div>\r\n\r\n\r\n                            </>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            <div className='d-flex  align-items-center justify-content-between'>\r\n                                <h3 className=\"m-0\">{coldetail.title}</h3>\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center '>\r\n                                    <Button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" variant=\"primary\" onClick={() => setModalShow(true)} style={{ color: '#FFF' }}>\r\n                                        Add item\r\n                                    </Button>\r\n\r\n                                    {/* <MyVerticallyCenteredModal\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    /> */}\r\n                                    {/* <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"> <Link to={\"\"} style={{ color: '#FFF' }}>Add item</Link></a> */}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                          <ReadMore data={coldetail?.description} />\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <CollItem />\r\n                </div>\r\n            </div >\r\n\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default CollectionDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Create/collectionDetail';\r\n\r\n\r\nconst CollectionDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <CollectionDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CollectionDetail;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { useParams } from 'react-router';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction DesPopup(props) {\r\n    const editor = useRef(null);\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const [country, setCountry] = useState()\r\n    const [type, setType] = useState()\r\n    const dispatch = useDispatch()\r\n    const slug = useParams()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n\r\n    // const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            setDescription(projdetail.description)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n        dispatch(UpdateProject(props.id, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12\">\r\n                            <label>Description</label>\r\n                            <div className=\"form-group\">\r\n\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"description\"\r\n                                    defaultValue=\"\"\r\n                                    render={({ field: { value, onChange } }) => {\r\n                                        return <JoditEditor\r\n                                            ref={editor}\r\n                                            value={value}\r\n                                            // config={config}\r\n\r\n                                            placeholder=\"start typing\"\r\n                                            tabIndex={1} // tabIndex of textarea\r\n                                            onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                            onChange={newContent => { }}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                                {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default DesPopup","import React, { useEffect, useState } from 'react';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport Banner from './editBanner';\r\nimport DesPopup from './desPopup';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReadMore from '../../readMore';\r\nimport { GetMatic } from '../ItemDetails/GetMAtic';\r\nimport ReferalPopup from '../ItemDetails/refralPopup';\r\nimport Swal from 'sweetalert2';\r\n\r\n// import ProgressBar from 'react-bootstrap';\r\n\r\nconst ProjNftDetails = () => {\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(slug))\r\n    // }\r\n\r\n    const { slug } = useParams()\r\n    // console.log(id, 'idd')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [matic, setmatic] = useState('')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [nftId, setNftID] = useState();\r\n    console.log('nftid', nftId)\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    const dispatch = useDispatch()\r\n    const [modalShowDes, setModalShowDes] = React.useState(false);\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    // console.log(projdetail?.nft_data && projdetail?.nft_data && projdetail?.nft_data.length && projdetail?.nft_data[0]?.is_mint, 'projdata')\r\n\r\n\r\n    useEffect((event) => {\r\n        (GetMatic(setmatic))\r\n        // event.preventDefault()\r\n        dispatch(ProjectDetail(slug))\r\n    }, [slug])\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(id))\r\n    // }\r\n    // \r\n    const bannerHandler = () => {\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail \">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <span className=\"my-2 p-0 title_main\">{projdetail.title}</span>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-8'>\r\n                        <div className=\"item-info\" >\r\n                            <div className=\"item-thumb text-center\">\r\n                                {/* {projdetail && projdetail?.nft_data && projdetail?.nft_data?.length ? */}\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() =>\r\n                                        setModalShow(true)}></i>\r\n                                    <Banner\r\n                                        id={slug}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div>\r\n                                <img src={projdetail?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"fundraiser mt-4 p-0\">\r\n                            <div className='lorem_done'>\r\n\r\n                                <img src={latprojdetail?.user_data?.organization_detail?.logo} width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" />\r\n                                {/* <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg> */}\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12 col-lg-4 mt-3 mt-lg-0'>\r\n                        <div className='progress_nft_main'>\r\n                            <div >\r\n                                <div className=\"progress_nft mb-3\">\r\n                                    <div className='progress_main'><span>\r\n                                        {/* ({Number(projdetail.project_count) * Number(matic['matic-network']?.cad)} of {Number(projdetail.price) * Number(Math.round(matic['matic-network']?.cad))} MATIC ) */}\r\n                                        <span className='nft_price'>${Number(projdetail.project_count) * Number(matic['matic-network']?.cad)} raised of ${Number(projdetail.price) * Number(Math.round(matic['matic-network']?.cad))} Cdn </span>\r\n                                        <div>\r\n                                            {/* <span className='nft_price'>{projdetail.project_count} raised of ${projdetail.price} Cdn </span> */}\r\n                                            <span className='nft_price'>({projdetail.project_count} of {projdetail.price} MATIC )</span>\r\n\r\n                                        </div>\r\n                                        <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" now={projdetail.project_percentage} />\r\n                                            {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                        </div>\r\n                                        <p className='donation-count'>${projdetail.project_count} Cdn RAISED</p>\r\n                                    </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex justify-content-start\">\r\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Invest\r\n                                        </Button>\r\n                                        </a>\r\n\r\n\r\n\r\n\r\n                                        {projdetail?.nft_data && projdetail?.nft_data && projdetail?.nft_data.length > 0 && projdetail?.nft_data[0]?.is_mint == 0 ? (\r\n\r\n                                            <Button className=\" btn  btn-bordered-white m-0 ml-2\" variant=\"primary\" onClick={() => Swal.fire(\r\n                                                'Please mint your NFTs',\r\n\r\n                                            )}>\r\n                                                Share\r\n                                            </Button>\r\n                                        ) : (\r\n                                            <>\r\n                                                <Button className=\" btn  btn-bordered-white m-0 mr-2\" onClick={() => setModalShowrefer(true)} variant=\"primary\">\r\n                                                    Share\r\n                                                </Button>\r\n                                                <ReferalPopup\r\n                                                    id={slug}\r\n                                                    userRef={userDetail}\r\n                                                    show={modalShowrefer}\r\n                                                    onHide={() => setModalShowrefer(false)} />\r\n                                            </>\r\n\r\n                                        )}\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    {projdetail?.user_invest && projdetail?.user_invest?.length ?\r\n                                        [...new Map(projdetail?.user_invest?.slice(0, 3)?.map(item =>\r\n                                            [item[\"title\"], item])).values()].map((item, idx) => {\r\n\r\n                                                // {projdetail.user_invest?.slice(0, 3)?.map((items) => {\r\n                                                const date1 = new Date(item.updated_at)\r\n                                                const date2 = new Date()\r\n                                                const time_difference = date2.getTime() - date1.getTime();\r\n                                                const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                console.log('days', days_difference)\r\n                                                return (\r\n\r\n                                                    <ul className=\"m-0 custom_lis pl-0\">\r\n                                                        <li>\r\n                                                            <div className='lorem_done p-0'>\r\n                                                                <span>\r\n\r\n                                                                    <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                    </svg>\r\n                                                                </span>\r\n                                                                <span><div className=\"progress_name\">{item.username} </div> <div>${item.price} Cdn / 40 MATIC ({days_difference} days ago)</div></span>\r\n                                                            </div>\r\n                                                        </li>\r\n\r\n\r\n                                                    </ul>\r\n                                                )\r\n                                            }) :\r\n                                        <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\r\n\r\n                                            <span className='allproj2  w-100'>\r\n                                                No user has invested yet\r\n                                            </span>\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-8 mt-4'>\r\n                        <div class=\"user-description\">\r\n\r\n                            <h5 className='user_title justify-content-between'>\r\n\r\n                                <div className='d-flex align-items-center gap-5'> <div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div></div>\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                        <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n                                {/* {projdetail?.status == 1 && (\r\n                                                            <div >\r\n\r\n                                                                <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a>\r\n                                                                <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            )} */}\r\n                                <div >\r\n                                    <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                        setModalShowDes(true)}></i>\r\n                                    <DesPopup\r\n                                        id={slug}\r\n                                        show={modalShowDes}\r\n                                        onHide={() => setModalShowDes(false)} />\r\n                                </div>\r\n                            </h5>\r\n                            <ReadMore data={projdetail.description} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: projdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-4'>\r\n                        <div className='container table-main-detail position-relative'>\r\n\r\n                            <ProjdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div className='col-12 mt-4'>\r\n                    <div className='container table-detail'>\r\n\r\n                        <LatNftdataTable\r\n\r\n                        />\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mt-4\">\r\n\r\n\r\n                    <div className='nfts_main' id='invest'>\r\n\r\n\r\n\r\n                        <div className='intro row m-0 p-0'>\r\n                            <div className=\"intro-content\">\r\n                                <span >NFTs</span>\r\n                                <h3 className=\"w-full mb-0 pt-4\">NFTs</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row items mt-0 explore-items px-0\">\r\n                            {projdetail.number_of_nft != projdetail?.nft_data?.length && (\r\n                                <div className='col-12 col-sm-6 col-lg-3 item explore-item'>\r\n                                    <div className='card no-hover m-0 add-nft '>\r\n\r\n\r\n                                        <div class=\"image-over relative\">\r\n\r\n\r\n\r\n                                            <Link to={`/addnft/${projdetail.slug}?projectid=${projdetail.id}`}>\r\n\r\n                                                + Add NFT </Link>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n\r\n                            {projdetail?.nft_data?.map((x, idx) => {\r\n                                // {projdetail?.map((item, idx) => {\r\n                                // const image_preview = URL.revokeObjectURL(x.preview_imag)\r\n                                return (\r\n                                    <div key={`eds_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item \">\r\n\r\n                                        <div className=\"card no-hover m-0\">\r\n\r\n\r\n\r\n                                            {/* <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                            <div className=\"image-over relative\">\r\n                                                {x.user_id == projdetail.user_id ? (\r\n                                                    <>\r\n                                                        {/* <Link to={`/nft/details/${x.slug}?project=${slug}`}> */}\r\n                                                        <Link to={`/nft/details/${x.slug}?project=${slug}`}>\r\n                                                            {x.extention === 'Player' || x.extention === 'modal' ? (\r\n\r\n                                                                <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\r\n                                                            ) : (\r\n                                                                <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                            )}\r\n                                                        </Link>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Link to={`/nft/details/${x.slug}?project=${slug}`}>\r\n                                                        {x.extention === 'Player' || x.extention === 'modal' ? (\r\n\r\n                                                            <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\r\n                                                        ) : (\r\n                                                            <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                        )}\r\n                                                    </Link>\r\n                                                )}\r\n                                                <div className='token'>\r\n                                                    <span>#{x?.token_id}</span>\r\n                                                    <span className='cards-icons'>\r\n                                                        {x.is_mint == 0 &&\r\n                                                            <Link to={`/nft/details/${x.slug}?project=${slug}`} ><i className=\"fa-solid fa-pen\" /></Link>\r\n                                                            // <div>\r\n                                                            //     <i className=\"fa-solid fa-pen\" \r\n                                                            //     onClick={(e) => {\r\n                                                            //         setNftID(x.slug)\r\n                                                            //         e.preventDefault();\r\n                                                            //         setModalShowedit(true)\r\n                                                            //     }\r\n                                                            //     } ></i>\r\n                                                            //     {modalShowedit &&\r\n\r\n                                                            //         <EditNft\r\n                                                            //             debugger\r\n                                                            //             id={slug}\r\n                                                            //             nft_id={nftId}\r\n                                                            //             show={modalShowedit}\r\n                                                            //             onHide={() => setModalShowedit(false)} />\r\n                                                            //     }\r\n                                                            // </div>\r\n                                                        }\r\n                                                    </span>\r\n                                                </div>\r\n                                                {/* Author */}\r\n\r\n                                            </div>\r\n                                            {/* Card Caption */}\r\n                                            <div className=\"card-caption px-0 col-12 \">\r\n                                                {/* Card Body */}\r\n                                                <div className=\"card-body\">\r\n\r\n                                                    <a href=\"#\" className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <h5 className=\"m-0 pb-2 p-0 text-capitalize\">{x.title.slice(0, 16)}...</h5>\r\n\r\n                                                    </a>\r\n                                                    {/* <div className='creater mt-1 mb-1'>\r\n                                                        <span >Creator:</span><span className='ml-2'>{x?.user_data?.username}</span>\r\n                                                    </div> */}\r\n                                                    <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\r\n                                                        <span className='align-self-start' dangerouslySetInnerHTML={{ __html: x.description.slice(0, 52) }} />\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className='mint d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price' >\r\n                                                        {x.is_mint == 0 ? (\r\n\r\n                                                            <button className='btn py-2 ml-lg-auto btn-bordered-white'>\r\n                                                                <Link to={`/nft/details/${x.slug}`}>Sell</Link>\r\n                                                            </button>\r\n                                                        ) : (\r\n\r\n                                                            <>\r\n                                                                {x.user_id !== projdetail.user_id ? (\r\n                                                                    <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>\r\n                                                                        <a >SOLD OUT</a>\r\n                                                                    </button>\r\n                                                                ) : (\r\n                                                                    <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>\r\n                                                                        <a >Minted</a>\r\n                                                                    </button>\r\n                                                                )}\r\n                                                            </>\r\n\r\n\r\n                                                        )}\r\n                                                        <a> <img className=\"mr-1\" src='../img/image14.png' />{x.amount}</a>\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    {/* <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\r\n                                                <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={`/nftprojdetails/${item.slug}`} style={{ color: \"white\" }}>Invest</Link></button></a>\r\n                                                <a> <img className=\"mr-1\" src='../img/image14.png' />{item.price}</a>\r\n                                            </div> */}\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default ProjNftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport ProjNftDetails from '../components/Create/projdetails';\r\n\r\nconst ProjNft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ProjNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjNft;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { set, useForm } from 'react-hook-form';\r\nimport 'antd/dist/antd.css';\r\nimport { Steps } from 'antd';\r\nimport { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined, CheckOutlined } from '@ant-design/icons'\r\nimport { useParams } from 'react-router';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n\r\nfunction NftPopup(props) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const { id } = useParams();\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n\r\n    const description = 'This is a description.';\r\n    function gettxhashAddress() {\r\n        // \r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n    // function getconfirmAddress() {\r\n    //     // \r\n    //     return web3.eth.getTransactionReceipt;\r\n    // }\r\n    // useEffect(() => {\r\n    // setTxhash(gettxhashAddress())\r\n    // setConfirm(getconfirmAddress())\r\n    // if (txhas) {\r\n    // setCurrent(1)\r\n    // setCurrent(2)\r\n    // setCurrent(3)\r\n    // }\r\n    // }, [])\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n    })\r\n    // console.log('latprojdetailpop', nftdetail)\r\n    // const mint = () => {\r\n    //     CreateMetaDataAndMint({\r\n    //         _name: nftdetail.title,\r\n    //         _des: nftdetail.description,\r\n    //         _imgBuffer: nftdetail.image\r\n    //     })\r\n    // }\r\n\r\n    const { Step } = Steps;\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Follow steps\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Steps current={props.current} direction='vertical'>\r\n                        <Step title=\"Deploying contract\" description='Uploading of all media assets and metadata to IPFS' />\r\n                        <Step icon={props.current == 0 && <LoadingOutlined type=\"loading\" />} title=\"Mint\" description='Send transaction to create your NFT' />\r\n                        <Step icon={props.current !== 2 ? <LoadingOutlined type=\"loading\" /> : props.current == 2 && <CheckOutlined type=\"finish\" />} title=\"Approve\" description='This transaction is conducted only once per collection' />\r\n\r\n                    </Steps>\r\n\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NftPopup","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst NftTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n\r\n\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getnftwoldetails\r\n    })\r\n    console.log('lattt', latprojnftdetail.nft_history)\r\n    useEffect(() => {\r\n        dispatch(GetNftwol(props.id))\r\n    }, [props.id])\r\n    const location = useLocation()\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr >\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n\r\n\r\n                        <tbody>\r\n                            {latprojnftdetail?.nft_history?.map((items) => {\r\n                                return (\r\n                                    <tr className='contract-address'>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/tx/${items?.txd_id}`} >{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</a></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n\r\n\r\n\r\n\r\n                    </Table>\r\n                    <div className='nothing'>\r\n                        {latprojnftdetail?.nft_history?.length == 0 &&\r\n                            <span> No matching records found</span>\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftTransdataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nconst { CONTRACT_ADDRESS_URL } = process.env;\r\nconst LatNftDataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     debugger\r\n    //     dispatch(NftList(id))\r\n    // }, [id])\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getnftwoldetails\r\n    })\r\n    console.log(latprojnftdetail, 'laptnft')\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n\r\n                        <thead>\r\n\r\n                            <tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr>\r\n                            <tr className='contract-address'>\r\n                                <th>Contract ID</th>\r\n                                <td> <a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${latprojnftdetail?.collectionData?.contract_id}`} >{latprojnftdetail?.collectionData?.contract_id?.slice(0, 5)}.....{latprojnftdetail?.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                {/* <td>{latprojnftdetail?.collectionData?.contract_id}</td> */}\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Token ID</th>\r\n                                <td>{latprojnftdetail?.token_id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Token Stranded</th>\r\n                                <td>ERC721</td>\r\n                            </tr>\r\n\r\n                            {/* <tr>\r\n\r\n                                <th>Contract Address</th>\r\n                                <th>Token ID</th>\r\n                                <th>Token Stranded</th>\r\n                                <th>Blockchain</th>\r\n                            </tr> */}\r\n\r\n\r\n                        </thead>\r\n\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftDataTable","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport Loader from '../Loader/loader';\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction BuyPopup(props) {\r\n    const location = useLocation();\r\n    const [copy, setCopy] = useState(false)\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    // const [loading, setLoading] = useState(true)\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            className=\"loading\"\r\n        >\r\n\r\n\r\n\r\n            {props.loading &&\r\n\r\n                <><Loader />\r\n\r\n                    <div className=\"form-group m-0\">\r\n                        <span>Processing...</span>\r\n                    </div>\r\n\r\n\r\n\r\n                </>\r\n            }\r\n\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default BuyPopup","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Nftprice, Nftdeatil } from './nftprice'\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { updateReffid } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport ReadMore from '../../readMore';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport UserdataTable from '../AuthorProfile/userTransTable';\r\nimport NftTransdataTable from './nftTRansTable';\r\nimport LatNftDataTable from '../Explore/latnftTable';\r\nimport BidPopup from './bidPopup';\r\nimport DModal from '../Create/3dModal';\r\nimport Timer from './timer';\r\nimport BuyPopup from './buyPopup';\r\nimport { GetMatic } from './../ItemDetails/GetMAtic';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst LatprojNftDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const search = useLocation().search;\r\n    const refid = new URLSearchParams(search).get('refid');\r\n    console.log(refid, 'refid')\r\n    const [ownwallet, setOwnWallet] = useState('')\r\n    const [matic, setMatic] = useState('')\r\n    const [ownFee, setOwnFee] = useState('')\r\n    const [bidmodalShow, setBidModalShow] = React.useState(false);\r\n    const [buymodalShow, setBuyModalShow] = React.useState(false);\r\n    const [referalid, setReferalid] = useState(\"\")\r\n\r\n    const [platformFee, setPlatformFee] = useState('')\r\n    console.log('own', ownwallet)\r\n    const id = useParams();\r\n    // console.log(id, 'idd')\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.getnftwoldetails\r\n    })\r\n    console.log('matic', matic['matic-network']?.cad * latprojnftdetail?.amount)\r\n    console.log((latprojnftdetail?.amount * Math.round(matic['matic-network']?.cad)), 'latext')\r\n    // console.log(\"latround\", Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad)))\r\n    // console.log('paymentflow', [latprojnftdetail.payment_flow?.project_data.wallets])\r\n\r\n\r\n    const getSett = useSelector(state => {\r\n        // \r\n        return state.projectdetails.settings\r\n    })\r\n    console.log('getSett', getSett)\r\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\r\n    console.log('sett', setValue)\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetUserAction())\r\n        dispatch(GetNftwol(id))\r\n        dispatch(GetSettings())\r\n\r\n\r\n    }, [id])\r\n\r\n    const buyHandler = () => {\r\n\r\n        // setOwnWallet([latprojnftdetail.payment_flow?.project_data.wallets])\r\n        // setOwnFee([latprojnftdetail.payment_flow?.project_data.fees])\r\n        // setPlatformFee([latprojnftdetail.payment_flow?.karmatica_fee])\r\n\r\n\r\n        BuyNft({\r\n\r\n            contractAddress: latprojnftdetail?.collectionData?.contract_id,\r\n            tokenId: latprojnftdetail.token_id,\r\n            payFrom: latprojnftdetail.pay_from,\r\n            values: setValue.value,\r\n            sellingCount: latprojnftdetail.selling_count,\r\n            platformFee: ([latprojnftdetail.payment_flow?.karmatica_fee]),\r\n\r\n            ownerFee: ([latprojnftdetail.payment_flow?.project_data?.fees]),\r\n            ownerWallet: ([latprojnftdetail.payment_flow?.project_data?.wallets]),\r\n            flow: ([latprojnftdetail.payment_flow]),\r\n\r\n            refid: refid,\r\n            proj_id: latprojnftdetail.project_id,\r\n            nft_id: latprojnftdetail.id,\r\n            loadingg: setLoading,\r\n            modal: setBuyModalShow,\r\n\r\n\r\n\r\n\r\n        })\r\n    }\r\n    const reffHandler = async () => {\r\n        await updateReffid({ tokenId: latprojnftdetail.token_id, refid, nft_id: latprojnftdetail.id })\r\n        await buyHandler()\r\n    }\r\n    // const bidHandler = () =>{\r\n    // if(window.ethereum?.selectedAddress){\r\n    //     debugger\r\n\r\n    //     dispatch(BidPopup())\r\n    // }else{\r\n    //     ConnectWallet()\r\n    // }\r\n    // }\r\n    // const yestTime = \"9:24:49 PM\"\r\n    // const timeNow = new Date()?.toLocaleTimeString() - yestTime()\r\n    // console.log(\"time now\", timeNow)\r\n    // const yesterday = new Date(new Date().getTime() - (24 * 60 * 60 * 1000));\r\n    // console.log('yestwe', yesterday)\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                        <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}  </span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n\r\n                                {/* {latprojdetail?.nft_data?.map((item, idx) => { */}\r\n                                {/*  */}\r\n                                {/* return ( */}\r\n                                {latprojnftdetail.extention === \"PLayer\" &&\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={latprojnftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n\r\n                                {latprojnftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={latprojnftdetail.image}\r\n\r\n                                    />\r\n                                }\r\n                                {latprojnftdetail.extention === 'Image' &&\r\n\r\n                                    <img src={latprojnftdetail.image} alt=\"\" />\r\n                                }\r\n                                {/* ) */}\r\n                                {/* })} */}\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\r\n                        {/* <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}  </span>\r\n\r\n\r\n                        </div> */}\r\n                        <div className=\"content \">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{latprojnftdetail.owned_by}</span>\r\n\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {latprojnftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled mb-0\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{latprojnftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Affiliate first sale royalties : </span>\r\n                                    <span> 30%</span>\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>NFT creator royalties : </span>\r\n                                    <span> 10%</span>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                                <div className='eddlbtton d-flex gap- align-items-center mt-2 justify-content-between'>\r\n\r\n                                    {/* <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <li><span class='boldertext'>Affiliate first sale royalties: 20%</span></li>\r\n                                       <li><span class='boldertext'>NFT creator royalties: 10% </span></li> \r\n                                        <li><span class='boldertext'>Affiliate secondary royalties: 5% </span></li>\r\n\r\n                                        \r\n                                    </ul>\r\n                                </div> */}\r\n                                    <div className='eddlbtton flex-wrap d-flex gap-10  align-items-center mt-2'>\r\n                                        {/* {latprojnftdetail.type == 1 ? ( */}\r\n                                        {latprojnftdetail.sold_nft == 1 ? (\r\n                                            <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" disabled>SOLD OUT</button>\r\n                                        ) : (\r\n\r\n                                            <>\r\n                                                {latprojnftdetail.user_id === userdet.user_id ? (\r\n                                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                            disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                                        </>\r\n\r\n                                                    </div>\r\n\r\n                                                ) : (\r\n\r\n                                                    <><button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                        id=\"nftdetail.id\" onClick={() => { reffHandler(); setBuyModalShow(true); setLoading(true); }}>Buy Now</button><BuyPopup\r\n                                                            show={buymodalShow}\r\n                                                            loading={loading}\r\n\r\n\r\n                                                            onHide={() => setBuyModalShow(false)} /></>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n                                        {/* ) : ( */}\r\n\r\n                                        {/* <><button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                onClick={() => setBidModalShow(true)}>Place Bid</button><BidPopup\r\n\r\n                                                    id={latprojnftdetail.id}\r\n                                                    projid={latprojnftdetail.project_id}\r\n                                                    projtitle={latprojnftdetail.title}\r\n                                                    projcoll={latprojnftdetail?.collectionData?.title}\r\n                                                    show={bidmodalShow}\r\n                                                    onHide={() => setBidModalShow(false)} /></>\r\n                                        )} */}\r\n\r\n                                    </div>\r\n                                    {/* <Timer\r\n                                        time={latprojnftdetail.end_date}\r\n                                    /> */}\r\n                                    <div className='eddlbtton bitbtn d-flex  align-items-center mt-2'>\r\n\r\n                                        <div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <p dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4 '>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <img src='../img/image14.png' />\r\n                                    {/* <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg> */}\r\n                                    <span><small>{latprojnftdetail.amount}  / ${latprojnftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n                                    {/* <span><small>$120</small></span> */}\r\n                                </div>\r\n\r\n                                {/* <div className='sales'>\r\n                                    <span>\r\n                                        Creator royalties on secondary sales:\r\n                                    </span>\r\n                                    <span>5%</span>\r\n                                </div> */}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=''>\r\n                            <div className=\"profile_detail mt-4\">\r\n\r\n                                <LatNftDataTable\r\n                                // id={id}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <NftTransdataTable\r\n                                id={id}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"col-12\">\r\n                        <div className=\"card no-hover countdown-times my-4 \">\r\n                            <span dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                        </div>\r\n\r\n                    </div> */}\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\nexport default LatprojNftDetails;","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { getBid, NftList, ProjectDetail, ProjectList, UpdateBId } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst NftAuctiondataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { slug } = useParams()\r\n    const [bidstatus, setBidStatus] = useState(2)\r\n    console.log('biddst', bidstatus)\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(NftList(props.slug.id))\r\n\r\n    }, [props.slug.id])\r\n\r\n    const acceptHandler = (id) => {\r\n\r\n        console.log(\"accept\", id)\r\n        getBid(props)\r\n        dispatch(UpdateBId({ id, status: bidstatus }))\r\n    }\r\n    return (\r\n        <div className='position-relative'>\r\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Latest Bids\" key=\"1\" >\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>User</th>\r\n                                <th>Bid Price</th>\r\n                                <th>Wallet</th>\r\n                                {/* <th>To</th> */}\r\n                                <th>Transaction</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody className='img_table'>\r\n                            {nftdetail.bids?.map((item) => {\r\n\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>{item.username}</td>\r\n                                        <td>{item.amount}</td>\r\n                                        <td>{item.pay_from?.slice(0, 4)}...{item.pay_from?.slice(35, 44)}</td>\r\n                                        {/* <td>{item.pay_to?.slice(0, 4)}...{item.pay_to?.slice(35, 44)}</td> */}\r\n                                        <td>{item.txd_id?.slice(0, 4)}...{item.txd_id?.slice(35, 44)}</td>\r\n                                        <td>\r\n                                            {item.status == 1 ? (\r\n\r\n                                                <button type=\"submit\" onClick={() => acceptHandler(item.id, setBidStatus(\"2\"))}>Accept</button>\r\n                                            ) : (\r\n                                                <a>Confirmed</a>\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                        {/* <div className='nothing col-spam-5' colspan=\"5\">\r\n                            No matching records found\r\n                        </div> */}\r\n                    </Table>\r\n                    {nftdetail?.bids?.length == 0 &&\r\n                        <div className='nothing'>\r\n\r\n                            No matching records found\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftAuctiondataTable","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, ResellNft, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport JoditEditor from 'jodit-react';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport Web3 from 'web3';\r\nimport React from 'react';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { CreateMetaDataAndMint, UpdateStatus } from '../Wallet/interact';\r\nimport NftPopup from './nftPopup';\r\nimport { useFormData } from '../Create/Context/context';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nfunction SellPopup(props) {\r\n    const history = useHistory()\r\n    const [current, setCurrent] = React.useState(0)\r\n    const dispatch = useDispatch()\r\n    const slug = useParams()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const [auctiontype, setAuctionType] = useState(\"\")\r\n    const autionTypeChange = (event) => {\r\n        setAuctionType(event.target.value);\r\n\r\n    }\r\n    const [auctiondata, setAuctiondata] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [startdate, setStartdate] = useState(\"\")\r\n    const [enddate, setEnddate] = useState(\"\")\r\n    const location = useLocation();\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    console.log('nftdetail', nftdetail)\r\n\r\n    const mint = (contractAddress, type, start_date, end_date, price) => {\r\n\r\n        // auctiondata.map((item) => {\r\n        //     setPrice(item.price)\r\n        // })\r\n        CreateMetaDataAndMint({\r\n\r\n            _name: nftdetail.title,\r\n            _des: nftdetail.description,\r\n            _imgBuffer: nftdetail.image,\r\n            contractAddress,\r\n            setCurrent,\r\n            collid: nftdetail?.collection_id,\r\n            nft_file_content: nftdetail?.nft_file_content,\r\n            slug,\r\n            dispatch: dispatch,\r\n            setModalShow,\r\n\r\n            // auctiondata\r\n            type,\r\n            price,\r\n            start_date,\r\n            end_date,\r\n\r\n        })\r\n    }\r\n\r\n    const deployContract = async (type, start_date, end_date, price) => {\r\n        try {\r\n            if (nftdetail?.collectionData?.contract_id == null) {\r\n\r\n                await window.ethereum.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: web3.utils.toHex('80001') }],\r\n                })\r\n\r\n                // const { address } = await ConnectWallet()\r\n                const address = window?.ethereum?.selectedAddress\r\n                const MyNFTContract = new web3.eth.Contract(NFTContract.abi)\r\n                const gas = await web3.eth.getGasPrice();\r\n                // const gas = 500000\r\n\r\n                MyNFTContract.deploy({\r\n                    data: NFTContract.bytecode,\r\n                    arguments: [nftdetail?.collectionData?.title, nftdetail?.collectionData?.symbol],\r\n                }).send({\r\n                    from: address,\r\n                })\r\n                    .on('error', (error) => {\r\n                        // console.log(error)\r\n                    })\r\n                    .on('transactionHash', (transactionHash) => {\r\n                        // console.log(transactionHash, \"transactionHash\")\r\n                    })\r\n                    .on('receipt', (receipt) => {\r\n                        // receipt will contain deployed contract address\r\n                        // console.log(receipt, \"reciept\")\r\n                    })\r\n                    .on('confirmation', (confNumber, receipt) => {\r\n                        // console.log(receipt.contractAddress, \"confirmRecipet\")\r\n                        if (confNumber == 1) {\r\n                            mint(receipt?.contractAddress)\r\n                            // setContractAdd(receipt?.contractAddress)\r\n                            // UpdateContract(id)\r\n                        }\r\n\r\n                    })\r\n            } else {\r\n                mint(nftdetail?.collectionData?.contract_id, type, start_date, end_date, price)\r\n            }\r\n            return {\r\n                success: true,\r\n                // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n                status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n            }\r\n        } catch (error) {\r\n            // \r\n            alert(\"went wrong\")\r\n            return {\r\n                success: false,\r\n                status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    console.log('mint', props.ismint)\r\n    const OnSubmit = async (data) => {\r\n\r\n        setModalShow(true)\r\n        const formData = new FormData()\r\n        formData.append(\"nft_id\", props.nftid)\r\n        formData.append(\"type\", data.auctiontype)\r\n        formData.append(\"end_date\", data.end_date)\r\n        formData.append(\"start_date\", data.start_date)\r\n        formData.append(\"price\", data.price)\r\n        {\r\n            props.ismint == 1 ? (\r\n\r\n                dispatch(ResellNft(formData, props))\r\n            ) : (\r\n                await deployContract({ type: data.auctiontype, end_date: data.end_date, start_date: data.start_date, price: data.price })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate());\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div className='d-flex justify-content-between w-full'>\r\n                    <label className='modal-title h4 '>List for sale</label> <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover form-sell\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12 \">\r\n                            <div className=\"form-group\">\r\n                                <div className='mb-3'>Choose a type of sale</div>\r\n\r\n                                <div className=\"form-check form-check-inline mr-2\">\r\n                                    {/* {data.usertype == 2 ? ( */}\r\n                                    <>\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            name=\"radiobutton\"\r\n                                            id=\"1\"\r\n                                            onChange={autionTypeChange}\r\n                                            defaultChecked\r\n                                            value=\"1\"\r\n                                            {...register(\"auctiontype\", { required: true })}\r\n                                            aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\r\n\r\n                                        />\r\n                                        <label className=\"form-check-label mr-2\" htmlFor=\"buy\">Fixed Price</label>\r\n                                    </>\r\n\r\n\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"2\"\r\n                                        disabled\r\n                                        onChange={autionTypeChange}\r\n                                        value=\"2\"\r\n                                        {...register(\"auctiontype\", { required: true })}\r\n\r\n                                        aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\r\n\r\n                                    />\r\n                                        <label className=\"form-check-label\" htmlFor=\"auction\">English Auction</label></>\r\n                                    {/* )} */}\r\n                                </div>\r\n\r\n                                {errors.auctiontype?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Type is required</p>}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                <label>Set Price</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>} */}\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">price is required</p>}\r\n\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <>\r\n                            <label className='col-12 my-3'>Set Duration </label>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        // placeholder='dd-mm-yy'\r\n                                        // hidden={data.type == 1}\r\n                                        defaultValue={defaultValue}\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // value={defaultValue}\r\n                                        min={disablePastDate()}\r\n\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                    // aria-invalid={errors.start_date ? \"true\" : \"false\"} \r\n                                    />\r\n                                    {/* {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        min={disablePastDate()}\r\n                                        defaultValue={defaultValue1}\r\n                                        // value={defaultValue1}\r\n                                        {...register(\"end_date\")}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    <div >\r\n\r\n                                    </div>\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div>\r\n                            {auctiontype == 1 ? (\r\n\r\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days after which the listing may expire and be removed</span>\r\n                            ) : (\r\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days</span>\r\n                            )}\r\n                        </>\r\n                        <div className='w-full text-center'>\r\n                            {props.ismint == 1 ? (\r\n                                <button type=\"submit\" className=\" mb-0 btn btn-bordered-white\" style={{ color: '#FFF' }}\r\n                                >Sell</button>\r\n                            ) : (\r\n                                <>\r\n\r\n                                    <button type=\"submit\" className=\" mb-0 btn btn-bordered-white\" style={{ color: '#FFF' }}\r\n                                        id=\"nftdetail.id\">Mint</button><NftPopup\r\n                                        show={modalShow}\r\n                                        current={current}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </>\r\n\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default SellPopup","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNftName = (props) => {\r\n    // debugger\r\n\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props?.nft_id?.id))\r\n    }, [props?.nft_id?.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n        // debugger\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\" >\r\n            {/* {loading ? (\r\n                <Loader />\r\n            ) : ( */}\r\n\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            // centered\r\n            >\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Update NFT\r\n                    </Modal.Title>\r\n                    <div>\r\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='col-12 item-form card no-hover'>\r\n                        <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                            nfts: nfts, defaultValues\r\n                        }}\r\n\r\n                            onFinish={(event) => onFinish(event)}\r\n                            autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                            <Form.List name=\"nfts\">\r\n\r\n                                {(fields, { add, remove }) => (\r\n                                    <>\r\n\r\n                                        <>\r\n                                            {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                <Fragment>\r\n\r\n                                                    <div className=\"row relative\">\r\n\r\n                                                        <div className=\"col-12\">\r\n                                                            <label>Name</label>\r\n                                                            <div>\r\n\r\n\r\n                                                                <Form.Item\r\n                                                                    {...restField}\r\n                                                                    name={[name, \"nft_name\"]}\r\n\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Missing  name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n\r\n                                                                    {/* <label>Name</label> */}\r\n                                                                    <Input placeholder=\"Name\" />\r\n                                                                </Form.Item>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n\r\n\r\n                                                    </div>\r\n                                                </Fragment>\r\n\r\n                                            ))}\r\n\r\n\r\n                                        </></>\r\n                                )}\r\n\r\n                            </Form.List>\r\n                            <Form.Item>\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                </div>\r\n\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            {/* )} */}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftName;","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNftDesc = (props) => {\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id?.id))\r\n    }, [props.nft_id?.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\" >\r\n            {/* {loading ? (\r\n                <Loader />\r\n            ) : ( */}\r\n\r\n            <Modal className=\"edit_nft_popup\"\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n            // centered\r\n            >\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter \">\r\n                        Update NFT\r\n                    </Modal.Title>\r\n                    <div>\r\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='col-12'>\r\n                        <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                            nfts: nfts, defaultValues\r\n                        }}\r\n\r\n                            onFinish={(event) => onFinish(event)}\r\n                            autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                            <Form.List name=\"nfts\">\r\n\r\n                                {(fields, { add, remove }) => (\r\n                                    <>\r\n\r\n                                        <>\r\n                                            {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                <Fragment>\r\n\r\n                                                    <div className=\"row relative\">\r\n\r\n                                                        <div className=\"col-12\">\r\n                                                            <label>Name</label>\r\n\r\n                                                            <label>Description</label>\r\n                                                            <div>\r\n\r\n                                                                <Form.Item\r\n                                                                    {...restField}\r\n                                                                    name={[name, \"nft_description\"]}\r\n\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Missing  description',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <JoditEditor\r\n                                                                        ref={editor}\r\n                                                                        value={'nft_description'}\r\n\r\n\r\n                                                                        placeholder=\"start typing\"\r\n                                                                        tabIndex={1} // tabIndex of textarea\r\n\r\n                                                                        onChange={newContent => { }}\r\n                                                                    />\r\n                                                                    {/* }} */}\r\n                                                                    {/* /> */}\r\n                                                                </Form.Item>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                    </div>\r\n                                                </Fragment>\r\n\r\n                                            ))}\r\n\r\n\r\n                                        </></>\r\n                                )}\r\n\r\n                            </Form.List>\r\n                            <Form.Item>\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                </div>\r\n\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            {/* )} */}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftDesc;","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNftImage = (props) => {\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [size, setSize] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id?.id))\r\n    }, [props.nft_id?.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n                    // setLoading(false)\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n            setLoading(false)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\">\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter h-auto\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"col-12\">\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                    <Fragment>\r\n\r\n                                                        <div className=\"row relative \">\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"col-lg-12 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                    <div\r\n                                                                        className=\"position-relative upload_nft\"\r\n                                                                        style={{\r\n                                                                            backgroundImage: \"url('')\",\r\n                                                                            backgroundSize: \"contain\",\r\n                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                            margin: \"0 auto\",\r\n                                                                        }}\r\n                                                                    >\r\n\r\n                                                                        <div\r\n                                                                            className={\r\n                                                                                nftFileType === \"Player\" || nftFileType === \"modal\"\r\n                                                                                    ? \" inputdragVedio\"\r\n                                                                                    : \"inputtdrag\"\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <input\r\n                                                                                type=\"file\"\r\n                                                                                onChange={handleUpload}\r\n                                                                                maxCount={1}\r\n                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                            />\r\n\r\n                                                                            {(nftFileType === \"Image\") &&\r\n\r\n                                                                                <div>\r\n\r\n                                                                                    {source ?\r\n                                                                                        nftHeight >= 500 && nftwidth >= 500 ?\r\n                                                                                            (\r\n                                                                                                <img\r\n                                                                                                    src={source}\r\n                                                                                                    className=\"nft-image\"\r\n                                                                                                />\r\n                                                                                            ) : (\r\n                                                                                                <>\r\n                                                                                                    <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                        Minimum size should be 500x500\r\n                                                                                                    </p>\r\n                                                                                                    <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                        Image size should be max 1mb\r\n                                                                                                    </p>\r\n                                                                                                </>\r\n                                                                                            ) : (\r\n                                                                                            <img\r\n                                                                                                src={image}\r\n                                                                                                className=\"nft-image\"\r\n                                                                                            />\r\n                                                                                        )}\r\n\r\n                                                                                </div>\r\n\r\n                                                                            }\r\n\r\n\r\n                                                                            {nftFileType === \"Player\" &&\r\n                                                                                <div>\r\n\r\n                                                                                    {source ? (\r\n\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={source}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={image}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p>\r\n                                                                                            Because you’ve included\r\n                                                                                            multimedia, you’ll need to provide\r\n                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                            the card display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft}\r\n\r\n                                                                                                />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview}\r\n\r\n                                                                                                />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n\r\n\r\n\r\n                                                                            {nftFileType === \"modal\" &&\r\n                                                                                <div>\r\n                                                                                    {!source ? (\r\n                                                                                        <DModal\r\n                                                                                            vdo={image}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <DModal\r\n                                                                                            vdo={source}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p className=\"\">\r\n                                                                                            Because you’ve included multimedia,\r\n                                                                                            you’ll need to provide an image\r\n                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                            display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft} />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview} />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftImage;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport Web3 from 'web3';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport EditCollection from './updateCollection';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport { CreateMetaDataAndMint } from './../Wallet/interact';\r\nimport NftPopup from './nftPopup';\r\nimport axios from 'axios';\r\nimport { redirect } from 'next/dist/server/api-utils';\r\nimport LatprojNftDetails from '../Auctions/nftBuy';\r\nimport DModal from '../Create/3dModal';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport NftAuctiondataTable from './nftAuctiontable';\r\nimport SellPopup from './sellPopup';\r\nimport EditNftName from '../Create/editNftNamepopup';\r\nimport EditNftDesc from '../Create/editDescPopup';\r\nimport EditNftImage from '../Create/nftImageeditPopup';\r\nimport { GetMatic } from './GetMAtic';\r\nimport Loader from '../Loader/loader';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\nconst NftDetails = (props) => {\r\n    const history = useHistory()\r\n    const [nftId, setNftID] = useState();\r\n    const search = useLocation().search;\r\n    const projslug = new URLSearchParams(search).get('project');\r\n    console.log(projslug, 'projslug')\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.getnftwoldetails\r\n    })\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [sellmodalShow, setSellModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [modalShoweditdes, setModalShoweditdes] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [modalShoweditimg, setModalShoweditimg] = React.useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    // const [mintmodalShow, setMintModalShow] = React.useState(false);\r\n\r\n    const [current, setCurrent] = React.useState(0)\r\n    const [contractAdd, setContractAdd] = useState('')\r\n    // const [collid, setCollid] = useState('')\r\n    // console.log('collid', collid)\r\n    // console.log('contAddre', contractAdd)\r\n    // console.log('current', current)\r\n    const slug = useParams();\r\n    // console.log(id, 'idd')\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'projdataaaa')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n\r\n    // console.log('collupdate', collupdate)\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(NftList(slug.id, setLoading))\r\n        dispatch(ProjectDetail(slug.id))\r\n        // dispatch(GetSettings())\r\n    }, [slug, dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n                            {nftdetail.is_mint == 0 &&\r\n\r\n                                <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n\r\n                                    <div >\r\n                                        <div className='position-absolute nft-edit-icon'><i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditimg(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        </div>\r\n                                        <div className='loader-img'>{modalShoweditimg &&\r\n\r\n                                            <EditNftImage\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditimg}\r\n                                                onHide={() => setModalShoweditimg(false)} />\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n                                {loading ? (\r\n                                    <Loader />\r\n                                ) : (\r\n                                    <>\r\n                                        {nftdetail.extention === \"Player\" &&\r\n\r\n                                            <video\r\n                                                // className=\"VideoInput_video\"\r\n                                                width=\"100%\"\r\n                                                // height={height}\r\n                                                controls\r\n                                                src={nftdetail.image}\r\n                                            // onChange={setSource}\r\n                                            />\r\n                                        }\r\n                                        {nftdetail.extention === \"modal\" &&\r\n                                            <DModal\r\n                                                vdo={nftdetail.image}\r\n                                            // mdl={setModal}\r\n                                            />\r\n                                        }\r\n                                        {nftdetail.extention === \"Image\" &&\r\n\r\n                                            <img src={nftdetail.image} alt=\"\" />\r\n                                        }\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-sm-0\">\r\n                        <div className=' card no-hover py-0 mt-2 mb-2 mt-lg-0 mb-lg-0 '>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{nftdetail?.title} </span>\r\n                            {nftdetail.is_mint == 0 &&\r\n                                <div className='nft-edit-icon position-absolute mt-2'>\r\n                                    <i className=\"fa-solid fa-pen \" onClick={(e) => {\r\n                                        setNftID(slug)\r\n                                        e.preventDefault();\r\n                                        setModalShowedit(true)\r\n                                    }\r\n                                    } ></i>\r\n                                    {modalShowedit &&\r\n\r\n                                        <EditNftName\r\n                                            // debugger\r\n                                            id={projslug}\r\n                                            nft_id={nftId}\r\n                                            show={modalShowedit}\r\n                                            onHide={() => setModalShowedit(false)} />\r\n                                    }\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div className=\"content sm:mt-3 mt-lg-2\">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{nftdetail?.user_data?.username}</span>\r\n\r\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {nftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{nftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                {nftdetail.is_mint == 0 ? (\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            onClick={() => setSellModalShow(true)}>  Sell</button>\r\n                                            <SellPopup\r\n                                                show={sellmodalShow}\r\n\r\n                                                onHide={() => setSellModalShow(false)} />\r\n                                        </>\r\n\r\n                                    </div>\r\n                                ) : (\r\n                                    <>\r\n                                        {nftdetail.sold_nft == 1 ? (\r\n\r\n                                            <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                    disabled>SOLD OUT</span>\r\n\r\n                                                </>\r\n\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                    disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                                </>\r\n\r\n                                            </div>\r\n                                        )}\r\n                                    </>\r\n\r\n\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-12 md:col-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                                {nftdetail?.is_mint == 0 &&\r\n                                    <div className='nft-edit-icon position-absolute mt-2'>\r\n                                        <i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditdes(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        {modalShoweditdes &&\r\n\r\n                                            <EditNftDesc\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditdes}\r\n                                                onHide={() => setModalShoweditdes(false)} />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft \" />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4'>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <img src='../../img/image14.png' />\r\n                                    {/* <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg> */}\r\n                                    <span><small>{nftdetail.amount}  / ${nftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n                                    {/* <span>{latprojnftdetail.amount}</span>\r\n                                    <span><small>${nftdetail.amount}</small></span> */}\r\n                                </div>\r\n\r\n                                {/* <div className='sales'>\r\n                                    <span>\r\n                                        Creator royalties on secondary sales:\r\n                                    </span>\r\n                                    <span>5%</span>\r\n                                </div> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-8 col-12'>\r\n                        <div className=\"profile_detail mt-4\">\r\n\r\n                            <NftdataTable\r\n                                slug={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='container table-detail'>\r\n\r\n                            <NftAuctiondataTable\r\n                                slug={slug}\r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* <div className='col-12 description'>\r\n                    <h3 > Description</h3>\r\n                    <div className=\"card no-hover countdown-times my-4\">\r\n            \r\n                        <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft\" />\r\n                    </div>\r\n                     </div> */}\r\n                </div >\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default NftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport NftDetails from '../components/ItemDetails/nftDetails';\r\n\r\nconst Nft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <NftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nft;","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { Table } from 'react-bootstrap';\r\nconst FunddataTable = (props) => {\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [expandIconPosition] = useState('end');\r\n\r\n    // const { id } = useParams()\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\"/><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\"/></svg>    */}\r\n\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive>\r\n                        <tbody class=\"nfts_details\">\r\n                            <tr>\r\n                                <td><span>Organization Name </span> <span>{funddetail?.organization_detail?.organization_name}</span></td>\r\n                                <td><span>Country</span>  <span>{funddetail?.organization_detail?.country}</span></td>\r\n                                <td><span>Tax Number </span> <span>{funddetail?.organization_detail?.tax_number}</span></td>\r\n                                <td><span>Web URL</span>  <span>{funddetail?.organization_detail?.web_url}</span></td>\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default FunddataTable","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from './fundraiserdetail';\r\nimport FundTransdataTable from './fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\nimport { Button } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst FundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const id = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n    console.log('userdettt', userDetail)\r\n    const log = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(fundprojdetail.user_data, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    const investHandler = () => {\r\n\r\n        if (!window.ethereum?.selectedAddress) {\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html:\r\n                    'Connect Wallet to Invest',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <section className=\"item-details-area fundraise-main\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src=\"/img/ph.jpg\" /> */}\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done mt-3'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n                            {/* <img src={funddetail?.user_data?.avatar} width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" /> */}\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n\r\n                        <div className=\"progress_nft mobile_nft mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                            </div>\r\n\r\n\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length ?\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        }) :\r\n                                    <div className=\"col-12 col-sm-12 col-lg-12\">\r\n\r\n                                        <span className='allproj2'>\r\n                                            No Projects\r\n                                        </span>\r\n\r\n                                    </div>\r\n                                }\r\n                            </ul>\r\n                            <Link className=\"\" to=\"/all/LatestProjects\"><p className='see_all'>See all</p></Link>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className='custam_col mt-3 mt-lg-0'>\r\n                            <h5 class=\"user_title \">\r\n\r\n                                <div className='d-flex align-item-center gap-5'>\r\n                                    <svg className='' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg>\r\n\r\n                                    <div>Description</div>\r\n\r\n                                </div>\r\n                            </h5>\r\n\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='funddeatil mt-3 '>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-4 desktop_nft\">\r\n                        <div className=\"progress_nft  mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"100%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                                {/* <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" />\r\n                                            <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                        </div> */}\r\n\r\n                                {/* <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                    </div> */}\r\n\r\n                            </div>\r\n\r\n                            <div className=\"d-flex gap-5 flex-wrap justify-content-start\">\r\n\r\n                                <div>\r\n\r\n                                    <Button variant=\"primary\" onClick={() => investHandler()} className=\" btn  btn-bordered-white m-0 mr-2\">\r\n                                        Invest\r\n                                    </Button>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length &&\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        })}\r\n                            </ul>\r\n                            <Link className=\"\" to={`/all/fundraise/projects/${user_id}`}><p className='see_all'>See all</p></Link>\r\n                        </div>\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            {/* <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        \r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div> */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=''>\r\n                    {/* <div className='col-7'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div> */}\r\n                    <div className='col-12 mt-3 mb-3'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default FundraiserDetail;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport FundraiserDetail from '../components/TopSeller/fundraiserDetails';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\n\r\nconst FundDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main main-fund-detail\">\r\n\r\n            <Header />\r\n            <FundraiserDetail />\r\n            <Fundraiser />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default FundDetail;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport LatprojNftDetails from '../components/Auctions/nftBuy';\r\n\r\nconst latnftprojDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LatprojNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default latnftprojDetails;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\nexport default ScrollToTop","\r\n\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Upload } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddNftAction, CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport swal from 'sweetalert';\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport DModal from './3dModal';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst AddNft = ({ current, prev }) => {\r\n    const editor = useRef(null);\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    // console.log(data, 'formdta')\r\n    const [count, setCount] = useState(0);\r\n    // const [nft_description, setNft_description] = useState([])\r\n    // console.log('nft_description', nft_description)\r\n    const [nftFileType, setNFtFileType] = useState()\r\n    const [nft, setNft] = useState()\r\n    const [size, setSize] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    console.log(nftwidth, 'nftwidth')\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    console.log(nftHeight, 'nftheight')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"1\" });\r\n    const [NFtFileExtension, setNFtExtension] = useState()\r\n    const [source, setSource] = useState([])\r\n    const [preview, setPreview] = useState([])\r\n    const [nft_description, setNft_description] = useState([])\r\n    // console.log('colldata', coldata)\r\n    const [sourceType, setSourceType] = useState()\r\n    // console.log(nft_collection_id)\r\n    // const [coll_id,setCollId] = useState()\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    // console.log(\"collid\", coll_id)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const search = useLocation().search;\r\n    const projid = new URLSearchParams(search).get('projectid');\r\n    console.log(projid, 'projid')\r\n    const handleIncrement = () => {\r\n        setCount(prevCount => prevCount + 1);\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n    const slug = useParams()\r\n    // function descc(e) {\r\n    //     setNft_description(prev => [...prev, nft_description]);\r\n    // };\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    // this.setState(prev => ({\r\n    //     item: prev.item.map(item => item.name === 'xjz' ? { ...item, age: '10' } : item)\r\n    // }))\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n        defaultValues\r\n    });\r\n    useEffect(() => {\r\n        register(\"nft_description\");\r\n    }, [register]);\r\n\r\n    // const ipfsClient = create('http://127.0.0.1:5001')\r\n    // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n    // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n    // console.log(imaeg, 'imgg')\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n        setPreview(prevState => {\r\n            // debugger\r\n            prevState[index] = e?.target?.files[0]\r\n\r\n            return [...prevState]\r\n        })\r\n\r\n        // setPreview(pimage)\r\n    };\r\n    const handleUpload = (e, index) => {\r\n        const filetype = e.target.files[0].type\r\n        setNFtExtension(filetype)\r\n        // debugger\r\n        setNft(e.target.files[0])\r\n\r\n\r\n\r\n        var fr = new FileReader;\r\n\r\n        fr.onload = function () { // file is loaded\r\n            var img = new Image;\r\n\r\n            img.onload = function () {\r\n                setSize(e.target.files[0].size);\r\n                // alert(img.width); // image is loaded; sizes are available\r\n                setNftwidth(img.width)\r\n                setNftheight(img.height)\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n\r\n        let type = \"Image\"\r\n\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert('Filesize must 100mb or below');\r\n        } else {\r\n\r\n\r\n            switch (filetype) {\r\n                case 'image/png':\r\n                case 'image/jpg':\r\n                case 'image/gif':\r\n                case 'image/svg':\r\n                    type = \"Image\"\r\n                    break;\r\n                case 'audio/mpeg':\r\n                case 'audio/ogg':\r\n                case 'video/mp4':\r\n                case 'video/webm':\r\n                    type = 'Player'\r\n                    break;\r\n                case '':\r\n                    // if (nft?.name?.str.includes(\".glb\")) {\r\n                    type = 'modal'\r\n                    // }\r\n                    break;\r\n                default:\r\n                    type = 'Image'\r\n            }\r\n\r\n            // setNFtFileType(type)\r\n\r\n            setSource(prevState => {\r\n                // debugger\r\n                prevState[index] = { file: e.target.files[0], type: type }\r\n                setSourceType(type)\r\n\r\n                return [...prevState]\r\n            })\r\n\r\n\r\n            // switch (nft?.name?.str.includes(\".glb\")) {\r\n\r\n            //     case '':\r\n            //         setNFtFileType('modal')\r\n            //         break;\r\n            // }\r\n\r\n        }\r\n\r\n        // if (nftFileType === 'Image' && window.innerHeight > '500' && window.innerWidth > '500') {\r\n        //     alert(\"This is  matching\")\r\n        // }\r\n        // else {\r\n        //     setNftError('Minimum size should be 500x500')\r\n        //     alert('This is not matching')\r\n\r\n        // }\r\n    }\r\n\r\n    // console.log('col', col)\r\n\r\n\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n            const nftImagepromises = values?.nfts?.map(x => uploadNFT(nft))\r\n\r\n            const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n            // \r\n\r\n            const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n            // \r\n            var str = addedImage;\r\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n            const formData = new FormData()\r\n\r\n\r\n\r\n            if (check === false) {\r\n\r\n                formData.append('image', addedImage)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                // const newlist = newList.push(nft_collection_id);\r\n                formData.append('collection_id', coll_id)\r\n                // formData.append('nft_description', nft_description)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n                formData.append('preview_imag', Pimage)\r\n                formData.append('extention', sourceType)\r\n                // dispatch(uploadNFT())\r\n                dispatch(AddNftAction(formData, projid, slug, setLoading))\r\n                // setLoading(false)\r\n            } else {\r\n                // debugger\r\n                console.log('fail')\r\n                setLoading(false)\r\n                swal('error!', 'Nft not uploaded', 'error')\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error, 'error')\r\n        }\r\n        // console.log('Received values of form:', values, data)\r\n\r\n    };\r\n    // console.log('title', localStorage.getItem('title'))\r\n    const handleCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n        beforeUpload: () => {\r\n            return false;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    // const getFile = (e) => {\r\n    //     // \r\n    //     console.log('Upload event:', e);\r\n\r\n    //     if (Array.isArray(e)) {\r\n    //         return e;\r\n    //     }\r\n    //     return e && e.fileList;\r\n    // };\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n\r\n                                <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n\r\n\r\n                                <div>\r\n        \r\n                                    {loading ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                                            <Form\r\n                                                form={form}\r\n                                                name=\"dynamic_form_nest_item\"\r\n                                                initialValues={{\r\n                                                    nfts: nfts,\r\n                                                }}\r\n                                                // onSubmit={(event) => handleSubmit(event)}\r\n                                                onFinish={(event) => onFinish(event)}\r\n\r\n                                                autoComplete=\"off\"\r\n                                                className=\"item-form card no-hover\"\r\n                                            >\r\n                                                <Form.List name=\"nfts\">\r\n                                                    {(fields, { add, remove }) => (\r\n                                                        <>\r\n                                                            <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                                                <svg\r\n                                                                    width=\"16px\"\r\n                                                                    height=\"16px\"\r\n                                                                    viewBox=\"0 0 24 24\"\r\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                                >\r\n                                                                    <path\r\n                                                                        fill=\"none\"\r\n                                                                        stroke=\"#fff\"\r\n                                                                        stroke-width=\"2\"\r\n                                                                        d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\r\n                                                                        transform=\"matrix(-1 0 0 1 24 0)\"\r\n                                                                    />\r\n                                                                </svg>\r\n                                                                Previous\r\n                                                            </Button>\r\n\r\n                                                            <>\r\n                                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n\r\n\r\n                                                                    <Fragment>\r\n                                                                        {/* <div>Artwork {index}</div> */}\r\n                                                                        <div className=\"row relative\">\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label>Name</label>\r\n                                                                                <div>\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_name\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: \"Name is required\",\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <label>Name</label> */}\r\n                                                                                        <Input placeholder=\"Name\" />\r\n                                                                                    </Form.Item>\r\n                                                                                </div>\r\n                                                                                <label>Description</label>\r\n                                                                                <div>\r\n\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_description\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: \"Missing  description\",\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <Controller\r\n                                                                                control={control}\r\n                                                                                name=\"nft_description\"\r\n                                                                                defaultValue=\"\"\r\n                                                                                render={({ field: { value, onChange } }) => {\r\n                                                                                    return  */}\r\n                                                                                        <JoditEditor\r\n                                                                                            ref={editor}\r\n                                                                                            value={nft_description}\r\n                                                                                            // config={config}\r\n\r\n                                                                                            placeholder=\"start typing\"\r\n                                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                                            onBlur={(newContent) =>\r\n                                                                                                setNft_description(newContent)\r\n                                                                                            } // preferred to use only this option to update the content for performance reasons\r\n                                                                                            onChange={(newContent) => { }}\r\n                                                                                        />\r\n                                                                                        {/* }} */}\r\n                                                                                        {/* /> */}\r\n                                                                                    </Form.Item>\r\n                                                                                    {errors.nft_description?.type ===\r\n                                                                                        \"required\" && (\r\n                                                                                            <p style={{ color: \"red\" }} role=\"alert\">\r\n                                                                                                Description is required\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                    {errors.nft_description &&\r\n                                                                                        errors.nft_description.type ===\r\n                                                                                        \"minLength\" && (\r\n                                                                                            <p style={{ color: \"red\" }}>\r\n                                                                                                min length of words is 300\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n\r\n                                                                            <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                                <MinusCircleOutlined\r\n                                                                                    onClick={(e) => {\r\n                                                                                        remove(name);\r\n                                                                                        handleDecrement(e);\r\n                                                                                    }}\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                            {/* </div> */}\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label className=\"mt-2 mb-3\">\r\n                                                                                    Choose Collection\r\n                                                                                </label>\r\n                                                                            </div>\r\n\r\n\r\n                                                                            {col?.map((item, idx) => (\r\n                                                                                <div\r\n                                                                                    key={`auc_${idx}`}\r\n                                                                                    id={item.id}\r\n                                                                                    className=\"col-md-6 col-lg-3 col-12 choose_div\"\r\n                                                                                >\r\n                                                                                    <div\r\n                                                                                        id={item.id}\r\n                                                                                        onClick={() =>\r\n                                                                                            onHandleClick(index, item.id)\r\n                                                                                        }\r\n                                                                                        className=\"card\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                            border:\r\n                                                                                                nft_collection_id[index] == item.id\r\n                                                                                                    ? \"1px solid #fff\"\r\n                                                                                                    : null,\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <div className=\"card-body\">\r\n                                                                                            <div>{item.title}</div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    {/* </Form.Item> */}\r\n                                                                                </div>\r\n                                                                                // </div>\r\n                                                                            ))}\r\n                                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                                {/* <div className=\"col-24\"> */}\r\n\r\n                                                                                <div className=\"form-group\">\r\n                                                                                    <div\r\n                                                                                        className=\"card choose_div\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <div className=\"card-body \">\r\n                                                                                            <Button\r\n                                                                                                variant=\"primary\"\r\n                                                                                                className=\"collection_btn\"\r\n                                                                                                onClick={() => setModalShow(true)}\r\n                                                                                            >\r\n                                                                                                <i className=\"f1a-regular fa-plus\"></i>{\" \"}\r\n                                                                                                Create Collection\r\n                                                                                            </Button>\r\n\r\n                                                                                            <MyVerticallyCenteredModal\r\n                                                                                                show={modalShow}\r\n                                                                                                onHide={() => setModalShow(false)}\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                                    <div\r\n                                                                                        className=\"position-relative upload_nft\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage: \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a image',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        > */}\r\n                                                                                        {/* <div className='uploadnftpopup-input Icon_cam' > */}\r\n                                                                                        <div\r\n                                                                                            className={\r\n                                                                                                source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\r\n                                                                                                    ? \" inputdragVedio\"\r\n                                                                                                    : \"inputtdrag\"\r\n                                                                                            }\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                // onChange={handleUpload}\r\n                                                                                                maxCount={1}\r\n                                                                                                onChange={e => handleUpload(e, index)}\r\n                                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                                            />\r\n\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\r\n                                                                                                <div>\r\n                                                                                                    {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\r\n                                                                                                    {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? (\r\n\r\n\r\n                                                                                                        <img\r\n                                                                                                            src={URL.createObjectURL(source[index].file)}\r\n                                                                                                            className=\"nft-image\"\r\n                                                                                                        />\r\n                                                                                                    ) : (\r\n                                                                                                        <>\r\n                                                                                                            <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                                Minimum size should be 500x500\r\n                                                                                                            </p>\r\n                                                                                                            <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                                Image size should be max 1mb\r\n                                                                                                            </p>\r\n                                                                                                        </>\r\n\r\n\r\n\r\n                                                                                                    )}\r\n                                                                                                    {/* : (\r\n                                                                                        <p style={{ color: \"red\" }}>\r\n                                                                                            Minimum size should be 500x500\r\n                                                                                        </p>\r\n                                                                                    )\r\n                                                                                    s\r\n                                                                                    } */}\r\n                                                                                                </div>\r\n                                                                                            }\r\n\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\r\n                                                                                                <div>\r\n                                                                                                    {/* { source?.length && source?.[index] && source[index]?.type === \"Player\" && ( */}\r\n                                                                                                    <video\r\n                                                                                                        // className=\"VideoInput_video\"\r\n                                                                                                        width=\"100%\"\r\n                                                                                                        // height={height}\r\n                                                                                                        controls\r\n                                                                                                        src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                                    // onChange={setSource}\r\n                                                                                                    />\r\n                                                                                                    {/* )} */}\r\n                                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                                        <label>Preview Image</label>\r\n                                                                                                        <p>\r\n                                                                                                            Because you’ve included\r\n                                                                                                            multimedia, you’ll need to provide\r\n                                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                                            the card display of your item\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                    <div\r\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                                        style={{\r\n                                                                                                            backgroundImage:\r\n                                                                                                                \"url('')\",\r\n                                                                                                            backgroundSize: \"contain\",\r\n                                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                                            backgroundPosition: \"center\",\r\n                                                                                                        }}\r\n                                                                                                    >\r\n                                                                                                        <input\r\n                                                                                                            type=\"file\"\r\n                                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                                        // onChange={previewChange}\r\n                                                                                                        />\r\n                                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                                    <img\r\n                                                                                                                        className=\"preview_image\"\r\n                                                                                                                        src={URL.createObjectURL(preview[index])}\r\n\r\n\r\n                                                                                                                    // onChange={setPimage}\r\n                                                                                                                    />\r\n                                                                                                                )}\r\n                                                                                                            </div>\r\n                                                                                                        }\r\n                                                                                                    </div>\r\n\r\n                                                                                                </div>\r\n                                                                                            }\r\n\r\n                                                                                            {/* )} */}\r\n                                                                                            {/* <div className=\"VideoInput_footer\">{vdo || \"Nothing selectd\"}</div> */}\r\n\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\r\n                                                                                                <div>\r\n                                                                                                    <DModal\r\n                                                                                                        vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                                    // mdl={setModal}\r\n                                                                                                    />\r\n\r\n                                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                                        <label>Preview Image</label>\r\n                                                                                                        <p className=\"\">\r\n                                                                                                            Because you’ve included multimedia,\r\n                                                                                                            you’ll need to provide an image\r\n                                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                                            display of your item\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                    <div\r\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                                        style={{\r\n                                                                                                            backgroundImage:\r\n                                                                                                                \"url('')\",\r\n                                                                                                            backgroundSize: \"contain\",\r\n                                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                                            backgroundPosition: \"center\",\r\n                                                                                                        }}\r\n                                                                                                    >\r\n                                                                                                        <input\r\n                                                                                                            type=\"file\"\r\n                                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                                        />\r\n                                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                                    <img\r\n                                                                                                                        className=\"preview_image\"\r\n                                                                                                                        src={URL.createObjectURL(preview[index])} />\r\n                                                                                                                )}\r\n                                                                                                            </div>\r\n                                                                                                        }\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                        {/* </Form.Item> */}\r\n                                                                                        {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a MP4 File',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        >\r\n    \r\n                                                                            <VideoInput width={400} height={300} />\r\n    \r\n    \r\n                                                                        </Form.Item> */}\r\n\r\n                                                                                        {/* <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>MP4 & MP3 </label>\r\n                                                                                <VideoInput width={400} height={300} />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>3D Modal </label>\r\n                                                                                <Dinosaur />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                               \r\n    \r\n                                                                            </div>\r\n                                                                        </div> */}\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n\r\n                                                                ))}\r\n\r\n\r\n                                                            </>\r\n                                                        </>\r\n                                                    )}\r\n                                                </Form.List>\r\n                                                <Form.Item>\r\n                                                    <div className=\"col-12\">\r\n                                                        <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\r\n                                                            Add\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </Form.Item>\r\n                                            </Form>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\nexport default AddNft;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\n\r\nimport AddNft from '../components/Create/addNft';\r\n\r\nconst AddNFT = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AddNft />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddNFT;","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ReadMore from '../../readMore';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport FundDetail from '../../themes/fund-detail';\r\nimport latprojDetails from '../../themes/latproj-details';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllFundraise = () => {\r\n\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    <h3 className=\"mt-3 mb-0\">All Fundraiser's</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {/* {fund && fund.length ?\r\n                                [...new Map(fund.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\r\n                            {fund?.map((item, idx) => {\r\n\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} to={`/fundraiser/detail/${item.user_id}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <div className=\"card project_cards position-relative \">\r\n                                                {/* matic */}\r\n                                                {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span className='matics'>{item.amount} MATIC</span>\r\n                                                  \r\n                                                </div> */}\r\n                                                <div className=\"image-over position-relative \">\r\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                    <img className=\"card-img-top\" src={item?.organization_detail?.banner_image} />\r\n                                                </div>\r\n                                                <div className='token'>\r\n                                                    <span></span>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\r\n                                                        <a>\r\n                                                            <h5 className=\"mb-0 mt-3\">{item?.organization_detail?.organization_name} </h5>\r\n                                                        </a>\r\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                    <span>Owned By</span>\r\n                                                                    <a href=\"/author\">\r\n                                                                        <h6 className=\"ml-2 mb-0\">You</h6>\r\n                                                                    </a>\r\n                                                                </div> */}\r\n                                                        <div className=''>\r\n                                                            <p dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 50) }} />\r\n                                                            {/* <p> It is a long established fact that a reader</p> */}\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className='mb-2 d-flex align-items-center justify-content-between'>\r\n                                                            <div className='mt-2 mb-2 d-flex text-align-center fundraiser_sale'>\r\n                                                                <div>\r\n                                                                    <span>Created</span>\r\n                                                                    <div>148</div>\r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    <span>Sale</span>\r\n                                                                    <div>100</div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                                            </svg></span>\r\n                                                        </div>\r\n\r\n                                                        {/* <div className='donate-btn'>\r\n                                                                <button className='btn ml-lg-auto btn-bordered-white'>Donate Now</button>\r\n                                                            </div> */}\r\n                                                        \r\n\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                            {/* }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    <h2 className='allproj2'>\r\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                    </h2>\r\n                                </div>\r\n                            } */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllFundraise; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport GetAllFundraise from '../components/Explore/fundraiserProjects';\r\n\r\nconst AllFundraiser = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllFundraise />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllFundraiser;","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { GetfundraiserProject, ProjectList } from '../../redux/Actions/projectAction';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllFundraiseProjects = (props) => {\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n    const { user_id } = useParams()\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    console.log(fundprojdetail, 'fundprojdetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetfundraiserProject(user_id))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    <h3 className=\"mt-3 mb-0\">Fundraiser Projects</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {/* {fund && fund.length ?\r\n                                [...new Map(fund.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\r\n                            {fundprojdetail?.map((item, idx) => {\r\n\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} to={`/projdetails/${item.id}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <div className=\"card project_cards\">\r\n                                                <div className=\"image-over relative \">\r\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                    <img className=\"card-img-top\" src={item?.nft_data[0]?.image} alt={item.nft_data.description} />\r\n                                                </div>\r\n                                                <div className='token'>\r\n                                                    <span></span>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <a>\r\n                                                            <h5 className=\"mb-0\">{item.title.slice(0, 20)}</h5>\r\n                                                        </a>\r\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                            <span>Owned By</span>\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\"></h6>\r\n                                                            </a>\r\n                                                        </div> */}\r\n                                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                            <span>{item.price} MATIC</span>\r\n                                                            <span>{item.nft_data.length} NFTS </span>\r\n                                                            <span> + {item.number_of_nft} NFTS </span>\r\n                                                        </div>\r\n\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                            {/* }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    <h2 className='allproj2'>\r\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                    </h2>\r\n                                </div>\r\n                            } */}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllFundraiseProjects; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport GetAllFundraiseProjects from '../components/Explore/fundProj';\r\n\r\nconst AllFundraiserProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllFundraiseProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllFundraiserProjects;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { Button } from 'bootstrap';\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from '../TopSeller/fundraiserdetail';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst MyFundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    // console.log(fundprojdetail, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div class=\"row py-0\">\r\n                    <div className='col-12 p-0'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-between px-0\">\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div className='custam_col'>\r\n                            <h5 class=\"user_title\"><div>Description</div></h5>\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n                                    <div className=\"card no-hover detail_single_nfts\">\r\n\r\n                                        <li className='nft_price'>\r\n                                            ${funddetail?.total_fundraised} raised from all projects\r\n\r\n                                        </li>\r\n\r\n\r\n                                        {/* <li className=\"price d-flex justify-content-between\">\r\n                                                <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"> 71% </span>\r\n    \r\n                                            </li> */}\r\n\r\n                                    </div>\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        {/* <li className='card-inner-heading'>\r\n                                            <span style={{}}>Projects</span>\r\n                                        </li> */}\r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    // console.log('todat', date2)\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    // const totaldays = days_difference.slice(0,1)\r\n                                                    // console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                    {/* {(item.created_at).diff(new Date, 'day', true)} */}\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-12'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default MyFundraiserDetail;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport MyFundraiserDetail from '../components/Explore/my_fundraise';\r\n\r\nconst FundraiserProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <MyFundraiserDetail />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FundraiserProjects;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst Rewards = () => {\r\n\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>How Creator and Referral MATIC Rewards Work</h3>\r\n                        <span className='termsandconditions'><li>Affiliates get 30% on first level NFT referred sales at Karmatica.io only.</li>\r\n                            <li>Creators get 10% of secondary NFT sales for the lifetime of the project.</li>\r\n                            <br />\r\n                            <h5>NFT sale to BUYER 1 </h5>\r\n                            69% goes to Creator <br />\r\n                            30% goes to Affiliate<br />\r\n                            1% to Karmatica<br />\r\n                            <br />\r\n                            <h5>NFT resold from BUYER 1 to BUYER 2 via Affiliate</h5>\r\n                            84% goes to BUYER 1<br />\r\n                            10% goes to NFT Creator<br />\r\n                            5% goes to Affiliate <br />\r\n                            1% to Karmatica<br />\r\n                        </span>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default Rewards","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport Rewards from '../components/Footer/reward';\r\n\r\nconst NftReward = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <Rewards />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NftReward;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AllNoti, GetUserAction, NotiDelete } from '../../redux/Actions/authAction'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\nimport moment from \"moment\";\r\nconst AllNotifications = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const nooti = useSelector(state => {\r\n\r\n        return state?.user?.noti\r\n    })\r\n    useEffect(() => {\r\n        dispatch(AllNoti())\r\n        dispatch(GetUserAction())\r\n    }, [])\r\n    const deleteHandler = (id) => {\r\n        dispatch(NotiDelete(id))\r\n    }\r\n    console.log(nooti, 'noti')\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-7\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <ul className='termsandconditions' >\r\n                            {nooti.map((item) => {\r\n                                return (\r\n                                    <><li>{item.title}</li>\r\n                                        <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\r\n                                            <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n\r\n                        {/* <h3>{footer?.footer?.title}</h3> */}\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AllNotifications","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport AllNotifications from './../components/Header/Allnotifications';\r\n\r\nconst Notifi = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AllNotifications />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Notifi;","import React, { Component, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { GetUserAction } from \"../../redux/Actions/authAction\";\r\nimport {\r\n    CategoriesAction,\r\n    getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\n\r\n\r\nconst ExploreBuyedNfts = () => {\r\n    const { type } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <h3 className=\"mt-3 mb-0\">\r\n                                My NFTs\r\n                                {/* {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")} */}\r\n                            </h3>\r\n                            <p>\r\n                                Invest in NFTs that are based on real-life projects or events\r\n                                related to important causes\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {userdet?.purchase_nft && userdet?.purchase_nft?.length ? (\r\n                        [\r\n                            ...new Map(\r\n                                userdet?.purchase_nft?.map((item) => [item[\"title\"], item])\r\n                            ).values(),\r\n                        ].map((item, idx) => {\r\n                            return (\r\n                                <Link\r\n                                    key={`edth_${idx}`}\r\n                                    className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                                >\r\n                                    <div>\r\n                                        <Link to={`/my/nfts-detail/${item.slug}`}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"image-over\">\r\n                                                    <Link to={`/my/nfts-detail/${item.slug}`}>\r\n                                                        <img\r\n                                                            className=\"card-img-top\"\r\n                                                            src={item.image}\r\n                                                            alt=\"\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                    {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                                                </div>\r\n\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                                                        <a >\r\n                                                            <h5 className=\"mb-0\">\r\n                                                                {item.title.slice(0, 15)}\r\n                                                            </h5>\r\n                                                        </a>\r\n                                                        <div\r\n                                                            className=\"seller d-flex align-items-center my-3\"\r\n\r\n                                                        >\r\n                                                            <span>Owned By</span>\r\n                                                            {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\">\r\n                                                                    {/* {item.user_data.username.slice(0, 12)} */}\r\n                                                                    You\r\n                                                                </h6>\r\n                                                            </a>\r\n\r\n                                                            {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                                        </div>\r\n                                                        <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                                                            <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                            {/* {item?.number_of_nft == 1 ? (\r\n                                                                <span>{item.number_of_nft} NFT</span>\r\n                                                            ) : (\r\n                                                                <span>{item.number_of_nft} NFTs</span>\r\n                                                            )} */}\r\n                                                        </div>\r\n                                                        <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                                                            <Link to={`/my/nfts-detail/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                                                <i className=\"icon-handbag\" />\r\n                                                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                                                            </Link>\r\n                                                            <Link to={`/my/nfts-detail/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                            <h2 className=\"allproj2\">No latest project found</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default ExploreBuyedNfts;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreBuyedNfts from '../components/Explore/BuyedNfts';\r\n\r\nconst BuyedNft = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ExploreBuyedNfts />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default BuyedNft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetbuyedNftDetails, NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftBuydataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const slug = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails?.getBuyedNftdetails\r\n\r\n    })\r\n    useEffect(() => {\r\n        dispatch(GetbuyedNftDetails(props.slug))\r\n        // dispatch(ProjectDetail(slug))\r\n    }, [props.slug])\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n                        <thead>\r\n                            {/* {latprojnftdetail?.map((items) => { \r\n                         return (  */}\r\n\r\n                            <><tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr><tr className='contract-address'>\r\n                                    <th >Contract</th>\r\n                                    <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${nftdetail?.collectionData?.contract_id}`} >{nftdetail.collectionData?.contract_id?.slice(0, 5)}.....{nftdetail.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                </tr><tr>\r\n                                    <th>Token ID</th>\r\n                                    <td>{nftdetail.token_id}</td>\r\n                                </tr><tr>\r\n                                    <th>Token Stranded</th>\r\n                                    <td>ERC721</td>\r\n                                </tr></>\r\n\r\n                            {/* )})} */}\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* {projdetail.nft_data?.map((items) => { */}\r\n                            {/* // return ( */}\r\n                            <tr>\r\n\r\n                                <td>\r\n                                    {/* {items.collectionData?.contract_id} */}\r\n                                </td>\r\n                                <td>\r\n                                    {/* {items.token_id} */}\r\n                                </td>\r\n                                {/* <td>ERC721</td> */}\r\n                                {/* <td>Polygon (Matic)</td> */}\r\n                            </tr>\r\n                            {/* // ) */}\r\n                            {/* })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n                {/* <div className='nothing'>\r\n                No matching records found\r\n                        </div> */}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftBuydataTable","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetbuyedNftDetails, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport Web3 from 'web3';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport EditCollection from '../ItemDetails/updateCollection';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport { CreateMetaDataAndMint } from './../Wallet/interact';\r\nimport NftPopup from '../ItemDetails/nftPopup';\r\nimport axios from 'axios';\r\nimport { redirect } from 'next/dist/server/api-utils';\r\nimport LatprojNftDetails from '../Auctions/nftBuy';\r\nimport DModal from '../Create/3dModal';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport NftAuctiondataTable from '../ItemDetails/nftAuctiontable';\r\nimport SellPopup from '../ItemDetails/sellPopup';\r\nimport EditNftName from '../Create/editNftNamepopup';\r\nimport EditNftDesc from '../Create/editDescPopup';\r\nimport EditNftImage from '../Create/nftImageeditPopup';\r\nimport NftBuydataTable from './NftBuyData';\r\nimport { GetMatic } from '../ItemDetails/GetMAtic';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\n\r\nconst BuyedNftDetails = (props) => {\r\n    const history = useHistory()\r\n    const [nftId, setNftID] = useState();\r\n    // const search = useLocation().search;\r\n    // const projslug = new URLSearchParams(search).get('project');\r\n    // console.log(projslug, 'projslug')\r\n    // const latprojnftdetail = useSelector(state => {\r\n    //     // \r\n    //     return state.projectdetails.getnftwoldetails\r\n    // })\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [sellmodalShow, setSellModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [modalShoweditdes, setModalShoweditdes] = React.useState(false);\r\n    const [modalShoweditimg, setModalShoweditimg] = React.useState(false);\r\n    // const [mintmodalShow, setMintModalShow] = React.useState(false);\r\n\r\n    const [current, setCurrent] = React.useState(0)\r\n    const [contractAdd, setContractAdd] = useState('')\r\n\r\n    const slug = useParams();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getBuyedNftdetails\r\n\r\n    })\r\n    // console.log(\"nftmint\", nftdetail.is_mint)\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetbuyedNftDetails(slug))\r\n        // dispatch(GetSettings())\r\n    }, [slug])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n                            {/* {nftdetail.is_mint == 0 &&\r\n\r\n                                <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n\r\n                                    <div >\r\n                                        <div className='position-absolute nft-edit-icon'><i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditimg(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        </div>\r\n                                        <div className='loader-img'>{modalShoweditimg &&\r\n\r\n                                            <EditNftImage\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditimg}\r\n                                                onHide={() => setModalShoweditimg(false)} />\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            } */}\r\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n                                {nftdetail.extention === \"Player\" &&\r\n\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={nftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={nftdetail.image}\r\n                                    // mdl={setModal}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"Image\" &&\r\n\r\n                                    <img src={nftdetail.image} alt=\"\" />\r\n                                }\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-sm-0\">\r\n                        <div className=' card no-hover py-0 mt-2 mb-2 mt-lg-0 mb-lg-0 '>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{nftdetail?.title} </span>\r\n                            {/* {nftdetail.is_mint == 0 &&\r\n                                <div className='nft-edit-icon position-absolute mt-2'>\r\n                                    <i className=\"fa-solid fa-pen \" onClick={(e) => {\r\n                                        setNftID(slug)\r\n                                        e.preventDefault();\r\n                                        setModalShowedit(true)\r\n                                    }\r\n                                    } ></i>\r\n                                    {modalShowedit &&\r\n\r\n                                        <EditNftName\r\n                                            // debugger\r\n                                            id={projslug}\r\n                                            nft_id={nftId}\r\n                                            show={modalShowedit}\r\n                                            onHide={() => setModalShowedit(false)} />\r\n                                    }\r\n                                </div>\r\n                            } */}\r\n\r\n                        </div>\r\n                        <div className=\"content sm:mt-3 mt-lg-2\">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    {/* <span>{nftdetail?.user_data?.username}</span> */}\r\n                                    <span>You</span>\r\n\r\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {nftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{nftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                {nftdetail.nft_type === \"1\" ? (\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                            disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                        </>\r\n\r\n                                    </div>\r\n\r\n\r\n                                ) : (\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            onClick={() => setSellModalShow(true)}>  Sell</button>\r\n                                            <SellPopup\r\n\r\n                                                show={sellmodalShow}\r\n                                                slug={slug}\r\n\r\n                                                onHide={() => setSellModalShow(false)}\r\n                                                nftid={nftdetail.id}\r\n                                                ismint={nftdetail.is_mint}\r\n                                            />\r\n\r\n                                        </>\r\n\r\n                                    </div>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-12 md:col-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            {/* <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                                {nftdetail?.is_mint == 0 &&\r\n                                    <div className='nft-edit-icon position-absolute mt-2'>\r\n                                        <i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditdes(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        {modalShoweditdes &&\r\n\r\n                                            <EditNftDesc\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditdes}\r\n                                                onHide={() => setModalShoweditdes(false)} />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div> */}\r\n                            <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft \" />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4'>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    {/* <img src='../../img/image14.png' /> */}\r\n                                    {/* <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg> */}\r\n                                    {/* <span>{latprojnftdetail.amount}</span> */}\r\n                                    <img src='../../img/image14.png' />\r\n                                    <span><small>{nftdetail.amount} / ${nftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn</small> </span>\r\n                                    {/* <span><small>${nftdetail.amount}</small></span> */}\r\n                                </div>\r\n\r\n                                <div className='sales'>\r\n                                    <span>\r\n                                        Creator royalties on secondary sales:\r\n                                    </span>\r\n                                    <span>5%</span>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-8 col-12'>\r\n                        <div className=\"profile_detail mt-4\">\r\n\r\n                            <NftBuydataTable\r\n                                slug={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className='col-12 mt-4'>\r\n                        <div className='container table-detail'>\r\n\r\n                            <NftAuctiondataTable\r\n                                slug={slug}\r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* <div className='col-12 description'>\r\n                    <h3 > Description</h3>\r\n                    <div className=\"card no-hover countdown-times my-4\">\r\n            \r\n                        <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft\" />\r\n                    </div>\r\n                     </div> */}\r\n                </div >\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default BuyedNftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport BuyedNftDetails from '../components/Explore/NftBuyedDetails';\r\nconst BuyNftDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main main-fund-detail\">\r\n\r\n            <Header />\r\n            <BuyedNftDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default BuyNftDetail;","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnnualRevenueList, CountryList, CreateOrganizationAfterRoleChange, HearAboutList, Register } from '../../redux/Actions/authAction'\r\nimport { Controller, useForm } from 'react-hook-form'\r\n\r\nimport { useHistory } from 'react-router'\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\r\nimport { useState } from 'react'\r\nimport JoditEditor from 'jodit-react';;\r\n\r\n// import { Widget } from \"@uploadcare/react-widget\";\r\n// import FileUpload from \"react-material-file-upload\";\r\n// import { uploadcare } from '../lib/uploadcare.min.js';\r\nconst RoleChangeOrganizationdetails = () => {\r\n\r\n    const [description, setDescription] = useState()\r\n\r\n    const editor = useRef(null);\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n\r\n    const OnSubmit = (values) => {\r\n        // debugger\r\n        // FormData.append('email', data.email)\r\n        // FormData.append('password', data.password)\r\n        // FormData.append('confirm_password', data.confirm_password)\r\n        const formData = new FormData()\r\n        formData.append('banner_image', values.banner_image[0])\r\n        formData.append('logo', values.logo[0])\r\n        formData.append('wallet_id', values.wallet_id)\r\n        // formData.append('role', data.role)\r\n        formData.append('goal', values.goal)\r\n        formData.append('organization_name', values.organization_name)\r\n        formData.append('url', values.url)\r\n        formData.append('country', values.country)\r\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\r\n        formData.append('tax_id', values.tax_id)\r\n\r\n        formData.append('social', values.social)\r\n        formData.append('social_link', values.social_link)\r\n        formData.append('description', description)\r\n        // formData.append('method_heard_detail', values.method_heard_detail)\r\n\r\n        dispatch(CreateOrganizationAfterRoleChange(formData))\r\n        // if (formData) {\r\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\r\n        //     history.push('/login')\r\n        // }\r\n    }\r\n\r\n    const socialmedia = useSelector(state => {\r\n        return state?.getSocialmediaIcons?.getsocial\r\n    })\r\n    // console.log('social', socialmedia)\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n        dispatch(AnnualRevenueList())\r\n        dispatch(HearAboutList())\r\n        dispatch(GetSocialMediaIcons())\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        {/* <div className={formStep === 1 ? styles.showForm : styles.hideForm}> */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            {/* <button\r\n                                    // className={styles.back}\r\n                                    onClick={prevFormStep}\r\n                                    type=\"button\"\r\n                                >\r\n                                    back\r\n                                </button> */}\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Fundraising Goal</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"goal\"\r\n                                            step=\"0.01\"\r\n                                            placeholder=\"Fundraising goal (MATIC)\"\r\n                                            {...register(\"goal\",\r\n                                                {\r\n                                                    required: true,\r\n\r\n                                                })}\r\n                                            aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                        {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Funding Wallet </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"wallet_id\"\r\n                                            // defaultValue='1'\r\n                                            placeholder=\"Funding Wallet\"\r\n                                            {...register(\"wallet_id\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"organization_name\"\r\n                                            placeholder=\"Organization name\"\r\n                                            {...register(\"organization_name\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.organization_name ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Website</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"url\"\r\n                                            placeholder=\"Website\"\r\n                                            {...register(\"url\", {\r\n                                                required: true,\r\n                                                pattern: {\r\n                                                    value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                                }\r\n                                            })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.url ? \"true\" : \"false\"}\r\n                                        />\r\n\r\n                                        {errors.url && errors.url?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                                        {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Describe your project\"\r\n\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form- group mt-3\">\r\n                                        <label>Description</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n\r\n                                            // {...register(\"description\", { required: true })}\r\n                                            rules={{ required: true, min: 150 }}\r\n                                            // rules={{\r\n                                            //     required: true, pattern: {\r\n\r\n                                            //         message: \"Description is required\",\r\n                                            //     },\r\n                                            // }}\r\n                                            render={({ field }) => {\r\n                                                return <JoditEditor\r\n                                                    ref={field.ref}\r\n                                                    value={field.value}\r\n                                                    // config={config}\r\n                                                    aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                                    placeholder=\"start typing\"\r\n                                                    tabIndex={1} // tabIndex of textarea\r\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                    onChange={field.onChange}\r\n                                                />\r\n                                            }}\r\n                                        />\r\n                                        {errors?.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Country</label>\r\n\r\n                                        <select name=\"country\"\r\n                                            {...register(\"country\", { required: true })}>\r\n                                            aria-invalid={errors.country ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                            {countries.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"annual_revenue_range\"\r\n                                                {...register(\"annual_revenue_range\", { required: true })}>\r\n                                                {annualRevenue?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key.id} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>EIN Number/Tax Id</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"tax_id\"\r\n                                            placeholder=\"EIN Number/Tax Id(optional)\"\r\n                                            {...register(\"tax_id\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Social Media (required)</label>\r\n                                        <select name=\"social\"\r\n                                            {...register(\"social\", { required: true })}>\r\n                                            aria-invalid={errors.social ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\r\n                                            {socialmedia?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.title}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Social Media (secondary)</label>\r\n                                        <div className=\"input-group-prepend\">\r\n\r\n                                            <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"social_link\"\r\n                                                placeholder=\"social link(optional) \"\r\n                                                {...register(\"social_link\")}\r\n                                            // {...register(\"email\")}\r\n                                            // aria-invalid={errors.social_link ? \"true\" : \"false\"}\r\n                                            />\r\n                                        </div>\r\n                                        {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"project\"\r\n                                                {...register(\"hear_about\", { required: true })}>\r\n                                                {hereAbout?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Banner</label>\r\n                                        <input\r\n                                            className=\"form-control p-2\"\r\n                                            type=\"file\"\r\n\r\n                                            name=\"banner_image\"\r\n                                            placeholder=\"Select file\"\r\n                                            disp\r\n                                            {...register(\"banner_image\", { required: true })}\r\n                                            aria-invalid={errors.banner_image ? \"true\" : \"false\"}\r\n                                        />\r\n                                        <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\r\n\r\n                                        {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Logo</label>\r\n                                        <input\r\n                                            className=\"form-control p-2\"\r\n                                            type=\"file\"\r\n                                            name=\"logo\"\r\n                                            placeholder=\"Select file\"\r\n                                            {...register(\"logo\", { required: true })}\r\n                                            aria-invalid={errors.logo ? \"true\" : \"false\"}\r\n                                        />\r\n                                        <div className='logo_one'>\r\n\r\n                                            <span className='logo-dis'>maximum height should be 250 pixels</span>\r\n                                        </div>\r\n                                        {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\r\n                                </div>\r\n                                {/* <div className=\"col-3\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => goBack()}>Previous</button>\r\n                                    </div> */}\r\n                            </div>\r\n                        </form>\r\n                        {/* </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default RoleChangeOrganizationdetails","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport RoleChangeOrganizationdetails from '../components/Signup/roleChangeOrginazationdetails';\r\n\r\nexport const createOrganizationafterRoleChange = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <RoleChangeOrganizationdetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Nftprice, Nftdeatil } from './nftprice'\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { updateReffid } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport ReadMore from '../../readMore';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport UserdataTable from '../AuthorProfile/userTransTable';\r\nimport NftTransdataTable from './nftTRansTable';\r\nimport LatNftDataTable from '../Explore/latnftTable';\r\nimport BidPopup from './bidPopup';\r\nimport DModal from '../Create/3dModal';\r\nimport Timer from './timer';\r\nimport BuyPopup from './buyPopup';\r\nimport { GetMatic } from './../ItemDetails/GetMAtic';\r\nimport { ResellActionDetails } from '../../redux/Actions/resellNftAction';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst ResellNftDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [ownwallet, setOwnWallet] = useState('')\r\n    const [matic, setMatic] = useState('')\r\n    const [ownFee, setOwnFee] = useState('')\r\n    const [bidmodalShow, setBidModalShow] = React.useState(false);\r\n    const [buymodalShow, setBuyModalShow] = React.useState(false);\r\n    const [referalid, setReferalid] = useState(\"\")\r\n\r\n    const [platformFee, setPlatformFee] = useState('')\r\n    console.log('own', ownwallet)\r\n    const slug = useParams();\r\n    // console.log(id, 'idd')\r\n    const resellnftdetail = useSelector(state => {\r\n        // \r\n        return state.resell?.reselldetails\r\n    })\r\n    console.log(resellnftdetail, 'latext')\r\n    // console.log(\"latround\", Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad)))\r\n    // console.log('paymentflow', [latprojnftdetail.payment_flow?.project_data.wallets])\r\n\r\n\r\n    const getSett = useSelector(state => {\r\n        // \r\n        return state.projectdetails.settings\r\n    })\r\n    console.log('getSett', getSett)\r\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\r\n    console.log('sett', setValue)\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetUserAction())\r\n        dispatch(ResellActionDetails(slug))\r\n        dispatch(GetSettings())\r\n\r\n\r\n    }, [slug])\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    // const reffHandler = () => {\r\n    //     (updateReffid({ tokenId: latprojnftdetail.token_id, refid, nft_id: latprojnftdetail.id }))\r\n    // }\r\n    const buyHandler = () => {\r\n\r\n        // setOwnWallet([latprojnftdetail.payment_flow?.project_data.wallets])\r\n        // setOwnFee([latprojnftdetail.payment_flow?.project_data.fees])\r\n        // setPlatformFee([latprojnftdetail.payment_flow?.karmatica_fee])\r\n\r\n\r\n        BuyNft({\r\n\r\n            contractAddress: resellnftdetail?.collectionData?.contract_id,\r\n            tokenId: resellnftdetail.token_id,\r\n            payFrom: resellnftdetail.pay_from,\r\n            values: setValue.value,\r\n            sellingCount: resellnftdetail.selling_count,\r\n            platformFee: ([resellnftdetail.payment_flow?.karmatica_fee]),\r\n\r\n            ownerFee: ([resellnftdetail.payment_flow?.project_data?.fees]),\r\n            ownerWallet: ([resellnftdetail.payment_flow?.project_data?.wallets]),\r\n            flow: ([resellnftdetail.payment_flow]),\r\n\r\n            proj_id: resellnftdetail.project_id,\r\n            nft_id: resellnftdetail.id,\r\n            loadingg: setLoading,\r\n            modal: setBuyModalShow,\r\n        })\r\n    }\r\n    // const bidHandler = () =>{\r\n    // if(window.ethereum?.selectedAddress){\r\n    //     debugger\r\n\r\n    //     dispatch(BidPopup())\r\n    // }else{\r\n    //     ConnectWallet()\r\n    // }\r\n    // }\r\n    // const yestTime = \"9:24:49 PM\"\r\n    // const timeNow = new Date()?.toLocaleTimeString() - yestTime()\r\n    // console.log(\"time now\", timeNow)\r\n    // const yesterday = new Date(new Date().getTime() - (24 * 60 * 60 * 1000));\r\n    // console.log('yestwe', yesterday)\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                        <span Class=\"title_main \" style={{ color: '#fff' }}>{resellnftdetail.title}  </span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n\r\n                                {/* {latprojdetail?.nft_data?.map((item, idx) => { */}\r\n                                {/*  */}\r\n                                {/* return ( */}\r\n                                {resellnftdetail.extention === \"PLayer\" &&\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={resellnftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n\r\n                                {resellnftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={resellnftdetail.image}\r\n\r\n                                    />\r\n                                }\r\n                                {resellnftdetail.extention === 'Image' &&\r\n\r\n                                    <img src={resellnftdetail.image} alt=\"\" />\r\n                                }\r\n                                {/* ) */}\r\n                                {/* })} */}\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\r\n                        {/* <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{resellnftdetail.title}  </span>\r\n\r\n\r\n                        </div> */}\r\n                        <div className=\"content \">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{resellnftdetail.owned_by}</span>\r\n\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {resellnftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled mb-0\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{resellnftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Affiliate first sale royalties : </span>\r\n                                    <span> 30%</span>\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>NFT creator royalties : </span>\r\n                                    <span> 10%</span>\r\n\r\n                                </div>\r\n\r\n\r\n                                <div className='eddlbtton d-flex gap- align-items-center mt-2 justify-content-between'>\r\n\r\n                                    {/* <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <li><span class='boldertext'>Affiliate first sale royalties: 20%</span></li>\r\n                                       <li><span class='boldertext'>NFT creator royalties: 10% </span></li> \r\n                                        <li><span class='boldertext'>Affiliate secondary royalties: 5% </span></li>\r\n\r\n                                        \r\n                                    </ul>\r\n                                </div> */}\r\n                                    <div className='eddlbtton flex-wrap d-flex gap-10  align-items-center mt-2'>\r\n                                        {/* {resellnftdetail.type == 1 ? ( */}\r\n                                        {resellnftdetail.sold_nft == 1 ? (\r\n                                            <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" disabled>SOLD OUT</button>\r\n                                        ) : (\r\n\r\n                                            <>\r\n                                                {resellnftdetail.user_id === userdet.user_id ? (\r\n                                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                            disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                                        </>\r\n\r\n                                                    </div>\r\n                                                ) : (\r\n\r\n                                                    <><button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                        id=\"nftdetail.id\" onClick={() => { buyHandler(); setBuyModalShow(true); setLoading(true); }}>Buy Now</button><BuyPopup\r\n                                                            show={buymodalShow}\r\n                                                            loading={loading}\r\n\r\n\r\n                                                            onHide={() => setBuyModalShow(false)} /></>\r\n\r\n                                                )}\r\n\r\n                                            </>\r\n                                        )}\r\n                                        {/* ) : ( */}\r\n\r\n                                        {/* <><button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                onClick={() => setBidModalShow(true)}>Place Bid</button><BidPopup\r\n\r\n                                                    id={resellnftdetail.id}\r\n                                                    projid={resellnftdetail.project_id}\r\n                                                    projtitle={resellnftdetail.title}\r\n                                                    projcoll={resellnftdetail?.collectionData?.title}\r\n                                                    show={bidmodalShow}\r\n                                                    onHide={() => setBidModalShow(false)} /></>\r\n                                        )} */}\r\n\r\n                                    </div>\r\n                                    {/* <Timer\r\n                                        time={resellnftdetail.end_date}\r\n                                    /> */}\r\n                                    <div className='eddlbtton bitbtn d-flex  align-items-center mt-2'>\r\n\r\n                                        <div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <p dangerouslySetInnerHTML={{ __html: resellnftdetail.description }} />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: resellnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4 '>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <img src='../../../../img/image14.png' />\r\n                                    {/* <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg> */}\r\n                                    <span><small>{resellnftdetail.amount}  / ${resellnftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n                                    {/* <span><small>$120</small></span> */}\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=''>\r\n                            <div className=\"profile_detail mt-4\">\r\n\r\n                                <LatNftDataTable\r\n                                // id={id}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <NftTransdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"col-12\">\r\n                        <div className=\"card no-hover countdown-times my-4 \">\r\n                            <span dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                        </div>\r\n\r\n                    </div> */}\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\nexport default ResellNftDetails;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ResellNftDetails from '../components/Auctions/resellNftBuy';\r\n\r\nconst ResellDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ResellNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ResellDetail;","import React, { Component, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n    CategoriesAction,\r\n    getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\nimport { ResellAction } from \"../../redux/Actions/resellNftAction\";\r\n\r\n\r\n\r\nconst ExploreAllResell = () => {\r\n    const slug = useParams();\r\n    const dispatch = useDispatch();\r\n    const nfts = useSelector((state) => {\r\n        return state?.resell?.resell;\r\n    });\r\n    console.log(nfts, \"resellnfts\");\r\n    useEffect(() => {\r\n        dispatch(ResellAction())\r\n\r\n    }, [dispatch]);\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <h3 className=\"mt-3 mb-0\">\r\n                                All Reselled NFTs\r\n                            </h3>\r\n                            <p>\r\n                                Invest in NFTs that are based on real-life projects or events\r\n                                related to important causes\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {nfts && nfts.length ? (\r\n                        [\r\n                            ...new Map(\r\n                                nfts?.map((item) => [item[\"title\"], item])\r\n                            ).values(),\r\n                        ].map((item, idx) => {\r\n                            return (\r\n                                <Link\r\n                                    key={`edth_${idx}`}\r\n                                    className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                                >\r\n                                    <div>\r\n                                        <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"image-over\">\r\n                                                    <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                                        <img\r\n                                                            className=\"card-img-top\"\r\n                                                            src={item.image}\r\n                                                            alt=\"\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                    {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                                                </div>\r\n\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                                                        <a >\r\n                                                            <h5 className=\"mb-0\">\r\n                                                                {item.title.slice(0, 15)}\r\n                                                            </h5>\r\n                                                        </a>\r\n                                                        <div\r\n                                                            className=\"seller d-flex align-items-center my-3\"\r\n\r\n                                                        >\r\n                                                            <span>Owned By</span>\r\n                                                            {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\">\r\n                                                                    {item.user_data.username.slice(0, 12)}\r\n                                                                </h6>\r\n                                                            </a>\r\n\r\n                                                            {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                                        </div>\r\n                                                        <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                                                            <span><img className=\"mr-1\" src='../../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                            {/* {item?.number_of_nft == 1 ? ( */}\r\n                                                            <span>1 NFT</span>\r\n                                                            {/* ) : ( */}\r\n                                                            {/* <span>{item.number_of_nft} NFTs</span> */}\r\n                                                            {/* )} */}\r\n                                                        </div>\r\n                                                        <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                                                            <Link to={`/nft/resell/details/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                                                <i className=\"icon-handbag\" />\r\n                                                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                                                            </Link>\r\n                                                            <Link to={`/nft/resell/details/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                            <h2 className=\"allproj2\">No NFTs found</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default ExploreAllResell;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreAllResell from '../components/Explore/viewallResell';\r\n\r\nconst AllResellNft = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ExploreAllResell />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AllResellNft;","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport { Link } from 'react-router-dom';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nconst RefralTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n    }, [props.id])\r\n    const location = useLocation()\r\n    return (\r\n        //         <Tabs>\r\n        //     <TabList>\r\n        //       <Tab>Title 1</Tab>\r\n        //       <Tab>Title 2</Tab>\r\n        //     </TabList>\r\n\r\n        //     <TabPanel>\r\n        //       <h2>Any content 1</h2>\r\n        //     </TabPanel>\r\n        //     <TabPanel>\r\n        //       <h2>Any content 2</h2>\r\n        //     </TabPanel>\r\n        //   </Tabs>\r\n        <footer className=\"footer-area\">\r\n            {/* Footer Top */}\r\n            <div className=\"footer-top\">\r\n                <div className=\"container\">\r\n                    <Tabs>\r\n                        <TabList>\r\n                            <Tab>How To Earn</Tab>\r\n                            <Tab>My Referrals</Tab>\r\n                        </TabList>\r\n                        <TabPanel>\r\n                            <div>\r\n                                <h3>How Creator and Referral MATIC Rewards Work</h3>\r\n                                <span className='termsandconditions'><li>Affiliates get 30% on first level NFT referred sales at Karmatica.io only.</li>\r\n                                    <li>Creators get 10% of secondary NFT sales for the lifetime of the project.</li>\r\n                                    <br />\r\n                                    <h5>NFT sale to BUYER 1 </h5>\r\n                                    69% goes to Creator <br />\r\n                                    30% goes to Affiliate<br />\r\n                                    1% to Karmatica<br />\r\n                                    <br />\r\n                                    <h5>NFT resold from BUYER 1 to BUYER 2 via Affiliate</h5>\r\n                                    84% goes to BUYER 1<br />\r\n                                    10% goes to NFT Creator<br />\r\n                                    5% goes to Affiliate <br />\r\n                                    1% to Karmatica<br />\r\n                                </span></div>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n\r\n                            <div className='position-relative'>\r\n                                <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                                    <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                        <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                        <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    </svg>\r\n                                    <Panel header=\"Referral Activity\" key=\"1\">\r\n                                        <Table responsive className='m-0' >\r\n                                            <thead>\r\n\r\n\r\n                                                <tr>\r\n\r\n                                                    <th>Item</th>\r\n                                                    <th>Token</th>\r\n                                                    <th>NFT Price</th>\r\n                                                    <th>Referral Amount</th>\r\n                                                    <th>Collection</th>\r\n                                                    <th>From</th>\r\n                                                    <th>To</th>\r\n\r\n                                                    <th>Transaction</th>\r\n                                                </tr>\r\n\r\n\r\n                                            </thead>\r\n\r\n\r\n                                            <tbody>\r\n                                                {userdet?.referral_history?.map((items) => {\r\n                                                    return (\r\n\r\n                                                        <><tr className='contract-address'>\r\n\r\n                                                            <td ><Link to={`/nftprojdetails/${items.slug}`} >{items.title?.slice(0, 20)}</Link>...</td>\r\n                                                            <td>#{items.token_id}</td>\r\n                                                            <td>{items.price}</td>\r\n                                                            {/* <td>{items.referral_amount} </td> */}\r\n                                                            <td className='referal'>{items.referral_amount} <img src='../../img/image14.png' /></td>\r\n                                                            <td><Link to={`/popularcollection/details/${items.collection_slug}`}>{items.collection_name}</Link></td>\r\n                                                            <td>{items.pay_from?.slice(0, 4)}...{items.pay_from?.slice(35, 44)}</td>\r\n                                                            <td>{items.pay_to?.slice(0, 4)}...{items.pay_to?.slice(35, 44)}</td>\r\n                                                            <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/tx/${items?.transaction_hash}`} >{items.transaction_hash?.slice(0, 4)}...{items.transaction_hash?.slice(35, 44)}</a></td>\r\n                                                        </tr>\r\n                                                        </>\r\n\r\n                                                    )\r\n                                                })}\r\n\r\n                                            </tbody>\r\n\r\n\r\n\r\n\r\n                                        </Table>\r\n                                        <div className='nothing'>\r\n                                            {userdet?.referral_history?.length == 0 &&\r\n                                                <span> No matching records found</span>\r\n                                            }\r\n                                        </div>\r\n                                    </Panel>\r\n\r\n                                </Collapse>\r\n                            </div>\r\n                        </TabPanel>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default RefralTransdataTable","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport RefralTransdataTable from '../components/Explore/viewReferals';\r\n\r\nconst AllReraltrans = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <RefralTransdataTable />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AllReraltrans;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\n// importing all the themes\r\nimport ThemeOne from \"../themes/theme-one\";\r\nimport ExploreOne from \"../themes/explore-one\";\r\nimport ExploreTwo from \"../themes/project-list\";\r\nimport ExploreFour from \"../themes/latestProjects\";\r\nimport Auctions from \"../themes/auctions\";\r\nimport ItemDetails from \"../themes/item-details\";\r\nimport Activity from \"../themes/activity\";\r\nimport HelpCenter from \"../themes/help-center\";\r\nimport Authors from \"../themes/authors\";\r\nimport Author from \"../themes/author\";\r\nimport WalletConnect from \"../themes/wallet-connect\";\r\nimport Create from \"../themes/create\";\r\nimport Login from \"../themes/login\";\r\nimport Signup from \"../themes/signup\";\r\nimport Contact from \"../themes/contact\";\r\nimport Forgot from \"../themes/forgotpassword\";\r\nimport PrivateRoute from \"./privateRoutes\";\r\nimport ProjectUpdate from \"../themes/update\";\r\nimport TermsCond from \"../themes/term&cond\";\r\nimport All from \"../themes/viewalllatest\";\r\nimport ColExplore from \"../themes/exploreCollections\";\r\nimport Aboutus from \"../themes/Aboutus\";\r\nimport latprojDetails from \"../themes/latproj-details\";\r\nimport Showcollections from \"../themes/showcollections\";\r\nimport CollectionDetail from \"../themes/collectn-details\";\r\nimport ProjNft from \"../themes/projnft-details\";\r\nimport Nft from './../themes/nft-list';\r\nimport FundDetail from \"../themes/fund-detail\";\r\nimport latnftprojDetails from \"../themes/Latnft\";\r\nimport ScrollToTop from \"../ScrollToTop\";\r\nimport EditNft from \"../components/Create/editNft\";\r\nimport AddNFT from \"../themes/addnftTheme\";\r\nimport AllFundraiser from \"../themes/allFundproj\";\r\nimport AllFundraiserProjects from \"../themes/fund-projects\";\r\nimport FundraiserProjects from \"../themes/fundraise\";\r\nimport NftReward from \"../themes/rwrd\";\r\nimport Notifi from \"../themes/allnot\";\r\nimport BuyedNft from \"../themes/buyed-nft\";\r\nimport BuyNftDetail from \"../themes/buyNft-details\";\r\nimport { createOrganizationafterRoleChange } from \"../themes/rolechange-organization\";\r\nimport ResellDetail from \"../themes/resell-details\";\r\nimport AllResellNft from \"../themes/allresellNfts\";\r\nimport AllReraltrans from \"../themes/all-refrals\";\r\n\r\n\r\nconst MyRouts = () => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <ScrollToTop />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ThemeOne} />\r\n          <Route exact path=\"/explore-1\" component={ExploreOne} />\r\n          <Route exact path=\"/projectlist\" component={ExploreTwo} />\r\n          <Route exact path=\"/create/organization\" component={createOrganizationafterRoleChange} />\r\n          <Route exact path=\"/allnotifications\" component={Notifi} />\r\n          <Route exact path=\"/updateproject/:id\" component={ProjectUpdate} />\r\n          {/* <Route exact path=\"/projectlist\" component={ExploreThree} /> */}\r\n          <Route exact path=\"/explore-4\" component={ExploreFour} />\r\n          <Route exact path=\"/nft/resell/details/:slug\" component={ResellDetail} />\r\n          <Route exact path=\"/my/nfts\" component={BuyedNft} />\r\n          <Route exact path=\"/my/nfts-detail/:slug\" component={BuyNftDetail} />\r\n          <Route exact path=\"/rewards\" component={NftReward} />\r\n          <Route exact path=\"/auctions\" component={Auctions} />\r\n          <Route exact path=\"/popularcollection/details/:slug\" component={ItemDetails} />\r\n          <Route exact path=\"/projects/:slug\" component={latprojDetails} />\r\n          <Route exact path=\"/referals-detail\" component={AllReraltrans} />\r\n          <Route exact path=\"/nftprojdetails/:slug\" component={latnftprojDetails} />\r\n          <Route exact path=\"/fundraiser/detail/:user_id\" component={FundDetail} />\r\n          <Route exact path=\"/myfundraiser/detail/:user_id\" component={FundraiserProjects} />\r\n          <Route exact path=\"/projnftdetails/:slug\" component={ProjNft} />\r\n          <Route exact path=\"/allfundraise\" component={AllFundraiser} />\r\n          <Route exact path=\"/all/fundraise/projects/:user_id\" component={AllFundraiserProjects} />\r\n          <Route exact path=\"/nft/details/:id\" component={Nft} />\r\n          <Route exact path=\"/nftedit/:id/:id\" component={EditNft} />\r\n          <Route exact path=\"/addnft/:id\" component={AddNFT} />\r\n          <Route exact path=\"/activity\" component={Activity} />\r\n          <Route exact path=\"/help-center\" component={HelpCenter} />\r\n          <Route exact path=\"/authors\" component={Authors} />\r\n          <Route exact path=\"/profile\" component={Author} />\r\n          <Route exact path=\"/terms&conditions\" component={TermsCond} />\r\n          <Route exact path=\"/all/:type\" component={All} />\r\n          <Route exact path=\"/all/resll/nfts\" component={AllResellNft} />\r\n          <Route exact path=\"/aboutus\" component={Aboutus} />\r\n          <Route exact path=\"/allcollections\" component={ColExplore} />\r\n          <Route exact path=\"/wallet-connect\" component={WalletConnect} />\r\n          <Route exact path=\"/my-collections\" component={Showcollections} />\r\n          <Route exact path=\"/collection/:id\" component={CollectionDetail} />\r\n          {/* <Route exact path=\"/newest-projects\" component={NewestProj} /> */}\r\n\r\n          <Route exact path=\"/create\" component={Create} />\r\n\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          {/* <PrivateRoute exact path=\"/create-organization\" component={createOrganization} /> */}\r\n          <PrivateRoute exact path=\"/forgotpassword\" component={Forgot} />\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyRouts\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\n// importing MyRouts where we located all of our theme\r\nimport MyRouts from './routers/routes'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MyRouts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport { authReducer } from '../redux/Slices/authSlice'\r\nimport { combineReducers } from '@reduxjs/toolkit'\r\nimport { projectReducer } from './Slices/projectSlice'\r\nimport { footerReducer } from './Slices/footerSlice'\r\nimport { fundraiserReducer } from './Slices/fundraiserSlice'\r\nimport { collectionReducer } from './Slices/popularCollectionSlice'\r\nimport { contactReducer } from './Slices/contactSlice';\r\nimport { resellReducer } from './Slices/resellNftSlice'\r\n\r\nconst reducer = combineReducers({\r\n    user: authReducer,\r\n    countries: authReducer,\r\n    annualRevenue: authReducer,\r\n    hereAbout: authReducer,\r\n    login: authReducer,\r\n    forgotpassword: authReducer,\r\n    errmessage: authReducer,\r\n    createproject: projectReducer,\r\n    // getproject: projectReducer,\r\n    projectdetails: projectReducer,\r\n    latestprojects: projectReducer,\r\n    fundraiser: fundraiserReducer,\r\n    footer: footerReducer,\r\n    collection: collectionReducer,\r\n    getcollections: collectionReducer,\r\n    getcollectiondetails: collectionReducer,\r\n    getSocialmediaIcons: projectReducer,\r\n    contact: contactReducer,\r\n    resell: resellReducer\r\n    // userDetail: authReducer,\r\n\r\n    // Nftlist: projectReducer\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer,\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css'\r\nimport App from './App';\r\nimport store from '../src/redux/store';\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__DKvey\",\"formCard\":\"styles_formCard__Vehpw\",\"formRow\":\"styles_formRow__13Stn\",\"back\":\"styles_back__3AVbA\",\"input-error\":\"styles_input-error__3FssS\",\"error\":\"styles_error__1A4Gx\",\"disabledBtn\":\"styles_disabledBtn__qMaBa\",\"steps\":\"styles_steps__2TgQb\",\"errorText\":\"styles_errorText__9D9Jp\",\"hideForm\":\"styles_hideForm__19FPq\",\"showForm\":\"styles_showForm__2S4hD\"};"],"sourceRoot":""}