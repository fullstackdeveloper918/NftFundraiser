{"version":3,"sources":["components/Signup/styles/styles.module.scss","redux/Slices/authSlice.js","redux/Slices/projectSlice.js","redux/Actions/logsAction.js","redux/Actions/projectAction.js","components/Wallet/interact.js","redux/Actions/authAction.js","components/Header/Header.js","components/Hero/Hero.js","components/Auctions/AuctionsOne.js","redux/Slices/popularCollectionSlice.js","redux/Actions/popularAction.js","components/Collections/Collections.js","components/Work/Work.js","redux/Slices/footerSlice.js","redux/Actions/footerAction.js","components/Footer/Footer.js","components/Modal/ModalSearch.js","components/Modal/ModalMenu.js","components/Scrollup/Scrollup.js","redux/Slices/fundraiserSlice.js","redux/Actions/fundraiserAction.js","components/TopSeller/topfundraiser.js","redux/Slices/resellNftSlice.js","redux/Actions/resellNftAction.js","components/Auctions/resellNft.js","themes/theme-one.js","components/Breadcrumb/Breadcrumb.js","components/Explore/ExploreTwo.js","themes/explore-one.js","components/Loader/loader.js","components/Explore/ProjectList.js","themes/project-list.js","themes/latestProjects.js","components/Explore/LatestProjects.js","themes/auctions.js","readMore.js","components/TopSeller/fundPaymenttable.js","components/AuthorProfile/userDetails.js","components/AuthorProfile/userTransTable.js","components/Create/projectDetailpopup.js","components/Explore/projDetailtable.js","components/Explore/latProjNftdata.js","components/Auctions/projectnfts.js","components/Collections/collectionNfts.js","components/Explore/popularDetails.js","themes/item-details.js","components/HelpCenter/HelpCenter.js","components/Faq/Faq.js","themes/help-center.js","shared/Upload.js","utils/blobfromurl.js","components/Create/editBanner.js","components/AuthorProfile/avatarUpload.js","components/AuthorProfile/bannerUpload.js","components/AuthorProfile/AuthorProfile.js","components/Explore/ExploreSix.js","components/Author/Author.js","themes/author.js","components/Wallet/Wallet.js","themes/wallet-connect.js","components/Create/Context/context.js","components/Create/Create.js","components/Create/createCollection.js","components/Create/3dModal.js","components/Create/ProjectTypePopup.js","components/Create/uploadNft.js","components/Create/index.js","themes/create.js","components/Signup/Signup.js","components/Signup/Context/context.js","redux/Slices/contactSlice.js","components/Contact/Contact.js","redux/Actions/contactAction.js","themes/contact.js","components/ForgotPassword/forgotPassword.js","themes/forgotpassword.js","routers/utils.js","routers/privateRoutes.js","components/Create/geoLocation.js","Edit/editProject.js","themes/update.js","components/Footer/t&c.js","themes/term&cond.js","components/Explore/viewAllLatest.js","themes/viewalllatest.js","components/Collections/exploreCollection.js","themes/exploreCollections.js","components/Footer/about.js","themes/Aboutus.js","components/ItemDetails/refralPopup.js","components/Create/editNft.js","components/Explore/nftdataTable.js","components/ItemDetails/GetMAtic.js","components/ItemDetails/viewProdetails.js","themes/latproj-details.js","components/Create/showCollections.js","themes/showcollections.js","components/Create/bread-crumb.js","components/Create/collectionDetail.js","themes/collectn-details.js","components/Create/desPopup.js","components/Create/projdetails.js","themes/projnft-details.js","components/ItemDetails/nftAuctiontable.js","components/ItemDetails/nftPopup.js","components/ItemDetails/sellPopup.js","components/Create/editNftNamepopup.js","components/Create/editDescPopup.js","components/Create/nftImageeditPopup.js","components/ItemDetails/nftDetails.js","themes/nft-list.js","components/TopSeller/fundraiserdetail.js","components/TopSeller/fundraiserDetails.js","themes/fund-detail.js","components/Auctions/nftTRansTable.js","components/Explore/latnftTable.js","components/Auctions/bidPopup.js","components/Auctions/timer.js","components/Auctions/buyPopup.js","components/Auctions/nftBuy.js","themes/Latnft.js","ScrollToTop.js","components/Create/addNft.js","themes/addnftTheme.js","components/Explore/fundraiserProjects.js","themes/allFundproj.js","components/Explore/fundProj.js","themes/fund-projects.js","components/Explore/my_fundraise.js","themes/fundraise.js","components/Footer/reward.js","themes/rwrd.js","components/Header/Allnotifications.js","themes/allnot.js","components/Explore/BuyedNfts.js","themes/buyed-nft.js","components/Explore/NftBuyData.js","components/Explore/NftBuyedDetails.js","themes/buyNft-details.js","components/Signup/roleChangeOrginazationdetails.js","themes/rolechange-organization.js","components/Auctions/resellNftBuy.js","themes/resell-details.js","components/Explore/viewallResell.js","themes/allresellNfts.js","components/Explore/widgetPopup.js","components/Explore/viewReferals.js","themes/all-refrals.js","notFound.js","components/Explore/widget.js","routers/routes.js","App.js","redux/store.js","index.js","components/Create/styles/styles.module.scss"],"names":["module","exports","userToken","sessionStorage","getItem","authSlice","createSlice","name","initialState","user","userdetail","role","logout","message","countries","states","city","noti","annualRevenue","hereAbout","updpro","wallesign","auctionnoti","organization","reducers","registerSuccess","state","action","payload","data","auth_token","setItem","registerFail","response","allnotification","updateprofile","userDetail","userAuction","loginSuccess","logoutSuccess","removeItem","forgotpasswordSuccess","createOrganizationSuccess","wallsignin","getCountryList","getStateList","getCityList","getAnnualRevenueList","getHearAboutList","authReducer","reducer","actions","projectSlice","project","projects","nftlist","projectdetails","latestprojectdetails","categories","collections","getcollections","getcollectiondetails","collectiondetails","getSocialmediaIcons","getfundProjDetails","getmostProjActivity","getBuyedNftdetails","getPaymentFlow","getnftwoldetails","settings","liveProjectsPag","nftadd","nftres","nftupdate","updbanner","matic","liveProjects","LatestProjects","RecentCampaigns","createProjectSuccess","createCollectionSuccess","getCollections","getsocial","getCollectionDetails","getNftwolDetails","getNftwolDetailsPaymentflow","nftUpd","nftAdd","getfundprojdetails","getmostprojactivity","getbuyednftdetails","getProjectList","getMatic","getCategoriesList","getSettings","getLatestProjectList","createFail","getProjectDetail","getCollectionDetail","Nftres","getNftList","getLatestProjectDetail","updatebanner","publicLiveProjects","type","res","publicLiveProjectspagination","deleteProject","id","filter","item","projectReducer","LogsAction","params","dispatch","formData","FormData","append","config","headers","transformRequest","axios","post","process","console","log","CreateProjectAction","setLoading","history","token","Authorization","status","swal","title","text","icon","buttons","timer","then","push","ProjectDetail","slug","get","LatestProjectDetail","ProjectList","location","pathname","count","setCount","NftList","uploadNFT","nft","i","length","success","getPublicLiveProjects","createAsyncThunk","thunkAPI","setLatestData","projectType","latitude","longitude","UpdateProject","props","onHide","CategoriesAction","GetCollectionsAction","GetSocialMediaIcons","GetSettings","GetNftwol","refid","refId","GetfundraiserProject","UpdateNft","nft_id","AddNftAction","projid","getBid","UpdateBId","GetbuyedNftDetails","ResellNft","createAlchemyWeb3","require","contractABI","isMetaMaskInstalled","Boolean","window","ethereum","web3","Roles","creatorWalletUpdate","selectedAddress","UpdateWalletAddress","ConnectWallet","chainId","networkVersion","request","method","utils","toHex","code","chainName","nativeCurrency","decimals","symbol","rpcUrls","blockExplorerUrls","addressArray","obj","address","target","rel","href","getCurrentWalletConnected","UpdateStatus","token_id","transaction_hash","pay_from","pay_to","setModalShow","price","start_date","end_date","UpdateContract","collid","contractAddress","CreateMetaDataAndMint","_imgBuffer","_des","_name","setCurrent","nft_file_content","eth","Contract","abi","contract","getGasPrice","sendTransaction","from","to","methods","mint","encodeABI","on","hash","receipt","confNumber","tokid","toBN","logs","topics","transactionHash","error","UpdateBuyHistory","proj_id","txd_id","payFrom","tokenId","values","updateReffid","setPaymentFlow","BuyNft","platformFee","sellingCount","ownerFee","flow","ownerWallet","loadingg","modal","wallets","fee","buyer_data","map","x","karmatica_fees","project_data","referral_fees","fees","nftContract","memory_clients","wal","memory_amounts","amt","amountToSend","parseFloat","toWei","buyNft","send","value","gasPrice","gasLimit","JSON","stringify","UpdateBid","amount","project_id","BidNft","GetUserAction","CreateOrganizationAfterRoleChange","CountryList","StateList","CityList","AnnualRevenueList","HearAboutList","UpdateProfileAction","Swal","fire","html","showCloseButton","showConfirmButton","focusConfirm","AllNoti","NotiDelete","delete","Header","useLocation","useHistory","useDispatch","useState","setAddress","add1","slice","toUpperCase","add2","notification","useNotification","api","contextHolder","userRole","useSelector","userdet","userauction","useEffect","getSelectedAddress","accounts","localStorage","addEventListener","handleBeforeUnload","removeEventListener","e","preventDefault","returnValue","notiHandler","activeOption","setActiveOption","toast","configure","roleHandler","ChangeUserRole","WalletHandler","is_new_user","continue","skip","className","src","alt","exact","activeClassName","onClick","confirmButtonText","confirmButtonAriaLabel","notification_count","moment","created_at","format","style","color","backgroundColor","email","class","display","user_id","projectTypesMap","Hero","options","enableHighAccuracy","timeout","maximumAge","pos","crd","coords","errors","err","warn","mostactivityProjects","cursor","navigator","geolocation","permissions","query","result","getCurrentPosition","onchange","alert","image","user_data","username","xmlns","viewBox","version","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fill","fillRule","points","dur","repeatCount","attributeName","AuctionsOne","match","join","idx","Math","round","number_of_nft","collectionSlice","collection","collectiondetail","getPopularCollection","getPopularCollectiondetails","collectionReducer","PopularCollectionAction","PopularCollectionActionDetails","Collections","coll","avatar","width","height","nft_data","preHeading","heading","workData","Work","footerSlice","footer","aboutus","getfooter","getabout","footerReducer","getFooter","AboutUsAction","Footer","Date","getFullYear","ModalSearch","placeholder","ModalMenu","Scrollup","fundraiserSlice","fundraiser","fundraiserdetail","getTopFundraiser","getTopFundraiserDetail","fundraiserReducer","TopFundraiserAction","TopFundraiserDetail","Fundraiser","fund","organization_detail","banner_image","organization_name","Number","resellSlice","resell","reselldetails","getResell","getReselldetails","resellReducer","ResellAction","Resell","nfts","Home","Breadcrumb","this","subpage","page","Component","ExploreTwo","exploreData","setState","catch","btnText","img","owner","ExploreOne","Loader","Spinner","animation","margin","GetAllProjects","loading","showDeleteHandler","dangerMode","willDelete","DeleteProject","Map","is_nft_mintted","description","current_page","totalPageCount","LatestProject","Auctions","ReadMore","isReadMore","setIsReadMore","dangerouslySetInnerHTML","__html","FundTransdataTable","Panel","Collapse","expandIconPosition","funddetail","country","defaultActiveKey","onChange","key","opacity","d","cx","cy","r","header","Table","responsive","payment_history","items","UserTransdataTable","useParams","UserdataTable","wallet_id","referrers","referral_amount","total_fundraised","ProjDetailPopup","useRef","useForm","register","handleSubmit","formState","setValue","control","watch","setDescription","setType","setCountry","setCity","handleChangeCountry","event","currentTarget","handleChangeState","handleChangeCity","cities","projdetail","cat","Object","keys","category_id","Modal","size","centered","Body","onSubmit","required","render","field","onBlur","ref","disabled","selected","option","defaultValue","min","max","today","dd","String","getDate","padStart","mm","getMonth","disablePastDate","ProjdataTable","React","modalShowproj","setModalShowproj","latprojdetail","date1","updated_at","time_difference","getTime","days_difference","ceil","show","dayjs","country_name","state_name","city_name","category","LatNftdataTable","project_activity","nft_title","ProjNFTS","marginLeft","sold_nft","extention","preview_imag","CollectionNFTS","collNft","CollectionDetails","Web3","providers","HttpProvider","ItemDetails","initData","pre_heading","content","HelpCenter","btnClass","quote","contentId","contentClass","Faq","UploadImage","initalImag","setImageSrc","imageSrc","initialImage","borderRadius","language","objectFit","compressInitial","hideDownloadBtn","imageSrcProp","imageChanged","newDataUri","dataURLtoBlob","dataurl","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","Banner","Title","Upload","Button","UpdateBanner","AvatarUpload","BannerUpload","AuthorProfile","modalSho","setModalSho","modalShowavatar","setModalShowavatar","textTransform","filter_1","filter_2","filter_3","filter_4","filter_5","group","author","likes","Author","Wallet","handleConnect","walletData","WalletConnect","FormContext","createContext","FormProvider","children","setData","Provider","setFormValues","prevValues","useFormData","useContext","Create","current","next","prev","setPrice","setImage","usertype","setUserType","countryName","setCountryName","mode","imageUri","country_id","date","setDate","toISOString","substr","styles","showForm","hideForm","imageBanner","pattern","rules","minLength","tabIndex","newContent","step","entries","MyVerticallyCenteredModal","dat","short_url","CreateCollectionAction","DModal","vdo","refContainer","renderer","setRenderer","source","file","container","scW","clientWidth","scH","clientHeight","THREE","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","outputEncoding","appendChild","domElement","scene","scale","camera","initialCameraPosition","sin","PI","cos","ambientLight","add","controls","OrbitControls","autoRotate","enableZoom","minDistance","minZoom","GLTFLoader","load","gltf","traverse","child","isMesh","m","receiveShadow","castShadow","isLight","l","shadow","bias","mapSize","xhr","animate","loaded","total","req","frame","requestAnimationFrame","p","rotSpeed","sqrt","pow","position","y","z","lookAt","update","cancelAnimationFrame","dispose","left","top","ProTypePopup","defaultValue1","startdate","enddate","nftno","maxLength","UploadNft","editor","nft_description","setNft_description","modalShow","projmodalShow","setProjModalShow","nft_collection_id","setNft_collection_id","nftimage","setNftImage","nftwidth","setNftwidth","nftHeight","setNftheight","Pimage","setPimage","startDate","setStartDate","endDate","setEndDate","numberofNfts","setNumberofNfts","coll_id","setSource","sourceType","setSourceType","setNFtExtension","preview","setPreview","projtype","setProjType","nftName","setNftName","nftDescription","convertToBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","previewChange","index","pimage","files","base64","previ","col","lat","onFinish","imagesRes","addedImage","image_hash","check","includes","nft_name","Form","form","nftNameHandler","prevState","initialValues","autoComplete","List","fields","remove","transform","restField","accordion","URL","createObjectURL","Item","nftDescriptionHandler","MinusCircleOutlined","prevCount","onHandleClick","background","marginBottom","border","variant","backgroundImage","backgroundSize","backgroundRepeat","maxCount","filetype","fr","Image","handleUpload","accept","backgroundPosition","block","PlusOutlined","steps","UploadNftIndex","Yup","shape","password","confirm_password","oneOf","contactSlice","contact","postContact","contactReducer","Contact","subject","ContactAction","cols","rows","ForgotPassword","forgotpassword","statusCode","Forgot","PrivateRoute","component","rest","restricted","Geonames","lan","encoding","EditProject","htmlFor","ProjectUpdate","TermsConditions","TermsCond","ExploreAll","All","AllCollections","ColExplore","AboutUs","about","Aboutus","ReferalPopup","copy","setCopy","url","userRef","userprojurl","TwitterShareButton","TwitterIcon","FacebookShareButton","FacebookIcon","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","EmailIcon","onMouseLeave","EditNft","nftFileType","setNFtFileType","setNft","previewnft","setPreviewnft","modalShowcoll","setModalShowcoll","nftdetail","setFieldsValue","collection_id","nft_image","nftImagepromises","all","defaultValues","NftdataTable","collectionData","contract_id","GetMatic","setMatic","ProjDetails","search","URLSearchParams","modalShowrefer","setModalShowrefer","project_count","cad","referrer_id","logo","ProgressBar","varient","now","project_percentage","user_invest","latprojDetails","ShowCollections","Showcollections","CollItem","coldetail","GetCollectionDetails","CollectionDetail","DesPopup","ProjNftDetails","setmatic","modalShowDes","setModalShowDes","projmodalShows","setProjModalShows","direction","showIcon","closable","is_mint","ProjNft","NftAuctiondataTable","bidstatus","antIcon","LoadingOutlined","fontSize","textAlign","spin","indicator","bids","bid_approved_id","NftPopup","Step","Steps","closeButton","CheckOutlined","SellPopup","auctiontype","setAuctionType","autionTypeChange","deployContract","MyNFTContract","NFTContract","deploy","bytecode","arguments","ismint","OnSubmit","nftid","defaultChecked","EditNftName","EditNftDesc","EditNftImage","NftDetails","nftId","setNftID","projslug","sellmodalShow","setSellModalShow","modalShowedit","setModalShowedit","modalShoweditdes","setModalShoweditdes","modalShoweditimg","setModalShoweditimg","Class","Nft","FunddataTable","tax_number","web_url","FundraiserDetail","fundprojdetail","investHandler","FundDetail","NftTransdataTable","latprojnftdetail","nft_history","LatNftDataTable","CONTRACT_ADDRESS_URL","BidPopup","projtitle","projcoll","Timer","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","interval","setInterval","time","parse","floor","clearInterval","BuyPopup","LatprojNftDetails","bidmodalShow","setBidModalShow","buymodalShow","setBuyModalShow","find","buyHandler","selling_count","payment_flow","karmatica_fee","reffHandler","owned_by","latnftprojDetails","ScrollToTop","scrollTo","AddNft","AddNFT","GetAllFundraise","AllFundraiser","GetAllFundraiseProjects","AllFundraiserProjects","MyFundraiserDetail","FundraiserProjects","Rewards","NftReward","AllNotifications","nooti","Notifi","ExploreBuyedNfts","purchase_nft","BuyedNft","NftBuydataTable","BuyedNftDetails","nft_type","BuyNftDetail","RoleChangeOrganizationdetails","socialmedia","goal","tax_id","social","social_link","disp","createOrganizationafterRoleChange","ResellNftDetails","resellnftdetail","ResellActionDetails","ResellDetail","ExploreAllResell","AllResellNft","WidgetPopup","ModalHeader","RefralTransdataTable","projSlug","setProjSlug","nftSlug","setNftslug","widgetModalShow","setWidgetModalShow","referral_history","collection_slug","collection_name","iFrame","project_name","AllReraltrans","NotFound","subTitle","extra","Widget","MyRouts","path","ThemeOne","ExploreFour","App","combineReducers","login","errmessage","createproject","latestprojects","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f344e481.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2WtIN\",\"formCard\":\"styles_formCard__21H-v\",\"formRow\":\"styles_formRow__3enWK\",\"back\":\"styles_back__Y5gPH\",\"input-error\":\"styles_input-error__2qs7U\",\"error\":\"styles_error__3GxTv\",\"disabledBtn\":\"styles_disabledBtn__1VhSY\",\"steps\":\"styles_steps__3iMIJ\",\"errorText\":\"styles_errorText__25OJH\",\"hideForm\":\"styles_hideForm__2oCjE\",\"showForm\":\"styles_showForm__17ZN1\"};","import { createSlice } from '@reduxjs/toolkit'\n// Slice\nconst userToken = sessionStorage.getItem('authToken')\n    // ? JSON.parse(sessionStorage.getItem('user'))\n    ? sessionStorage.getItem('authToken')\n    : null\n\nconst authSlice = createSlice({\n    name: 'user',\n    initialState: {\n        user: {},\n        userdetail: [],\n        userToken,\n        role: null,\n        // wallToken,\n        logout: {},\n        message: {},\n        countries: [],\n        states: [],\n        city: [],\n        noti: [],\n        annualRevenue: [],\n        hereAbout: [],\n        updpro: [],\n        wallesign: [],\n        auctionnoti: [],\n        organization: false\n    },\n    reducers: {\n        registerSuccess: (state, action) => {\n            state.user = action.payload;\n            state.userToken = action.payload.data.data.auth_token;\n            state.role = action.payload.data.data.role;\n            sessionStorage.setItem('authToken', action.payload.data.data.auth_token)\n        },\n        registerFail: (state, action) => {\n            // \n            state.message = action.payload.response.data.message\n        },\n        allnotification: (state, action) => {\n\n            state.noti = action.payload.data.data\n        },\n        updateprofile: (state, action) => {\n            // \n            state.updpro = action?.payload?.data?.data;\n        },\n        userDetail: (state, action) => {\n            // \n            state.userdetail = action.payload.data.data\n        },\n        userAuction: (state, action) => {\n            // \n            state.auctionnoti = action.payload.data.data\n        },\n        loginSuccess: (state, action) => {\n            state.user = action.payload;\n            state.role = action.payload?.data?.data?.role;\n            state.message = action.payload?.data?.message\n            state.userToken = action.payload?.data?.data?.auth_token;\n            sessionStorage.setItem('authToken', action.payload?.data?.data?.auth_token)\n        },\n        logoutSuccess: (state) => {\n            sessionStorage.removeItem('authToken')\n            state.user.role = null\n            state.userToken = null\n        },\n        forgotpasswordSuccess: (state, action) => {\n            state.user = action.payload;\n            state.message = action.payload.data.message\n\n        },\n        createOrganizationSuccess: (state, action) => {\n            state.user = action.payload;\n            state.organization = true\n        },\n        wallsignin: (state, action) => {\n            state.wallesign = action.payload?.data?.data;\n        },\n        getCountryList: (state, action) => {\n            state.countries = action.payload;\n        },\n        getStateList: (state, action) => {\n            state.states = action.payload;\n        },\n        getCityList: (state, action) => {\n            state.city = action.payload;\n        },\n\n        getAnnualRevenueList: (state, action) => {\n            state.annualRevenue = action.payload;\n        },\n\n        getHearAboutList: (state, action) => {\n            state.hereAbout = action.payload;\n        },\n    },\n});\n\nexport const authReducer = authSlice.reducer\n\nexport const {\n    allnotification,\n    registerSuccess,\n    createOrganizationSuccess,\n    getCountryList,\n    getStateList,\n    getCityList,\n    getAnnualRevenueList,\n    getHearAboutList,\n    loginSuccess,\n    userAuction,\n    forgotpasswordSuccess,\n    logoutSuccess,\n    registerFail,\n    userDetail,\n    wallsignin,\n    updateprofile\n} = authSlice.actions;","import { createSlice } from '@reduxjs/toolkit'\n// // Slice\n// const userToken = sessionStorage.getItem('authToken')\n//     // ? JSON.parse(sessionStorage.getItem('user'))\n//     ? sessionStorage.getItem('authToken')\n//     : null\nconst projectSlice = createSlice({\n    name: 'project',\n\n    initialState: {\n        project: [],\n        projects: [],\n        nftlist: [],\n        projectdetails: [],\n        latestprojectdetails: [],\n        categories: [],\n        collections: [],\n        getcollections: [],\n        getcollectiondetails: [],\n        collectiondetails: [],\n        getSocialmediaIcons: [],\n        getfundProjDetails: [],\n        getmostProjActivity: [],\n        getBuyedNftdetails: [],\n        getPaymentFlow:[],\n        getnftwoldetails: [],\n        settings: [],\n        liveProjectsPag: [],\n        nftadd: [],\n        nftres: [],\n        nftupdate: [],\n        updbanner: [],\n        matic: [],\n        // liveProjects: [],\n        liveProjects: {\n            LatestProjects: [],\n            RecentCampaigns: []\n        },\n        message: {},\n    },\n    reducers: {\n        createProjectSuccess: (state, action) => {\n            state.project = action.payload;\n        },\n        createCollectionSuccess: (state, action) => {\n            state.collections = action.payload;\n        },\n        getCollections: (state, action) => {\n            // \n            state.getcollections = action?.payload?.data?.data;\n        },\n        getSocialmediaIcons: (state, action) => {\n            // \n            state.getsocial = action?.payload?.data?.data;\n        },\n        getCollectionDetails: (state, action) => {\n            // \n            state.getcollectiondetails = action?.payload?.data?.data;\n        },\n        getNftwolDetails: (state, action) => {\n            state.getnftwoldetails = action?.payload?.data?.data;\n        },\n        getNftwolDetailsPaymentflow: (state, action) => {\n            state.getPaymentFlow = action?.payload?.data?.data;\n        },\n        nftUpd: (state, action) => {\n            // \n            state.nftupdate = action?.payload?.data?.data;\n        },\n        nftAdd: (state, action) => {\n            // \n            state.nftadd = action?.payload?.data?.data;\n        },\n        getfundprojdetails: (state, action) => {\n            // \n            state.getfundProjDetails = action?.payload?.data?.data;\n        },\n        getmostprojactivity: (state, action) => {\n            state.getmostProjActivity = action?.payload?.data?.data;\n        },\n        getbuyednftdetails: (state, action) => {\n            state.getBuyedNftdetails = action?.payload?.data?.data;\n        },\n        getProjectList: (state, action) => {\n            state.projects = action.payload?.data?.data\n        },\n        getMatic: (state, action) => {\n            state.matic = action.payload?.data?.data\n        },\n        getCategoriesList: (state, action) => {\n            state.categories = action?.payload?.data?.data;\n        },\n        getSettings: (state, action) => {\n            state.settings = action?.payload?.data?.data;\n        },\n\n        getLatestProjectList: (state, action) => {\n            state.projects = action.payload;\n        },\n        createFail: (state, action) => {\n            // \n            state.message = action.payload.response.data.message\n        },\n        getProjectDetail: (state, action) => {\n            // \n            state.projectdetails = action?.payload?.data?.data;\n        },\n        getCollectionDetail: (state, action) => {\n            // \n            state.collectiondetails = action?.payload?.data?.data;\n        },\n        Nftres: (state, action) => {\n            // \n            state.nftres = action?.payload?.data?.data;\n        },\n        getNftList: (state, action) => {\n            // \n            state.nftlist = action?.payload?.data?.data;\n        },\n        getLatestProjectDetail: (state, action) => {\n            // \n            state.latestprojectdetails = action?.payload?.data?.data;\n        },\n        updatebanner: (state, action) => {\n            // \n            state.updbanner = action?.payload?.data?.data;\n        },\n        publicLiveProjects: (state, action) => {\n            state.liveProjects[action.payload.type] = action.payload.res.data.data\n            // state.liveProjects = action.payload.data.data.data\n            // state.liveProjects['R'] = action.payload.data.data.data\n        },\n        publicLiveProjectspagination: (state, action) => {\n            state.liveProjectsPag = action.payload.res.data.data\n            // state.liveProjects = action.payload.data.data.data\n            // state.liveProjects['R'] = action.payload.data.data.data\n        },\n        deleteProject: (state, action) => {\n            const { id } = action.payload?.data?.data;\n            state.projects = state.projects.filter(item => item.id !== id)\n        }\n    },\n});\n\nexport const projectReducer = projectSlice.reducer\n\nexport const {\n    createProjectSuccess,\n    getProjectList,\n    getProjectDetail,\n    getLatestProjectDetail,\n    publicLiveProjects,\n    publicLiveProjectspagination,\n    createCollectionSuccess,\n    deleteProject,\n    createFail,\n    getLatestProjectList,\n    getCategoriesList,\n    getCollections,\n    getbuyednftdetails,\n    getCollectionDetails,\n    getSocialmediaIcons,\n    getNftList,\n    getCollectionDetail,\n    getSettings,\n    getNftwolDetails,\n    getfundprojdetails,\n    Nftres,\n    updatebanner,\n    getmostprojactivity,\n    getNftwolDetailsPaymentflow,\n    nftUpd,\n    nftAdd,\n    getMatic\n} = projectSlice.actions;","import axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\n\n\nexport const LogsAction = (params) => async dispatch => {\n    // \n    try {\n        const formData = new FormData()\n        formData.append('content', params.message)\n\n        // \n        const config = {\n            headers: {\n                // 'Content-Type': 'multipart/form-data'\n                'Content-Type': 'application/json',\n            },\n            transformRequest: formData => formData\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/create_application_logs`,\n            formData, config)\n        await (dispatch(res()))\n\n        console.log(\"logres\", res)\n\n    } catch (e) {\n        console.log(e)\n        // if (e?.response?.data.message) {\n        //     // swal('error', e.response.data.message, 'error')\n        // }\n    }\n}","import axios from \"axios\";\nimport {\n    createProjectSuccess,\n    getProjectDetail,\n    getProjectList,\n    createFail,\n    publicLiveProjects,\n    deleteProject,\n    getLatestProjectDetail,\n    getCategoriesList,\n    createCollectionSuccess,\n    getCollections,\n    getCollectionDetails,\n    getSocialmediaIcons,\n    getNftList,\n    getSettings,\n    getNftwolDetails,\n    getfundprojdetails,\n    updatebanner,\n    nftUpd,\n    nftAdd,\n    getMatic,\n    getmostprojactivity,\n    getbuyednftdetails,\n    publicLiveProjectspagination\n} from \"../Slices/projectSlice\";\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport swal from \"sweetalert\";\nimport { LogsAction } from \"./logsAction\";\n\nexport const CreateProjectAction = (params, setLoading, history) => async dispatch => {\n    // \n    // sessionStorage.setItem('auth_token', JSON.stringify(action.payload.dat\n    // const [loading, setLoading] = useState(false)\n    // setLoading(true)\n    try {\n        const token = sessionStorage.getItem('authToken')\n        // \n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                // 'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n            transformRequest: formData => formData\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/store`,\n            params, config)\n        // console.log(\"resproj\", res)\n        dispatch(createProjectSuccess(res));\n\n        if (res.status === 200) {\n            // if (res.data.id == 1) { }\n            setLoading(false)\n\n            swal({ title: \"success\", text: res.data.message, icon: 'success', buttons: false, timer: 1500 })\n                .then(() => {\n                    history.push(\"/projectlist\");\n                });\n\n        }\n\n    } catch (e) {\n        if (e?.response?.data.message) {\n            setLoading(false)\n            dispatch(LogsAction(e))\n            swal('error', e.response.data.message, 'error')\n            dispatch(createFail(e))\n        }\n    }\n}\n\nexport const ProjectDetail = (slug) => async dispatch => {\n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/details/${slug}`,\n            config)\n        // console.log(res?.data?.data[0]?.image, 'proj')\n        // console.log('details', res)\n        dispatch(getProjectDetail(res));\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const LatestProjectDetail = (slug) => async dispatch => {\n    // \n    // \n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjectDetails/${slug}`,\n            config)\n        // console.log(res, 'ressssss')\n        dispatch(getLatestProjectDetail(res));\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const ProjectList = (params) => async dispatch => {\n    const token = sessionStorage.getItem('authToken')\n    if (params?.location?.pathname === '/projectlist') {\n\n        params.setLoading(true)\n    }\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        }\n\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/list?page=${params.count}&search_keyword=&category_id=&type`,\n            config)\n\n        // console.log(res?.data?.data[0]?.image, 'proj')\n        if (params.location.pathname === \"/projectlist\") {\n\n            params.setCount(params.count)\n        }\n        await dispatch(getProjectList(res));\n        params.setLoading(false)\n        // setLoading(false)\n\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (params?.location?.pathname === '/projectlist') {\n            params.setLoading(false)\n        }\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const NftList = (slug, setLoading) => async dispatch => {\n    const token = sessionStorage.getItem('authToken')\n    // setLoading(true)\n    try {\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdx/${slug}`,\n            config)\n\n        // console.log(res, 'proj')\n        await dispatch(getNftList(res));\n        setLoading(false)\n\n\n\n    } catch (e) {\n\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n            setLoading(false)\n        }\n    }\n}\nexport const uploadNFT = async (nft, dispatch, setLoading) => {\n    try {\n\n        // const [loading, setLoading] = useState()\n        // setLoading(true)\n        const token = sessionStorage.getItem('authToken')\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': `Bearer ${token}`\n            },\n            // transformRequest: formData.append('image', params)\n        }\n        const formData = new FormData();\n\n        for (let i = 0; i < nft.length; i++) {\n            formData.append(\"image[]\", nft[i]);\n        }\n\n        return axios\n            .post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\n                formData, config)\n            .then(function (response) {\n\n                // console.log(response, 'resss')\n                return {\n                    success: true,\n                    data: response.data\n\n                };\n            },\n                // setLoading(false)\n            )\n    } catch (error) {\n        // setLoading(false)\n        dispatch(LogsAction(error))\n        swal('error', error, 'error')\n\n    }\n\n\n\n}\n\n\nexport const getPublicLiveProjects = createAsyncThunk(\n    \"auth/liveProjects\",\n\n    async (params, thunkAPI, setLatestData) => {\n        if (params.location.pathname === \"/all/LatestProjects\") {\n            params.setLoading(true)\n        }\n        try {\n            const { projectType } = params\n            const latitude = sessionStorage.getItem('latitude')\n            const longitude = sessionStorage.getItem('longitude')\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjects?page=${params.count}&latitude=${latitude}&longitude=${longitude}&search_keyword=&category_id=&type`, config)\n            // console.log(res, 'projres')\n\n            thunkAPI.dispatch(publicLiveProjects({\n                res: res,\n                type: projectType,\n            }));\n            params.setLoading(false)\n            if (params.location.pathname === \"/all/LatestProjects\") {\n\n                params.setCount(params.count)\n            }\n            // thunkAPI.dispatch(publicLiveProjectspagination({\n            //     res: res,\n\n            // }));\n            // setLatestData(res.data.data())\n            // thunkAPI.dispatch(publicLiveProjects(res));\n\n        } catch (e) {\n            params.setLoading(false)\n            thunkAPI.dispatch(LogsAction(e))\n            // \n            if (e?.response?.data.message) {\n                // swal('error', e.response.data.message, 'error')\n            }\n        }\n    })\n\nexport const UpdateProject = (props, params) => async dispatch => {\n    // \n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n            transformRequest: formData => formData\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/update/${props.id}`,\n            params, config)\n        // \n        // console.log(res, 'proj')\n        await dispatch(getProjectDetail(res));\n        if (res.status === 200) {\n            swal(\"success\", res.data.message, 'success')\n            dispatch(ProjectDetail(props.id))\n            // .then(function () {\n            // window.location = `/ projnftdetails / ${ props }`;\n            // });\n\n        }\n        props.onHide(false)\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const DeleteProject = (id, history) => async dispatch => {\n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n        }\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/projects/destroy/${id}`,\n            config)\n        // \n        // console.log(res.status, 'proj')\n        // await dispatch(deleteProject(res));\n        if (res.status == 200) {\n\n            swal({\n                title: \"Are you sure?\",\n                text: \"Once deleted, you will not be able to recover this project!\",\n                icon: \"warning\",\n                buttons: true,\n                dangerMode: true,\n            })\n                .then((willDelete) => {\n                    if (willDelete) {\n\n                        swal(\"Poof! Your project has been deleted!\", {\n                            icon: \"success\",\n                        }).then(function () {\n                            window.location = '/projectlist';\n                        });\n\n                    } else {\n                        swal(\"Your project is safe!\");\n                    }\n                });\n            // history.push('/projectlist')\n\n            // swal(\"success\", res.data.message, 'success').then(function () {\n            //     window.location = \"/projectlist\";\n            // });\n\n\n        }\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const CategoriesAction = () => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCategories`, config)\n        // console.log(res, 'catres')\n        dispatch(getCategoriesList(res));\n\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\n\nexport const GetCollectionsAction = () => async dispatch => {\n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        }\n\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollection`,\n            config)\n        // console.log('colres', res)\n        await dispatch(getCollections(res));\n\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const CreateCollectionAction = ({ dat, imageBanner, props, setLoading }) => async dispatch => {\n    try {\n        setLoading(true)\n        const formData = new FormData()\n        formData.append('title', dat.title)\n        formData.append('description', dat.description)\n        formData.append('short_url', dat.short_url)\n        formData.append('symbol', dat.symbol)\n        formData.append('image', imageBanner)\n        const token = sessionStorage.getItem('authToken')\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n            transformRequest: formData => formData\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createCollection`, formData,\n            config)\n        // dispatch(GetCollectionsAction)\n        await dispatch(createCollectionSuccess(res));\n        if (res?.status === 200) {\n\n            await dispatch(GetCollectionsAction());\n            setLoading(false)\n            props.onHide(false)\n            // swal(\"success\", 'Collection Created', 'success')\n            // .then(function () {\n            //     onClick={() => props.onHide()}\n            // });\n\n        }\n\n    } catch (e) {\n        setLoading(false)\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n            dispatch(createFail(e))\n        }\n    }\n}\nexport const GetCollectionDetails = (id) => async dispatch => {\n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        }\n\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollectionById/${id}`,\n            config)\n\n        await dispatch(getCollectionDetails(res));\n\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const GetSocialMediaIcons = () => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSocialMediaIcon`,\n            config)\n        // console.log('social', res)\n        await dispatch(getSocialmediaIcons(res));\n\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const UpdateCollection = (id, params) => async dispatch => {\n    // \n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            transformRequest: formData => formData\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${id}`,\n            params, config)\n        // \n        // console.log(res, 'coll rres')\n        await dispatch(getLatestProjectDetail(res));\n        // if (res.status === 200) {\n        //     swal(\"success\", res.data.message, 'success').then(function () {\n        //         window.location = \"/projectlist\";\n        //     });\n\n        // }\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const GetSettings = () => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSettings`,\n            config)\n        // \n        // console.log(res, 'sett rres')\n        await dispatch(getSettings(res));\n\n        // if (res.status === 200) {\n        //     swal(\"success\", res.data.message, 'success').then(function () {\n        //         window.location = \"/projectlist\";\n        //     });\n\n        // }\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const GetNftwol = ({ slug }, refid) => async dispatch => {\n\n    try {\n        // const formData = new FormData()\n        // formData.append('ref_id', refid?refid:'')\n        // if(slug.reffid){\n\n        //     const reff = slug.reffid\n        // }\n        let refId = (refid) ? refid : 'null';\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n\n            },\n            transformRequest: formData => formData\n        }\n\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdxWithoutLogin/${slug}/${refId}`,\n            config)\n\n        await dispatch(getNftwolDetails(res));\n\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const GetfundraiserProject = (slug) => async dispatch => {\n    // \n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getProjectByfundraiserIdx/${slug}`,\n            config)\n\n        await dispatch(getfundprojdetails(res));\n\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const UpdateBanner = (formData, props) => async dispatch => {\n    // \n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            transformRequest: formData => formData\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/image_update/${props.id}`,\n            formData, config)\n        // \n        // console.log(res, 'coll rres')\n        await dispatch(updatebanner(res));\n\n        if (res.status === 200) {\n\n            swal(\"success\", \"updated\", 'success').then(function () {\n                dispatch(ProjectDetail(props.id))\n                dispatch(LatestProjectDetail(props.id))\n\n                // window.location = \"/projectlist\";\n            });\n            props.onHide(false)\n\n        }\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const UpdateNft = (formData, props, setLoading) => async dispatch => {\n    // \n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            transformRequest: formData => formData\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/update/${props.id}/${props.nft_id?.id}`,\n            formData, config)\n        // \n        // console.log(res, 'coll rres')\n        await dispatch(nftUpd(res));\n\n        if (res.status === 200) {\n            swal(\"success\", \"updated\", 'success')\n            setLoading(false)\n            dispatch(NftList(props.nft_id?.id))\n            dispatch(ProjectDetail(props.id))\n            props.onHide(false)\n            // .then(function () {\n            //     window.location = `/ nft / details / ${ props.nft_id?.id } ? project = ${ props.id }`;\n\n            // });\n\n        }\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            setLoading(false)\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const AddNftAction = (formData, projid, slug, setLoading, history) => async dispatch => {\n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            transformRequest: formData => formData\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/create/${projid}`,\n            formData, config)\n        // \n        // console.log(res, 'coll rres')\n        await dispatch(nftAdd(res));\n\n        if (res.status === 200) {\n            setLoading(false)\n            swal(\"success\", \"updated\", 'success')\n            history.push(`/projnftdetails/${slug.id}`)\n            // .then(function () {\n            // dispatch(ProjectDetail(props.id))\n            // dispatch(LatestProjectDetail(params))\n            // window.location = `/ projnftdetails / ${ slug.id }`;\n            // });\n\n        }\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            setLoading(false)\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const GetMatic = () => async dispatch => {\n\n    try {\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n\n            },\n\n        }\n        // \n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\n            config\n        )\n        await dispatch(getMatic(res))\n        console.log('res', res)\n    } catch (error) {\n        dispatch(LogsAction(error))\n        // console.log(\"error\");\n    }\n};\nexport const getBid = (id) => async dispatch => {\n    // \n    try {\n        const token = sessionStorage.getItem('authToken')\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getBidsDetailByIdx/${id}}`,\n            config)\n        await dispatch(res)\n\n        console.log('res bid', res)\n    } catch (e) {\n        dispatch(LogsAction(e))\n        // console.log(\"error\");\n    }\n};\nexport const UpdateBId = ({ id, status, setLoading, slug }) => async dispatch => {\n    // \n    setLoading(true)\n    try {\n        const token = sessionStorage.getItem('authToken')\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/change_bids_status/${id}}`,\n            { status: status }, config)\n        // await dispatch(res)\n        if (res.status == 200) {\n            setLoading(false)\n            await dispatch(NftList(slug))\n            swal(\"success\", \"success\", \"success\")\n        }\n        console.log('res bid', res)\n    } catch (e) {\n        swal(\"error\", e?.response?.data?.message, \"error\")\n        setLoading(false)\n        dispatch(LogsAction(e))\n        // console.log(\"error\");\n    }\n};\n\nexport const GetMostactivityProject = () => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getMostActivityProject`,\n            config)\n\n        await dispatch(getmostprojactivity(res));\n\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const GetbuyedNftDetails = (slug) => async dispatch => {\n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n        }\n\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPurchaseNftDetailByIdx/${slug?.slug}`,\n            config)\n\n        await dispatch(getbuyednftdetails(res));\n\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const ResellNft = (params, props, history) => async dispatch => {\n    try {\n        const token = sessionStorage.getItem('authToken')\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/create_resale_nft`,\n            params, config)\n        // await dispatch(res())\n        if (res?.status == 200) {\n\n            await dispatch(GetbuyedNftDetails(props.slug))\n            swal(\"success\", \"Your NFT has been sent to resell\", \"success\")\n            props.onHide(false)\n            // history.push(`/my/nfts-detail/${props.slug?.slug}`)\n        }\n    } catch (e) {\n        dispatch(LogsAction(e))\n        // console.log(\"error\");\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n};","\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { NftList } from '../../redux/Actions/projectAction';\nimport { useState } from 'react';\nimport { logdispatch, LogsAction } from '../../redux/Actions/logsAction';\nimport { useDispatch } from 'react-redux';\nimport { getNftwolDetailsPaymentflow } from '../../redux/Slices/projectSlice';\nimport Swal from 'sweetalert2';\n\n\n\n// const alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\nconst alchemyKey = \"https://polygon-mainnet.g.alchemy.com/v2/bDM_VuUmdoyJSNn3Ky8pZL0vBMAc9BXd\"\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\n\nconst contractABI = require('../../backend/contracts/artWork.sol/NFTContract.json')\n\n\nfunction isMetaMaskInstalled() {\n  return Boolean(window.ethereum);\n}\n\n// const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\n\nconst web3 = createAlchemyWeb3(alchemyKey);\n\nexport const Roles = {\n  \"ADMIN\": 1,\n  \"BUYER\": 2,\n  \"CREATOR\": 3\n}\nexport const creatorWalletUpdate = async (auth_token) => {\n  try {\n\n    const formData = new FormData();\n\n    formData.append('wallet_id', window.ethereum.selectedAddress);\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${auth_token}`\n      },\n    }\n\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/wallet/connect`,\n      formData, config\n    )\n\n    return response\n\n  } catch (error) {\n\n    return error\n  }\n}\n\nexport const UpdateWalletAddress = async (role, auth_token = null) => {\n  try {\n\n    const formData = new FormData();\n\n    formData.append('wallet_id', window.ethereum.selectedAddress);\n    formData.append('role', Roles[role])\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${auth_token}`\n      },\n    }\n\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/sign_in`,\n      formData, config\n    )\n\n    return response\n\n  } catch (error) {\n    // dispatch(LogsAction(error))\n    return error\n    // await dispatch(LogsAction(error))\n  }\n};\n\nexport const ConnectWallet = async (role, dispatch) => {\n  // const chainId = 80001// Polygon Mainnet\n  const chainId = 137 // Polygon Mainnet\n\n  if (window?.ethereum?.networkVersion !== chainId) {\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: web3.utils.toHex(chainId) }]\n      });\n\n    } catch (err) {\n      dispatch(LogsAction(err))\n      // This error code indicates that the chain has not been added to MetaMask\n      if (err.code === 4902) {\n        await window.ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [\n            {\n              chainName: 'Polygon Mainnet',\n              chainId: web3.utils.toHex(chainId),\n              nativeCurrency: { name: 'MATIC', decimals: 18, symbol: 'MATIC' },\n              rpcUrls: ['https://polygon-rpc.com/'],\n              blockExplorerUrls: ['https://polygonscan.com/']\n            }\n            // {\n            //   chainName: 'Mumbai Testnet',\n            //   chainId: web3.utils.toHex(chainId),\n            //   nativeCurrency: { name: 'MATIC', decimals: 18, symbol: 'MATIC' },\n            //   rpcUrls: ['https://rpc-mumbai.maticvigil.com/']\n            // }\n          ]\n        });\n      }\n    }\n  }\n  if (!isMetaMaskInstalled()) {\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\n\n  } else {\n\n    if (window.ethereum) {\n      try {\n        const addressArray = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n\n        await window.ethereum.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: web3.utils.toHex('137') }],\n          // params: [{ chainId: web3.utils.toHex('80001') }],\n        })\n\n        const obj = {\n          status: \"👆🏽 Write a message in the text-field above.\",\n          address: addressArray[0],\n        };\n\n        const res = await UpdateWalletAddress(role)\n        return {\n          ...obj,\n          res\n        }\n\n      } catch (err) {\n        dispatch(LogsAction(err))\n        return {\n          address: \"\",\n          status: \"😥 \" + err.message,\n        };\n      }\n    } else {\n      return {\n        address: \"\",\n        status: (\n          <span>\n            <p>\n              {\" \"}\n              🦊{\" \"}\n              <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\n                You must install Metamask, a virtual Ethereum wallet, in your\n                browser.\n              </a>\n            </p>\n          </span>\n        ),\n      };\n    }\n  }\n}\n\nexport const getCurrentWalletConnected = async (dispatch) => {\n  if (window.ethereum) {\n    try {\n      // \n      const addressArray = await window.ethereum.request({\n        method: \"eth_accounts\",\n      });\n      // console.log(addressArray, 'address')\n      if (addressArray.length > 0) {\n        return {\n          address: addressArray[0],\n          status: \"👆🏽 Write a message in the text-field above.\",\n        };\n      } else {\n        return {\n          address: \"\",\n          status: \"🦊 Connect to Metamask using the top right button.\",\n        };\n      }\n    } catch (err) {\n      dispatch(LogsAction(err))\n      return {\n        address: \"\",\n        status: \"😥 \" + err.message,\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: (\n        <span>\n          <p>\n            {\" \"}\n            🦊{\" \"}\n            <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\n              You must install Metamask, a virtual Ethereum wallet, in your\n              browser.\n            </a>\n          </p>\n        </span>\n      ),\n    };\n  }\n};\n\n\n\nexport const UpdateStatus = async ({ slug, token_id, transaction_hash, pay_from, pay_to, type, setModalShow }) => {\n\n  const token = sessionStorage.getItem('authToken')\n  try {\n    const formData = new FormData();\n\n    formData.append('is_mint', '1');\n    formData.append('token_id', token_id);\n    formData.append('transaction_hash', transaction_hash);\n    formData.append('pay_from', pay_from);\n    formData.append('pay_to', pay_to);\n    formData.append('type', type.type)\n    formData.append('price', type.price)\n    formData.append('start_date', type.start_date)\n    formData.append('end_date', type.end_date)\n\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n    }\n    // \n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/NftUpdate/${slug}`,\n      formData, config\n\n    )\n  } catch (error) {\n\n    swal(\"error\", \"Please try again\", \"error\")\n    setModalShow(false)\n    return error\n    // await dispatch(LogsAction(error))\n    // \n    // console.log(\"error\");\n  }\n};\n\nconst UpdateContract = async (collid, contractAddress, setModalShow) => {\n\n  const token = sessionStorage.getItem('authToken')\n  try {\n    const formData = new FormData();\n\n    formData.append('contract_id', contractAddress);\n\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n    }\n    // \n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${collid}`,\n      formData, config\n    )\n  } catch (e) {\n    setModalShow(false)\n    swal(\"error\", \"something went wrong\", \"error\")\n    // await dispatch(LogsAction(e))\n\n    console.log(\"error\");\n  }\n};\n\nexport const sendFileToIPFS = async (fileImg) => {\n  if (fileImg) {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", fileImg);\n\n      const resFile = await axios({\n        method: \"post\",\n        url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\n        data: formData,\n        headers: {\n          'pinata_api_key': `${process.env.REACT_APP_PINATA_API_KEY}`,\n          'pinata_secret_api_key': `${process.env.REACT_APP_PINATA_API_SECRET}`,\n          \"Content-Type\": \"multipart/form-data\"\n        },\n      });\n\n      const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\n\n      return ImgHash\n\n    } catch (e) {\n      return e\n      // await dispatch(LogsAction(e))\n\n      // console.log(\"Error sending File to IPFS: \")\n      // console.log(error)\n    }\n  }\n}\n\nexport const CreateMetaDataAndMint = async ({ slug, _imgBuffer, _des, setLoading, _name, setCurrent, contractAddress, collid, nft_file_content, type, price, start_date, end_date, setModalShow, dispatch }) => {\n  const contract = await new web3.eth.Contract(contractABI.abi, contractAddress);//loadContract();\n  // new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\");//loadContract();\n  try {\n    let txHash = null\n    // const web3 = new Web3(window.ethereum);\n    const gasPrice = await web3.eth.getGasPrice();\n    await web3.eth.sendTransaction({\n      from: window.ethereum.selectedAddress,\n      to: contractAddress, // Required except during contract publications.\n\n\n      data: contract.methods.mint(nft_file_content).encodeABI() //make call to NFT smart contract\n    })\n      .on('transactionHash', function (hash) {\n        txHash = hash\n        // console.log('txhash11', txHash)\n\n        setCurrent(1)\n      })\n      .on('receipt', function (receipt) {\n        // console.log(receipt, 'recipt')\n        // console.log(receipt.logs[0].topics[3])\n        setCurrent(1)\n      })\n      .on('confirmation', async (confNumber, receipt) => {\n        console.log('receipt', receipt)\n        if (confNumber == 1) {\n\n          if (collid != 1) {\n            await UpdateContract(collid, contractAddress, setModalShow)\n          }\n          // \n\n          // await UpdateContract(collid, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\n          const tokid = web3.utils.toBN(receipt.logs[0].topics[3])\n          // console.log(startdate)\n\n          await UpdateStatus({ slug: slug.id, token_id: tokid, transaction_hash: receipt.transactionHash, pay_from: receipt.from, pay_to: receipt.to, type, setModalShow, price, start_date, end_date })\n          setCurrent(2)\n          await dispatch(NftList(slug.id, setLoading))\n\n          // history.push(`nft/details/${slug.id}`)\n          // return redirect(`nft/details/${id}`)\n          // console.log('tokid', tokid)\n        }\n      })\n      .on('error', function (error) {\n        swal(\"error\", \"Transaction cancelled\", \"error\")\n        setModalShow(false)\n      })\n\n    // \n    // console.log('txHash', txHash)\n    return {\n      success: true,\n      // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\n      status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\n    }\n  } catch (error) {\n    await dispatch(LogsAction(error))\n    // Await dispatch(LogsAction(error)\n\n    // \n    swal(\"error\", \"Transaction cancelled\", \"error\")\n    setModalShow(false)\n    return {\n      success: false,\n      status: \":disappointed_relieved: Something went wrong: \" + error.message\n    }\n  }\n}\n\nconst UpdateBuyHistory = async (nft_id, proj_id, refid, txd_id, payFrom, pay_to, tokenId, values) => {\n  const token = sessionStorage.getItem('authToken')\n  try {\n    const formData = new FormData();\n\n    formData.append('price', nft_id.values);\n    formData.append('txd_id', nft_id.txd_id);\n    formData.append('project_id', nft_id.proj_id);\n    formData.append('nft_id', nft_id.nft_id);\n    formData.append('pay_from', nft_id.payFrom);\n    formData.append('pay_to', nft_id.pay_to);\n    formData.append('token_id', nft_id.tokenId);\n    formData.append('ref_id', nft_id.refid);\n    formData.append('status', '1');\n\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n    }\n    // \n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/transaction/store`,\n      formData, config\n    )\n  } catch (error) {\n    return error\n    // await dispatch(LogsAction(error))\n\n    // \n    // console.log(\"error\");\n  }\n};\n\nexport const updateReffid = async ({ tokenId, refid, nft_id, dispatch, setPaymentFlow }) => {\n\n  const token = sessionStorage.getItem('authToken')\n  try {\n    const formData = new FormData();\n\n    formData.append('token_id', tokenId);\n    formData.append('ref_id', refid);\n    formData.append('nft_id', nft_id);\n\n\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n    }\n    // \n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getUserPercentage`,\n      formData, config\n    )\n    // await dispatch(res())                  \n    // const reffee = sessionStorage.setItem('refamount', res?.data?.data?.referral_fees[0]?.fees) \n    if (res?.status === 200) {\n      // await dispatch(getNftwolDetailsPaymentflow(res))\n      // const data =  Object.entries(res.data.data[0])?.map(x=>x)\n      // (setPaymentFlow(res?.data?.data))\n      //  await dispatch(sessionStorage.setItem('paymentFlow', res?.data?.data))\n    }\n\n    // if (res.status === 200) {\n    // setRefamount(res?.data?.data)\n    // }\n  } catch (error) {\n    await dispatch(LogsAction(error))\n\n    // \n    // console.log(\"error\");\n  }\n};\n\n\nexport const BuyNft = async ({ contractAddress, tokenId, payFrom, values, platformFee, sellingCount, ownerFee, flow, ownerWallet, refid, proj_id, nft_id, loadingg, modal, dispatch }) => {\ndebugger\n  // const flow = JSON.parse(sessionStorage.getItem('paymentFlow') || \"[]\")\n  if (!isMetaMaskInstalled()) {\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\n  } else {\n    if (!window.ethereum?.selectedAddress) {\n       ConnectWallet(\"BUYER\")\n    }\n    try {\n\n      let wallets = []\n      let fee = []\n\n\n      wallets = (refid === \"null\" || refid === null) ?\n        [...wallets, ...flow[0]?.buyer_data?.map(x => x.wallets), flow[0]?.karmatica_fees?.wallets, flow[0]?.project_data?.wallets] :\n        [...wallets, ...flow[0]?.buyer_data?.map(x => x.wallets), flow[0]?.karmatica_fees?.wallets, flow[0]?.project_data?.wallets, flow[0]?.referral_fees?.wallets]\n      fee = (refid === \"null\" || refid === null) ?\n        [...fee, ...flow[0]?.buyer_data?.map(x => x.fees), flow[0]?.karmatica_fees?.fees, flow[0]?.project_data?.fees] :\n        [...fee, ...flow[0]?.buyer_data?.map(x => x.fees), flow[0]?.karmatica_fees?.fees, flow[0]?.project_data?.fees, flow[0]?.referral_fees?.fees]\n      console.log(fee)\n      console.log(wallets)\n      const addressArray = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const obj = {\n        status: \":point_up_2::skin-tone-4: Write a message in the text-field above.\",\n        address: addressArray[0],\n      };\n      const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\n      console.log('nftContract', nftContract)\n\n      const memory_clients = wallets.map(wal => {\n        return (`${wal}`)\n      })\n\n      const memory_amounts = fee.map(amt => {\n        const amountToSend = ((parseFloat(amt) / 100) * 0.03)\n        return web3.utils.toWei(`${amountToSend}`, \"ether\")\n      })\n\n\n      const tx = await nftContract.methods.buyNft(contractAddress, tokenId, memory_clients, memory_amounts)\n        .send({ from: window.ethereum?.selectedAddress, value: web3.utils.toWei('0.03', 'ether'), gasPrice: web3.utils.toHex(100000), gasLimit: web3.utils.toHex(100000) })\n\n\n        .on('transactionHash', (hash) => {\n\n          sessionStorage.setItem('transactionHash', hash)\n\n\n        })\n        .on('receipt', (receipt) => {\n          console.log(receipt.contractAddress); // 0xf4cb...\n        })\n        .on('confirmation', (confNumber, receipt) => {\n          debugger\n\n\n          if (confNumber == 1) {\n\n            // checkTransactionStatus(receipt.transactionHash)\n            console.log(confNumber, 'counttrans')\n            console.log(receipt, 'conf')\n\n            UpdateBuyHistory({ nft_id, proj_id, refid, txd_id: receipt.transactionHash, payFrom, pay_to: window.ethereum?.selectedAddress, tokenId, values })\n            loadingg(false)\n            swal(\"success\", \"Confirmed\", 'success').then(function () {\n              window.location = `/my/nfts`;\n            });\n          }\n\n        })\n\n        .on('error', function (error) {\n          // \n          // checkTransactionStatus(sessionStorage.getItem('transactionHash'))\n          dispatch(LogsAction(error))\n\n          modal(false)\n          loadingg(false)\n        })\n        .then(function (receipt) {\n          // will be fired once the receipt is mined\n        })\n\n      // }\n    } catch (error) {\n\n      dispatch(LogsAction(error))\n      // checkTransactionStatus(sessionStorage.getItem(\"transactionHash\"), loadingg)\n      swal(\"error\", JSON.stringify(error.message), \"error\")\n      loadingg(false)\n      // alert(JSON.stringify(error.message))\n    }\n  }\n}\nconst UpdateBid = async ({ amount, project_id, nft_id, pay_to, from, onHide, setLoading }) => {\n  const token = sessionStorage.getItem('authToken')\n  try {\n    const formData = new FormData();\n\n    formData.append('amount', amount);\n    formData.append('project_id', project_id);\n    formData.append('nft_id', nft_id);\n    formData.append('pay_from', from);\n    formData.append('pay_to', pay_to);\n\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n    }\n    // \n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/project/bids`,\n      formData, config\n    )\n    console.log('ress', res)\n    if (res.status == 200) {\n      setLoading(false)\n      swal(\"success\", res?.data?.message, 'success')\n      onHide(false)\n    }\n  } catch (error) {\n    swal(\"error\", error?.response?.data?.message, 'error')\n    return error\n    // \n    // console.log(\"error\");\n  }\n};\n\nexport const BidNft = async (id, projid, from, onHide, setLoading) => {\n\n  // if (!isMetaMaskInstalled()) {\n  //   swal('oops!', 'No wallet found. Please install MetaMask', 'error')\n\n  // } else {\n  try {\n    setLoading(true)\n\n    // const addressArray = await window.ethereum.request({\n    //   method: \"eth_requestAccounts\",\n    // });\n\n    // const obj = {\n    //   status: \"👆🏽 Write a message in the text-field above.\",\n    //   address: addressArray[0],\n    // };\n\n    // const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\n    // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\n    // const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\n    // const amountToSendPlatform = ((`${platformFee[0]?.fees}` / 100) * 0.03)\n    // const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\n    // // const amountToSend = (amountToSendPlatform - amount, \"either\")\n    // const amountToSend = (0.0005)\n    // const amountToSend = ; // Convert to wei value\n    // const memory_clients = [platformFee[0].wallets, ownerWallet[0]]\n    // const memory_amounts = [web3.utils.toWei(`${amountToSendPlatform}`, \"ether\"), web3.utils.toWei(`${amountToSendowner}`, \"ether\")]\n\n    // web3.eth.sendTransaction(\n    //   {\n    //     from: window.ethereum?.selectedAddress,\n    //     to: \"0xB79722911A09502fb54De1f7769F6624C301810a\",\n    //     value: web3.utils.toWei(\"0.01\"),\n    //     data: \"0xdf\"\n    //   }, function (err, transactionHash) {\n    //     if (!err)\n    //       console.log(transactionHash + \" success\");\n    UpdateBid({ amount: \"0.03\", project_id: projid, nft_id: id, from, onHide, setLoading })\n    // });\n    // await web3.eth.sendTransaction(transferbid)\n    //   .on('transactionHash', function (hash) {\n    //     let txHash = hash\n    //     // console.log('tx', txHash)\n\n\n    //   })\n    //   .on('receipt', function (receipt) {\n    //     // console.log(receipt, 'recipt')\n    //   })\n    //   .on('confirmation', async (confNumber, receipt) => {\n    //     // \n    //     console.log(receipt, 'conf')\n    //     // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\n    //     // setModeShow(false)\n\n    //     // modalShow(false)\n    //   })\n    //   .on('error', function (error) {\n\n    //   })\n    //   .then(function (receipt) {\n    //     // will be fired once the receipt is mined\n    //   })\n  } catch (error) {\n    // await dispatch(LogsAction(error))\n\n    // \n    swal(\"error\", error, \"error\")\n    // alert(error)\n\n    // }\n  }\n}\n\n","import axios from \"axios\";\nimport { allnotification, createOrganizationSuccess, getAnnualRevenueList, getCityList, getCountryList, getHearAboutList, getStateList, loginSuccess, updateprofile, userAuction, userDetail } from \"../Slices/authSlice\";\nimport swal from \"sweetalert\";\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport { creatorWalletUpdate } from \"../../components/Wallet/interact\";\nimport Swal from \"sweetalert2\";\nimport { LogsAction } from \"./logsAction\";\n\nexport const Register = createAsyncThunk(\n    \"auth/register\",\n    async (params, thunkAPI, dispatch) => {\n        try {\n            const token = sessionStorage.getItem('authToken')\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`\n                },\n                transformRequest: formData => formData\n            }\n\n            //create oraginization creator login\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/signup`,\n                params, config)\n\n            await creatorWalletUpdate(res?.data?.data?.auth_token)\n\n            thunkAPI.dispatch(loginSuccess(res));\n\n            if (res.status === 200) {\n                swal(\"success\", res.data.message, 'success').then(function () {\n                    window.location = \"/create\";\n                });\n            }\n\n        } catch (e) {\n            dispatch(LogsAction(e))\n            if (e?.response?.data) {\n                if (e?.response?.data.message) {\n\n                    swal('error', e?.response?.data?.message, 'error')\n                }\n            }\n        }\n    })\n\nexport const LoginAction = (params, history) => async dispatch => {\n    try {\n        const token = sessionStorage.getItem('authToken')\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n        }\n\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/organization_signin`,\n            params, config)\n\n        dispatch(loginSuccess(res));\n\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n\n            swal('error', e?.response?.data?.message, 'error')\n        }\n    }\n}\n\nexport const ForgotPasswordAction = (params, dispatch) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/forgot_pssword`,\n            params, config)\n        if (res.status === 200) {\n            swal(\"success\", res.data.message, 'success').then(function () {\n                window.location = \"/login\";\n            });\n\n        }\n\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const GetUserAction = () => async dispatch => {\n    const token = sessionStorage.getItem('authToken')\n\n    try {\n        const config = {\n            headers: {\n                // 'Content-Type': 'multipart/form-data',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getUserDetails`,\n            config)\n        // console.log('userres', res)\n        dispatch(userDetail(res));\n\n\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            \n            // swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const GetauctionNoti = () => async dispatch => {\n    const token = sessionStorage.getItem('authToken')\n\n    try {\n        const config = {\n            headers: {\n                // 'Content-Type': 'multipart/form-data',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestNotification`,\n            config)\n        // console.log('userres', res)\n        dispatch(userAuction(res));\n\n\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const CreateOrganizationAction = (params) => async dispatch => {\n    // \n    // sessionStorage.setItem('auth_token', JSON.stringify(action.payload.dat\n    try {\n        const token = sessionStorage.getItem('authToken')\n        const config = {\n            headers: {\n                // 'Content-Type': 'multipart/form-data',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n            transformRequest: formData => formData\n        }\n\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\n            params, config)\n\n        dispatch(createOrganizationSuccess(res));\n\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e) {\n            swal('error', e.response.data.message, 'error').then(function () {\n                // dispatch(ProjectDetail(params))\n                window.location = \"/projectlist\";\n            });\n\n        }\n    }\n}\nexport const CreateOrganizationAfterRoleChange = createAsyncThunk(\n    \"auth/register\",\n    async (params, thunkAPI, dispatch) => {\n        // \n        try {\n            const token = sessionStorage.getItem('authToken')\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${token}`\n                },\n                transformRequest: formData => formData\n            }\n\n            //create oraginization creator login\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\n                params, config)\n\n            // await creatorWalletUpdate(res?.data?.data?.auth_token)\n\n            // thunkAPI.dispatch(loginSuccess(res));\n\n            if (res.status === 200) {\n\n                thunkAPI.dispatch(GetUserAction())\n                swal(\"success\", res.data.message, 'success').then(function () {\n                    window.location = \"/create\";\n                });\n            }\n\n        } catch (e) {\n            if (e) {\n                \n                    \n                    swal('error', e?.response?.data?.message, 'error')\n                \n            }\n        }\n        //  dispatch(LogsAction(e))\n    })\n\nexport const CountryList = () => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCountryList`,\n            config)\n        dispatch(getCountryList(res));\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const StateList = (formData) => async dispatch => {\n    // \n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getStateById`,\n            formData, config)\n        // \n        dispatch(getStateList(res));\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const CityList = (formData) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getCityById`,\n            formData, config)\n        dispatch(getCityList(res));\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const AnnualRevenueList = () => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAnnualRevenueList`,\n            config)\n        dispatch(getAnnualRevenueList(res));\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        return console.error(e.message);\n    }\n}\n\nexport const HearAboutList = () => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getHearAboutList`,\n            config)\n        dispatch(getHearAboutList(res));\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        return console.error(e.message);\n    }\n}\n\nexport const UpdateProfileAction = (formData, props) => async dispatch => {\n\n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            transformRequest: formData => formData\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/profileUpdate`,\n            formData, config)\n        // \n        console.log(res, 'update rres')\n        await dispatch(updateprofile(res));\n\n        if (res.status === 200) {\n\n            Swal.fire({\n                icon: 'success',\n                html:\n                    'User information saved',\n                showCloseButton: false,\n                showConfirmButton: false,\n                focusConfirm: false,\n                timer: 1000\n            })\n            dispatch(GetUserAction())\n            props.onHide(false)\n            // swal(\"success\", \"updated\", 'success')\n            // .then(function () {\n            // dispatch(ProjectDetail(params))\n            // window.location = \"/projectlist\";\n            // });\n\n        }\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const CountSet = () => async dispatch => {\n    // \n    // \n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n\n                Authorization: `Bearer ${token}`\n            },\n\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/notification/update`,\n            {}, config)\n        // \n        console.log(res, 'update rres')\n        // await dispatch(res);\n\n        if (res.status === 200) {\n            // \n            await dispatch(GetUserAction())\n\n\n        }\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data?.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const AllNoti = () => async dispatch => {\n\n\n    const token = sessionStorage.getItem('authToken')\n\n    try {\n        const config = {\n            headers: {\n\n                Authorization: `Bearer ${token}`\n            },\n\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAllNotification`,\n            config)\n        // \n        console.log(res, 'allnoti rres')\n        await dispatch(allnotification(res));\n\n\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data?.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\n\nexport const NotiDelete = (id) => async dispatch => {\n    // \n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n\n                Authorization: `Bearer ${token}`\n            },\n\n        }\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/notification/delete/${id}`,\n            config)\n        // \n        console.log(res, 'delete rres')\n        // await dispatch(res);\n\n        if (res.status === 200) {\n            // \n            await dispatch(GetUserAction())\n            await dispatch(AllNoti())\n\n\n        }\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data?.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const ChangeUserRole = (history) => async dispatch => {\n    // \n    const token = sessionStorage.getItem('authToken')\n    try {\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/change_user_roles`, \"\",\n            config)\n        // \n        console.log(res, 'user role')\n        // await dispatch(res);\n\n        if (res.status === 200) {\n            // \n            await dispatch(GetUserAction())\n            if (res?.data?.data?.organization === false) {\n                history.push('/create/organization')\n            } else {\n                history.push(\"/\")\n            }\n        }\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data?.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { ChangeUserRole, CountSet, GetUserAction, GetauctionNoti, NotiDelete } from '../../redux/Actions/authAction';\nimport swal from 'sweetalert';\nimport { loginSuccess, logoutSuccess } from '../../redux/Slices/authSlice';\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\nimport Swal from 'sweetalert2';\nimport { isCancel } from 'axios';\nimport moment from \"moment\";\nimport { NavLink } from 'react-router-dom';\nimport { Space, Switch, Tooltip, notification, Button, Alert, Popconfirm } from 'antd';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Header = () => {\n    const location = useLocation();\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [address, setAddress] = useState(null)\n    const [active, setActive] = useState(null)\n    const add1 = address?.slice(0, 4).toUpperCase()\n    const add2 = address?.slice(35, 44).toUpperCase()\n    const [open, setOpen] = useState(false);\n    const [confirmLoading, setConfirmLoading] = useState(false)\n    const [api, contextHolder] = notification.useNotification();\n    console.log(\"api\", api)\n    const LogoutHandler = () => {\n        dispatch(logoutSuccess())\n        setAddress(null)\n    }\n\n    const userRole = useSelector(state => {\n        return state?.user?.userdetail?.role\n    })\n    // console.log(userRole)\n    const userToken = useSelector(state => {\n        return state.user.userToken\n    })\n\n    const close = () => {\n        console.log(\n            'Notification was closed. Either the close button was clicked or duration time elapsed.',\n        );\n    };\n\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    const userauction = useSelector(state => {\n        return state?.user?.auctionnoti\n    })\n    console.log(userauction.count)\n    // const names = Object?.keys(userdet?.notification?.status);\n    // console.log(\"names\", userdet && userdet.notification && userdet.notification[0]?.title)\n\n\n\n    // useEffect(() => {\n\n    //     const interval = setInterval(() => {\n    //         console.log(\"yyyyiiiiiiiiiiii\")\n    //         // openNotification()\n    //         if (sessionStorage.getItem('authToken') && window.ethereum.selectedAddress) {\n\n    //             dispatch(GetauctionNoti())\n    //         }\n\n    //         if (userauction?.count > 0 && userdet.user_id !== userauction?.data?.user_id &&  sessionStorage.getItem('authToken')) {\n    //             console.log(\"trueeeeeeeeeeeeeee\")\n    //             openNotification()\n    //         }\n    //         else {\n    //             // openNotification()\n    //             console.log(\"falseeeeeeeeee\")\n    //         }\n    //         // if (true) {\n    //     }, 5000)\n\n    //     return () => clearInterval(interval);\n    // }, [userauction])\n\n\n    useEffect(() => {\n        if (sessionStorage.getItem('authToken')) {\n\n            dispatch(GetUserAction())\n        }\n        getCurrentWalletConnected(dispatch)\n        setAddress(getSelectedAddress)\n\n        if (window.ethereum) {\n            window.ethereum.on('accountsChanged', function (accounts) {\n                if (!accounts.length) {\n                    setAddress(null)\n                    //  setIsLoggedIn(false)\n\n                    localStorage.removeItem('auth_token')\n                }\n            })\n        }\n\n    }, [dispatch, address])\n\n\n\n    useEffect(() => {\n\n        if (location.pathname === '/create') {\n            window.addEventListener(\"beforeunload\", handleBeforeUnload);\n            return () => {\n                window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n            };\n        }\n    }, []);\n\n    const handleBeforeUnload = (e) => {\n        e.preventDefault();\n        const message =\n            \"Are you sure you want to leave? All provided data will be lost.\";\n        e.returnValue = message;\n        return message;\n    };\n\n    function getSelectedAddress() {\n        return window.ethereum?.selectedAddress;\n    }\n\n\n    const notiHandler = () => {\n        // \n        dispatch(CountSet())\n    }\n    const deleteHandler = (id) => {\n        dispatch(NotiDelete(id))\n    }\n    const SwitchOptions = [{\n        OPTION1: \"Buyer\",\n        OPTION2: \"Creator\"\n    }]\n    const [activeOption, setActiveOption] = useState(false);\n    toast.configure()\n\n\n\n    const openNotification = () => {\n        const key = `open${Date.now()}`;\n        // console.log('key', api)\n        const btn = (\n            <Space>\n                <Button type=\"link\" size=\"small\" className='notification_btn-delete' onClick={() => { notification.destroy(key); notiHandler() }}>\n                    Reject\n                </Button>\n                <Link to={`/nftprojdetails/${userauction?.data?.nft_slug}`} onClick={() => notiHandler()}>\n                    <Button className='notification_btn-conf' onClick={() => notiHandler()}>Confirm\n                    </Button>\n                </Link>\n            </Space >\n\n        );\n        // console.log(notification.info, 'info')\n        // if (key === key) {\n\n        api.open({\n            message: < h4>Reminder</h4>,\n            description:\n                <h5 style={{ color: 'black' }}>You have received a new bid request!</h5>,\n            btn,\n            // duration: null,\n            key,\n            // onClose: key === key ? false : true,\n        });\n        // }\n    };\n\n\n\n\n\n\n    const roleHandler = () => {\n        dispatch(ChangeUserRole(history))\n        setActiveOption(!activeOption)\n    }\n    const WalletHandler = async () => {\n        const response = await ConnectWallet(\"BUYER\", dispatch)\n        const { res } = response\n\n        if (!res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data.role) {\n            dispatch(loginSuccess(res))\n            setAddress(window.ethereum.selectedAddress)\n            history.push('/all/LatestProjects')\n        }\n        else if (res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data?.role) {\n            dispatch(loginSuccess(res))\n            setAddress(window.ethereum.selectedAddress)\n            history.push('/all/LatestProjects')\n\n            swal({\n                title: \"Welcome to Karmatica!!!\",\n                text: \"Karmatica would like to know more about yourself. Update your profile\",\n                icon: \"success\",\n                buttons: {\n                    continue: '',\n                    skip: '',\n                }\n            }).then((value) => {\n                switch (value) {\n                    case \"continue\":\n                        window.location = '/profile'\n                        break;\n\n                    case \"skip\":\n                        window.location = '/all/LatestProjects'\n                        break;\n\n                }\n            });\n\n\n\n        }\n        else if (!res?.data?.data?.is_new_user && Roles[\"CREATOR\"] == res?.data?.data?.role) {\n            dispatch(loginSuccess(res))\n            setAddress(window.ethereum.selectedAddress)\n        }\n    }\n\n    const handleCreate = () => {\n        if (window.ethereum.selectedAddress) {\n\n            if (Roles[\"CREATOR\"] == userRole) {\n                history.push('/create')\n            }\n            else if (Roles[\"BUYER\"] == userRole) {\n                Swal.fire({\n                    icon: 'info',\n                    html:\n                        'Sign up as a Creator to start a project and upload NFTs',\n                    showCloseButton: false,\n                    focusConfirm: false,\n                    confirmButtonText:\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\n                })\n            }\n            else if (!userToken && !sessionStorage.getItem('authToken')) {\n                Swal.fire({\n                    icon: 'info',\n                    html:\n                        'Sign up as a Creator to start a project and upload NFTs',\n                    showCloseButton: false,\n                    focusConfirm: false,\n                    confirmButtonText:\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\n                })\n            }\n        } else {\n            Swal.fire({\n                icon: 'info',\n                html:\n                    'Connect your wallet to start a project and upload NFTs',\n                showCloseButton: false,\n                focusConfirm: false,\n                confirmButtonText:\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\n                confirmButtonAriaLabel: 'Thumbs up, great!',\n            })\n            history.push('/wallet-connect')\n        }\n\n    }\n    // console.log(activeOption, \"active\")\n    return (\n        <header id=\"header\">\n            {/* Navbar */}\n            <nav data-aos=\"zoom-out\" data-aos-delay={800} className=\"navbar navbar-expand\">\n                <div className=\"container header\">\n                    {contextHolder}\n                    {/* <Popconfirm\n      title=\"Received new bid successfully\"\n      description=\"Received new bid successfully\"\n      open={open}\n      onConfirm={handleOk}\n      okButtonProps={{\n        loading: confirmLoading,\n      }}\n      onCancel={handleCancel}\n    /> */}\n                    {/* Navbar Brand*/}\n                    {/* <div className=\"your-required-wrapper\" style={{ width: 100, height: 30 }}> */}\n\n                    {/* </div> */}\n                    <Link to=\"/\" className=\"navbar-brand\">\n                        <img className=\"navbar-brand-sticky desktop_logo\" src=\"/img/karmatica.png\" alt=\"karmatica\" />\n                        <img className=\"mobile-logo\" src=\"/img/logo.png\" alt=\"\" />\n                    </Link>\n                    <div className=\"ml-auto\" />\n\n\n                    {/* Navbar */}\n                    <ul className=\"navbar-nav items mx-auto\">\n                        <li className=\"nav-item\">\n                            <NavLink exact activeClassName=\"navbar__link--active\" className=\"nav-link\" to=\"/\">Explore</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            {/* <button onClick={tstt}>df</button> */}\n                        </li>\n                        {/* {log !== null && ( */}\n                        <li className=\"nav-item text-left nav-main\" >\n                            <a onClick={() => handleCreate()} className={location.pathname === `/create` && \"nav-link-active\"} activeClassName={location.pathname === `/create` && \"navbar__link--active\"} >Create</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink exact activeClassName=\"navbar__link--active\" to={`/all/${\"LatestProjects\"}`} className=\"nav-link\">Latest</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a target=\"_blank\" href=\"https://changelly.com/?from=btc&to=matic&amount=0.1&ref_id=_-GPCBjccW7TMMjO\" className=\"nav-link\">Swap</a>\n                        </li>\n\n\n\n                    </ul>\n                    {/* Navbar Toggler */}\n                    {window.ethereum?.selectedAddress &&\n                        <div className=\"dropdown notification relative\">\n                            <i className=\"btn btn-secondary dropdown-toggle fa-sharp fa-solid fa-bell  text-white w-auto m-0 \" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" onClick={() => notiHandler()} ></i>\n                            {userdet?.notification_count > 0 &&\n\n                                <small className='dropdown-notification'>{userdet?.notification_count}</small>\n                            }\n\n                            <ul className=\"creator-dropdown dropdown-menu notification-menu dropdown-scrollbar\" aria-labelledby=\"dropdownMenuButton1\">\n\n                                {userdet?.notification?.map((item) => {\n                                    return (\n\n                                        <><li>{item.title}</li>\n                                            <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\n                                                <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\n                                    )\n                                })}\n                                {userdet?.notification?.length > 0 &&\n                                    <span><button type='submit' className='noty_all'><Link to='/allnotifications'>See all</Link></button></span>\n                                }\n                                {userdet?.notification?.length == 0 &&\n                                    <li>No new notifications</li>\n                                }\n                            </ul>\n\n                        </div>\n                    }\n                    <ul className=\"navbar-nav toggle\">\n                        <li className=\"nav-item\">\n                            <a href=\"#\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#menu\">\n                                <i className=\"fas fa-bars toggle-icon m-0\" />\n                            </a>\n                        </li>\n                    </ul>\n                    {/* Navbar Action Button */}\n                    {/* Navbar Action Button */}\n                    <ul className=\"navbar-nav action\">\n                        {window.ethereum?.selectedAddress && sessionStorage.getItem('authToken') ? (\n\n                            <>\n\n                                <li className=\"nav-item mr-2\">\n                                    <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />{add1}...{add2}</a>\n                                </li>\n                            </>\n                        ) : (\n\n\n                            <li className=\"nav-item ml-3\">\n                                <Tooltip title='You will be signed in as a buyer' color='#4528dc'> <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />Connect Wallet</a></Tooltip>\n                            </li>\n\n                        )}\n\n                    </ul>\n                    {window.ethereum?.selectedAddress && sessionStorage.getItem('authToken') ? (\n                        <>\n\n                            <div className=\"dropdown dropdown_login\">\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                    <i className=\"fa fa-solid fa-user\"></i>\n                                </button>\n                                <ul className=\"creator-dropdown dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                                    {/* <li>{userdet?.username}</li> */}\n                                    <div className=\"background\">\n                                        <div className=\"SwitchContainer\">\n                                            <div\n                                                className=\"ToggleItem\"\n                                                style={{\n                                                    backgroundColor:\n                                                        userRole == 2 ? \"#4528DC\" : \"transparent\"\n                                                }}\n                                                onClick={() => roleHandler(SwitchOptions.OPTION1)}\n                                            >\n                                                <div className={\"Text\"}>Buyer</div>\n                                            </div>\n                                            <div\n                                                className=\"ToggleItem\"\n                                                style={{\n                                                    backgroundColor:\n                                                        userRole == 3 ? \"#4528DC\" : \"transparent\"\n                                                }}\n                                                onClick={() => roleHandler(SwitchOptions.OPTION2)}\n                                            >\n                                                <div className={\"Text\"}>Creator</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* <li>\n                                        \n                                        <Space direction=\"vertical\">\n                                           \n\n                                            <Switch\n                                                className='switch_custom'\n                                                checkedChildren={<div onClick={() => roleHandler()}> {userRole == 2 ? 'switch to creator' : 'switch to buyer'}</div>}\n                                                unCheckedChildren={<div onClick={() => roleHandler()}>{userRole == 2 ? 'switch to creator' : 'switch to buyer'}</div>}\n\n                                            />\n                                          \n                                        </Space>\n                                    </li> */}\n                                    <li> {userdet?.email}</li>\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/profile'><i class=\"fa-regular fa-user\"></i> My Profile</Link></button></li>\n                                    {userRole == 3 && (\n                                        <><li><button type='button' class=\"dropdown-item\"><Link to='/projectlist'><i class=\"fa-regular fa-file\" style={{ color: 'white', display: \"table-cell\" }}></i> My Projects</Link></button></li>\n\n                                            <li><button type='button' class=\"dropdown-item\"><Link to={`/fundraiser/detail/${userdet.user_id}`}><i class=\"fa-solid fa-hand-holding-heart\" style={{ display: \"table-cell\", color: \"white\" }}></i> Fundraise</Link></button></li></>\n                                    )}\n                                    {userRole == 2 && (\n                                        <li><button type='button' class=\"dropdown-item\"><Link to='/my/nfts'><i class=\"fa-regular fa-file-image\" style={{ color: 'white', display: \"table-cell\" }} /> My NFTs</Link></button></li>\n                                    )}\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/referrals-detail'><i class=\"fa-solid fa-coins\" style={{ color: 'white', display: \"table-cell\" }}></i>Referral Program</Link></button></li>\n                                    {/* {userRole == 2 ? ( */}\n\n\n                                    {/* <li><button type='button' class=\"dropdown-item\" onClick={() => roleHandler()}>Switch to Creator</button></li></> */}\n                                    {/* ) : (\n                                        <li><button type='button' class=\"dropdown-item\" onClick={() => roleHandler()}>Switch to Buyer</button></li>\n                                    )} */}\n                                    <li><button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'><i class=\"fa-solid fa-right-from-bracket\" style={{ display: \"table-cell\", color: \"white\" }}></i> Logout</a></button></li>\n                                </ul>\n                            </div>\n                        </>\n                    ) : (\n                        <ul className=\"navbar-nav action\">\n                            <li className=\"nav-item ml-3\">\n                                <Tooltip title='You will be signed in as a creator' color='#4528dc'>  <a className=\"creator-button btn ml-md-auto btn-bordered-white\"\n                                    onClick={() => history.push('/wallet-connect')} style={{ color: '#f8f9fa' }}><i className=\"fa fa-user\" />\n                                    <div>Creator</div></a></Tooltip>\n                                {/* <Link to=\"/login\" className=\"creator-button btn ml-md-auto btn-bordered-white\">\n                                    <i className=\"fa fa-user\" />\n                                    <div>CREATOR</div>\n                                </Link> */}\n                            </li>\n                        </ul>\n                    )}\n                </div>\n            </nav >\n        </header >\n\n    )\n}\nexport default Header;\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\n\nimport { useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport { Roles } from '../Wallet/interact';\nimport { useSelector } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { GetMostactivityProject, getPublicLiveProjects } from '../../redux/Actions/projectAction';\n\n\n\n\n\n\nconst projectTypesMap = {\n    \"LatestProjects\": 2,\n    \"RecentCampaigns\": 1\n}\nconst Hero = ({ type }) => {\n    const history = useHistory()\n\n    var options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0,\n    };\n\n    function success(pos) {\n        var crd = pos.coords;\n\n        // console.log(\"Your current position is:\");\n        // console.log(`Latitude : ${crd.latitude}`);\n        // console.log(`Longitude: ${crd.longitude}`);\n        // console.log(`More or less ${crd.accuracy} meters.`);\n        sessionStorage.setItem('latitude', `${crd.latitude}`);\n        sessionStorage.setItem('longitude', `${crd.longitude}`);\n        // setLatitude(`${crd.latitude}`)\n        // setLongitude(`${crd.longitude}`)\n    }\n\n    function errors(err) {\n        console.warn(`ERROR(${err.code}): ${err.message}`);\n    }\n\n    const userRole = useSelector(state => {\n        return state.user?.userdetail?.role\n    })\n\n    const userToken = useSelector(state => {\n        return state?.user?.userToken\n    })\n    const dispatch = useDispatch()\n\n    const mostactivityProjects = useSelector(state => {\n        return state?.projectdetails?.getmostProjActivity\n    })\n    console.log(mostactivityProjects, 'mostactivityProjects')\n    useEffect(() => {\n        dispatch(getPublicLiveProjects({\n            cursor: 1,\n            type: projectTypesMap[type],\n            projectType: type,\n        }))\n        dispatch(GetMostactivityProject())\n    }, [dispatch])\n    const currentLocation = () => {\n        // \n        if (navigator.geolocation) {\n            navigator.permissions\n                .query({ name: \"geolocation\" })\n                .then(function (result) {\n                    if (result.state === \"granted\") {\n                        // console.log(result.state);\n                        //If granted then you can directly call your function here\n                        navigator.geolocation.getCurrentPosition(success);\n                    } else if (result.state === \"prompt\") {\n                        navigator.geolocation.getCurrentPosition(success, errors, options);\n                    } else if (result.state === \"denied\") {\n                        //If denied then you have to show instructions to enable location\n                    }\n                    result.onchange = function () {\n                        // console.log(result.state);\n                    };\n                });\n        } else {\n            alert(\"Sorry Not available!\");\n        }\n    }\n\n    useEffect(() => {\n        currentLocation()\n    }, [])\n\n    const handleCreate = () => {\n        if (window.ethereum.selectedAddress) {\n\n            if (Roles[\"CREATOR\"] == userRole) {\n                history.push('/create')\n            }\n            else if (Roles[\"BUYER\"] == userRole) {\n                Swal.fire({\n                    icon: 'info',\n                    html:\n                        'Sign up as a Creator to start a project and upload NFTs',\n                    showCloseButton: false,\n                    focusConfirm: false,\n                    confirmButtonText:\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\n                })\n            }\n            else if (!userToken && !sessionStorage.getItem('authToken')) {\n                Swal.fire({\n                    icon: 'info',\n                    html:\n                        'Sign up as a Creator to start a project and upload NFTs',\n                    showCloseButton: false,\n                    focusConfirm: false,\n                    confirmButtonText:\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\n                })\n            }\n        } else {\n            Swal.fire({\n                icon: 'info',\n                html:\n                    'Connect your wallet to start a project and upload NFTs',\n                showCloseButton: false,\n                focusConfirm: false,\n                confirmButtonText:\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\n                confirmButtonAriaLabel: 'Thumbs up, great!',\n            })\n            history.push('/wallet-connect')\n        }\n\n    }\n\n    return (\n        <section className=\"hero-section\">\n            <div className=\"container\">\n                <div className=\"row \">\n\n                    <div className=\"col-12 col-md-6 col-lg-7\">\n\n                        <h1 className=\"mt-4\">Buy or create NFTs to fund projects. Earn 30% by sharing with friends.</h1>\n                        {/* <p>Earn rewards by referring your friends.</p> */}\n                        {/* Buttons */}\n                        <div className=\"button-group\">\n                            <Link className=\"btn btn-bordered-white\" to={`/all/${\"LatestProjects\"}`}><i className=\"icon-rocket mr-2\" />Explore</Link>\n                            <a className=\"btn btn-bordered-white\" onClick={handleCreate}><i className=\"icon-note mr-2\" />Create </a>\n                        </div>\n                    </div>\n\n                    <div className='col-12 col-md-6 col-lg-4 auction-slider auctions-slides'>\n                        {/* {mostactivityProjects[0]?.map((item, idx) => { */}\n                        {/* return ( */}\n\n                        <div key={`auc_${mostactivityProjects[0]?.id}`} className=\"item card\">\n\n\n\n                            <div className=\"image-over\">\n                                <Link to={`/projects/${mostactivityProjects[0]?.slug}`}>\n\n                                    <img class=\"card-img-top\" src={mostactivityProjects[0]?.image} alt=\"\"></img>\n                                </Link>\n\n                            </div>\n\n                            <div className=\"card-caption col-12 p-0\">\n\n                                <div className=\"card-body pt-0\">\n\n                                    {/* <a href=\"#\">\n                                        <h5 className=\"mb-0\">{mostactivityProjects[0]?.title?.slice(0, 16)}</h5>\n                                    </a> */}\n                                    {/* <a className=\"seller d-flex align-items-center mb-2\" href=\"#\">\n                                        <img className=\"avatar-sm rounded-circle\" src={mostactivityProjects[0]?.user_data?.avatar} alt=\"\" />\n                                        <span className=\"ml-2 mb-0\">{mostactivityProjects[0]?.user_data?.username}</span>\n                                    </a>\n                                    <div className=\"card-bottom d-flex justify-content-between\">\n                                        <span>{Math.round(mostactivityProjects[0]?.price)} MATIC</span>\n                                        {mostactivityProjects[0]?.number_of_nft == 1 ? (\n\n                                            <span>{mostactivityProjects[0]?.number_of_nft} NFT</span>\n                                        ) : (\n                                            <span>{mostactivityProjects[0]?.number_of_nft} NFTs</span>\n                                        )\n\n                                        }\n                                    </div> */}\n\n                                    {/* ) */}\n                                    {/* })} */}\n                                    {/* Card Caption */}\n                                    <div className=\"card-caption col-12 p-0\">\n                                        {/* Card Body */}\n                                        <div className=\"card-body\">\n                                            {/* <div className=\"countdown-times \">\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\n                                                    </div> */}\n\n                                            {/* <a > */}\n                                            <h5 className=\"mb-0\">{mostactivityProjects[0]?.title?.slice(0, 16)}</h5>\n                                            {/* </a> */}\n\n\n                                            <div\n                                                className=\"seller d-flex align-items-center my-2\"\n                                            >\n\n                                                <a href=\"#\">\n                                                    <h6 className=\"ml-2 mb-0\">\n                                                        {mostactivityProjects[0]?.user_data.username?.slice(0, 12)}\n                                                    </h6>\n                                                </a>\n\n                                                {/* <a > */}\n                                                <h6 className=\"ml-2 mb-0\">\n                                                    {mostactivityProjects[0]?.user_data.username?.slice(0, 12)}\n                                                </h6>\n                                                {/* </a> */}\n\n                                                {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\n                                            </div>\n                                            {/* <div className=\"card-bottom d-flex justify-content-between\">\n                              <span>{Math.round(item.price)} MATIC</span>\n                              {item?.number_of_nft == 1 ? (\n                                <span>{item.number_of_nft} NFT</span>\n                              ) : (\n                                <span>{item.number_of_nft} NFTs</span>\n                              )}\n                            </div> */}\n\n\n\n                                        </div>\n                                    </div>\n\n\n                                </div>\n                            </div>\n\n                        </div>\n\n\n\n                    </div>\n                </div>\n\n            </div>\n\n            {/* Shape */}\n            <div className=\"shape\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\n                    <defs>\n                        <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\n                            <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\n                            <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\n                        </linearGradient>\n                    </defs>\n                    <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\n                        <polygon points fill=\"url(#linearGradient-1)\">\n                            <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\n                        </polygon>\n                    </g>\n                </svg>\n            </div>\n        </section>\n    );\n\n}\n\nexport default Hero;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams, useLocation } from \"react-router-dom\";\nimport { getPublicLiveProjects } from \"../../redux/Actions/projectAction\";\nimport { useState } from \"react\";\nconst projectTypesMap = {\n  LatestProjects: 2,\n  RecentCampaigns: 1,\n};\nconst AuctionsOne = ({ type }) => {\n  const dispatch = useDispatch();\n  const [count, setCount] = useState(1)\n  const location = useLocation()\n  const liveProjects = useSelector((state) => {\n    return state?.projectdetails?.liveProjects[type];\n  });\n  console.log(liveProjects, \"liveeproj\");\n  useEffect(() => {\n    dispatch(\n      getPublicLiveProjects({\n        cursor: 1,\n        type: projectTypesMap[type],\n        projectType: type,\n        location,\n        count\n      })\n    );\n  }, [dispatch]);\n  return (\n    <section className=\"live-auctions-area\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            {/* Intro */}\n            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\n              <div className=\"intro-content\">\n                <span>Project</span>\n                <h3 className=\"mt-3 mb-0\">\n                  {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}\n                </h3>\n              </div>\n              <div className=\"intro-btn\">\n                {liveProjects?.data?.length > 4 && (\n                  <Link to={`/all/${type}`} style={{ color: \"white\" }}>\n                    <a className=\"btn content-btn\">View All</a>\n                  </Link>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"auctions-slides \">\n          <div className=\"swiper-container slider-mid items \">\n            <div className=\"swiper-wrapper  \">\n              {/* Single Slide */}\n              {liveProjects?.data?.map((item, idx) => {\n                return (\n                  <div\n                    key={`auc_${item.id}`}\n                    className=\"swiper-slide item card position-relative auctions-slides-card\"\n                  >\n                    <div className=\"image-over\">\n                      <Link to={`/projects/${item.slug}`}>\n                        <img\n                          className=\"card-img-top\"\n                          src={item?.image}\n                          alt=\"\"\n                        />\n                      </Link>\n                    </div>\n                    <div className=\"card-caption col-12 p-0\">\n                      <div className=\"card-body\">\n                        {/* <a> */}\n                        <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\n                        {/* </a> */}\n                        <div\n                          className=\"seller d-flex align-items-center my-3\"\n                        >\n                          <span>Owned By</span>\n                          {/* <a> */}\n                          <h6 className=\"ml-2 mb-0\">\n                            {item.user_data.username.slice(0, 12)}\n                          </h6>\n                          {/* </a> */}\n                        </div>\n                        <div className=\"card-bottom d-flex justify-content-between nft-price\" >\n                          <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\n                          {item?.number_of_nft == 1 ? (\n                            <span>{item.number_of_nft} NFT</span>\n                          ) : (\n                            <span>{item.number_of_nft} NFTs</span>\n                          )}\n                        </div>\n                        <div className=\"d-flex justify-content-between edit-buttons nft-price \">\n                          <a\n                            className=\"btn  btn-smaller mt-3 mb-0\"\n                            href=\"/login\"\n                          ><i className=\"icon-handbag\" />\n                            {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\n                          </a>\n                          <a\n                            className=\"btn  btn-smaller mt-3 ml-2 mb-0\"\n                            href=\"/login\"\n                          ><i class=\"fa-solid fa-share-nodes text-white\"></i>\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            <div className=\"swiper-pagination\" />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default AuctionsOne;","import { createSlice } from '@reduxjs/toolkit'\n// Slice\n\nconst collectionSlice = createSlice({\n    name: 'collection',\n\n    initialState: {\n        collection: [],\n        collectiondetail: [],\n    },\n    reducers: {\n        getPopularCollection: (state, action) => {\n            // \n            state.collection = action.payload;\n        },\n        getPopularCollectiondetails: (state, action) => {\n            // \n            state.collectiondetail = action.payload?.data?.data;\n        },\n\n\n    },\n});\n\nexport const collectionReducer = collectionSlice.reducer\n\nexport const {\n    getPopularCollection,\n    getPopularCollectiondetails\n} = collectionSlice.actions;","import axios from \"axios\";\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getPopularCollection, getPopularCollectiondetails } from \"../Slices/popularCollectionSlice\";\nimport swal from \"sweetalert\";\nimport { LogsAction } from \"./logsAction\";\n\nexport const PopularCollectionAction = createAsyncThunk(\n    \"auth/collection\",\n    async ({ }, thunkAPI) => {\n        // \n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnection`, config)\n            console.log(res, 'resddd')\n            thunkAPI.dispatch(getPopularCollection(res?.data?.data));\n\n        } catch (e) {\n            thunkAPI.dispatch(LogsAction(e))\n            // \n            if (e?.response?.data.message) {\n                swal('error', e.response.data.message, 'error')\n            }\n        }\n    })\nexport const PopularCollectionActionDetails = createAsyncThunk(\n    \"auth/collection\",\n    async ({ slug }, thunkAPI) => {\n        // \n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnectionByIdx/${slug}`, config)\n            // console.log(res, 'resddd')\n            thunkAPI.dispatch(getPopularCollectiondetails(res));\n\n        } catch (e) {\n            thunkAPI.dispatch(LogsAction(e))\n            // \n            if (e?.response?.data.message) {\n                swal('error', e.response.data.message, 'error')\n            }\n        }\n    })\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\nimport { Link } from 'react-router-dom';\nconst Collections = () => {\n    const dispatch = useDispatch()\n    const coll = useSelector(state => {\n        //\n        return state?.collection?.collection\n    })\n    console.log(coll, \"coll detail\")\n    useEffect(() => {\n        dispatch(PopularCollectionAction({}))\n    }, [dispatch])\n    return (\n        <section className=\"popular-collections-area\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        {/* Intro */}\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\n                            <div className=\"intro-content\">\n                                <span>POPULAR</span>\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\n                            </div>\n                            <div className=\"intro-btn\">\n                                {coll?.length > 8 &&\n                                    <Link className=\"btn content-btn text-left\" to=\"/allcollections\">Explore More</Link>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row items\">\n                    {coll?.slice(0, 8)?.map((item, idx) => {\n                        return (\n                            <div key={`cd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\n                                <div className=\"card no-hover text-center\">\n                                    <div className=\"image-over\">\n                                        <Link to={`/popularcollection/details/${item?.slug}`}>\n                                            <img className=\"card-img-top\" src={item?.image} alt=\"\" />\n                                        </Link>\n                                        {/* Seller */}\n                                        <div className=\"seller\" >\n                                            <div className=\"seller-thumb avatar-lg\">\n                                                <img className='rounded-circle' src={item?.user_data?.avatar} alt='logo' width={50} height={50} />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* Card Caption */}\n                                    <div className=\"card-caption col-12 p-0\">\n                                        {/* Card Body */}\n                                        <div className=\"card-body mt-4\">\n                                            {/* <a> */}\n                                            <h5 className=\"\">{item.title.slice(0, 12)} </h5>\n                                            {/* </a> */}\n                                            <div class=\"align-items-center\">\n                                                <div class=\"d-flex justify-content-center text-align-center gap-5\">\n                                                    <div class=\" align-items-center\">\n                                                        <div class=\"d-flex justify-content-center text-align-center gap-5\">\n                                                            {item?.nft_data.length == 1 ? (\n                                                                <span>Total NFT :</span>\n                                                            ) : (\n                                                                <span>Total NFTs :</span>\n                                                            )\n                                                            }\n                                                            <span>{item?.nft_data?.length}</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div >\n            </div >\n        </section >\n    );\n}\nexport default Collections;","import { React } from 'react';\n\nconst data = {\n    preHeading: \"How It Works\",\n    heading: \"Create and sell your NFTs\",\n    workData: [\n        {\n            \"id\": 1,\n            \"icon\": \"icons icon-wallet text-effect\",\n            \"title\": \"Setup your wallet\",\n            \"text\": \"Click Connect Wallet in the top right corner to login and get started.\"\n        },\n        {\n            \"id\": 2,\n            \"icon\": \"icons icon-grid text-effect\",\n            \"title\": \"Create your collection\",\n            \"text\": \"Click Creator and set up your organization profile, description, fundraising goal and more.\"\n        },\n        {\n            \"id\": 3,\n            \"icon\": \"icons icon-drawer text-effect\",\n            \"title\": \"Add your NFTs\",\n            \"text\": \"Upload your project art or images and description.\"\n        },\n        {\n            \"id\": 4,\n            \"icon\": \"icons icon-bag text-effect\",\n            \"title\": \"List them for sale\",\n            \"text\": \"Choose how you want to price and sell your NFTs!\"\n        }\n    ]\n}\n\nconst Work = () => {\n\n\n    return (\n        <section className=\"work-area\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        {/* Intro */}\n                        <div className=\"intro mb-4\">\n                            <div className=\"intro-content\">\n                                <span>{data.preHeading}</span>\n                                <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row items\">\n                    {data?.workData?.map((item, idx) => {\n                        return (\n                            <div key={`wd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\n                                {/* Single Work */}\n                                <div className=\"single-work\">\n                                    <i className={item.icon} />\n                                    <h4>{item.title}</h4>\n                                    <p>{item.text}</p>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </section>\n    );\n}\n\n\nexport default Work;","import { createSlice } from '@reduxjs/toolkit'\n// Slice\n\nconst footerSlice = createSlice({\n    name: 'footer',\n\n    initialState: {\n        footer: [],\n        aboutus: []\n\n    },\n    reducers: {\n\n        getfooter: (state, action) => {\n            state.footer = action.payload;\n        },\n        getabout: (state, action) => {\n            state.aboutus = action.payload;\n        },\n\n    },\n});\n\nexport const footerReducer = footerSlice.reducer\n\nexport const {\n    getfooter,\n    getabout,\n} = footerSlice.actions;","import axios from \"axios\";\n\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getabout, getfooter } from \"../Slices/footerSlice\";\nimport swal from \"sweetalert\";\nimport { LogsAction } from \"./logsAction\";\n\n\nexport const getFooter = createAsyncThunk(\n    \"auth/footer\",\n    async (params, thunkAPI) => {\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/term-condition`, config)\n            thunkAPI.dispatch(getfooter(res?.data?.data));\n            // console.log(res, \"res\")\n\n        } catch (e) {\n            thunkAPI.dispatch(LogsAction(e))\n            if (e?.response?.data.message) {\n                swal('error', e.response.data.message, 'error')\n            }\n        }\n    })\n\nexport const AboutUsAction = createAsyncThunk(\n    \"auth/about\",\n    async (params, thunkAPI) => {\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAbouts`, config)\n            thunkAPI.dispatch(getabout(res?.data?.data));\n            // console.log(res, \"res\")\n\n        } catch (e) {\n            thunkAPI.dispatch(LogsAction(e))\n            if (e?.response?.data.message) {\n                swal('error', e.response.data.message, 'error')\n            }\n        }\n    })","import React, { Component, useEffect } from 'react';\nimport axios from 'axios';\nimport { getFooter } from '../../redux/Actions/footerAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\nimport Swal from 'sweetalert2';\n\nconst Footer = () => {\n\n    const dispatch = useDispatch()\n\n    const footer = useSelector(state => {\n        return state.footer\n    })\n\n    useEffect(() => {\n        dispatch(getFooter(dispatch))\n    }, [])\n    // console.log(footer, 'footer')\n    const userRole = useSelector(state => {\n        return state.user.userdetail.role\n    })\n    // console.log(userRole)\n    const userToken = useSelector(state => {\n        return state.user.userToken\n    })\n\n    const history = useHistory()\n    const handleCreate = () => {\n        if (window.ethereum.selectedAddress) {\n\n            if (Roles[\"CREATOR\"] == userRole) {\n                history.push('/create')\n            }\n            else if (Roles[\"BUYER\"] == userRole) {\n                Swal.fire({\n                    icon: 'info',\n                    html:\n                        'Sign up as a Creator to start a project and upload NFTs',\n                    showCloseButton: false,\n                    focusConfirm: false,\n                    confirmButtonText:\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\n                })\n            }\n            else if (!userToken && !sessionStorage.getItem('authToken')) {\n                Swal.fire({\n                    icon: 'info',\n                    html:\n                        'Sign up as a Creator to start a project and upload NFTs',\n                    showCloseButton: false,\n                    focusConfirm: false,\n                    confirmButtonText:\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\n                })\n            }\n        } else {\n            Swal.fire({\n                icon: 'info',\n                html:\n                    'Connect your wallet to start a project and upload NFTs',\n                showCloseButton: false,\n                focusConfirm: false,\n                confirmButtonText:\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\n                confirmButtonAriaLabel: 'Thumbs up, great!',\n            })\n            history.push('/wallet-connect')\n        }\n\n    }\n\n    function getYear() {\n        return new Date().getFullYear();\n    }\n    return (\n\n\n        <footer className=\"footer-area\">\n            {/* Footer Top */}\n            <div className=\"footer-top\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\n                            {/* Footer Items */}\n                            <div className=\"footer-items\">\n                                {/* Logo */}\n                                <a className=\"navbar-brand\" href=\"/\">\n                                    <img src=\"/img/logo.png\" alt=\"\" />\n                                </a>\n                                <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\n                                {/* Social Icons */}\n\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\n                            {/* Footer Items */}\n                            <div className=\"footer-items\">\n                                {/* Footer Title */}\n                                <h4 className=\"footer-title\">Useful Links</h4>\n                                <ul>\n                                    <li className=\"nav-item\">\n                                        <a onClick={() => handleCreate()} className=\"\">Create Project</a>\n                                    </li>\n                                    {/* <li><Link to=\"/create\" onClick={handleCreate}>Create Project</Link></li> */}\n                                    <li><Link to={`/all/${\"LatestProjects\"}`}>Explore NFTs</Link></li>\n                                    <li><Link to=\"/terms&conditions\">Terms of Service</Link></li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\n                            {/* Footer Items */}\n                            <div className=\"footer-items\">\n                                {/* Footer Title */}\n                                <h4 className=\"footer-title\">Community</h4>\n                                <ul>\n                                    <li><a target=\"_blank\" href=\"https://www.canopycrypto.io/our-team/\">About Us</a></li>\n                                    {/* <li><Link to='/https://www.canopycrypto.io/our-team/'>About Us</Link></li> */}\n                                    <li><Link to='/contact'>Get Support</Link></li>\n                                    <li><Link to='/rewards'>Rewards</Link></li>\n                                </ul>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n            {/* Footer Bottom */}\n            <div className=\"footer-bottom\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            {/* Copyright Area */}\n                            <div className=\"copyright-area d-flex flex-wrap justify-content-center justify-content-sm-between text-center py-4\">\n                                {/* Copyright Left */}\n\n                                <div className=\"copyright-left\">© {getYear()} Copyright Karmatica.</div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    )\n}\nexport default Footer;","import React, { Component } from 'react';\nimport { logoutSuccess } from '../../redux/Slices/authSlice';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\nconst ModalSearch = () => {\n    const dispatch = useDispatch()\n    const LogoutHandler = () => {\n        dispatch(logoutSuccess())\n    }\n    return (\n        <div id=\"search\" className=\"modal fade p-0\">\n            <div className=\"modal-dialog dialog-animated\">\n\n                <div className=\"modal-content h-100\">\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\n                        {/* {this.state.data.menuName} <i className={this.state.data.menuIcon} /> */}\n                    </div>\n                    <div className=\"modal-body\">\n                        <form className=\"row\">\n                            <div className=\"col-12 align-self-center\">\n                                <div className=\"row\">\n                                    <div className=\"col-12 pb-3\">\n                                        <Link to='/author'>Profile</Link>\n                                        <Link to='/projectlist'>My Projects</Link>\n                                        {/* <button type='button' class=\"dropdown-item\"><a href='/author'>Profile</a></button>\n                <button type='button' class=\"dropdown-item\"><a href='/projectlist'>My Projects</a></button> */}\n                                        <button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'>Logout</a></button>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-12 input-group mt-4\">\n                                        <input type=\"text\" placeholder=\"Enter your keywords\" />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-12 input-group align-self-center\">\n                                        {/* <button className=\"btn btn-bordered-white mt-3\">{this.state.data.btnText}</button> */}\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default ModalSearch;","import React from 'react';\n\nconst ModalMenu = () => {\n    return (\n        <div id=\"menu\" className=\"modal fade p-0\">\n            <div className=\"modal-dialog dialog-animated\">\n                <div className=\"modal-content h-100\">\n                    <div className=\"modal-header text-right justify-content-end\" data-dismiss=\"modal\">\n                        <i className=\"far fa-times-circle icon-close\" />\n                    </div>\n                    <div className=\"menu modal-body\">\n                        <div className=\"row w-100\">\n                            <div className=\"items p-0 col-12 text-center\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ModalMenu;","import React from 'react';\n\nconst Scrollup = () => {\n    return (\n        <div id=\"scroll-to-top\" className=\"scroll-to-top\">\n            <a href=\"#header\" className=\"smooth-anchor\">\n                <i className=\"fas fa-arrow-up\" />\n            </a>\n        </div>\n    );\n};\n\nexport default Scrollup;","import { createSlice } from '@reduxjs/toolkit'\n// Slice\n\nconst fundraiserSlice = createSlice({\n    name: 'fundraiser',\n\n    initialState: {\n        fundraiser: [],\n        fundraiserdetail: [],\n    },\n    reducers: {\n        getTopFundraiser: (state, action) => {\n            // \n            state.fundraiser = action.payload;\n\n        },\n        getTopFundraiserDetail: (state, action) => {\n            // \n            state.fundraiserdetail = action?.payload?.data?.data;\n        },\n    },\n});\n\nexport const fundraiserReducer = fundraiserSlice.reducer\n\nexport const {\n    getTopFundraiser,\n    getTopFundraiserDetail\n} = fundraiserSlice.actions;","import axios from \"axios\";\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getTopFundraiser, getTopFundraiserDetail } from \"../Slices/fundraiserSlice\";\nimport swal from \"sweetalert\";\nimport { LogsAction } from \"./logsAction\";\n\n\nexport const TopFundraiserAction = createAsyncThunk(\n    \"auth/topfundraiser\",\n    async ({ }, thunkAPI) => {\n        // \n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n            // \n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers`, config)\n            // console.log(res, 'fund res')\n            thunkAPI.dispatch(getTopFundraiser(res?.data?.data));\n\n        } catch (e) {\n            thunkAPI.dispatch(LogsAction(e))\n            if (e?.response?.data.message) {\n                swal('error', e.response.data.message, 'error')\n            }\n        }\n    })\n// export const TopFundraiserDetail = createAsyncThunk(\n//     \"auth/topfundraiserdetail\",\n//     async (id, thunkAPI) => {\n//         // \n//         try {\n//             const config = {\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//             }\n//             const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${id}`, config)\n\n//             thunkAPI.dispatch(getTopFundraiserDetail(res?.data?.data));\n\n//         } catch (e) {\n//             if (e?.response?.data.message) {\n//                 swal('error', e.response.data.message, 'error')\n//             }\n//         }\n//     })\nexport const TopFundraiserDetail = (user_id) => async dispatch => {\n    // \n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        // \n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${user_id}`,\n            config)\n\n        // console.log(res, 'ressssss')\n        dispatch(getTopFundraiserDetail(res));\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\nimport { Link } from 'react-router-dom';\n\n\n\nconst Fundraiser = () => {\n    const dispatch = useDispatch()\n\n\n    const fund = useSelector(state => {\n        return state?.fundraiser?.fundraiser\n    })\n    console.log(fund, 'fdd')\n\n    useEffect(() => {\n        dispatch(TopFundraiserAction({}))\n    }, [dispatch])\n\n\n    return (\n        <section className=\"top-seller-area\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        {/* Intro */}\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\n                            <div className=\"intro-content\">\n                                <span>Fundraisers</span>\n                                <h3 className=\"mt-3 mb-0\">Top Fundraisers</h3>\n                            </div>\n\n                            <div className=\"intro-btn\">\n                                {fund?.length > 5 &&\n\n                                    <Link className=\"btn content-btn\" to='/allfundraise'>View All</Link>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row items\">\n                    {fund?.map((item, idx) => {\n                        return (\n                            <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\n                                {/* Single Seller */}\n                                <Link to={`/fundraiser/detail/${item.user_id}`}>\n                                    <div className=\"card no-hover\">\n                                        <div className=\"single-seller d-flex align-items-center\">\n\n                                            <img className=\"avatar-md rounded-circle\" src={item?.organization_detail?.banner_image} alt=\"\" />\n\n                                            {/* Seller Info */}\n                                            <div className=\"seller-info ml-3 nft-price\">\n                                                <a className=\"seller mb-2 text-capitalize\">{item?.organization_detail?.organization_name}</a>\n                                                {/* <span dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 15) }} /> */}\n                                                <span><img className=\"mr-1\" src='../../img/image14.png' /> ${Number(Math.round(item.amount))} Raised</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </section>\n    );\n\n}\n\nexport default Fundraiser;","import { createSlice } from '@reduxjs/toolkit'\n\nconst resellSlice = createSlice({\n    name: 'resell',\n\n    initialState: {\n        resell: [],\n        reselldetails: [],\n    },\n    reducers: {\n        getResell: (state, action) => {\n            state.resell = action.payload?.data?.data;\n        },\n        getReselldetails: (state, action) => {\n            state.reselldetails = action.payload?.data?.data;\n        },\n    },\n});\n\nexport const resellReducer = resellSlice.reducer\nexport const {\n    getResell,\n    getReselldetails\n} = resellSlice.actions;","import axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { getResell, getReselldetails } from \"../Slices/resellNftSlice\";\nimport { LogsAction } from \"./logsAction\";\n\nexport const ResellAction = () => async dispatch => {\n    // \n    // sessionStorage.setItem('authToken', JSON.stringify(action.payload.dat\n    // const [loading, setLoading] = useState(false)\n    // setLoading(true)\n    try {\n        // \n        const config = {\n            headers: {\n                // 'Content-Type': 'multipart/form-data'\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getResaleNft`,\n            \"\", config)\n        console.log(\"resproj\", res)\n        // swal('success', res.response?.data?.message, 'success')\n        dispatch(getResell(res));\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}\nexport const ResellActionDetails = (slug) => async dispatch => {\n    // sessionStorage.setItem('authToken', JSON.stringify(action.payload.dat\n    // const [loading, setLoading] = useState(false)\n    // setLoading(true)\n    try {\n        // \n        const config = {\n            headers: {\n                // 'Content-Type': 'multipart/form-data'\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getResaleNftByIdx/${slug.slug}`,\n            slug, config)\n        console.log(\"resproj\", res)\n        dispatch(getReselldetails(res));\n    } catch (e) {\n        dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { getPublicLiveProjects } from \"../../redux/Actions/projectAction\";\nimport { ResellAction } from \"../../redux/Actions/resellNftAction\";\nconst Resell = ({ type }) => {\n    const dispatch = useDispatch();\n    const nfts = useSelector((state) =>\n     {\n        return state?.resell?.resell;\n    });\n    console.log(nfts[0]?.image, \"resellnfts\");\n    useEffect(() => {\n        dispatch(ResellAction())\n    }, [dispatch]);\n    return (\n        <section className=\"live-auctions-area\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        {/* Intro */}\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\n                            <div className=\"intro-content\">\n                                <span>NFTs</span>\n                                <h3 className=\"mt-3 mb-0\">\n                                    Latest NFTs\n                                </h3>\n                            </div>\n                            <div className=\"intro-btn\">\n                                {nfts?.length > 4 && (\n                                    <Link to='/all/resll/nfts' style={{ color: \"white\" }}>\n                                        <a className=\"btn content-btn\">View All</a>\n                                    </Link>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"auctions-slides \">\n                    <div className=\"swiper-container slider-mid items \">\n                        <div className=\"swiper-wrapper  \">\n                            {/* Single Slide */}\n                            {nfts?.map((item, idx) => {\n                                return (\n                                    <div\n                                        key={`auc_${item.id}`}\n                                        className=\"swiper-slide item card position-relative auctions-slides-card\"\n                                    >\n                                        <div className=\"image-over\">\n                                            <Link to={`/nft/resell/details/${item.slug}`}>\n                                                <img\n                                                    className=\"card-img-top\"\n                                                    src={item?.image}\n                                                    alt=\"\"\n                                                />\n                                            </Link>\n                                        </div>\n                                        <div className=\"card-caption col-12 p-0\">\n                                            <div className=\"card-body\">\n                                                {/* <a> */}\n                                                <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\n                                                {/* </a> */}\n                                                <div\n                                                    className=\"seller d-flex align-items-center my-3\"\n                                                >\n                                                    <span>Owned By</span>\n                                                    {/* <a> */}\n                                                    <h6 className=\"ml-2 mb-0\">\n                                                        {item.user_data.username.slice(0, 12)}\n                                                    </h6>\n                                                    {/* </a> */}\n                                                </div>\n                                                <div className=\"card-bottom d-flex justify-content-between nft-price\" >\n                                                    <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\n                                                    <span>1 NFT</span>\n                                                </div>\n                                                <div className=\"d-flex justify-content-between edit-buttons nft-price \">\n                                                    <Link to={`/nft/details/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\n                                                        <i className=\"icon-handbag\" />\n                                                    </Link>\n                                                    <Link to={`/nft/details/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\n                                                        <i class=\"fa-solid fa-share-nodes text-white\"></i>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                        <div className=\"swiper-pagination\" />\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\nexport default Resell;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\nimport Hero from '../components/Hero/Hero';\nimport Auctions from '../components/Auctions/AuctionsOne';\nimport Collections from '../components/Collections/Collections';\nimport Work from '../components/Work/Work';\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport Fundraiser from '../components/TopSeller/topfundraiser';\nimport Resell from '../components/Auctions/resellNft';\n\n\nconst Home = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n            <Hero />\n            <Auctions key=\"latestProjects\" type={\"LatestProjects\"} />\n            <Resell />\n\n            <Fundraiser />\n            <Collections />\n            <Work />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    )\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nclass Breadcrumb extends Component {\n    render() {\n        return (\n            <section className=\"breadcrumb-area overlay-dark d-flex align-items-center\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            {/* Breamcrumb Content */}\n                            <div className=\"breadcrumb-content text-center\">\n                                <h2 className=\"m-0\">{this.props.title}</h2>\n                                <ol className=\"breadcrumb d-flex justify-content-center\">\n                                    <li className=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n                                    <li className=\"breadcrumb-item\"><a href=\"#\">{this.props.subpage}</a></li>\n                                    <li className=\"breadcrumb-item active\">{this.props.page}</li>\n                                </ol>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/explore\";\n\nclass ExploreTwo extends Component {\n    state = {\n        data: {},\n        exploreData: []\n    }\n    componentDidMount() {\n        axios.get(`${BASE_URL}`)\n            .then(res => {\n                this.setState({\n                    data: res.data,\n                    exploreData: res.data.exploreData\n                })\n                // console.log(this.state.data)\n            })\n            .catch(err => console.log(err))\n    }\n    render() {\n        return (\n            <section className=\"explore-area\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            {/* Intro */}\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\n                                <div className=\"intro-content\">\n                                    <span>{this.state.data.preHeading}</span>\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\n                                </div>\n                                <div className=\"intro-btn\">\n                                    <a className=\"btn content-btn\" href=\"/explore-1\">{this.state.data.btnText}</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row items\">\n                        {this.state.exploreData.map((item, idx) => {\n                            return (\n                                <div key={`edt_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\n                                    <div className=\"card\">\n                                        <div className=\"image-over\">\n                                            <a href=\"/item-details\">\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\n                                            </a>\n                                        </div>\n                                        {/* Card Caption */}\n                                        <div className=\"card-caption col-12 p-0\">\n                                            {/* Card Body */}\n                                            <div className=\"card-body\">\n                                                <a href=\"/item-details\">\n                                                    <h5 className=\"mb-0\">{item.title}</h5>\n                                                </a>\n                                                <div className=\"seller d-flex align-items-center my-3\">\n                                                    <span>Owned By</span>\n                                                    <a href=\"/author\">\n                                                        <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\n                                                    </a>\n                                                </div>\n                                                <div className=\"card-bottom d-flex justify-content-between\">\n                                                    <span>{item.price}</span>\n                                                    {/* <span>{item.count}</span> */}\n                                                </div>\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default ExploreTwo;","import React, { Component } from 'react';\n\nimport Header from '../components/Header/Header';\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\nimport Explore from '../components/Explore/ExploreTwo';\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nclass ExploreOne extends Component {\n    render() {\n        return (\n            <div className=\"main\">\n                <Header />\n                <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 1\" />\n                <Explore />\n                <Footer />\n                <ModalSearch />\n                <ModalMenu />\n                <Scrollup />\n            </div>\n        );\n    }\n}\n\nexport default ExploreOne;","/**\n * Loader Spinner\n */\n\nimport React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction Loader() {\n\n\n\n    return (\n        // <div style={{position: 'absolute', backgroundColor: '#0002', width: '100%', height: '100%'}}>\n        <Spinner\n            animation=\"border\"\n            role=\"status\"\n            style={{\n                height: \"100px\",\n                width: \"100px\",\n                margin: \"auto\",\n                display: \"block\",\n                // position: 'absolute',\n                // left: 'calc(50% - 50px)',\n                // top: 'calc(50% - 50px)'\n            }}\n        >\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n        // </div>\n    );\n}\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { ProjectList } from '../../redux/Actions/projectAction';\nimport Loader from '../Loader/loader';\nimport { DeleteProject } from './../../redux/Actions/projectAction';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst GetAllProjects = () => {\n    const [loading, setLoading] = useState(false)    // console.log(projc, 'projc')\n    const dispatch = useDispatch()\n    const [count, setCount] = useState(1)\n    const location = useLocation()\n    const history = useHistory()\n    const projects = useSelector(state => {\n        return state.projectdetails.projects\n    })\n\n    console.log(projects, 'projects')\n    const handleIncrement = () => {\n        // if (startDate && endDate && numberofNfts) {\n\n        // setCount(prevCount => prevCount + 1)\n        dispatch(\n            ProjectList({\n                location,\n                setCount,\n                setLoading,\n\n                count: count + 1,\n            })\n        );\n        // }\n    };\n    const handleDecrement = () => {\n        dispatch(\n            ProjectList({\n                setLoading,\n                setCount,\n                location,\n                count: 1,\n            })\n        );\n    };\n    useEffect(() => {\n        dispatch(ProjectList({\n            setCount,\n            count, location, setLoading\n        }))\n    }, [dispatch])\n\n    const showDeleteHandler = (id) => {\n        dispatch(DeleteProject(id,history))\n    }\n\n    return (\n        <>\n\n\n\n            <section className=\"explore-area\">\n\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-8 col-lg-7\">\n                            {/* Intro */}\n                            <div className=\"intro text-center mb-4\">\n                                {/* <span>Explore</span> */}\n                                {window.ethereum?.selectedAddress && (\n\n                                    <h3 className=\"mt-3 mb-0\">My Projects</h3>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row items explore-items h-auto\">\n                        {loading ? (\n                            <Loader />\n                        ) : (\n                            <>\n                                {projects?.data && projects?.data?.length ?\n                                    [...new Map(projects?.data?.map(item =>\n                                        [item[\"title\"], item])).values()].map((item, idx) => {\n                                            return (\n                                                // <Link key={`edth_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\n                                                <div className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\n                                                    {/* <button onClick={() => showDeleteHandler()}>delete</button> */}\n                                                    <div className=\"card project_cards\">\n                                                        <div className=\"image-over relative \">\n                                                            {item.is_nft_mintted !== 1 &&\n\n                                                                <i class=\"fa-sharp fa-solid fa-trash\" onClick={() => showDeleteHandler(item.id)}></i>\n                                                            }\n                                                            <Link to={`/projnftdetails/${item.slug}`}>\n                                                                {/* <i class=\"fa-solid fa-pen\" ></i> */}\n                                                                <img className=\"card-img-top\" src={item?.image} alt={item.nft_data.description} />\n                                                            </Link>\n                                                        </div>\n                                                        <div className='token'>\n                                                            <span></span>\n                                                        </div>\n                                                        {/* Card Caption */}\n                                                        <div className=\"card-caption col-12 p-0\">\n                                                            {/* Card Body */}\n                                                            <div className=\"card-body\">\n                                                                {/* <a> */}\n                                                                <h5 className=\"mb-0 pb-0 break-all\">{item.title.slice(0, 16)}</h5>\n                                                                {/* </a> */}\n                                                                <div className=\"seller d-flex align-items-center my-2\">\n                                                                    <span>Owned By</span>\n\n                                                                    <h6 className=\"ml-2 mb-0\">You</h6>\n\n                                                                </div>\n                                                                <div className=\"card-bottom d-flex justify-content-between\">\n                                                                    <span>{item.price} MATIC</span>\n                                                                    {item?.number_of_nft == 1 ? (\n\n                                                                        <span>{item?.number_of_nft} NFT </span>\n                                                                    ) : (\n                                                                        // <><span>{item.nft_data.length} NFTs </span>\n                                                                        <span> +{item.number_of_nft} NFTs </span>\n                                                                    )}\n                                                                </div>\n\n                                                                {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\n                                                                {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                // </Link>\n                                            )\n                                        }) :\n\n                                    <div className=\"col-12 col-sm-12 col-lg-12\">\n                                        {window.ethereum?.selectedAddress ? (\n                                            <h2 className='allproj2'>\n                                                You have no projects yet, <Link to=\"/create\">create one now</Link>\n                                            </h2>\n\n                                        ) : (\n                                            <h2 className='allproj2'>\n                                                Please connect you wallet to continue, <Link to=\"/wallet-connect\">Connect</Link>\n                                            </h2>\n                                        )}\n                                    </div>\n                                }\n\n\n\n                            </>\n                        )\n                        }\n                    </div>\n                    {projects.current_page != projects.totalPageCount ? (\n                        <>\n                            \n\n                                <div className=\"morebutton\"><a onClick={(e) => handleIncrement(e)} className=\"btn btn-bordered-white\">Load More</a></div>\n                           \n                        </>\n\n                    ) : (\n                        <>\n                            {projects?.data?.length > 8 &&\n                                <div className=\"morebutton\"><a onClick={(e) => handleDecrement(e)} className=\"btn btn-bordered-white\">Load Previous</a></div>\n                            }\n                        </>\n                    )}\n                    {/* <div className=\"morebutton\"><a onClick={(e) => handleIncrement(e)} className=\"btn btn-bordered-white\">Load More</a></div> */}\n                    {/* <Pagination defaultCurrent={6} total={500} /> */}\n                </div>\n            </section>\n\n        </>\n    );\n\n}\n\nexport default GetAllProjects; ","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport GetAllProjects from '../components/Explore/ProjectList';\n\nconst ExploreTwo = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <GetAllProjects />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\nexport default ExploreTwo;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\n\nconst LatestProjects = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <AuctionsOne type=\"LatestProjects\" />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\nexport default LatestProjects;","import React, { Component } from 'react';\nimport AuctionsOne from '../Auctions/AuctionsOne';\n\n\n\nconst LatestProject = () => {\n\n\n    return (\n        <>\n            <AuctionsOne />\n        </>\n    );\n}\n\n\nexport default LatestProject;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport LatestProject from '../components/Explore/LatestProjects';\n\nconst Auctions = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <LatestProject />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default Auctions;","\nimport React, { useState } from \"react\";\n\nconst ReadMore = ({ data }) => {\n\n    const [isReadMore, setIsReadMore] = useState(true);\n    console.log(data)\n    const toggleReadMore = () => {\n        setIsReadMore(!isReadMore);\n    };\n\n    return (\n        <p className=\"text\">\n            <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: isReadMore ? data?.slice(0, 1000) : data }} />\n            {data?.length > 1000 &&\n\n                <span onClick={toggleReadMore} className=\"read-or-hide\">\n                    {isReadMore ? \"...read more\" : \" show less\"}\n                </span>\n            }\n        </p>\n    );\n};\n\nexport default ReadMore","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Collapse } from 'antd';\nimport { Table } from 'react-bootstrap';\n\nconst FundTransdataTable = () => {\n\n    const { Panel } = Collapse;\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const [expandIconPosition] = useState('end');\n\n\n    const funddetail = useSelector(state => {\n        return state?.fundraiser?.fundraiserdetail\n    })\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\n\n\n    return (\n        <div className='position-relative'>\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                <svg class=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></circle><path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\n                <Panel header=\"Item Activity\" key=\"1\">\n                    <Table responsive >\n                        <thead>\n\n\n                            <tr>\n\n                                <th>NFT</th>\n                                <th>Project</th>\n                                <th>Price</th>\n                                <th>From</th>\n                                <th>To</th>\n                                <th>Token</th>\n\n                                <th>Transaction</th>\n                            </tr>\n\n\n                        </thead>\n                        <tbody>\n                            {funddetail?.payment_history?.map((items) => {\n                                return (\n                                    <tr>\n\n                                        <td>#{items.nft_id}</td>\n                                        <td>#{items.project_id}</td>\n                                        <td>{items.price}</td>\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\n                                        <td>#{items.token_id?.slice(0,2)}</td>\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\n                                    </tr>\n                                )\n                            })}\n\n                        </tbody>\n                    </Table>\n                    {funddetail?.payment_history?.length == 0 &&\n                        <div className='nothing'>\n                            No matching records found\n                        </div>\n                    }\n                </Panel>\n\n            </Collapse>\n        </div>\n    )\n}\n\nexport default FundTransdataTable","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Collapse } from 'antd';\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\nimport { useLocation, useParams } from 'react-router';\nimport { Table } from 'react-bootstrap';\nconst UserTransdataTable = (props) => {\n    const dispatch = useDispatch()\n    const { Panel } = Collapse;\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const { id } = useParams()\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    const location = useLocation()\n    return (\n        <div className='position-relative'>\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                </svg>\n                <Panel header=\"Item Activity\" key=\"1\">\n                    <Table responsive >\n                        <thead>\n                            <tr>\n                                <th>NFT</th>\n                                <th>Project</th>\n                                <th>Price</th>\n                                <th>From</th>\n                                <th>To</th>\n                                <th>Token</th>\n                                <th>Transaction</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {userdet?.payment_history?.map((items) => {\n                                return (\n                                    <tr>\n                                        <td>#{items.nft_id}</td>\n                                        <td>#{items.project_id}</td>\n                                        <td>{items.price}</td>\n                                        <td>{items.pay_from?.slice(0, 4)}...{items.pay_from?.slice(35, 44)}</td>\n                                        <td>{items.pay_to?.slice(0, 4)}...{items.pay_to?.slice(35, 44)}</td>\n                                        <td>#{items.token_id?.slice(0,2)}</td>\n                                        <td>{items.txd_id?.slice(0, 4)}...{items.txd_id?.slice(35, 44)}</td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </Table>\n                </Panel>\n                {userdet?.payment_history?.length == 0 &&\n                    <div className='nothing'>\n                        No matching records found\n                    </div>\n                }\n            </Collapse>\n        </div>\n    )\n}\nexport default UserTransdataTable","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Collapse } from 'antd';\nimport { useParams } from 'react-router';\nimport { Table } from 'react-bootstrap';\nconst UserdataTable = (props) => {\n    const dispatch = useDispatch()\n    const { Panel } = Collapse;\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const { id } = useParams()\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    return (\n        <div>\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\n                </svg>\n                <Panel header=\"Details\" key=\"1\" >\n                    <Table responsive className='nfts_details' >\n                        <tbody >\n                            <tr>\n                                <td><span>Name </span> <span>{userdet.username}</span></td>\n                                <td><span>Wallet ID</span>  <span>{userdet.wallet_id}</span></td>\n                                <td><span>Number of Referrals </span> <span>{userdet.referrers}</span></td>\n                                <td><span>Referral Amount </span> <span>{userdet.referral_amount} KARMATICA token</span></td>\n                                <td><span>Fundraised </span> <span>{userdet.total_fundraised} MATIC</span></td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Panel>\n            </Collapse>\n        </div>\n    )\n}\nexport default UserdataTable","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport {\n    EmailShareButton,\n    FacebookIcon,\n    FacebookShareButton,\n    InstapaperShareButton,\n    InstapaperIcon,\n    LineShareButton,\n    LinkedinShareButton,\n    PinterestShareButton,\n    RedditShareButton,\n    TelegramIcon,\n    TelegramShareButton,\n    TwitterIcon,\n    TwitterShareButton,\n    WhatsappIcon,\n    WhatsappShareButton,\n    LinkedinIcon,\n    EmailIcon,\n} from \"react-share\";\nimport {\n    FacebookShareCount,\n    HatenaShareCount,\n    OKShareCount,\n    PinterestShareCount,\n    RedditShareCount,\n    TumblrShareCount,\n    VKShareCount\n} from \"react-share\";\nimport JoditEditor from 'jodit-react';\nimport { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\nimport { useParams } from 'react-router';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nfunction ProjDetailPopup(props) {\n    const editor = useRef(null);\n    const dispatch = useDispatch()\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\n    const [description, setDescription] = useState();\n    const id = useParams()\n    const [type, setType] = useState()\n    const { countries } = useSelector(state => state.countries)\n    const [country, setCountry] = useState('')\n    console.log('country', country)\n    const [state, setState] = useState('')\n    const [city, setCity] = useState('')\n    console.log(countries?.data?.data, 'cntry')\n    const states = useSelector(state => {\n        // \n        return state.countries.states\n    })\n    useEffect(() => {\n        dispatch(CategoriesAction())\n        dispatch(CountryList())\n    }, [])\n    const handleChangeCountry = (event) => {\n        event?.preventDefault()\n        // 👇 Get input value from \"event\"\n        setCountry(event?.currentTarget?.value);\n        const formData = new FormData()\n        formData.append('country_id', event?.currentTarget?.value)\n        dispatch(StateList(formData))\n    };\n    const handleChangeState = (event) => {\n        // \n        event.preventDefault()\n        // 👇 Get input value from \"event\"\n        setState(event.currentTarget.value);\n        const formData = new FormData()\n        formData.append('country_id', country)\n        formData.append('state_id', event?.currentTarget?.value)\n        dispatch(CityList(formData))\n    };\n    const handleChangeCity = (event) => {\n        // \n        // 👇 Get input value from \"event\"\n        setCity(event?.currentTarget?.value);\n    };\n    const cities = useSelector(state => {\n        // \n        return state.countries.city\n    })\n    const projdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.projectdetails\n    })\n    console.log(projdetail.nft_data, 'projdatanft')\n    const cat = useSelector(state => {\n        // \n        return state?.projectdetails?.categories\n    })\n    const disablePastDate = () => {\n        const today = new Date();\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\n        const yyyy = today.getFullYear();\n        return yyyy + \"-\" + mm + \"-\" + dd;\n    };\n    useEffect(() => {\n        if (projdetail && Object.keys(projdetail).length) {\n            setValue(\"title\", projdetail.title)\n            setValue(\"address\", projdetail.address)\n            setValue(\"description\", projdetail.description)\n            setValue('state', projdetail.state)\n            setValue('country', projdetail.country)\n            setValue('city', projdetail.city)\n            setValue(\"price\", projdetail.price)\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\n            setValue(\"start_date\", projdetail.start_date)\n            setValue(\"end_date\", projdetail.end_date)\n            setValue(\"type\", projdetail.type)\n            setValue('category_id', projdetail.category_id)\n            setType(projdetail.type)\n            setCountry(projdetail.country)\n            setDescription(projdetail.description)\n            // setState(projdetail.state)\n            // setCity(projdetail.city)\n            console.log(projdetail.state, 'edit state')\n            console.log(projdetail.city, 'edit city')\n            setValue(\"image\", projdetail.image)\n            const formData = new FormData()\n            // formData.append('country_id', event?.currentTarget?.value)\n            formData.append('country_id', projdetail.country)\n            formData.append('state_id', projdetail.state)\n            dispatch(StateList(formData))\n            dispatch(CityList(formData))\n        }\n    }, [projdetail]);\n    const OnSubmit = (data) => {\n        const formData = new FormData()\n        // formData.append('image', data.image[0])\n        formData.append('title', data.title)\n        formData.append('description', description)\n        formData.append('state', data.state)\n        formData.append('country', data.country)\n        formData.append('city', data.city)\n        formData.append('address', data.address)\n        formData.append('price', data.price)\n        formData.append('number_of_nft', data.number_of_nft)\n        if (data?.type == 1) {\n            formData.append('start_date', '')\n            formData.append('end_date', '')\n        } else {\n            formData.append('start_date', data.start_date)\n            formData.append('end_date', data.end_date)\n        }\n        formData.append('type', data.type)\n        formData.append('category_id', data.category_id)\n        dispatch(UpdateProject(props, formData))\n    }\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header >\n                <div>\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\n                    <div className=\"row\">\n                        <div className=\"col-6 col-12\">\n                            {/* {type == 1 && ( */}\n                            <div className=\"form-group mt-3\">\n                                <label>Project name</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"title\"\n                                    placeholder=\"Project name\"\n                                    {...register(\"title\", { required: true })}\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\n                                />\n                                {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\n                            </div>\n                            {/* )} */}\n                        </div>\n                        <div className=\"col-6 col-12\">\n                            <div className=\"form-group mt-3\">\n                                <label>Web address</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"address\"\n                                    placeholder=\"Web Address\"\n                                    {...register(\"address\", { required: true })}\n                                    aria-invalid={errors.address ? \"true\" : \"false\"}\n                                />\n                                {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 col-12\">\n                            <div className=\"form-group\">\n                                <label>Country</label>\n                                <Controller\n                                    control={control}\n                                    name=\"country\"\n                                    // selected={country}\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\n                                        <select name=\"country\"\n                                            {...register(\"country\", { required: true })}\n                                            // value={value}\n                                            // defaultValue={value}\n                                            onChange={handleChangeCountry}\n                                        >\n                                            aria-invalid={errors?.country ? \"true\" : \"false\"}\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\n                                                Select your country</option>\n                                            {countries?.data?.data?.map((option, key) => (\n                                                <>\n                                                    <option key={key.id} value={option.id}  >\n                                                        {option.name}\n                                                    </option>\n                                                </>\n                                            ))}\n                                        </select>\n                                    )}\n                                />\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 col-12\">\n                            <div className=\"form-group\">\n                                <label>State or Province</label>\n                                <Controller\n                                    control={control}\n                                    name=\"state\"\n                                    // selected={country}\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\n                                        <select name=\"state\"\n                                            {...register(\"state\", { required: true })}\n                                            // defaultValue={value}\n                                            // value={value}\n                                            onChange={handleChangeState} >\n                                            aria-invalid={errors?.state ? \"true\" : \"false\"}\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\n                                            {states?.data?.data?.map((option, key) => (\n                                                <><option key={key.id} value={option.id} >\n                                                    {option.name}\n                                                </option></>\n                                            ))}\n                                        </select>\n                                    )}\n                                />\n                                {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 col-12\">\n                            <div className=\"form-group\">\n                                <label>City or Region</label>\n                                <Controller\n                                    control={control}\n                                    name=\"city\"\n                                    // selected={country}\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\n                                        <select name=\"city\"\n                                            {...register(\"city\", { required: true })}\n                                            // value={value}\n                                            onChange={handleChangeCity}\n                                        >\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\n                                            {cities?.data?.data?.map((option, key) => (\n                                                <><option key={key.id} value={option.id}>\n                                                    {option.name}\n                                                </option></>\n                                            ))}\n                                        </select>\n                                    )}\n                                />\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"form-group\">\n                                {projdetail.type == 2 ? (\n                                    <label>Price</label>\n                                ) : (\n                                    <label>Price per NFT</label>\n                                )}\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"price\"\n                                    placeholder=\"Price\"\n                                    {...register(\"price\", { required: true })}\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\n                                />\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"form-group\">\n                                <label>Number of NFTs</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"number_of_nft\"\n                                    defaultValue={1}\n                                    // disabled={type == 1}\n                                    placeholder=\"Select your number of NFTs (1-10)\"\n                                    min={1}\n                                    max={10}\n                                    {...register(\"number_of_nft\", { required: true })}\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\n                                />\n                                {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\n                            </div>\n                        </div>\n                        {projdetail.type == 2 && (\n                            <><div className=\"col-12 col-md-6\">\n                                <div className=\"form-group\">\n                                    <label>Campaign Start date</label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"start_date\"\n                                        // min={disablePastDate()}\n                                        // placeholder=\"Start date\"\n                                        {...register(\"start_date\", { required: true })}\n                                        aria-invalid={errors.start_date ? \"true\" : \"false\"} />\n                                    {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\n                                </div>\n                            </div><div className=\"col-12 col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>Campaign End Date</label>\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control\"\n                                            name=\"end_date\"\n                                            min={disablePastDate()}\n                                            // placeholder=\"End date\"\n                                            {...register(\"end_date\", { required: true })}\n                                            aria-invalid={errors.end_date ? \"true\" : \"false\"} />\n                                        {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\n                                    </div>\n                                </div></>\n                        )}\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"form-group\">\n                                <label>Category</label>\n                                <select name=\"annual_revenue_range\"\n                                    // defaultValue={}\n                                    {...register(\"category_id\")}>\n                                    {cat?.map((option, key) => (\n                                        <option key={key.id} value={option.id}>\n                                            {option.title}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"col-12\">\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\n                        </div>\n                    </div>\n                </form>\n            </Modal.Body>\n        </Modal >\n    );\n}\nexport default ProjDetailPopup","\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Collapse } from 'antd';\nimport { LatestProjectDetail, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\nimport { useLocation, useParams } from 'react-router';\nimport { ProgressBar, Table } from 'react-bootstrap';\nimport ProjDetailPopup from '../Create/projectDetailpopup';\nimport dayjs from 'dayjs';\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\nconst ProjdataTable = (props) => {\n    const dispatch = useDispatch()\n    const { Panel } = Collapse;\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const [modalShowproj, setModalShowproj] = React.useState(false);\n    const { slug } = useParams()\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n    const projdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.projectdetails\n    })\n    console.log(projdetail, 'userprojdata')\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    const latprojdetail = useSelector(state => {\n        // \n        return state.projectdetails.latestprojectdetails\n    })\n    console.log(latprojdetail, 'userprojdetaaaa')\n    // const [projuserID, setProjuserid] = useState()\n    // console.log('projjj', projuserID)\n    // const projuserid = projdetail?.user_data?.map((item) => {\n    //     return (\n    //         setProjuserid(item.user_id)\n    //     )\n    // })\n    console.log(userdet.user_id, 'uid')\n    useEffect(() => {\n        dispatch(LatestProjectDetail(slug))\n        if(sessionStorage.getItem(\"authToken\")){\n\n            dispatch(ProjectDetail(slug))\n        }\n        dispatch(PopularCollectionActionDetails(props.idx))\n    }, [slug])\n\n    const coll = useSelector(state => {\n        // \n        return state?.collection?.collectiondetail\n    })\n    const location = useLocation();\n    const date1 = new Date(coll?.updated_at)\n    const date2 = new Date()\n    const time_difference = date2.getTime() - date1.getTime();\n    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\n    console.log('days', days_difference)\n    return (\n        <div>\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\n                </svg>\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\n                <Panel header=\"Details\" key=\"1\" >\n                    <Table responsive className='nfts_details'>\n                        {projdetail?.user_data?.user_id === userdet?.user_id && sessionStorage.getItem('authToken') &&\n\n                            <div >\n                                <i class=\"fa-solid fa-pen\" onClick={() =>\n                                    setModalShowproj(true)}></i>\n                                <ProjDetailPopup\n                                    // \n                                    id={props.id}\n                                    show={modalShowproj}\n                                    onHide={() => setModalShowproj(false)} />\n                                {/* <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a> */}\n\n                                {/* <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\n                                {/* </a> */}\n                            </div>\n                        }\n                        <tbody className=''>\n                            {/* {projdetail.nft_data?.map((items) => {\n                                return ( */}\n                            <tr>\n\n                                {/* {projdetail?.country_name?.map((item) => {\n                                    return (\n\n                                        <tr>Country : {item.name}</tr>\n                                    )\n                                })} */}\n                                {location.pathname === `/projects/${slug}` ? (\n\n                                    <>\n                                        {/* <td><span>Owned By:</span> <span>{latprojdetail?.user_data?.username}</span> </td> */}\n                                        {/* <td><span>Total NFT's:</span> <span>{latprojdetail?.number_of_nft}</span></td> */}\n                                        <td><span>Chain </span> <span>Polygon (Matic)</span></td>\n                                        <td><span>Created  </span> <span> {dayjs(latprojdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\n                                        <td><span>Country </span> <span>{latprojdetail?.country_name?.name}</span></td>\n                                        <td><span>State</span>  <span>{latprojdetail?.state_name?.name}</span> </td>\n                                        <td><span>City</span>  <span>{latprojdetail?.city_name?.name}</span> </td>\n                                        <td><span>Project Type</span>  <span>{latprojdetail?.type === \"1\" ? \"Single\" : 'Campaign'}</span> </td>\n                                        {latprojdetail.type == 2 &&\n\n                                            <><td><span>Start Date</span>  <span>{latprojdetail?.start_date}</span> </td>\n                                                <td><span>End Date </span> <span>{latprojdetail?.end_date}</span> </td></>\n                                        }\n                                        <td><span>Price </span> <span> {latprojdetail?.price} </span> </td></>\n                                ) : (\n                                    <>\n                                        {location.pathname === `/popularcollection/details/${slug}` ? (\n                                            <>\n\n                                                <td><span>Number of NFTs </span><span> {coll?.nft_data?.length}</span></td>\n                                                <td><span>Chain </span> <span>Polygon (Matic)</span></td>\n                                                <td><span>Created at</span>  <span>{days_difference} days ago</span> </td>\n                                                <td><span>Category</span>  <span>{coll?.category}</span> </td>\n                                            </>\n                                        ) : (\n\n                                            <>\n                                                <td><span>Chain: </span> <span>Polygon (Matic)</span></td>\n                                                <td><span>Created : </span> <span> {dayjs(projdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\n                                                <td><span>Country </span> <span>{projdetail.country_name?.name}</span></td>\n                                                <td><span>State</span>  <span>{projdetail.state_name?.name}</span> </td>\n                                                <td><span>City</span>  <span>{projdetail.city_name?.name}</span> </td>\n                                                <td><span>Project Type</span>  <span>{projdetail?.type === \"1\" ? \"Single\" : 'Campaign'}</span> </td>\n                                                {projdetail.type == 2 &&\n\n                                                    <><td><span>Start Date</span>  <span>{projdetail.start_date}</span> </td>\n                                                        <td><span>End Date </span> <span>{projdetail.end_date}</span> </td></>\n                                                }\n                                                <td><span>Price </span> <span> {projdetail.price} </span> </td>\n                                            </>\n                                        )}\n                                    </>\n                                )}\n                            </tr>\n                            {/* )\n                            })} */}\n\n                        </tbody>\n                    </Table>\n                </Panel>\n            </Collapse>\n        </div>\n    )\n}\n\nexport default ProjdataTable","\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Collapse } from 'antd';\nimport { LatestProjectDetail, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\nimport { useParams } from 'react-router';\nimport { Table } from 'react-bootstrap';\nimport { getLatestProjectDetail } from '../../redux/Slices/projectSlice';\n\nconst LatNftdataTable = () => {\n    const dispatch = useDispatch()\n\n    const { Panel } = Collapse;\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const { slug } = useParams()\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n    const projdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.latestprojectdetails\n    })\n    console.log(projdetail.nft_data, 'projdatanft')\n\n    useEffect(() => {\n        // \n        dispatch(LatestProjectDetail(slug))\n    }, [slug])\n\n    return (\n        <div className='position-relative'>\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                </svg>\n                <Panel header=\"Item Activity\" key=\"1\" >\n                    <Table responsive >\n                        <thead>\n\n\n                            <tr>\n\n                                <th>Item</th>\n                                <th>Price</th>\n                                <th>From</th>\n                                <th>To</th>\n                                <th>Transaction</th>\n                            </tr>\n\n\n                        </thead>\n                        <tbody className='img_table'>\n                            {projdetail?.project_activity && projdetail?.project_activity?.length ?\n                                [...new Map(projdetail?.project_activity.map(item =>\n                                    [item[\"title\"], item])).values()].map((item, idx) => {\n                                        return (\n                                            <tr className='contract-address'>\n\n                                                <td><img\n                                                    src={item.image}\n                                                    className=\"rounded-circle mr-2\"\n                                                    alt=\"Avatar\"\n                                                />{item.nft_title.slice(0, 13)}...</td>\n                                                <td className='referal'>{item.price}<img src='../../img/image14.png' /></td>\n                                                <td>{item.pay_from.slice(0, 4)}...{item.pay_from.slice(35, 44)}</td>\n                                                <td>{item.pay_to.slice(0, 4)}...{item.pay_to.slice(35, 44)}</td>\n                                                <td><a target=\"_blank\" href={`https://polygonscan.com/tx/${item?.txd_id}`} >{item.txd_id.slice(0, 4)}...{item.txd_id.slice(35, 44)}</a></td>\n                                            </tr>\n                                        )\n                                    }) :\n                                // <div className=\"col-12 col-sm-12 col-lg-12\">\n                                <>\n\n                                </>\n                            }\n                        </tbody>\n                        {/* <div className='nothing col-spam-5' colspan=\"5\">\n                            No matching records found\n                        </div> */}\n                    </Table>\n                    <div className='nothing'>\n                        {projdetail?.project_activity == 0 &&\n                            <span> No matching records found</span>\n                        }\n                    </div>\n                </Panel>\n\n            </Collapse>\n        </div>\n    )\n}\n\nexport default LatNftdataTable","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { LatestProjectDetail } from '../../redux/Actions/projectAction';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nconst ProjNFTS = (props) => {\n    const dispatch = useDispatch()\n \n    const { slug } = useParams();\n    const latprojdetail = useSelector(state => {\n        // \n        return state.projectdetails.latestprojectdetails\n    })\n    console.log(latprojdetail, \"prjj\")\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    useEffect(() => {\n        // \n        dispatch(LatestProjectDetail(slug))\n    }, [slug])\n    return (\n        <section className=\"live-auctions-area single_project-detail\">\n            <div className=\"container\">\n                <div className='intro row m-0'>\n                    <div className=\"intro-content\">\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\n                    </div>\n                </div>\n                <div className=\"row items\">\n                    {latprojdetail?.nft_data?.map((item, idx) => {\n                       \n                        return (\n                            \n                                \n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item soldout-card\">\n                            {item.sold_nft == 1 && \n                            <div className='sold-outbtn'>SOLD OUT</div>  \n                            }  \n                            <div className=\"card\">\n        \n                                    <div className=\"image-over\">\n                                        <Link to={item.sold_nft == 0 && `/nftprojdetails/${item.slug}?refid=${props.refid}`}>\n                                            {item.extention === 'modal' || item.extention === 'Player' ? (\n                                                <img className=\"card-img-top\" src={item.preview_imag} alt=\"\" />\n                                            ) : (\n                                                <img className=\"card-img-top\" src={item.image} alt=\"\" />\n                                            )}\n                                        </Link>\n                                    </div>\n                                    {/* Card Caption */}\n                                    <div className=\"card-caption col-12 p-0 nfts-detail\">\n                                        {/* Card Body */}\n                                        <div className=\"card-body\">\n                                            <h5 className=\"mb-0\">{item.title.slice(0, 16)} ...</h5>\n                                            <div className=\"card-bottom mt-1\">\n                                                <p dangerouslySetInnerHTML={{ __html: item.description.slice(0, 45) }} />\n                                            </div>\n                                            <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\n                                                {item.sold_nft !== 1 && (\n                                                    // <a> <button className='sold-outbtn' disabled>SOLD OUT</button></a>\n                                                \n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={item.sold_nft == 0 && `/nftprojdetails/${item.slug}?refid=${props.refid}`} style={{ color: \"white\" }}>Invest</Link></button></a>\n                                                )}\n                                                <a> <img className=\"mr-1\" src='../img/image14.png' />{item.price}</a>\n                                                \n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </section >\n    );\n}\nexport default ProjNFTS;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { getPopularCollectiondetails } from '../../redux/Slices/popularCollectionSlice';\nimport { GetNftwol } from '../../redux/Actions/projectAction';\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nconst CollectionNFTS =  (props) => {\n    const dispatch = useDispatch()\n    // const { slug } = useParams();\n    const params = useParams()\n    const collNft = useSelector(state => {\n        // \n        return state?.collection?.collectiondetail\n    })\n    const location = useLocation()\n    const refid = null\n    console.log(collNft, \"collNft\")\n    useEffect(() => {\n        if (params?.location?.pathname === `nftprojdetails/${props.slug}`){\n\n            dispatch(GetNftwol({slug:props.slug,refid}))\n        }\n    }, [dispatch])\n    return (\n        <section className=\"live-auctions-area single_project-detail\">\n            <div className=\"container p-0\">\n                <div className='intro row ml-0 mr-0 mt-3'>\n                    <div className=\"intro-content\">\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\n                    </div>\n                </div>\n                <div className=\"row items\">\n                    {collNft?.nft_data?.map((item, idx) => {\n                        return (\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item soldout-card\">\n                            {item.sold_nft == 1 &&\n                                <div className='sold-outbtn'>SOLD OUT</div>\n                            }\n                                <div className=\"card\">\n                                    <div className=\"image-over\">\n                                        <Link to={item.sold_nft == 0 && `/nftprojdetails/${item.slug}`}>\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\n                                        </Link>\n                                    </div>\n                                    {/* Card Caption */}\n                                    <div className=\"card-caption col-12 p-0 nfts-detail\">\n                                        {/* Card Body */}\n                                        <div className=\"card-body\">\n                                            <h5 className=\"mb-0\">{item.title.slice(0, 16)} ...</h5>\n                                            <div className=\"card-bottom mt-1\">\n                                                <p dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\n                                            </div>\n                                            <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\n                                                {item.sold_nft !== 0 && (\n                                                    // <a> <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled><i className=\"icon-handbag mr-1\" />SOLD OUT</button></a>\n                                               \n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={item.sold_nft == 0 &&`/nftprojdetails/${item.slug}`} style={{ color: \"white\" }}>Invest</Link></button></a>\n                                                )}\n                                                <a> <img className=\"mr-1\" src='../../img/image14.png' />{item.price}</a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </section >\n    );\n}\nexport default CollectionNFTS;","import React, { Component, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Nftprice, Nftdeatil } from './nftprice'\nimport { useParams } from 'react-router';\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\nimport Web3 from 'web3';\n\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\nimport { useState } from 'react';\nimport ReadMore from '../../readMore';\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\nimport UserTransdataTable from '../AuthorProfile/userDetails';\nimport UserdataTable from '../AuthorProfile/userTransTable';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport ProjdataTable from './projDetailtable';\nimport LatNftdataTable from './latProjNftdata';\nimport ProjNFTS from '../Auctions/projectnfts';\nimport { getPopularCollection } from '../../redux/Slices/popularCollectionSlice';\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\nimport CollectionNFTS from '../Collections/collectionNfts';\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\n// console.log(NFTContract.abi,\"abi\")\nconst web3 = createAlchemyWeb3(alchemyKey);\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\n\nconst CollectionDetails = (props) => {\n    const dispatch = useDispatch()\n\n    const slug = useParams();\n\n    useEffect(() => {\n        dispatch(PopularCollectionActionDetails(slug))\n\n\n    }, [slug])\n    const coll = useSelector(state => {\n        // \n        return state?.collection?.collectiondetail\n    })\n    console.log(coll, 'coll')\n    return (\n\n        <section className=\"item-details-area project-nft-si main-proj-detail collection_detail\">\n            <div className=\"container\">\n                <div className='col-12 col-lg-12 '>\n                    <span className=\"p-0 title_main \">{coll?.title}</span>\n                </div>\n                <div className=\"row\">\n\n\n                    <div className=\"col-12 col-lg-8 relative\">\n                        <div className=\"item-info\" >\n\n\n                            <div className=\"item-thumb text-center\">\n\n                                <img src={coll?.image} alt=\"first nft\" />\n                                {/* : null} */}\n                            </div>\n\n                        </div>\n\n\n\n\n\n                    </div>\n\n\n                    <div className='col-12 col-lg-4 '>\n                        <div class=\"user-description mt-4 mt-sm-0\">\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\n\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\n                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\n\n\n                            </h5>\n                            <ReadMore data={coll?.description?.slice(0, 505)} />\n                            {/* <p dangerouslySetInnerHTML={{ __html: coll.description }} /> */}\n                        </div>\n\n                        {/* <div className='content content_project'>\n                        <div className='card no-hover position-relative'>\n                        <div><span className='boldertext'>Number of NFTs :</span><span> {coll?.nft_data?.length}</span></div>\n                        <div><span className='boldertext'>Chain :</span> <span>Polygon (Matic)</span></div>\n                        <div><span className='boldertext'>Created at:</span>  <span> {days_difference}12  days ago</span></div>\n                        <div><span className='boldertext'>Category:</span>  <span>{coll?.category}</span></div>\n                        </div>\n\n                    </div> */}\n                        {/* \n                        <div className='table-main-detail mt-3 mt-lg-0 position-relative'>\n\n\n\n                            <ProjdataTable\n                                idx={slug}\n                            />\n                        </div> */}\n\n                    </div>\n\n\n\n                    {/* <div className=\"col-lg-4 col-12 mt-3 mt-lg-0\">\n                        <div>\n                            <div className=\" mb-3\">\n\n\n\n\n\n                                {coll?.user_invest?.slice(0, 3)?.map((items) => {\n                                    const date1 = new Date(items.updated_at)\n                                    const date2 = new Date()\n                                    const time_difference = date2.getTime() - date1.getTime();\n                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\n                                    console.log('days', days_difference)\n                                    return (\n\n                                        <ul className=\"m-0 custom_lis pl-0\">\n                                            <li>\n                                                <div className='lorem_done p-0'>\n                                                    <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                                    </svg>\n                                                    </span>\n\n                                                   \n                                                </div>\n                                            </li>\n\n\n                                        </ul>\n\n                                    )\n                                })}\n\n\n                                <p className='see_all'>See all</p>\n                            </div>\n                        </div>\n                    </div> */}\n                    {/* {userDetail !== null && ( */}\n\n                    {/* )} */}\n                    <div className=\"col-12 col-lg-12 mt-3\">\n                        {/* <div className='row'>\n                            <div className='filter'>\n                                <div className='filter-main-name'>\n                                    <div>Short</div>\n                                    <div>\n                                        <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"0\" fill=\"none\" width=\"24\" height=\"24\"/><g><path d=\"M7 10l5 5 5-5\" fill=\"#fff\"/></g></svg>\n                                    </div>\n                                </div>\n                                <div className='filter-main'>\n                                    <ul>\n                                        <li>Latest</li>\n                                        <li>Oldest</li>\n                                        <li>Price:Low to Heigh</li>\n                                        <li>Price:Heigh to Low </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div> */}\n\n\n\n                        {/* <div>\n\n                        <ProjdataTable\n                            idx={id}\n                        //  id={id}\n                        />\n                    </div> */}\n\n                        {/* </div> */}\n\n                        {/* <div className='col-12'>\n                        <div className='mt-3'>\n                            <div className='table-detail'>\n                                <LatNftdataTable />\n                            </div>\n                        </div>\n\n                    </div> */}\n\n                        <div className=\" col-12 mt-3 p-0\">\n                            <div className=\"items mt-0 explore-items p-0\">\n                               \n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <CollectionNFTS \n                slug={slug}/>\n            </div>\n        </section>\n    );\n}\n\n\nexport default CollectionDetails;","import { React } from 'react';\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport CollectionDetails from '../components/Explore/popularDetails';\n\nconst ItemDetails = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <CollectionDetails />\n\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default ItemDetails;","import React, { Component } from 'react';\n\nconst initData = {\n    pre_heading: \"Help Center\",\n    heading: \"How can we help you?\",\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\n}\n\nconst data = [\n    {\n        id: \"1\",\n        icon: \"icon icon-plane text-effect\",\n        title: \"Getting Started\",\n        content: \"Learn how to create an account, set up your wallet, and what you can do on NetStorm\"\n    },\n    {\n        id: \"2\",\n        icon: \"icon icon-note text-effect\",\n        title: \"Creating\",\n        content: \"Learn how to create your very first NFT and how to create your NFT collections so you can begin selling and sharing\"\n    },\n    {\n        id: \"3\",\n        icon: \"icon icon-handbag text-effect\",\n        title: \"Buying\",\n        content: \"Learn how to purchase your first NFT and understand gas fees and what's gas free on NetStorm\"\n    },\n    {\n        id: \"4\",\n        icon: \"icon icon-chart text-effect\",\n        title: \"Selling\",\n        content: \"Learn how list your NFTs for sale and understand the different ways to list your NFTs\"\n    },\n    {\n        id: \"5\",\n        icon: \"icon icon-link text-effect\",\n        title: \"Partners\",\n        content: \"Learn how you can partner with us to showcase your NFT drops\"\n    },\n    {\n        id: \"6\",\n        icon: \"icon icon-flag text-effect\",\n        title: \"Developers\",\n        content: \"Learn how you can develop with NetStorm &amp; sell them on Marketplace\"\n    }\n]\n\nclass HelpCenter extends Component {\n    state = {\n        initData: {},\n        data: []\n    }\n    componentDidMount() {\n        this.setState({\n            initData: initData,\n            data: data\n        })\n    }\n    render() {\n        return (\n            <section className=\"help-center-area\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-8 col-lg-7\">\n                            {/* Intro */}\n                            <div className=\"intro text-center\">\n                                <span>{this.state.initData.pre_heading}</span>\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\n                                <p>{this.state.initData.content}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center items\">\n                        {this.state.data.map((item, idx) => {\n                            return (\n                                <div key={`hd_${idx}`} className=\"col-12 col-md-6 col-lg-4 item\">\n                                    {/* Help Card */}\n                                    <div className=\"card help-card\">\n                                        <a className=\"d-block text-center\" href=\"#\">\n                                            <i className={item.icon} />\n                                            <h4>{item.title}</h4>\n                                            <p>{item.content}</p>\n                                        </a>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default HelpCenter;","import React, { Component } from 'react';\n\nconst initData = {\n    pre_heading: \"FAQ\",\n    heading: \"Frequently Asked Questions\",\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\n}\n\nconst data = [\n    {\n        id: \"1\",\n        btnClass: \"btn d-block text-left w-100 py-4\",\n        target: \"#collapseOne\",\n        quote: \"How do I create an NetStorm account?\",\n        contentId: \"collapseOne\",\n        contentClass: \"collapse show\",\n        content: \"The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text.\"\n    },\n    {\n        id: \"2\",\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\n        target: \"#collapseTwo\",\n        quote: \"Where can I see transaction details?\",\n        contentId: \"collapseTwo\",\n        contentClass: \"collapse\",\n        content: \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source.\"\n    },\n    {\n        id: \"3\",\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\n        target: \"#collapseThree\",\n        quote: \"How do royalties work on NetStorm?\",\n        contentId: \"collapseThree\",\n        contentClass: \"collapse\",\n        content: \"It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\n    },\n    {\n        id: \"4\",\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\n        target: \"#collapseFour\",\n        quote: \"How do I list an NFT to sell?\",\n        contentId: \"collapseFour\",\n        contentClass: \"collapse\",\n        content: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\"\n    },\n    {\n        id: \"5\",\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\n        target: \"#collapseFive\",\n        quote: \"How do I create an NFT?\",\n        contentId: \"collapseFive\",\n        contentClass: \"collapse\",\n        content: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"\n    }\n]\n\nclass Faq extends Component {\n    state = {\n        initData: {},\n        data: []\n    }\n    componentDidMount() {\n        this.setState({\n            initData: initData,\n            data: data\n        })\n    }\n    render() {\n        return (\n            <section className=\"faq-area pt-0\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-8 col-lg-7\">\n                            {/* Intro */}\n                            <div className=\"intro text-center\">\n                                <span>{this.state.initData.pre_heading}</span>\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\n                                <p>{this.state.initData.content}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12\">\n                            {/* FAQ Content */}\n                            <div className=\"faq-content\">\n                                {/* Netstorm Accordion */}\n                                <div className=\"accordion\" id=\"netstorm-accordion\">\n                                    <div className=\"row justify-content-center\">\n                                        <div className=\"col-12 col-md-10\">\n                                            {/* Single Accordion Item */}\n                                            {this.state.data.map((item, idx) => {\n                                                return (\n                                                    <div key={`fd_${idx}`} className=\"single-accordion-item p-3\">\n                                                        {/* Card Header */}\n                                                        <div className=\"card-header bg-inherit border-0 p-0\">\n                                                            <h2 className=\"m-0\">\n                                                                <button className={item.btnClass} type=\"button\" data-toggle=\"collapse\" data-target={item.target}>\n                                                                    {item.quote}\n                                                                </button>\n                                                            </h2>\n                                                        </div>\n                                                        <div id={item.contentId} className={item.contentClass} data-parent=\"#netstorm-accordion\">\n                                                            {/* Card Body */}\n                                                            <div className=\"card-body py-3\">\n                                                                {item.content}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                );\n                                            })}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Faq;","import React, { Component } from 'react';\n\nimport Header from '../components/Header/Header';\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\nimport Help from '../components/HelpCenter/HelpCenter';\nimport Faq from '../components/Faq/Faq';\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nclass HelpCenter extends Component {\n    render() {\n        return (\n            <div className=\"main\">\n                <Header />\n                <Breadcrumb title=\"Help Center\" subpage=\"Community\" page=\"Help Center\" />\n                <Help />\n                <Faq />\n                <Footer />\n                <ModalSearch />\n                <ModalMenu />\n                <Scrollup />\n            </div>\n        );\n    }\n}\n\nexport default HelpCenter;","import { React } from 'react';\nimport ReactImagePickerEditor from 'react-image-picker-editor';\n\nimport 'react-image-picker-editor/dist/index.css'\n\nconst UploadImage = ({ initalImag, imageSrc, setImageSrc, show = true }) => {\n  const config2 = {\n    borderRadius: '8px',\n    language: 'en',\n    width: '330px',\n    height: '250px',\n    objectFit: 'contain',\n    compressInitial: null,\n    hideDownloadBtn: true\n  };\n\n  const initialImage = initalImag;\n\n  return <div className='image-container'>\n    < ReactImagePickerEditor\n      config={config2}\n      // initialImage={im}\n      imageSrcProp={initialImage}\n      imageChanged={(newDataUri) => { setImageSrc(newDataUri) }} />\n    {/* <br /> <br />\n    <hr />\n    <br /> */}\n    {/* <p>Image preview:</p> */}\n    {/* {imageSrc && <img src={imageSrc} alt=\"example\" style={{ maxHeight: '900px', maxWidth: '100%', objectFit: 'contain', background: 'black' }} />}\n    {!imageSrc && <h2 style={{ textAlign: 'center', color: '#FFF' }}>No image loaded yet</h2>} */}\n\n  </div>\n}\n\nexport default UploadImage;\n\n\n","export const dataURLtoBlob = (dataurl) => {\n    var arr = dataurl?.split(','), mime = arr[0]?.match(/:(.*?);/)[1],\n        bstr = atob(arr[1]), n = bstr?.length, u8arr = new Uint8Array(n);\n    while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new Blob([u8arr], { type: mime });\n}\n\nexport const blobToDataURl = (blob) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = _e => resolve(reader.result);\n        reader.onerror = _e => reject(reader.error);\n        reader.onabort = _e => reject(new Error(\"Read aborted\"));\n        reader.readAsDataURL(blob);\n    });\n}","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect, useRef } from 'react';\nimport UploadImage from '../../shared/Upload'\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\n\nfunction Banner(props) {\n\n    const [imageSrc, setImageSrc] = useState('');\n\n    const dispatch = useDispatch()\n\n    const submit = () => {\n        // \n        const formData = new FormData()\n\n        const image = dataURLtoBlob(imageSrc)\n        formData.append('image', image)\n        dispatch(UpdateBanner(formData, props))\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header >\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Project Banner\n                </Modal.Title>\n                <div>\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n                <>\n                    <div className=\"banner_img\">\n                        <div>\n                            <UploadImage\n                                imageSrc={imageSrc}\n                                setImageSrc={setImageSrc}\n                            />\n                        </div>\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\n                    </div>\n                </>\n            </Modal.Body>\n        </Modal >\n    );\n}\n\nexport default Banner","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState, useEffect, useRef } from 'react';\nimport UploadImage from '../../shared/Upload'\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\nfunction AvatarUpload(props) {\n    const [imageSrc, setImageSrc] = useState('');\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    console.log(userdet.avatar)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(GetUserAction())\n    }, [])\n    const submit = () => {\n        const formData = new FormData()\n        const avatar = dataURLtoBlob(imageSrc)\n        formData.append('avatar', avatar)\n        formData.append('username', userdet.username)\n        dispatch(UpdateProfileAction(formData, props))\n    }\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header >\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    User Image\n                </Modal.Title>\n                <div>\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n                <>\n                    <div className=\"banner_img\">\n                        <div>\n                            <UploadImage\n                                imageSrc={imageSrc}\n                                setImageSrc={setImageSrc}\n                            />\n                        </div>\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\n                    </div>\n                </>\n            </Modal.Body>\n        </Modal >\n    );\n}\nexport default AvatarUpload","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState, useEffect, useRef } from 'react';\nimport UploadImage from '../../shared/Upload'\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\nfunction BannerUpload(props) {\n    const [imageSrc, setImageSrc] = useState('');\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    console.log(userdet.avatar)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(GetUserAction())\n    }, [])\n    const submit = () => {\n        const formData = new FormData()\n        const banner_image = dataURLtoBlob(imageSrc)\n        formData.append('username', userdet.username)\n        formData.append('banner_image', banner_image)\n        dispatch(UpdateProfileAction(formData, props))\n    }\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header >\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Profile Banner\n                </Modal.Title>\n                <div>\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n                <>\n                    <div className=\"banner_img\">\n                        <div>\n                            <UploadImage\n                                imageSrc={imageSrc}\n                                setImageSrc={setImageSrc}\n                            />\n                        </div>\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\n                    </div>\n                </>\n            </Modal.Body>\n        </Modal >\n    );\n}\nexport default BannerUpload","import React, { Component, useState } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { GetUserAction, UpdateProfileAction } from \"../../redux/Actions/authAction\";\nimport { useEffect } from \"react\";\nimport UserTransdataTable from \"./userTransTable\";\nimport UserdataTable from \"./userDetails\";\nimport Banner from \"../Create/editBanner\";\nimport AvatarUpload from \"./avatarUpload\";\nimport BannerUpload from \"./bannerUpload\";\nimport { Link } from \"react-router-dom\";\nconst AuthorProfile = () => {\n    const [modalSho, setModalSho] = React.useState(false);\n    const [modalShowavatar, setModalShowavatar] = React.useState(false);\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    console.log(userdet, 'user')\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\n    const dispatch = useDispatch()\n    const onSubmit = (data) => {\n        const formData = new FormData()\n        formData.append('username', data.username)\n        formData.append('email', data.email)\n        dispatch(UpdateProfileAction(formData))\n    }\n    useEffect(() => {\n        dispatch(GetUserAction());\n    }, []);\n    useEffect(() => {\n        if (userdet && Object.keys(userdet).length) {\n            setValue(\"avatar\", userdet.avatar);\n            setValue(\"username\", userdet.username);\n            setValue(\"email\", userdet.email);\n        }\n    }, [userdet]);\n    return (\n        <div className=\"col-12\">\n            <div className=\"container\">\n                {/* <h3 class=\"p-0\">Author Name </h3> */}\n                <div className=\"row pt-0\">\n                    <div className='col-md-8'>\n                        <div className=\"banner item-thumb text-center\">\n                            <div>\n                                <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\n                                    onClick={() => setModalSho(true)}\n                                ></i>\n                                <BannerUpload\n                                    show={modalSho}\n                                    onHide={() => setModalSho(false)} />\n                            </div>\n                            <img src={userdet.banner_image} alt=\"first nft\" />\n                        </div>\n                        <div className=\"table-detail mt-4\">\n                            <UserdataTable />\n                        </div>\n                        <div className=\"profile_detail mt-4 position-relative\">\n                            <UserTransdataTable />\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-4 mt-4 mt-lg-0\">\n                        <div className=\"profile_main_right card wrap_card no-hover text-center\">\n                            <div className=\"image-over\">\n                                <div>\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\n                                        onClick={() => setModalShowavatar(true)}\n                                    ></i>\n                                    <AvatarUpload\n                                        show={modalShowavatar}\n                                        onHide={() => setModalShowavatar(false)} />\n                                </div>\n                                <img className=\"card-img-top\" src={userdet.avatar} alt=\"\" />\n                            </div>\n                            {/* Card Caption */}\n                            <div className=\"card-caption col-12 p-0\">\n                                {/* Card Body */}\n                            </div>\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover p-0\">\n                                <div className=\"card-body\">\n                                    <from className=\"Edite_able\" >\n                                        <label>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                style={{ textTransform: 'none' }}\n                                                name=\"username\"\n                                                placeholder=\"username\"\n                                                {...register(\"username\", { required: true })}\n                                                aria-invalid={errors.username ? \"true\" : \"false\"}\n                                            />\n                                            {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\n                                            <i class=\"fa-solid fa-pen\"></i>\n                                        </label>\n                                        <label>\n                                            <input\n                                                type=\"email\"\n                                                className=\"form-control \"\n                                                name=\"email\"\n                                                // disabled={userdet.role == 3 ? true : false}\n                                                placeholder=\"email\"\n                                                {...register(\"email\")}\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\n                                            />\n                                            \n                                                <i class=\"fa-solid fa-pen\"></i>\n                                           \n                                        </label>\n                                        <button className=\"btn btn-bordered-white btn-smaller\" type=\"submit\" >\n                                            Update\n                                        </button>\n                                        <div>\n                                            <br />\n                                            {userdet.role == 3 ? (\n                                                <>You are logged in as a Creator/merchant<br />\n                                                    <span>click here to <Link to=\"/create\">create project</Link></span></>\n                                            ) : (\n                                                <span>You are logged in as a Buyer</span>\n                                            )}\n                                        </div>\n                                    </from>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                {\" \"}\n            </div>\n            {\" \"}\n        </div>\n    );\n};\nexport default AuthorProfile;","import React, { Component } from 'react';\n\nconst initData = {\n    pre_heading: \"Explore\",\n    heading: \"Exclusive Digital Assets\",\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\n    filter_1: \"All\",\n    filter_2: \"Art\",\n    filter_3: \"Music\",\n    filter_4: \"Collectibles\",\n    filter_5: \"Sports\"\n}\n\nconst data = [\n    {\n        id: \"1\",\n        group: '[\"art\",\"sports\"]',\n        img: \"/img/auction_1.jpg\",\n        author: \"/img/avatar_1.jpg\",\n        title: \"Virtual Worlds\",\n        content: \"ERC-729\",\n        price: \"4.37 BNB\",\n        likes: \"154\"\n    },\n    {\n        id: \"2\",\n        group: '[\"music\"]',\n        img: \"/img/auction_2.jpg\",\n        author: \"/img/avatar_2.jpg\",\n        title: \"Walking On Air\",\n        content: \"ERC-543\",\n        price: \"2.37 BNB\",\n        likes: \"74\"\n    },\n    {\n        id: \"3\",\n        group: '[\"music\",\"collectibles\"]',\n        img: \"/img/auction_3.jpg\",\n        author: \"/img/avatar_3.jpg\",\n        title: \"Trading Cards\",\n        content: \"ERC-932\",\n        price: \"1.89 BNB\",\n        likes: \"\"\n    },\n    {\n        id: \"4\",\n        group: '[\"music\",\"sports\",\"art\",\"collectibles\"]',\n        img: \"/img/auction_4.jpg\",\n        author: \"/img/avatar_4.jpg\",\n        title: \"Sports\",\n        content: \"ERC-250\",\n        price: \"0.74 BNB\",\n        likes: \"184\"\n    },\n    {\n        id: \"5\",\n        group: '[\"sports\",\"art\",\"music\"]',\n        img: \"/img/auction_5.jpg\",\n        author: \"/img/avatar_5.jpg\",\n        title: \"Cartoon Heroes\",\n        content: \"ERC-167\",\n        price: \"4.23 BNB\",\n        likes: \"126\"\n    },\n    {\n        id: \"6\",\n        group: '[\"art\",\"sports\"]',\n        img: \"/img/auction_6.jpg\",\n        author: \"/img/avatar_6.jpg\",\n        title: \"Domain Names\",\n        content: \"ERC-037\",\n        price: \"3.41 BNB\",\n        likes: \"23\"\n    }\n]\n\nclass ExploreSix extends Component {\n    state = {\n        initData: {},\n        data: []\n    }\n    componentDidMount(){\n        this.setState({\n            initData: initData,\n            data: data\n        })\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\n                    <div className=\"col-12\">\n                        {/* Explore Menu */}\n                        <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\n                            <label className=\"btn active d-table text-uppercase p-2\">\n                                <input type=\"radio\" defaultValue=\"all\" defaultChecked className=\"explore-btn\" />\n                                <span>{this.state.initData.filter_1}</span>\n                            </label>\n                            <label className=\"btn d-table text-uppercase p-2\">\n                                <input type=\"radio\" defaultValue=\"art\" className=\"explore-btn\" />\n                                <span>{this.state.initData.filter_2}</span>\n                            </label>\n                            <label className=\"btn d-table text-uppercase p-2\">\n                                <input type=\"radio\" defaultValue=\"music\" className=\"explore-btn\" />\n                                <span>{this.state.initData.filter_3}</span>\n                            </label>\n                            <label className=\"btn d-table text-uppercase p-2\">\n                                <input type=\"radio\" defaultValue=\"collectibles\" className=\"explore-btn\" />\n                                <span>{this.state.initData.filter_4}</span>\n                            </label>\n                            <label className=\"btn d-table text-uppercase p-2\">\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\n                                <span>{this.state.initData.filter_5}</span>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row items explore-items\">\n                    {this.state.data.map((item, idx) => {\n                        return (\n                            <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" data-groups={item.group}>\n                                <div className=\"card no-hover text-center\">\n                                    <div className=\"image-over\">\n                                        <a href=\"/item-details\">\n                                            <img className=\"card-img-top\" src={item.img} alt=\"\" />\n                                        </a>\n                                        {/* Author */}\n                                        <a className=\"author\" href=\"/authors\">\n                                            <div className=\"author-thumb avatar-lg\">\n                                                <img className=\"rounded-circle\" src={item.author} alt=\"\" />\n                                            </div>\n                                        </a>\n                                    </div>\n                                    {/* Card Caption */}\n                                    <div className=\"card-caption col-12 p-0\">\n                                        {/* Card Body */}\n                                        <div className=\"card-body mt-4\">\n                                            <a href=\"/item-details\">\n                                                <h5 className=\"mb-2\">{item.title}</h5>\n                                            </a>\n                                            <span>{item.content}</span>\n                                            <hr />\n                                            <div className=\"card-bottom d-flex justify-content-between\">\n                                                <span>{item.price}</span>\n                                                <span><i className=\"icon-heart mr-2\" />{item.likes}</span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExploreSix;","import React, { Component } from 'react';\nimport AuthorProfile from '../AuthorProfile/AuthorProfile';\nimport Explore from '../Explore/ExploreSix';\n\nclass Author extends Component {\n    render() {\n        return (\n            <section className=\"author-area explore-area author-details-area  popular-collections-area\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-12\">\n                            <AuthorProfile />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Author;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport AuthorProfile from '../components/Author/Author';\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nconst Author = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <AuthorProfile />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default Author;","import React from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { ConnectWallet } from './interact';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loginSuccess } from '../../redux/Slices/authSlice';\nimport { useEffect } from 'react';\nimport { GetUserAction } from '../../redux/Actions/authAction';\n\nconst data = {\n    \"preHeading\": \"Wallet Connect\",\n    \"heading\": \"Connect your Wallet\",\n    \"content\": \"Connect your wallet to continue browsing our website\",\n    \"walletData\": [\n        {\n            \"id\": 1,\n            \"img\": \"/img/metamask.png\",\n            \"title\": \"MetaMask\",\n            \"content\": \"A browser extension with great flexibility. The web's most popular wallet\"\n        },\n    ]\n}\n\nconst Wallet = () => {\n    // \n    const dispatch = useDispatch()\n    const history = useHistory()\n    // const userRole = useSelector(state => {\n    //     return state?.user?.userdetail?.role\n    // })\n    // useEffect(()=>{\n    //     // if (sessionStorage.getItem('authToken')) {\n\n    //         dispatch(GetUserAction())\n    //     // }\n    // })\n    const handleConnect = async () => {\n        const res = await ConnectWallet(\"CREATOR\", dispatch)\n        if (res?.res?.response?.status === 401) {\n            history.push('/wallet-connect')\n        }\n        else {\n            dispatch(loginSuccess(res?.res))\n            sessionStorage.setItem('authToken', res?.res?.data?.data?.auth_token)\n            {res.res.data.data.role == 2 ?(\n\n                    history.push('/all/LatestProjects')\n            ):(\n                history.push('/projectlist')\n            )}\n            // {userRole.role == 2 && \n\n            // }\n            // {userRole.role == 2 && \n            //         history.push('/projectlist')\n            // }\n        }\n    }\n\n    return (\n        <section className=\"wallet-connect-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-md-8 col-lg-7\">\n                        {/* Intro */}\n                        <div className=\"intro text-center mt-4 pt-2 mb-1\">\n                            {/* <span>{data.preHeading}</span> */}\n                            <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\n                            <p>{data.content}</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center items\">\n                    {data?.walletData?.map((item, idx) => {\n                        return (\n                            <div key={`wd_${idx}`} onClick={handleConnect}\n                                className=\"col-12 col-md-6 col-lg-4 item\">\n                                {/* Single Wallet */}\n                                <div className=\"card single-wallet\">\n                                    <a className=\"d-block text-center\">\n                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\n                                        <h4 className=\"mb-0\">{item.title}</h4>\n                                        <p>{item.content}</p>\n                                    </a>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </section>\n    );\n\n}\n\nexport default Wallet;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\nimport Wallet from '../components/Wallet/Wallet';\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nconst WalletConnect = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <Wallet />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default WalletConnect;","import { createContext, useContext, useState } from \"react\";\nexport const FormContext = createContext();\nexport default function FormProvider({ children }) {\n    const [data, setData] = useState({});\n    console.log(data, 'dataaacreate')\n    const setFormValues = (data) => {\n        setData((prevValues) => ({\n            ...prevValues,\n            ...data,\n        }));\n    };\n    return (\n        <FormContext.Provider value={{ data, setFormValues }}>\n            {children}\n        </FormContext.Provider>\n    );\n}\nexport const useFormData = () => useContext(FormContext);","import React, { Component, useEffect, useState, useRef, useMemo } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { CategoriesAction, CreateProjectAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\nimport 'reactjs-popup/dist/index.css';\nimport styles from \"./styles/styles.module.scss\"\nimport { useFormData } from './Context/context';\nimport JoditEditor from 'jodit-react'; import { CityList, CountryList, GetUserAction, StateList } from '../../redux/Actions/authAction';\nimport UploadImage from '../../shared/Upload';\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\nconst Create = ({ current, next, prev }) => {\n    const editor = useRef(null);\n    const { data, setFormValues, prevValues } = useFormData();\n    const [description, setDescription] = useState()\n    const [country, setCountry] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [image, setImage] = useState()\n    const [loading, setLoading] = useState(false)\n    const [collection_id, setCollectionId] = useState(0);\n    const [usertype, setUserType] = useState(\"1\");\n    const [nonft, setNonft] = useState('1')\n    function onHandleClick(event) {\n        setCollectionId(event.currentTarget.id);\n    };\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [modalShow, setModalShow] = React.useState(false);\n    const [countryName, setCountryName] = useState(\" \")\n    const { countries } = useSelector(state => state.countries)\n    const states = useSelector(state => {\n        return state.countries.states\n    })\n    const cities = useSelector(state => { return state.countries.city })\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({\n        mode: \"all\",\n    });\n    const col = useSelector(state => {\n        return state?.projectdetails?.getcollections\n    })\n    const onSubmit = (data) => {\n        const imageBanner = dataURLtoBlob(image)\n        setFormValues({ ...data, description, type: usertype, image: imageBanner, imageUri: image });\n        next()\n    }\n    useEffect(() => {\n        dispatch(GetUserAction())\n        dispatch(GetCollectionsAction())\n        dispatch(CategoriesAction())\n        dispatch(CountryList())\n        if (prev) {\n            setValue('title', data.title)\n            setValue('address', data.address)\n            setValue('category_id', data.category_id)\n            setValue('country', data.country)\n            setValue('state', data.state)\n            setValue('city', data.city)\n            setValue('description', data.description)\n            setValue('price', data.price)\n            setValue('type', data.usertype)\n            setValue('image', data.imageUri)\n            setUserType(data.usertype)\n            setCountry(data.country)\n            setDescription(data.description)\n            setImage(data.imageUri)\n            setState(data.state)\n            setCity(data.city)\n        }\n        handleChangeCountry()\n    }, [data])\n    const cat = useSelector(state => {\n        return state?.projectdetails?.categories\n    })\n    const handleChangeCountry = (event) => {\n        // 👇 Get input value from \"event\"\n        const formData = new FormData()\n        if (event?.currentTarget?.value) {\n            setCountry(event?.currentTarget?.value);\n            formData.append('country_id', event?.currentTarget?.value)\n        } else {\n            setCountryName(userdet?.organization_detail?.country)\n            setCountry(userdet?.organization_detail?.country_id);\n            formData.append('country_id', userdet?.organization_detail?.country_id)\n        }\n        dispatch(StateList(formData)) // if (country) {\n        //     \n        // }\n    };\n    const handleChangeState = (event) => {\n        // 👇 Get input value from \"event\"\n        // setCountry(event.currentTarget.value);\n        const formData = new FormData()\n        formData.append('country_id', country)\n        formData.append('state_id', event.currentTarget.value)\n        dispatch(CityList(formData))\n    };\n    const today = new Date();\n    const numberOfDaysToAdd = 30;\n    const date = today.setDate(today.getDate())\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\n    const handleSubmitDraft = (data) => {\n        // \n        // \n        const imageBanner = dataURLtoBlob(image)\n        const formData = new FormData()\n        for (const [key, value] of Object.entries(data)) {\n            formData.append(key, value)\n        }\n        formData.append(\"image\", imageBanner)\n        formData.append(\"type\", \"1\")\n        formData.append(\"status\", 3)\n        formData.append(\"number_of_nft\", \"1\")\n        formData.append(\"on_which_step_left\", 0)\n        dispatch(CreateProjectAction(formData, setLoading, history))\n    }\n    return (\n        <div className={current === 0 ? styles.showForm : styles.hideForm}>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 col-12\">\n                        {/* {type == 1 && ( */}\n                        <div className=\"form-group mt-3\">\n                            <label>Project name</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"title\"\n                                placeholder=\"Project name\"\n                                {...register(\"title\", { required: true, pattern: { value: /[A-Za-z]/ } })}\n                                aria-invalid={errors.title ? \"true\" : \"false\"}\n                            />\n                            {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>}\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\n                        </div>\n                        {/* )} */}\n                    </div>\n                    <div className=\"col-md-6 col-12\">\n                        <div className=\"form-group mt-3\">\n                            <label>Web address</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                // required={false}\n                                name=\"address\"\n                                placeholder=\"Web address\"\n                                {...register(\"address\", {\n                                    required: true,\n                                    pattern: {\n                                        value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\n                                    }\n                                })}\n                                aria-invalid={errors.address ? \"true\" : \"false\"}\n                            />\n                            {errors.address && errors.address?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\n                            {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\n                        </div>\n                    </div>\n                    <div className=\"col-12\">\n                        <label>Description</label>\n                        <div className=\"form-group\">\n                            <Controller\n                                control={control}\n                                name=\"description\"\n                                defaultValue=\"\"\n                                rules={{ required: true, minLength: 100 }}\n                                render={({ field }) => {\n                                    return <JoditEditor\n                                        ref={field.ref}\n                                        value={field.value}\n                                        placeholder=\"start typing\"\n                                        aria-invalid={errors.description ? \"true\" : \"false\"}\n                                        tabIndex={1} // tabIndex of textarea\n                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\n                                        onChange={field.onChange}\n                                    />\n                                }}\n                            />\n                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\n                            {errors.description && errors.description.type === \"minLength\" && (\n                                <p style={{ color: 'red' }}>\n                                    min length of words is 100\n                                </p>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 col-12\">\n                        <div className=\"form-group mt-3\">\n                            <label>Country</label>\n                            <select name=\"country\"\n                                {...register(\"country\", { required: true })} onChange={handleChangeCountry}>\n                                aria-invalid={errors?.country ? \"true\" : \"false\"}\n                                <option value={userdet?.organization_detail?.country_id} selected>{countryName}</option>\n                                {countries?.data?.data?.map((option, key) => (\n                                    <>\n                                        <option key={key.id} value={option.id}>\n                                            {option.name}\n                                        </option>\n                                    </>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 col-12\">\n                        <div className=\"form-group mt-3\">\n                            <label>State or province</label>\n                            <select name=\"state\"\n                                {...register(\"state\")} onChange={handleChangeState}>\n                                aria-invalid={errors?.state ? \"true\" : \"false\"}\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state/province</option>\n                                {states?.data?.data?.map((option, key) => (\n                                    <><option key={key.id} value={option.id}  >\n                                        {option.name}\n                                    </option></>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 col-12\">\n                        <div className=\"form-group\">\n                            <label>City or Region</label>\n                            <select name=\"city\"\n                                {...register(\"city\")}>\n                                aria-invalid={errors?.city ? \"true\" : \"false\"}\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city/region</option>\n                                {cities?.data?.data?.map((option, key) => (\n                                    <><option key={key.id} value={option.id}>\n                                        {option.name}\n                                    </option></>\n                                ))}\n                            </select>\n                        </div>\n                        \n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                            <div className=\"form-group\">\n                                <label>Category</label>\n                                <select name=\"category_id\"\n                                    {...register(\"category_id\", { required: true })}\n                                >\n                                    aria-invalid={errors.category_id ? \"true\" : \"false\"}\n                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select category </option>\n                                    {cat?.map((option, key) => (\n                                        <option key={key.id} value={option.id} >\n                                            {option.title}\n                                        </option>\n                                    ))}\n                                </select>\n                                {errors.category_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Category is required</p>}\n                            </div>\n                        </div>\n                    <div className=\"col-12 col-md-12\">\n                        <div className=\"form-group\">\n                            {usertype == 2 ? (\n                                <label>Price per NFT (In MATIC tokens)</label>\n                            ) : (\n                                <label>Price (In MATIC tokens)</label>\n                            )}\n                            <input\n                                type=\"number\"\n                                className=\"form-control\"\n                                step=\"0.01\"\n                                name=\"price\"\n                                placeholder=\"Price\"\n                                {...register(\"price\", { required: true })}\n                                onChange={(e) => setPrice(e.target.value)}\n                                aria-invalid={errors.price ? \"true\" : \"false\"}\n                            />\n                            {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\n                        </div>\n                        <div className=\"\">\n                            <div className=\"form-group pricing-detail\">\n                                <p><span>Price</span> <span>{price ? price : '--'} MATIC</span></p>\n                               \n                                <div className='fee_contentdiv'><span className='mainkrmetica_heading'>Karmatica Fee</span><div className='fee_content'><span>Buyer</span><span>1%</span></div><div className='fee_content'><span>Seller</span><span>1%</span></div></div>\n                                {/* <span>Buyer</span><span>1%</span><br /><span>Seller</span><span>1%</span> */}\n                                \n                                \n                                <p><span>You will receive </span><span>{98 * price / 100 ? 98 * price / 100 : \"--\"} MATIC</span></p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\" col-12\">\n                        <div className=\"form-group\">\n                            <label>Banner image</label>\n                            <UploadImage\n                                imageSrc={image}\n                                // src={image}\n                                initalImag={data.imageUri}\n                                setImageSrc={setImage}\n                            />\n                            <div >\n                                <div className='logo-dis logo-dis-img'>\n                                    <span>Allowed types: JPG, PNG, GIF</span><span>Banner should be 800 px wide x 500 px high, 10MB max</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={handleSubmit(handleSubmitDraft)}>\n                            Save as Draft\n                        </button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\nexport default Create;","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { CreateCollectionAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\nimport UploadImage from '../../shared/Upload';\nimport { Loader } from '@react-three/drei';\nfunction MyVerticallyCenteredModal(props) {\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\n    const [image, setImage] = useState()\n    const OnSubmit = (dat) => {\n        const imageBanner = dataURLtoBlob(image)\n        dispatch(CreateCollectionAction({ dat, imageBanner, props, setLoading }))\n    }\n    return (\n        <>\n            <Modal\n                {...props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header >\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        {loading ? (\n\n                            <>Please wait ...</>\n                        ) : (\n                            <>\n                                Create Collection\n                            </>\n                        )\n                        }\n                    </Modal.Title>\n                    <div>\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\n                        {loading ? (\n                            <Loader />\n\n                        ) : (\n                            <><div className='row'>\n                                <div className=\"col-6\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Display name</label>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"title\"\n                                            aria-invalid={errors.title ? \"true\" : \"false\"}\n                                            placeholder=\"Enter collection name\"\n                                            {...register('title', { required: true })} />\n                                    </div>\n                                    {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">collection name is required</p>}\n                                </div>\n                                <div className=\"col-6\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Symbol</label>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"symbol\"\n                                            aria-invalid={errors.symbol ? \"true\" : \"false\"}\n                                            placeholder=\"Enter token symbol\"\n                                            {...register('symbol', { required: true })} />\n                                        {errors.symbol?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">symbol is required</p>}\n                                    </div>\n                                </div>\n                                <div className=\"col-6\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Description</label>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"description\"\n                                            aria-invalid={errors.description ? \"true\" : \"false\"}\n                                            {...register('description', { required: true })}\n                                            // value={description}\n                                            // onChange={(e) => {\n                                            //     setDescription(e.target.value);\n                                            // }}\n                                            placeholder=\"Spread some words about your collection\" />\n                                        {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">description is required</p>}\n                                    </div>\n                                </div>\n                                <div className=\"col-6\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Web URL</label>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n\n                                            name=\"short_url\"\n                                            placeholder=\"Web URL\"\n                                            {...register('short_url', { required: true })} />\n                                        {errors.short_url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Web URL is required</p>}\n                                    </div>\n                                </div>\n                                <div className=\"col-12 col-md-12\">\n                                    <div className=\"form-group\">\n                                        <label>Banner image</label>\n                                        <UploadImage\n                                            imageSrc={image}\n                                            // initalImag={image}\n                                            setImageSrc={setImage} />\n                                        <div>\n                                            <span className='logo-dis'>Allowed types: JPG, PNG, GIF<br />Banner should be 1500 px wide x 500 px high</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div><Button key=\"create-collection\" type=\"submit\" className=\"btn btn-primary\">Create</Button></>\n\n                        )}\n                    </form>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}\nexport default MyVerticallyCenteredModal","import { useState, useEffect, useRef } from \"react\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nfunction loadGLTFModel(scene, glbPath, options) {\n    const { receiveShadow, castShadow } = options;\n    return new Promise((resolve, reject) => {\n        const loader = new GLTFLoader();\n        loader.load(\n            glbPath,\n            (gltf) => {\n                const obj = gltf.scene;\n                obj.name = \"dinosaur\";\n                obj.position.y = 0;\n                obj.position.x = 0;\n                obj.receiveShadow = receiveShadow;\n                obj.castShadow = castShadow;\n                scene.add(obj);\n                obj.traverse(function (child) {\n                    if (child.isMesh) {\n                        child.castShadow = castShadow;\n                        child.receiveShadow = receiveShadow;\n                    }\n                });\n                resolve(obj);\n            },\n            undefined,\n            function (error) {\n                console.log(error);\n                reject(error);\n            }\n        );\n    });\n}\nfunction easeOutCirc(x) {\n    return Math.sqrt(1 - Math.pow(x - 1, 4));\n}\nconst DModal = ({ vdo }) => {\n    // \n    // const { vdo } = props\n    const refContainer = useRef();\n    const [loading, setLoading] = useState(true);\n    const [renderer, setRenderer] = useState();\n    const [source, setSource] = useState('')\n    console.log('source', source)\n    useEffect(() => {\n        // \n        const file = vdo;\n        const { current: container } = refContainer;\n        if (container && !renderer) {\n            const scW = container.clientWidth;\n            const scH = container.clientHeight;\n            const renderer = new THREE.WebGLRenderer({\n                antialias: true,\n                alpha: true\n            });\n            renderer.setPixelRatio(window.devicePixelRatio);\n            renderer.setSize(scW, scH);\n            renderer.outputEncoding = THREE.sRGBEncoding;\n            container.appendChild(renderer.domElement);\n            setRenderer(renderer);\n            const scene = new THREE.Scene();\n            const scale = 5.6;\n            const camera = new THREE.OrthographicCamera(\n                -scale,\n                scale,\n                scale,\n                -scale,\n                0.01,\n                50000\n            );\n            const target = new THREE.Vector3(-0.5, 1.2, 0);\n            const initialCameraPosition = new THREE.Vector3(\n                20 * Math.sin(0.2 * Math.PI),\n                10,\n                20 * Math.cos(0.2 * Math.PI)\n            );\n            const ambientLight = new THREE.AmbientLight(0xcccccc, 1);\n            scene.add(ambientLight);\n            const controls = new OrbitControls(camera, renderer.domElement);\n            controls.autoRotate = false;\n            controls.enableZoom = true;\n            controls.minDistance = 0\n            controls.minZoom = 0\n            controls.target = target;\n            const loader = new GLTFLoader()\n            loader.load(\n                file,\n                function (gltf) {\n                    gltf.scene.traverse(function (child) {\n                        if (child.isMesh) {\n                            const m = child\n                            m.receiveShadow = true\n                            m.castShadow = true\n                        }\n                        if (child.isLight) {\n                            const l = child\n                            l.castShadow = true\n                            l.shadow.bias = -0.003\n                            l.shadow.mapSize.width = 2048\n                            l.shadow.mapSize.height = 2048\n                        }\n                    })\n                    scene.add(gltf.scene)\n                },\n                (xhr) => {\n                    animate();\n                    setLoading(false);\n                    // mdl(file)\n                    console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\n                },\n                (error) => {\n                    // \n                    console.log(error)\n                }\n            )\n            let req = null;\n            let frame = 0;\n            const animate = () => {\n                req = requestAnimationFrame(animate);\n                frame = frame <= 100 ? frame + 1 : frame;\n                if (frame <= 100) {\n                    const p = initialCameraPosition;\n                    const rotSpeed = -easeOutCirc(frame / 120) * Math.PI * 20;\n                    camera.position.y = 10;\n                    camera.position.x =\n                        p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed);\n                    camera.position.z =\n                        p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed);\n                    camera.lookAt(target);\n                } else {\n                    controls.update();\n                }\n                renderer.render(scene, camera);\n            };\n            return () => {\n                cancelAnimationFrame(req);\n                renderer.dispose();\n            };\n        }\n    }, [vdo]);\n    return (\n        <div\n            style={{ height: \"270px\", width: \"300px\", position: \"relative\" }}\n            ref={refContainer}\n        >\n            {loading && (\n                <span style={{ position: \"absolute\", left: \"50%\", top: \"50%\" }}>\n                    Loading...\n                </span>\n            )}\n        </div>\n    );\n};\nexport default DModal\n","import Modal from 'react-bootstrap/Modal';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useLocation } from 'react-router';\nimport { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\nimport { CategoriesAction, UpdateProject } from '../../redux/Actions/projectAction';\nfunction ProTypePopup(props) {\n    const location = useLocation()\n    const [type, setType] = useState()\n    const { countries } = useSelector(state => state.countries)\n    const [country, setCountry] = useState('')\n    const [description, setDescription] = useState();\n    const dispatch = useDispatch()\n    console.log('country', country)\n    const [state, setState] = useState('')\n    const [city, setCity] = useState('')\n    console.log(countries?.data?.data, 'cntry')\n    const states = useSelector(state => {\n        // \n        return state.countries.states\n    })\n    const cities = useSelector(state => {\n        // \n        return state.countries.city\n    })\n    // useEffect(() => {\n    //     dispatch(CategoriesAction())\n    //     dispatch(CountryList())\n    // }, [])\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\n\n    const projdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.projectdetails\n    })\n    const lat = sessionStorage.getItem('latitude')\n    // console.log(lat, 'lattt')\n    const log = sessionStorage.getItem('longitude')\n    useEffect(() => {\n        if (location.pathname !== '/create' && projdetail && Object.keys(projdetail).length) {\n            setValue(\"title\", projdetail.title)\n            setValue(\"address\", projdetail.address)\n            setValue(\"description\", projdetail.description)\n            setValue('state', projdetail.state)\n            setValue('country', projdetail.country)\n            setValue('city', projdetail.city)\n            setValue(\"price\", projdetail.price)\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\n            setValue(\"start_date\", projdetail.start_date)\n            setValue(\"end_date\", projdetail.end_date)\n            setValue(\"type\", projdetail.type)\n            setValue('category_id', projdetail.category_id)\n            setType(projdetail.type)\n            setCountry(projdetail.country)\n            setDescription(projdetail.description)\n            // setState(projdetail.state)\n            // setCity(projdetail.city)\n            console.log(projdetail.state, 'edit state')\n            console.log(projdetail.city, 'edit city')\n            setValue(\"image\", projdetail.image)\n            const formData = new FormData()\n            // formData.append('country_id', event?.currentTarget?.value)\n            formData.append('country_id', projdetail.country)\n            formData.append('state_id', projdetail.state)\n            dispatch(StateList(formData))\n            dispatch(CityList(formData))\n        }\n    }, [projdetail]);\n    const OnSubmit = (data) => {\n        // \n        if (location.pathname === '/create') {\n\n            props.startdate(data.start_date)\n            props.enddate(data.end_date)\n            props.nftno(data.number_of_nft)\n            props.onHide(true)\n        } else {\n            const formData = new FormData()\n\n\n            formData.append('title', data.title)\n            formData.append('description', description)\n            formData.append('state', data.state)\n            formData.append('country', data.country)\n            formData.append('city', data.city)\n            formData.append('address', data.address)\n            formData.append('price', data.price)\n            formData.append('number_of_nft', data.number_of_nft)\n            if (data?.type == 1) {\n\n                formData.append('start_date', '')\n                formData.append('end_date', '')\n            } else {\n\n                formData.append('start_date', data.start_date)\n                formData.append('end_date', data.end_date)\n            }\n            formData.append('type', '2')\n            formData.append('category_id', data.category_id)\n\n            dispatch(UpdateProject(props, formData))\n\n        }\n    }\n    const today = new Date();\n    const numberOfDaysToAdd = 30;\n    const date = today.setDate(today.getDate())\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\n    const disablePastDate = () => {\n        const today = new Date();\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\n        const yyyy = today.getFullYear();\n        return yyyy + \"-\" + mm + \"-\" + dd;\n    };\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header >\n                <div>\n                    <label>Switch to Campaign for multiple NFTs</label><br />\n                    <span>fill the following mandatory fields to continue</span>\n                </div>\n                <div>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\n                    <div className=\"row\">\n                        <><div className=\"col-12 col-md-6\">\n                            <div className=\"form-group\">\n                                <label>Campaign Start date</label>\n                                <input\n                                    type=\"date\"\n                                    className=\"form-control\"\n                                    name=\"start_date\"\n                                    min={disablePastDate()}\n                                    defaultValue={defaultValue}\n                                    {...register(\"start_date\", { required: true })}\n                                    aria-invalid={errors.start_date ? \"true\" : \"false\"}\n                                />\n                                {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\n                            </div>\n                        </div>\n                            <div className=\"col-12 col-md-6\">\n                                <div className=\"form-group\">\n                                    <label>Campaign End Date</label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"end_date\"\n                                        defaultValue={defaultValue1}\n                                        min={disablePastDate()}\n                                        {...register(\"end_date\", { required: true })}\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\n                                    />\n                                    {errors.end_date && errors?.end_date?.type === 'min' && <p style={{ color: 'red' }} role=\"alert\">End date should be greater or equal to startdate</p>}\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\n                                </div>\n                            </div></>\n                        <div className=\"col-12 col-md-6\">\n                            <div className=\"form-group\">\n                                <label>Number of NFTs</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"number_of_nft\"\n                                    min={1}\n                                    max={10}\n                                    maxLength={10}\n                                    placeholder=\"Select your number of NFTs (1-10)\"\n                                    {...register(\"number_of_nft\", { required: true, min: 1, max: 10 })}\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\n                                />\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFTs per project is required with a limit of 10</p>}\n                            </div>\n                        </div>\n                        <div className=\"col-12\">\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type='submit'>switch</button>\n                        </div>\n                        {/* } */}\n                    </div>\n                </form>\n            </Modal.Body>\n        </Modal >\n    );\n}\nexport default ProTypePopup","import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, Tooltip } from 'antd';\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\nimport { useFormData } from './Context/context'\nimport MyVerticallyCenteredModal from './createCollection';\nimport styles from './styles/styles.module.scss'\nimport 'antd/lib/form/style/css';\nimport 'antd/lib/upload/style/css';\nimport { Collapse } from 'antd';\nimport 'antd/lib/modal/style/css';\n\nimport 'antd/lib/button/style/css'\nimport JoditEditor from 'jodit-react'\nimport Loader from '../Loader/loader';\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router';\nimport DModal from './3dModal';\nimport ProTypePopup from './ProjectTypePopup';\nimport { LogsAction } from '../../redux/Actions/logsAction';\n\nconst UploadNft = ({ current, prev }) => {\n\n    const editor = useRef(null);\n    const { data, setFormValues } = useFormData();\n\n    const [count, setCount] = useState(1);\n    console.log(\"count\", count)\n    const [nft_description, setNft_description] = useState([])\n    console.log(\"nftdescr\", nft_description)\n    const history = useHistory()\n    const [modalShow, setModalShow] = React.useState(false);\n    const [projmodalShow, setProjModalShow] = React.useState(false);\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: '1' });\n    const [nftFileType, setNFtFileType] = useState()\n    const [nftimage, setNftImage] = useState([])\n    // console.log(nftimage.map(x => x), \"nfttttt\")\n    const [nftwidth, setNftwidth] = useState()\n    const [nftHeight, setNftheight] = useState()\n    const [size, setSize] = useState()\n    const [Pimage, setPimage] = useState([])\n    console.log(Pimage, \"Pimage\")\n    const [startDate, setStartDate] = useState(\"\")\n    console.log(\"startdate\", startDate)\n    const [endDate, setEndDate] = useState(\"\")\n    console.log(\"enddate\", endDate)\n    const [numberofNfts, setNumberofNfts] = useState(\"\")\n    console.log(\"noof nfts\", numberofNfts)\n\n    const coll_id = (Object.values(nft_collection_id));\n    const [source, setSource] = useState([])\n    const [sourceType, setSourceType] = useState()\n\n\n    const [loading, setLoading] = useState(false)\n    const [modal, setModal] = useState()\n    const [NFtFileExtension, setNFtExtension] = useState()\n    const [preview, setPreview] = useState([])\n    const [basePreview, setPreviewBase] = useState([])\n    console.log('previwimg', preview)\n    const [projtype, setProjType] = useState(\"1\")\n\n    console.log(nft_collection_id, \"nft collections\")\n    const [nftName, setNftName] = useState([])\n    const [nftDescription, setNftDescription] = useState([])\n    console.log(\"nftDescription\", nftDescription)\n    console.log(\"nftName\", nftName)\n\n\n    const handleIncrement = () => {\n        // if (startDate && endDate && numberofNfts) {\n\n        setCount(prevCount => prevCount + 1);\n        // }\n    };\n\n\n    const handleDecrement = () => {\n        setCount(prevCount => prevCount - 1);\n    };\n    const convertToBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = () => {\n                resolve(fileReader.result);\n            };\n            fileReader.onerror = (error) => {\n                reject(error);\n            };\n        });\n    };\n    const previewChange = async (e, index) => {\n        // const pimage = () => {\n        //     return [\n        //         ...Pimage, e?.target?.files[0]\n        //     ]\n        // }\n        const pimage = e.target.files[0]\n        const base64 = await convertToBase64(pimage);\n        setPimage(previ => {\n            previ[index] = base64\n            return [\n                ...previ,\n\n            ]\n        })\n\n        setPreview(previ => {\n            previ[index] = e?.target?.files[0]\n            return [\n                ...previ,\n\n            ]\n        })\n        // const base64pr = await convertToBase64(preview)\n        // console.log('baseee', base64pr)\n        // setPreviewBase(base64pr)\n\n\n    };\n    // console.log(count, 'count')\n\n    function onHandleClick(index, item) {\n        // \n        setNft_collection_id(previ => {\n            previ[index] = item\n            return {\n                ...previ,\n            }\n        }\n        );\n    };\n\n\n    const defaultValues = {\n        setNft_description: null,\n    }\n\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\n        mode: 'all',\n\n    });\n    useEffect(() => {\n\n        register(\"nft_description\");\n\n\n    }, [register]);\n\n\n    const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\n    \n\n    const dispatch = useDispatch()\n    const col = useSelector(state => {\n        // \n        return state?.projectdetails?.getcollections\n    })\n    const imaeg = useSelector(state => {\n        // \n        return state?.projectdetails?.nftres\n    })\n\n    const OnSubmit = (values) => {\n\n        setFormValues(values)\n\n    }\n\n    const handleUpload = (e, index) => {\n        const filetype = e.target.files[0].type\n        setNFtExtension(filetype)\n\n        setNftImage(prevState => {\n            return [\n                ...nftimage,\n                e?.target?.files[0]\n            ]\n\n        }\n        );\n\n        var fr = new FileReader;\n\n        fr.onload = function () { // file is loaded\n            var img = new Image;\n\n            img.onload = function () {\n                setSize(e.target.files[0].size); // image is loaded; sizes are available\n                setNftwidth(img.width)\n                setNftheight(img.height)\n            };\n\n            img.src = fr.result; // is the data URL because called with readAsDataURL\n        };\n\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\n\n        let type = \"Image\"\n\n        if (e.target.files[0].size > 104857600) {\n            alert('Filesize must 100mb or below');\n        } else {\n\n\n            switch (filetype) {\n                case 'image/png':\n                case 'image/jpg':\n                case 'image/gif':\n                case 'image/svg':\n                    type = \"Image\"\n                    break;\n                case 'audio/mpeg':\n                case 'audio/ogg':\n                case 'video/mp4':\n                case 'video/webm':\n                    type = 'Player'\n                    break;\n                case '':\n                    // if (nft?.name?.str.includes(\".glb\")) {\n                    type = 'modal'\n                    // }\n                    break;\n                default:\n                    type = 'Image'\n            }\n\n            // setNFtFileType(type)\n\n            setSource(prevState => {\n                // \n                prevState[index] = { file: e.target.files[0], type: type }\n                setSourceType(type)\n\n                return [...prevState]\n            })\n\n\n        }\n    }\n\n    const lat = sessionStorage.getItem('latitude')\n    // console.log(lat, 'lattt')\n    const log = sessionStorage.getItem('longitude')\n    // console.log(log, 'logggg')\n\n    // const desdata = { nft_description() }\n\n    useEffect(() => {\n\n        dispatch(GetCollectionsAction())\n\n\n    }, [])\n    const nftDescriptionHandler = (index, item) => {\n        // setNft_description(event?.currentTarget?.value)\n        setNft_description(previ => {\n            return {\n                ...previ,\n                [item]: index\n            }\n        })\n        // setNft_description(nftDescription[index])\n    }\n\n\n    const onFinish = async (values) => {\n        try {\n            setLoading(true)\n\n\n            const imagesRes = await uploadNFT(nftimage, dispatch)\n\n            const addedImage = imagesRes?.data?.data.map(x => ipfsBaseUrl + x?.image_hash)\n\n            // const addedImagetype = imagesRes?.map(x => x?.data?.data?.extension)\n            var str = addedImage;\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\n            // console.log(check)\n            // console.log(addedImage.includes('undefined'), 'add')\n\n            const formData = new FormData()\n\n            if (check === false) {\n                console.log('uploaded')\n                formData.append('title', data.title)\n                formData.append('description', data.description)\n                formData.append('address', data.address)\n\n                formData.append('country', data.country)\n                if (!data.state) {\n\n                    formData.append('state', '')\n                } else {\n                    formData.append('state', data.state)\n                }\n                if (!data.city) {\n                    formData.append('city', '')\n                } else {\n\n                    formData.append('city', data.city)\n                }\n                formData.append('latitude', lat)\n                formData.append('logitude', log)\n                formData.append('price', data.price)\n\n                formData.append('image', data.image)\n                if (projtype == 1) {\n                    // formData.append('preview_imag', \"\")\n                    formData.append('number_of_nft', \"1\")\n                    formData.append('start_date', '')\n                    formData.append('end_date', '')\n                } else {\n\n                    formData.append('number_of_nft', numberofNfts)\n                    formData.append('start_date', startDate)\n                    formData.append('end_date', endDate)\n                }\n                for (let i = 0; i < Pimage.length; i++) {\n                    formData.append(\"preview_imag[]\", (Pimage[i]));\n                }\n                // for (let i = 0; i < basePreview.length; i++) {\n                // formData.append(\"preview_imag[]\", Pimage);\n                // }\n                // formData.append('preview_imag', preview)\n                formData.append('type', projtype)\n                formData.append('category_id', data.category_id)\n\n\n                formData.append('nft_image', addedImage)\n                formData.append('extention', source.map(x => x.type))\n                formData.append('nft_name', values?.nfts?.map(x =>\n                    x.nft_name\n                ))\n\n                formData.append('nft_collection_id', coll_id)\n                formData.append('nft_description', Object?.values(nft_description))\n\n\n                dispatch(CreateProjectAction(formData, setLoading, history))\n            } else {\n                console.log('fail')\n                setLoading(false)\n                swal('error', 'Nft not uploaded', 'error')\n\n            }\n        } catch (error) {\n            swal('error', 'Nft not uploaded', 'error')\n            setLoading(false)\n            console.log(error, 'error')\n            dispatch(LogsAction(error?.response?.data?.message))\n        }\n\n    };\n\n\n\n    const fileProps = {\n        name: \"file\",\n        multiple: false,\n\n        beforeUpload: file => {\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n            if (!isJpgOrPng) {\n\n                alert('You can only upload JPG/PNG file!');\n            }\n        },\n        onChange(info) {\n            if (info.file.status !== \"uploading\") {\n                let reader = new FileReader();\n                reader?.readAsDataURL(info.file);\n                // setUploadedImage(info.file);\n            }\n        }\n    };\n\n\n    const [form] = Form.useForm()\n    // const save = (data) => {\n    //     setNft_description(data)\n    // };\n    const { Panel } = Collapse;\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const nfts = [\n        {\n            key: 0,\n            name: 'Wheat Flour',\n            amount: 1000\n        },\n\n    ];\n    const nftNameHandler = (event, index) => {\n        // \n        setNftName(prevState => {\n            return {\n                ...prevState,\n                [index]: event?.target?.value\n            }\n        })\n    }\n\n    return (\n        // <section className=\"author-area\">\n        <div className=\"main-create \">\n\n            {loading ? (\n                <Loader />\n\n            ) : (\n                <div className={current === 1 ? styles.showForm : styles.hideForm}>\n                    <Form\n                        form={form}\n                        name=\"dynamic_form_nest_item\"\n                        initialValues={{\n                            nfts: nfts,\n                        }}\n                        // onSubmit={(event) => handleSubmit(event)}\n                        onFinish={(event) => onFinish(event)}\n                        onSubmit={OnSubmit}\n                        onChange={nftNameHandler}\n                        autoComplete=\"off\"\n                        className=\"item-form card no-hover\"\n                    >\n                        <Form.List name=\"nfts\">\n                            {(fields, { add, remove }) => (\n                                <>\n                                    <Button className=\"previous_btn\" onClick={() => prev()}>\n                                        <svg\n                                            width=\"16px\"\n                                            height=\"16px\"\n                                            viewBox=\"0 0 24 24\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                        >\n                                            <path\n                                                fill=\"none\"\n                                                stroke=\"#fff\"\n                                                stroke-width=\"2\"\n                                                d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\n                                                transform=\"matrix(-1 0 0 1 24 0)\"\n                                            />\n                                        </svg>\n                                        Previous\n                                    </Button>\n\n                                    <>\n                                        {fields.map(({ key, name, ...restField }, index) => (\n\n\n                                            <Collapse accordion\n                                                defaultActiveKey={[count]}\n                                                onChange={onChange}\n                                                expandIconPosition={expandIconPosition}\n                                            >\n\n                                                <Panel key={count} header={[nftName[index] ? <div className='Collapse-text'> {nftName[index].slice(0, 50)}  </div> : \"Detail\", source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? <div> <img src={URL.createObjectURL(source[index].file)} className=\"images-Collapse\" /></div> : <div> <img src={preview?.[index] && window.URL.createObjectURL(preview[index])} className=\"images-Collapse\" /></div>]} className=\"p-0 nft-Collapse\">\n\n\n                                                    <Fragment>\n                                                        {/* <div>Artwork {index}</div> */}\n                                                        <div className=\"row relative\">\n                                                            <div className=\"col-12\">\n                                                                <label>Name</label>\n                                                                <div>\n                                                                    <Form.Item\n                                                                        {...restField}\n                                                                        name={[name, \"nft_name\"]}\n                                                                        // label=\"Enter name\"\n                                                                        // name=\"name\"\n                                                                        rules={[\n                                                                            {\n                                                                                required: true,\n                                                                                message: \"Name is required\",\n                                                                            },\n                                                                        ]}\n                                                                    >\n                                                                        {/* <label>Name</label> */}\n                                                                        <Input placeholder=\"Name\" onChange={e => nftNameHandler(e, index)} />\n                                                                    </Form.Item>\n                                                                </div>\n                                                                <label>Description</label>\n                                                                <div>\n\n                                                                    <Form.Item\n                                                                        {...restField}\n                                                                        name={[name, \"nft_description\"]}\n\n                                                                        rules={[\n                                                                            {\n                                                                                required: true,\n                                                                                message: \"Missing  description\",\n                                                                            },\n                                                                        ]}\n                                                                    >\n\n                                                                        <JoditEditor\n                                                                            ref={editor}\n\n\n                                                                            placeholder=\"start typing\"\n                                                                            tabIndex={1} // tabIndex of textarea\n                                                                            // onBlur={(newContent, e) => setNft_description(newContent)}\n                                                                            // preferred to use only this option to update the content for performance reasons\n                                                                            onChange={e => nftDescriptionHandler(e, index)}\n                                                                        />\n\n                                                                    </Form.Item>\n                                                                    {errors.nft_description?.type ===\n                                                                        \"required\" && (\n                                                                            <p style={{ color: \"red\" }} role=\"alert\">\n                                                                                Description is required\n                                                                            </p>\n                                                                        )}\n                                                                    {errors.nft_description &&\n                                                                        errors.nft_description.type ===\n                                                                        \"minLength\" && (\n                                                                            <p style={{ color: \"red\" }}>\n                                                                                min length of words is 300\n                                                                            </p>\n                                                                        )}\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"col-md-1 col-12 nft-remove\">\n                                                                <MinusCircleOutlined\n                                                                    onClick={(e) => {\n                                                                        remove(name);\n                                                                        handleDecrement(e);\n                                                                    }}\n                                                                />\n                                                            </div>\n                                                            {/* </div> */}\n                                                            <div className=\"col-12\">\n                                                                <label className=\"mt-2 mb-3\">\n                                                                    Choose Collection\n                                                                </label>\n                                                            </div>\n                                                            <div className='d-flex flex-wrap gap-10 col-12'>\n\n\n\n                                                                {col?.map((item, idx) => (\n                                                                    <div\n                                                                        key={`auc_${idx}`}\n                                                                        id={item.id}\n                                                                        className=\"choose_div\"\n                                                                    >\n                                                                        <div\n                                                                            id={item.id}\n                                                                            onClick={() =>\n                                                                                onHandleClick(index, item.id)\n                                                                            }\n                                                                            className=\"\"\n                                                                            style={{\n                                                                                background: \"black\",\n                                                                                marginBottom: \"8px\",\n                                                                                border:\n                                                                                    nft_collection_id[index] == item.id\n                                                                                        ? \"1px solid #fff\"\n                                                                                        : null,\n                                                                            }}\n                                                                        >\n\n                                                                            <div>{item.title}</div>\n\n                                                                        </div>\n                                                                        {/* </Form.Item> */}\n                                                                    </div>\n\n\n\n                                                                ))}\n                                                                <div className=\"col-md-6 col-lg-3 col-12\">\n                                                                    {/* <div className=\"col-24\"> */}\n\n                                                                    <div className=\"form-group\">\n                                                                        <div\n                                                                            className=\"card choose_div\"\n                                                                            style={{\n                                                                                background: \"black\",\n                                                                                marginBottom: \"8px\",\n                                                                            }}\n                                                                        >\n                                                                            <div className=\"card-body \">\n                                                                                <Button\n                                                                                    variant=\"primary\"\n                                                                                    className=\"collection_btn\"\n                                                                                    onClick={() => setModalShow(true)}\n                                                                                >\n                                                                                    <i className=\"f1a-regular fa-plus\"></i>{\" \"}\n                                                                                    Create Collection\n                                                                                </Button>\n\n\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n\n                                                                </div>\n                                                                <div className=\"col-12\">\n                                                                    <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\n                                                                        <label className=\"mt-3\">Upload NFT</label>\n                                                                        <div\n                                                                            className=\"position-relative upload_nft\"\n                                                                            style={{\n                                                                                backgroundImage: \"url('')\",\n                                                                                backgroundSize: \"contain\",\n                                                                                backgroundRepeat: \"no-repeat\",\n                                                                            }}\n                                                                        >\n\n                                                                            <div\n                                                                                className={\n                                                                                    source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\n                                                                                        ? \" inputdragVedio\"\n                                                                                        : \"inputtdrag\"\n                                                                                }\n                                                                            >\n                                                                                <input\n                                                                                    type=\"file\"\n                                                                                    // onChange={handleUpload}\n                                                                                    maxCount={1}\n                                                                                    onChange={e => handleUpload(e, index)}\n                                                                                    accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\n                                                                                />\n\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\n                                                                                    <div>\n                                                                                        {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\n                                                                                        {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? (\n\n\n                                                                                            <img\n                                                                                                src={URL.createObjectURL(source[index].file)}\n                                                                                                className=\"nft-image\"\n                                                                                            />\n                                                                                        ) : (\n                                                                                            <>\n                                                                                                <p style={{ color: \"red\", marginLeft: '10px' }}>\n                                                                                                    Image width & height should be 500x500\n                                                                                                </p>\n                                                                                                <p style={{ color: \"red\", marginLeft: '10px' }}>\n                                                                                                    Image size should be max 1mb\n                                                                                                </p>\n                                                                                            </>\n                                                                                        )\n\n                                                                                        }\n                                                                                    </div>\n                                                                                }\n\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\n                                                                                    <div>\n                                                                                        {/* { source?.length && source?.[index] && source[index]?.type === \"Player\" && ( */}\n                                                                                        <video\n                                                                                            // className=\"VideoInput_video\"\n                                                                                            width=\"100%\"\n                                                                                            // height={height}\n                                                                                            controls\n                                                                                            src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\n                                                                                        // onChange={setSource}\n                                                                                        />\n                                                                                        {/* )} */}\n                                                                                        <div className=\"uploadnftpopup_content\">\n                                                                                            <label>Preview Image</label>\n                                                                                            <p>\n                                                                                                Because you’ve included\n                                                                                                multimedia, you’ll need to provide\n                                                                                                an image (PNG, JPG, or GIF) for\n                                                                                                the card display of your item\n                                                                                            </p>\n                                                                                        </div>\n                                                                                        <div\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\n                                                                                            style={{\n                                                                                                backgroundImage:\n                                                                                                    \"url('')\",\n                                                                                                backgroundSize: \"contain\",\n                                                                                                backgroundRepeat: \"no-repeat\",\n                                                                                                backgroundPosition: \"center\",\n                                                                                            }}\n                                                                                        >\n                                                                                            <input\n                                                                                                type=\"file\"\n                                                                                                onChange={e => previewChange(e, index)}\n                                                                                            // onChange={previewChange}\n                                                                                            />\n                                                                                            {preview?.length && preview?.[index] &&\n                                                                                                <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\n                                                                                                    {preview?.length && preview?.[index] && (\n                                                                                                        <img\n                                                                                                            className=\"preview_image\"\n                                                                                                            src={URL.createObjectURL(preview[index])}\n\n\n                                                                                                        // onChange={setPimage}\n                                                                                                        />\n                                                                                                    )}\n                                                                                                </div>\n                                                                                            }\n                                                                                        </div>\n\n                                                                                    </div>\n                                                                                }\n\n                                                                                {/* )} */}\n                                                                                {/* <div className=\"VideoInput_footer\">{vdo || \"Nothing selectd\"}</div> */}\n\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\n                                                                                    <div>\n                                                                                        <DModal\n                                                                                            vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\n                                                                                        // mdl={setModal}\n                                                                                        />\n\n                                                                                        <div className=\"uploadnftpopup_content\">\n                                                                                            <label>Preview Image</label>\n                                                                                            <p className=\"\">\n                                                                                                Because you’ve included multimedia,\n                                                                                                you’ll need to provide an image\n                                                                                                (PNG, JPG, or GIF) for the card\n                                                                                                display of your item\n                                                                                            </p>\n                                                                                        </div>\n                                                                                        <div\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\n                                                                                            style={{\n                                                                                                backgroundImage:\n                                                                                                    \"url('')\",\n                                                                                                backgroundSize: \"contain\",\n                                                                                                backgroundRepeat: \"no-repeat\",\n                                                                                                backgroundPosition: \"center\",\n                                                                                            }}\n                                                                                        >\n                                                                                            <input\n                                                                                                type=\"file\"\n                                                                                                onChange={e => previewChange(e, index)}\n                                                                                            />\n                                                                                            {preview?.length && preview?.[index] &&\n                                                                                                <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\n                                                                                                    {preview?.length && preview?.[index] && (\n                                                                                                        <img\n                                                                                                            className=\"preview_image\"\n                                                                                                            src={URL.createObjectURL(preview[index])} />\n                                                                                                    )}\n                                                                                                </div>\n                                                                                            }\n                                                                                        </div>\n                                                                                    </div>\n                                                                                )}\n                                                                            </div>\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </Fragment>\n                                                </Panel>\n                                            </Collapse>\n                                        ))}\n\n                                        {/* {!((data?.number_of_nft === count)) ? */}\n                                        {sourceType &&\n\n                                            <Form.Item>\n                                                <Tooltip title={count == 1 ? \"Switch to Campaign for multiple NFTs\" : 'Add more NFTs'} color='#4528dc'>\n                                                    <Button\n                                                        type=\"dashed\"\n                                                        onClick={(e) => {\n                                                            {\n                                                                count == 1 &&\n                                                                    setProjModalShow(true)\n                                                            }\n\n                                                            // {\n                                                            //     count == 2 &&\n\n\n                                                            // }\n                                                            {\n                                                                numberofNfts && startDate && endDate &&\n                                                                    add(e)\n                                                                setProjType(\"2\")\n                                                                handleIncrement(e);\n                                                                // setPannelKey(pannelKey + 1)\n\n                                                            };\n                                                            // {startDate && endDate && numberofNfts && \n\n\n                                                            // }\n\n                                                        }}\n                                                        block\n\n                                                        icon={<PlusOutlined />}\n                                                    // disabled={data?.number_of_nft == count}\n                                                    >\n                                                        Add NFT\n                                                    </Button>\n                                                </Tooltip>\n\n                                            </Form.Item>\n\n\n                                        }\n                                        {/* : null} */}\n                                    </>\n                                </>\n                            )}\n                        </Form.List>\n                        <Form.Item>\n                            <div className=\"col-12\">\n                                <button key=\"create-project\" className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\n                                    Create\n                                </button>\n                            </div>\n                        </Form.Item>\n                    </Form>\n                    <ProTypePopup\n                        show={projmodalShow}\n                        onHide={() => setProjModalShow(false)}\n                        enddate={setEndDate}\n                        startdate={setStartDate}\n                        nftno={setNumberofNfts}\n\n                    />\n                    \n                    </div>\n                    )\n                }\n                <MyVerticallyCenteredModal\n                    show={modalShow}\n                    onHide={() => setModalShow(false)}\n                />\n        </div >\n    )\n}\nexport default UploadNft","import { useEffect, useState } from \"react\";\n// import styles from \"../styles/styles.module.scss\";\nimport FormCard from \"./FormCard\";\nimport Create from \"./Create\";\nimport UploadNft from \"./uploadNft\";\nimport FormProvider, { useFormData } from \"./Context/context\";\nimport { Button, message, Steps } from 'antd';\nimport { set, useForm } from \"react-hook-form\";\nconst steps = [\n  {\n    title: 'Create Project',\n    content: <Create />\n  },\n  {\n    title: 'Upload NFT',\n    content: <UploadNft />,\n  },\n];\nconst UploadNftIndex = () => {\n  const [current, setCurrent] = useState(0);\n  const next = () => {\n    setCurrent(current + 1);\n  };\n  const { setValue } = useForm();\n  const prev = () => {\n    // \n    setCurrent(current - 1);\n  };\n  const items = steps.map((item) => ({ key: item.title, title: item.title }));\n  return (\n    <section className=\"author-area\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-14 col-md-9 mt-10\">\n            {/* Intro */}\n            <div className=\"intro mt-5  mb-4 mb-lg-5\">\n              <div className=\"intro-content\">\n                <span>Get Started</span>\n                {current === 0 ? (\n                  <h3 className=\"mt-3 mb-0\">Create Project</h3>\n                ) : (\n                  <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\n                )}\n              </div>\n            </div>\n            <FormProvider>\n              {/* <FormCard currentStep={formStep} prevFormStep={prevFormStep}> */}\n              <div className=\"steps-content\">\n                <Steps current={current} items={items} />\n                {current === 0 && (\n                  <Create current={current} next={next} prev={prev} />\n                )}\n                {current === 1 && <><UploadNft prev={prev} />\n                </>\n                }\n              </div>\n              {/* </FormCard> */}\n            </FormProvider>\n          </div>\n        </div >\n      </div >\n    </section >\n  );\n};\nexport default UploadNftIndex;\n","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\n\nimport UploadNftIndex from '../components/Create';\n\nconst Create = () => {\n\n  return (\n    <div className=\"main\">\n      <Header />\n      <UploadNftIndex />\n      <Footer />\n      <ModalSearch />\n      <ModalMenu />\n      <Scrollup />\n    </div>\n  );\n\n}\n\nexport default Create;","\nimport { React } from 'react'\nimport { useDispatch, useSelector, } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\nimport * as Yup from 'yup'\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useFormData } from './Context/context'\nimport styles from './styles/styles.module.scss'\n\nconst formSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required(\"Email is required\"),\n    // wallet_id: Yup.string()\n    //     .wallet_id()\n    //     .required(\"Wallet address is required\"),\n    // goal: Yup.string()\n    //     .goal()\n    //     .required(\"Fundraising goal is required\"),\n\n    password: Yup.string()\n        .required(\"Password is required\")\n        .min(4, \"Password length should be at least 4 characters\")\n        .max(12, \"Password cannot exceed more than 12 characters\"),\n    confirm_password: Yup.string()\n        .required(\"Confirm Password is required\")\n        .min(4, \"Password length should be at least 4 characters\")\n        .max(12, \"Password cannot exceed more than 12 characters\")\n        .oneOf([Yup.ref(\"password\")], \"Passwords do not match\")\n});\n\n\nconst Signup = ({ formStep, nextFormStep }) => {\n    const { setFormValues } = useFormData();\n    const dispatch = useDispatch()\n    const { register, watch, handleSubmit, formState: { errors } } = useForm({\n        mode: \"all\",\n        resolver: yupResolver(formSchema)\n    });\n\n    // const [role, setRole] = useState()\n    // console.log('role', role)\n    const OnSubmit = (data) => {\n        // dispatch(Register(data))\n        setFormValues({ ...data });\n        // if (role == 3) {\n\n        nextFormStep();\n        // }\n        // if (role == 2) {\n        //     const formData = new FormData()\n        //     formData.append('email', data.email)\n        //     // formData.append('goal', data.goal)\n        //     formData.append('password', data.password)\n        //     formData.append('confirm_password', data.confirm_password)\n        //     // formData.append('wallet_id', data.wallet_id)\n        //     // formData.append('role', role)\n        //     dispatch(Register(formData))\n        // }\n    }\n\n    const { user } = useSelector(state => state.user)\n\n\n    const { errMessage } = useSelector(state => {\n        return state?.errmessage?.message\n    })\n\n    return (\n        < section className=\"author-area\" >\n            <div className=\"container\">\n\n                <>\n                    <div>\n                        {errMessage && <p>{errMessage}</p>}\n\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-8 co  l-lg-7\">\n                            {/* Intro */}\n                            <div className=\"intro text-center\">\n                                <span></span>\n                                <h3 className=\"mt-3 mb-0\"></h3>\n                                <p></p>\n                            </div>\n                            {/* Item Form */}\n                            <div className={formStep === 0 ? styles.showForm : styles.hideForm}>\n                                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\n                                    <div className=\"row\">\n                                        <div className='steps-center'>\n                                            <div className='step1icon'>\n\n                                                <i className=\"fa-solid fa-circle-check\"> Step 1 </i>\n                                            </div>\n                                            <div className='stepperline'>\n                                                <i style={{ color: '#452868' }}>  ----------------------------- </i>\n\n                                            </div>\n                                            <div className='step2icon'>\n\n                                                <i className=\"fa-regular fa-circle\" > Step 2 </i>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12\">\n                                            <div className=\"form-group mt-3\">\n                                                <label>Email</label>\n                                                <input\n                                                    type=\"email\"\n                                                    className=\"form-control\"\n                                                    name=\"email\"\n                                                    placeholder=\"Email\"\n                                                    {...register(\"email\", { required: 'Email address is required' })}\n                                                    // {...register(\"email\")}\n                                                    aria-invalid={errors.email ? \"true\" : \"false\"} />\n                                                {/* {errors.errMessage} */}\n                                                {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\n                                                {/* {errMessage && <p>{errMessage}</p>} */}\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12\">\n                                            <div className=\"form-group mt-3\">\n                                                <label>Password</label>\n                                                <input\n                                                    type=\"password\"\n                                                    className=\"form-control\"\n                                                    name=\"password\"\n                                                    placeholder=\"Password\"\n                                                    {...register(\"password\", { required: true })}\n                                                    aria-invalid={errors.password ? \"true\" : \"false\"} />\n                                                {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password.message}</p>}\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12\">\n                                            <div className=\"form-group mt-3\">\n                                                <label>Confirm Password</label>\n                                                <input\n                                                    type=\"password\"\n                                                    className=\"form-control\"\n                                                    name=\"confirm_password\"\n                                                    placeholder=\"Confirm password\"\n                                                    {...register(\"confirm_password\",\n                                                        {\n                                                            required: true,\n                                                            validate: (val) => {\n                                                                if (watch('password') != val) {\n                                                                    return \"Your passwords do no match\";\n                                                                }\n                                                            },\n                                                        })}\n                                                    aria-invalid={errors.confirm_password ? \"true\" : \"false\"} />\n                                                {errors.confirm_password && <p style={{ color: 'red' }} role=\"alert\">{errors.confirm_password.message}</p>}\n                                            </div>\n                                        </div>\n                                        {/* <div className=\"col-12\">\n                                            <div className=\"form-group mt-3\">\n                                                <label>Fundraising Goal</label>\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    name=\"goal\"\n                                                    placeholder=\"Fundraising goal (MATIC)\"\n                                                    {...register(\"goal\",\n                                                        {\n                                                            required: true,\n\n                                                        })}\n                                                    aria-invalid={errors.goal ? \"true\" : \"false\"} />\n                                                {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\n                                            </div>\n                                        </div> */}\n                                        {/* <div className=\"col-12\">\n                                            <div className=\"form-group mt-3\">\n                                                <label>Wallet Address</label>\n                                                <input\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    name=\"wallet_id\"\n                                                    // defaultValue='1'\n                                                    placeholder=\"Wallet address\"\n                                                    {...register(\"wallet_id\", { required: true })}\n                                                    // {...register(\"email\")}\n                                                    aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\n                                                />\n                                                {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\n                                            </div>\n                                        </div> */}\n                                        {/* <div className=\"col-12\">\n                                            <div className=\"form-group mt-3\">\n                                                <div className=\"form-check form-check-inline\">\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"3\" onChange={(e) => setRole(e.target.value)} />\n                                                    <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\n                                                </div>\n                                                <div className=\"form-check form-check-inline\">\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"2\" onChange={(e) => setRole(e.target.value)} />\n                                                    <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\n                                                </div>\n\n                                            </div>\n                                        </div> */}\n                                        {/* <div className=\"col-12\">\n                                        <div className=\"form-group mt-3\">\n                                            <div className=\"form-check form-check-inline\">\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\n                                                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\n                                            </div>\n                                        </div>\n                                    </div> */}\n                                        <div className=\"col-12\">\n                                            {/* {role == 2 ? ( */}\n                                            {/* <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Signup</button> */}\n                                            {/* ) : ( */}\n\n                                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\n                                            {/* )} */}\n                                        </div>\n                                        <div className=\"col-12\">\n                                            <span className=\"d-block text-center mt-4\">Already have an account? <Link to=\"/login\"><b>Login</b></Link></span>\n                                        </div>\n\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </>\n            </div>\n        </section >\n\n    )\n}\n\nexport default Signup\n\n","import { createContext, useContext, useState } from \"react\";\n\nexport const FormContext = createContext();\n\nexport default function FormProvider({ children }) {\n    const [data, setData] = useState({});\n    // console.log(data, 'dataaa')\n\n    const setFormValues = (data) => {\n        setData((prevValues) => ({\n            ...prevValues,\n            ...data,\n        }));\n    };\n\n    return (\n        <FormContext.Provider value={{ data, setFormValues }}>\n            {children}\n        </FormContext.Provider>\n    );\n}\n\nexport const useFormData = () => useContext(FormContext);","import { createSlice } from '@reduxjs/toolkit'\n// Slice\n\nconst contactSlice = createSlice({\n    name: 'contact',\n\n    initialState: {\n        contact: [],\n\n\n    },\n    reducers: {\n\n        postContact: (state, action) => {\n            state.contact = action.payload?.data?.data;\n        },\n\n\n    },\n});\n\nexport const contactReducer = contactSlice.reducer\n\nexport const {\n    postContact\n} = contactSlice.actions;","import React, { Component, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { ContactAction } from '../../redux/Actions/contactAction';\nimport Loader from '../Loader/loader';\nconst Contact = () => {\n    const [loading, setLoading] = useState()\n    const dispatch = useDispatch()\n\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\n    const OnSubmit = (data) => {\n        setLoading(true)\n        const formData = new FormData()\n        formData.append('name', data.name)\n        formData.append('subject', data.subject)\n        formData.append('email', data.email)\n        formData.append('description', data.description)\n        dispatch(ContactAction(formData, setLoading))\n    }\n    return (\n        <section className=\"author-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-md-8 col-lg-7\">\n                        {/* Intro */}\n                        <div className=\"intro text-center\">\n                            <span>Contact</span>\n                            <h3 className=\"mt-3 mb-0\">Get In Touch</h3>\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\n                        </div>\n                        {/* Item Form */}\n                        <form id=\"contact-form\" className=\"item-form card no-hover\" onSubmit={handleSubmit(OnSubmit)} >\n                            {loading ? (\n                                <Loader />\n                            ) : (\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <div className=\"form-group mt-3\">\n                                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name\"  {...register(\"name\", { required: true })}\n                                                aria-invalid={errors.name ? \"true\" : \"false\"}\n                                            />\n                                            {errors.name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Name is required</p>}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"form-group mt-3\">\n                                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" {...register(\"email\", { required: true })}\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\n                                            />\n                                            {errors.email?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Email is required</p>}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"form-group mt-3\">\n                                            <input type=\"text\" className=\"form-control\" name=\"subject\" placeholder=\"Subject\"  {...register(\"subject\", { required: true })}\n                                                aria-invalid={errors.subject ? \"true\" : \"false\"}\n                                            />\n                                            {errors.subject?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Subject is required</p>}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <div className=\"form-group mt-3\">\n                                            <textarea className=\"form-control\" name=\"message\" placeholder=\"Message\" cols={30} rows={3} defaultValue={\"\"}  {...register(\"description\", { required: true })}\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\n                                            />\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Message is required</p>}\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\"><i className=\"icon-paper-plane mr-2\" />Send Message</button>\n                                    </div>\n                                </div>\n                            )}\n                        </form>\n                        <p className=\"form-message\" />\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\nexport default Contact;","import axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { postContact } from \"../Slices/contactSlice\";\nimport { LogsAction } from \"./logsAction\";\nexport const ContactAction = (params, setLoading) => async dispatch => {\n    // sessionStorage.setItem('authToken', JSON.stringify(action.payload.dat\n    // const [loading, setLoading] = useState(false)\n    // setLoading(true)\n    try {\n        // \n        const config = {\n            headers: {\n                // 'Content-Type': 'multipart/form-data'\n                'Content-Type': 'application/json',\n            },\n        }\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/contact-us/store`,\n            params, config)\n        // console.log(\"resproj\", res)\n        dispatch(postContact(res));\n        if (res.status === 200) {\n            setLoading(false)\n            swal(\"success\", res.data.message, 'success')\n                .then(function () {\n                    window.location = \"/\";\n                });\n\n        }\n\n    } catch (e) {\n        await dispatch(LogsAction(e))\n        if (e?.response?.data.message) {\n            swal('error', e.response.data.message, 'error')\n        }\n    }\n}","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport ContactSection from '../components/Contact/Contact';\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nconst Contact = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <ContactSection />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default Contact;","import React, { Component, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ForgotPasswordAction, LoginAction } from '../../redux/Actions/authAction';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert'\n\n\n\nconst ForgotPassword = () => {\n\n    const dispatch = useDispatch()\n    const { forgotpassword, message, statusCode } = useSelector(state => {\n        // \n        return state.forgotpassword\n    })\n\n\n    const { register, handleSubmit, formState: { errors } } = useForm();\n\n    const OnSubmit = (data) => {\n        dispatch(ForgotPasswordAction(data)).then(() => {\n\n        });\n\n    }\n\n\n    return (\n        <section className=\"author-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-md-8 col-lg-7\">\n                        {/* Intro */}\n                        <div className=\"intro text-center\">\n                            <span></span>\n                            <h3 className=\"mt-3 mb-0\"></h3>\n                            <p></p>\n                        </div>\n                        {/* Item Form */}\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <input\n                                            type=\"email\"\n                                            className=\"form-control\"\n                                            name=\"email\"\n                                            placeholder=\"Enter your Email\"\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\n                                        />\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors?.email?.message}</p>}\n                                    </div>\n                                </div>\n                                {/* <div>{errors.username && errors.username.message}</div> */}\n                                <div className=\"col-12\">\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Send Reset Link</button>\n                                </div>\n\n                                {/* <div className=\"col-12\">\n                                    <hr />\n                                    <div className=\"other-option\">\n                                        Social Icons\n                                        <div className=\"social-icons d-flex justify-content-center\">\n                                            {this.state.data.map((item, idx) => {\n                                                return (\n                                                    <a key={`lsd_${idx}`} className={item.link} href=\"#\">\n                                                        <i className={item.icon} />\n                                                        <i className={item.icon} />\n                                                    </a>\n                                                );\n                                            })}\n                                        </div>\n                                    </div>\n                                </div> */}\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default ForgotPassword","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport ForgotPassword from '../components/ForgotPassword/forgotPassword';\n\nconst Forgot = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n            <ForgotPassword />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\nexport default Forgot\n","export const TOKEN_KEY = sessionStorage.getItem('authToken')\n\n\nexport const logout = () => {\n  sessionStorage.removeItem(\"authToken\");\n}\n\nexport const isLogin = () => {\n  return TOKEN_KEY ? true : false\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from './utils';\n\nconst PrivateRoute = ({ component: Component, restricted, ...rest }) => {\n    // const isLog = window.ethereum?.selectedAddress\n    // \n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /signin page\n        <Route {...rest} render={props => (\n           sessionStorage.getItem('authToken') ?\n            <Component {...props} /> :\n                <Redirect to=\"/wallet-connect\" />\n\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React, { useEffect, useState, useRef } from \"react\";\nimport Geonames from \"geonames.js\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nconst geonames = new Geonames({\n    username: \"fullstackdeveloper91\",\n    lan: \"en\",\n    encoding: \"JSON\"\n});\nexport default function GeoLocation(props) {\n    const { locationTitle, geoId, onChange, isCountry } = props;\n    const [options, setOptions] = useState([]);\n    const [currentItem, setCurrentItem] = useState(\"\");\n    const [labelWidth, setLabelWidth] = useState(0);\n    useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n        {\n            !currentItem && (\n                setCurrentItem(props?.selected)\n            )\n        }\n    }, [props]);\n    useEffect(() => {\n        try {\n            const data = async () => {\n                (await isCountry)\n                    ? axios?.get(`https://secure.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en`)?.then(res => {\n                        // \n                        setOptions(res);\n                        console.log(res, \"countries\")\n                    })\n                    : axios?.get(`https://secure.geonames.org/childrenJSON?username=fullstackdeveloper91&lang=en&geonameId=${geoId}`)?.then(res => {\n                        setOptions(res);\n                        console.log(res, \"cities\")\n                    });\n            };\n            data();\n        } catch (err) {\n            console.error(err);\n        }\n    }, [geoId, isCountry]);\n    const inputLabel = useRef(null);\n    const handleChange = e => {\n        setCurrentItem(e.target.value);\n        onChange(e.target.value);\n    };\n    return (\n        <form >\n            <label ref={inputLabel} id=\"demo-simple-select-outlined-label\" style={{ display: 'none' }}>\n                {locationTitle}\n            </label>\n            <select\n                label=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={currentItem}\n                onChange={handleChange}\n                labelWidth={labelWidth}\n            >\n                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select </option>\n                {options?.data?.geonames?.map((v, index) => (\n                    <option key={index} value={v?.geonameId}>\n                        {isCountry ? v?.countryName : v?.name}\n                    </option>\n                ))}\n            </select>\n        </form>\n    );\n}\nGeoLocation.propTypes = {\n    locationTitle: PropTypes.string,\n    geoId: PropTypes.node,\n    isCountry: PropTypes.bool,\n    onChange: PropTypes.func.isRequired\n};\nGeoLocation.defaultProps = {\n    onChange: undefined\n};","// import { getValue } from '@mui/system';\nimport React, { useEffect, useRef } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { CategoriesAction, ProjectDetail, UpdateProject } from '../redux/Actions/projectAction';\nimport { useState } from 'react';\nimport GeoLocation from '../components/Create/geoLocation';\nimport JoditEditor from 'jodit-react';\nimport { CityList, CountryList, StateList } from '../redux/Actions/authAction';\n\nconst EditProject = () => {\n    const editor = useRef(null);\n    const [country, setCountry] = useState();\n    console.log(country)\n    const [state, setState] = useState();\n    const [city, setCity] = useState();\n    const [description, setDescription] = useState();\n    // const [descriptionup, setDescriptionup] = useState();\n    // console.log(descriptionup, 'discup')\n    const [type, setType] = useState();\n    const { id } = useParams();\n    // console.log(id, \"idd\")\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const projdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.projectdetails\n    })\n    const dis = projdetail.description\n    // setDescriptionup(dis)\n    // console.log(dis, 'dis')\n    // console.log(projdetail, \"gfgfhghgghhgh\")\n\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\n\n    useEffect(() => {\n        // \n        dispatch(ProjectDetail(id))\n\n    }, [id])\n    const config = {\n        placeholderText: 'Edit Your Content Here!',\n        charCounterCount: false\n    }\n    const { countries } = useSelector(state => state.countries)\n\n    console.log(countries?.data?.data, 'cntry')\n    const states = useSelector(state => {\n        // \n        return state.countries.states\n    })\n    // console.log(first)\n\n    // console.log(states?.data?.data, 'states')\n    const cities = useSelector(state => { return state.countries.city })\n    useEffect(() => {\n        if (projdetail && Object.keys(projdetail).length) {\n\n            setValue(\"title\", projdetail.title)\n            setValue(\"address\", projdetail.address)\n            setValue(\"description\", projdetail.description)\n            setValue('state', projdetail.state)\n            setValue('country', projdetail.country)\n            setValue('city', projdetail.city)\n            setValue(\"price\", projdetail.price)\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\n            setValue(\"start_date\", projdetail.start_date)\n            setValue(\"end_date\", projdetail.end_date)\n            setValue(\"type\", projdetail.type)\n            setValue('category_id', projdetail.category_id)\n\n            setType(projdetail.type)\n            setCountry(projdetail.country)\n            // setState(projdetail.state)\n            // setCity(projdetail.city)\n            console.log(projdetail.state, 'edit state')\n            console.log(projdetail.city, 'edit city')\n            setValue(\"image\", projdetail.image)\n            // const formData = new FormData()\n            // // formData.append('country_id', event?.currentTarget?.value)\n            // formData.append('country_id', projdetail.country)\n            // dispatch(StateList(formData))\n\n        }\n    }, [projdetail]);\n\n    const OnSubmit = (data) => {\n        const formData = new FormData()\n\n        // formData.append('image', data.image[0])\n        formData.append('title', data.title)\n        formData.append('description', description)\n        formData.append('state', data.state)\n        formData.append('country', data.country)\n        formData.append('city', data.city)\n        formData.append('address', data.address)\n        formData.append('price', data.price)\n        formData.append('number_of_nft', data.number_of_nft)\n        if (data?.type == 1) {\n\n            formData.append('start_date', '')\n            formData.append('end_date', '')\n        } else {\n\n            formData.append('start_date', data.start_date)\n            formData.append('end_date', data.end_date)\n        }\n        formData.append('type', data.type)\n        formData.append('category_id', data.category_id)\n\n\n        dispatch(UpdateProject(id, formData))\n    }\n\n\n\n        const disablePastDate = () => {\n            const today = new Date();\n            const dd = String(today.getDate() + 1).padStart(2, \"0\");\n            const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n            const yyyy = today.getFullYear();\n            return yyyy + \"-\" + mm + \"-\" + dd;\n        };\n    const cat = useSelector(state => {\n        // \n        return state?.projectdetails?.categories\n    })\n    // console.log(cat, 'cat')\n    useEffect(() => {\n        dispatch(CategoriesAction())\n        dispatch(CountryList())\n        // dispatch(StateList(projdetail.country))\n    }, [])\n    const handleChangeCountry = (event) => {\n        // \n        // 👇 Get input value from \"event\"\n        setCountry(event?.currentTarget?.value);\n        const formData = new FormData()\n        // formData.append('country_id', event?.currentTarget?.value)\n        formData.append('country_id', event?.currentTarget?.value)\n        dispatch(StateList(formData))\n\n        // if (country) {\n\n        //     \n        // }\n    };\n    const handleChangeState = (event) => {\n        // 👇 Get input value from \"event\"\n        // setState(event.currentTarget.value);\n        const formData = new FormData()\n        formData.append('country_id', country)\n        formData.append('state_id', event?.currentTarget?.value)\n        dispatch(CityList(formData))\n\n\n        //     \n        // }\n    };\n    return (\n        // <Modal\n        //     {...props}\n        //     size=\"lg\"\n        //     aria-labelledby=\"contained-modal\"\n        //     centered\n        // >\n        //     <Modal.Header closeButton>\n        //         <Modal.Title id=\"contained-modal\">\n        //             Collection\n        //         </Modal.Title>\n        //     </Modal.Header>\n        //     <Modal.Body>\n        <section className=\"author-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n\n                    <div className=\"col-12 col-md-7\">\n                        <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\n                            <div className=\"intro-content\">\n                                <span>Get Started</span>\n                                <h3 className=\"mt-3 mb-0\">Update Project</h3>\n                            </div>\n                        </div>\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <div className=\"form-check form-check-inline\">\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"2\" onChange={(e) => setType(e.target.value)} {...register('type')} />\n                                            <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\n                                        </div>\n                                        <div className=\"form-check form-check-inline\">\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"1\" onChange={(e) => setType(e.target.value)}  {...register('type')} />\n                                            <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <div className=\"col-6\">\n                                    {/* {type == 1 && ( */}\n\n                                    <div className=\"form-group mt-3\">\n                                        <label>Project name</label>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"title\"\n                                            placeholder=\"Project name\"\n                                            {...register(\"title\", { required: true })}\n                                            aria-invalid={errors.title ? \"true\" : \"false\"}\n                                        />\n                                        {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\n\n                                    </div>\n                                    {/* )} */}\n                                </div>\n                                <div className=\"col-6\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Web address</label>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"address\"\n                                            placeholder=\"Web Address\"\n                                            {...register(\"address\", { required: true })}\n                                            aria-invalid={errors.address ? \"true\" : \"false\"}\n                                        />\n                                        {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\n\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <label>Description</label>\n                                    <div className=\"form-group\">\n                                        {/* <textarea\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"textarea\"\n                                            // data-provide=\"markdown-editable\" rows=\"10\"\n                                            placeholder=\"Description\"\n                                            cols={30}\n                                            {...register(\"description\", { required: true })}\n                                            aria-invalid={errors.description ? \"true\" : \"false\"}\n                                        /> */}\n                                        <Controller\n                                            control={control}\n                                            name=\"description\"\n                                            defaultValue=\"\"\n                                            render={({ field: { value, onChange } }) => {\n                                                return <JoditEditor\n                                                    ref={editor}\n                                                    value={value}\n                                                    // config={config}\n\n                                                    placeholder=\"start typing\"\n                                                    tabIndex={1} // tabIndex of textarea\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\n                                                    onChange={newContent => { }}\n                                                />\n                                            }}\n                                        />\n                                        {/* <textarea value={value} onChange={setDescription}></textarea> */}\n\n\n\n                                        {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\n                                    </div>\n                                </div>\n\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Country</label>\n                                        <Controller\n                                            control={control}\n                                            name=\"country\"\n                                            // selected={country}\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\n                                                <select name=\"country\"\n                                                    {...register(\"country\", { required: true })}\n                                                    value={value}\n                                                    onChange={\n                                                        // onChange(selectedOption.currentTarget.value); \n                                                        handleChangeCountry()\n                                                    }>\n\n                                                    aria-invalid={errors?.country ? \"true\" : \"false\"}\n\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\n                                                        Select your country</option>\n                                                    {countries?.data?.data?.map((option, key) => (\n                                                        <>\n                                                            <option key={key.id} value={option.id} >\n\n                                                                {option.name}\n\n                                                            </option>\n                                                        </>\n                                                    ))}\n                                                </select>\n                                            )}\n                                        />\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>State or Province</label>\n                                        <Controller\n                                            control={control}\n                                            name=\"state\"\n                                            // selected={country}\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\n                                                <select name=\"state\"\n\n                                                    {...register(\"state\", { required: true })}\n                                                    //  onChange={handleChangeState}\n\n                                                    value={value}\n                                                    onChange={\n                                                        // onChange(selectedOption.currentTarget.value); \n                                                        handleChangeState\n                                                    } >\n                                                    aria-invalid={errors?.state ? \"true\" : \"false\"}\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state</option>\n                                                    {states?.data?.data?.map((option, key) => (\n\n                                                        <><option key={key.id} value={option.id}  >\n                                                            {option.name}\n                                                        </option></>\n                                                    ))}\n                                                </select>\n                                            )}\n                                        />\n                                        {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>City or Region</label>\n\n                                        <select name=\"city\"\n                                            {...register(\"city\", { required: true })}>\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\n                                            {cities?.data?.data?.map((option, key) => (\n                                                <><option key={key.id} value={option.id}>\n                                                    {option.name}\n                                                </option></>\n                                            ))}\n                                        </select>\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\n                                    </div>\n                                </div>\n                                {/* <div className=\"col-12 col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>Country</label>\n                                        <Controller\n                                            control={control}\n                                            name=\"country\"\n                                            // selected={country}\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\n                                                // onChange={onChange}\n\n                                                <GeoLocation\n                                                    // locationTitle=\"Country\"\n                                                    isCountry\n                                                    onBlur={onBlur}\n                                                    selected={value}\n                                                    onChange={setCountry}\n                                                    required={true}\n                                                />\n                                            )}\n                                        />\n\n                                    </div>\n                                </div>\n                                <div className=\"col-12 col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>State or Province</label>\n                                        <Controller\n                                            control={control}\n                                            name=\"state\"\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\n\n                                                <GeoLocation\n                                                    \n                                                    onChange={setState}\n                                                    geoId={country}\n                                                    onBlur={onBlur}\n                                                    selected={value}\n\n                                               \n                                                />\n                                            )}\n                                        />\n                                       \n                                    </div>\n                                </div>\n                                <div className=\"col-12 col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>City or Region</label>\n                                        <Controller\n                                            control={control}\n                                            name=\"city\"\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\n\n                                                <GeoLocation\n                                                  \n                                                    onChange={setCity}\n                                                    geoId={state}\n                                                    onBlur={onBlur}\n                                                    selected={value}\n                                             \n                                                />\n                                            )}\n                                        />\n                                     \n                                    </div>\n                                </div> */}\n                                <div className=\"col-12 col-md-6\">\n                                    <div className=\"form-group\">\n                                        {type == 2 ? (\n\n                                            <label>Price</label>\n                                        ) : (\n\n                                            <label>Price per NFT</label>\n                                        )}\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"price\"\n                                            placeholder=\"Price\"\n                                            {...register(\"price\", { required: true })}\n                                            aria-invalid={errors.price ? \"true\" : \"false\"}\n                                        />\n                                        {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\n                                    </div>\n                                </div>\n\n                                <div className=\"col-12 col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>Number of NFTs</label>\n                                        <input\n                                            type=\"number\"\n                                            className=\"form-control\"\n                                            name=\"number_of_nft\"\n                                            defaultValue={1}\n                                            disabled={type == 1}\n                                            placeholder=\"Select your number of NFTs (1-10)\"\n                                            min={1}\n                                            max={10}\n                                            {...register(\"number_of_nft\", { required: true })}\n                                            aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\n                                        />\n                                        {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\n                                        {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\n                                    </div>\n                                </div>\n                                {type == 2 && (\n\n                                    <><div className=\"col-12 col-md-6\">\n                                        <div className=\"form-group\">\n                                            <label>Campaign Start date</label>\n                                            <input\n                                                type=\"date\"\n                                                className=\"form-control\"\n                                                name=\"start_date\"\n                                                min={disablePastDate()}\n                                                // placeholder=\"Start date\"\n                                                {...register(\"start_date\", { required: true })}\n                                                aria-invalid={errors.start_date ? \"true\" : \"false\"} />\n                                            {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\n                                        </div>\n                                    </div><div className=\"col-12 col-md-6\">\n                                            <div className=\"form-group\">\n                                                <label>Campaign End Date</label>\n                                                <input\n                                                    type=\"date\"\n                                                    className=\"form-control\"\n                                                    name=\"end_date\"\n                                                    min={disablePastDate()}\n                                                    // placeholder=\"End date\"\n                                                    {...register(\"end_date\", { required: true })}\n                                                    aria-invalid={errors.end_date ? \"true\" : \"false\"} />\n                                                {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\n                                            </div>\n                                        </div></>\n                                )}\n                                <div className=\"col-12 col-md-6\">\n                                    <div className=\"form-group\">\n                                        <label>Category</label>\n                                        <select name=\"annual_revenue_range\"\n                                            // defaultValue={}\n                                            {...register(\"category_id\")}>\n                                            {cat?.map((option, key) => (\n\n                                                <option key={key.id} value={option.id}  >\n                                                    {option.title}\n\n                                                </option>\n                                            ))}\n                                        </select>\n                                    </div>\n                                </div>\n\n\n                                <div className=\"col-12\">\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </section>\n        //     </Modal.Body>\n        // </Modal>\n    );\n\n}\n\nexport default EditProject;","import { React } from 'react';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport EditProject from '../Edit/editProject';\n\nconst ProjectUpdate = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <EditProject />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n\n}\n\nexport default ProjectUpdate;","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFooter } from '../../redux/Actions/footerAction'\n\nconst TermsConditions = () => {\n    const dispatch = useDispatch()\n\n    const footer = useSelector(state => {\n        return state.footer\n    })\n\n    useEffect(() => {\n        dispatch(getFooter(dispatch))\n    }, [])\n    // console.log(footer, 'footer')\n    return (\n        <section className=\"item-details-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-lg-12\">\n                        <div className=\"shape\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\n                                <defs>\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\n                                    </linearGradient>\n                                </defs>\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\n                                    <polygon points fill=\"url(#linearGradient-1)\">\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\n                                    </polygon>\n                                </g>\n                            </svg>\n                        </div>\n                        <h3>{footer?.footer?.title}</h3>\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: footer?.footer?.description }} />\n                    </div>\n\n\n\n                </div>\n            </div >\n\n        </section >\n    )\n}\n\nexport default TermsConditions","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport TermsConditions from '../components/Footer/t&c';\n\n\nconst TermsCond = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n            <TermsConditions />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n\n        </div>\n    )\n}\n\nexport default TermsCond\n","import React, { Component, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams, useLocation } from \"react-router-dom\";\nimport Loader from \"../Loader/loader\";\nimport {\n  CategoriesAction,\n  getPublicLiveProjects,\n} from \"../../redux/Actions/projectAction\";\nimport { Button, Pagination } from \"antd\";\n\nconst projectTypesMap = {\n  LatestProjects: 2,\n  RecentCampaigns: 1,\n};\n\nconst ExploreAll = () => {\n  const { type } = useParams();\n  const dispatch = useDispatch();\n  const [count, setCount] = useState(1)\n  const [loading, setLoading] = useState(false) \n  const location = useLocation()\n  console.log('count', count)\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const liveProjects = useSelector((state) => {\n    return state?.projectdetails?.liveProjects[type];\n  });\n  const liveProjectspag = useSelector((state) => {\n    return state?.projectdetails?.liveProjectsPag;\n  });\n  console.log(liveProjects, \"live\");\n\n\n  const handleIncrement = () => {\n    // \n    // if (startDate && endDate && numberofNfts) {\n\n    // setCount(prevCount => prevCount + 1)\n    dispatch(\n      getPublicLiveProjects({\n        cursor: 1,\n        type: projectTypesMap[type],\n        projectType: type,\n        setCount,\n        setLoading,\n        location,\n        count: count + 1,\n      })\n    );\n    // }\n  };\n\n\n  const handleDecrement = () => {\n    dispatch(\n      getPublicLiveProjects({\n        cursor: 1,\n        type: projectTypesMap[type],\n        projectType: type,\n        setLoading,\n        setCount,\n        location,\n        count: 1,\n      })\n    );\n  };\n  useEffect(() => {\n    // \n\n    dispatch(\n      getPublicLiveProjects({\n        cursor: 1,\n        type: projectTypesMap[type],\n        projectType: type,\n        setLoading,\n        location,\n        setCount,\n        count,\n      })\n    );\n  }, [dispatch, type]);\n\n  return (\n    <section className=\"explore-area\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12 col-md-8 col-lg-7\">\n            <div className=\"intro text-center mb-4\">\n              <h3 className=\"mt-3 mb-0\">\n                {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}\n              </h3>\n              <p>\n                Invest in NFTs that are based on real-life projects or events\n                related to important causes\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row items explore-items h-auto\">\n        {loading ? (\n                <Loader />\n            ) : (\n              <>\n          {liveProjects?.data && liveProjects?.data?.length ? (\n            [\n              ...new Map(\n                liveProjects?.data?.map((item) => [item[\"title\"], item])\n              ).values(),\n            ].map((item, idx) => {\n              return (\n                <Link\n                  key={`edth_${idx}`}\n                  className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\n                >\n                  <div>\n                    <Link to={`/projects/${item.slug}`}>\n                      <div className=\"card\">\n                        <div className=\"image-over\">\n                          <Link to={`/projects/${item.slug}`}>\n                            <img\n                              className=\"card-img-top\"\n                              src={item.image}\n                              alt=\"\"\n                            />\n                          </Link>\n                          {/* <div className=\"image-over\">\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\n                        </div>\n\n                        <div className=\"card-caption col-12 p-0\">\n                          {/* Card Body */}\n                          <div className=\"card-body\">\n                            {/* <div className=\"countdown-times \">\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\n                                                    </div> */}\n                            {/* <a > */}\n                            <h5 className=\"mb-0\">\n                              {item.title.slice(0, 15)}\n                            </h5>\n                            {/* </a> */}\n                            <div\n                              className=\"seller d-flex align-items-center my-3\"\n\n                            >\n                              <span>Owned By</span>\n                              {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\n\n                              {/* <a > */}\n                              <h6 className=\"ml-2 mb-0\">\n                                {item.user_data.username.slice(0, 12)}\n                              </h6>\n                              {/* </a> */}\n\n                              {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\n                            </div>\n                            <div className=\"card-bottom d-flex justify-content-between nft-price\">\n                              <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\n                              {item?.number_of_nft == 1 ? (\n                                <span>{item.number_of_nft} NFT</span>\n                              ) : (\n                                <span>{item.number_of_nft} NFTs</span>\n                              )}\n                            </div>\n                            <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\n                              <Link to={`/projects/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\n\n\n                                <i className=\"icon-handbag\" />\n                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\n                              </Link>\n                              <Link to={`/projects/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\n\n\n                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\n                              </Link>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Link>\n                  </div>\n                </Link>\n              );\n            })\n          ) : (\n            <div className=\"col-12 col-sm-12 col-lg-12\">\n              <h2 className=\"allproj2\">No latest project found</h2>\n            </div>\n          )}\n</>\n            )}\n        </div>\n        {/* <Pagination\n          className=\"pagination-bar\"\n          currentPage={currentPage}\n          totalCount={liveProjects?.data_count}\n          pageSize={PageSize}\n          onPageChange={page => setCurrentPage(page)}\n        /> */}\n        {liveProjects.current_page != liveProjects.totalPageCount ?(\n          // <>\n          // {liveProjects?.data?.length > 8 &&\n          <div className=\"morebutton\"><a onClick={(e) => handleIncrement(e)} className=\"btn btn-bordered-white\">Load More</a></div>\n          // }\n          // </>\n\n        ):(\n          // <>\n          // {liveProjects?.data?.length > 8 &&\n        <div className=\"morebutton\"><a onClick={(e) => handleDecrement(e)} className=\"btn btn-bordered-white\">Load Previous</a></div>\n          // }\n        // </>\n        )}\n      </div>\n    </section>\n  );\n};\nexport default ExploreAll;\n","import { React } from 'react';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport ExploreAll from '../components/Explore/viewAllLatest';\n\nconst All = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <ExploreAll type=\"Latest Projects\" />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n\n}\n\nexport default All;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\nconst AllCollections = () => {\n    const dispatch = useDispatch()\n    const coll = useSelector(state => {\n        // \n        return state.collection.collection\n    })\n    // console.log(coll, \"coll\")\n    useEffect(() => {\n        dispatch(PopularCollectionAction())\n    }, [dispatch])\n    return (\n        <>\n            <section className=\"explore-area\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12 col-md-8 col-lg-7\">\n                            {/* Intro */}\n                            <div className=\"intro text-center mb-4\">\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center text-center\">\n                        <div className=\"col-12\">\n                            {/* Explore Menu */}\n                        </div>\n                    </div>\n                    <div className=\"row items explore-items h-auto\">\n                        {coll && coll.length ?\n                            [...new Map(coll?.map(item =>\n                                [item[\"title\"], item])).values()]?.map((item, idx) => {\n                                    return (\n                                        <Link key={`edth_${idx}`} to={`/popularcollection/details/${item.slug}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\" >\n                                            <div>\n                                                <div className=\"card position-relative \">\n                                                    <div className=\"image-over \">\n                                                        <img className=\"card-img-top\" src={item.image} />\n                                                    </div>\n                                                    {/* Card Caption */}\n                                                    <div className=\"card-caption col-12 p-0\">\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\n                                                        {/* Card Body */}\n                                                        <div className=\"card-body\">\n                                                            <a>\n                                                                <h5 className=\"mb-0 mt-3\">{item.title.slice(0, 15)}...</h5>\n                                                            </a>\n                                                            <div class=\"\"><p>{item.description.slice(0, 50)}...</p></div>\n                                                            <div class=\"mb-2 align-items-center justify-content-between\">\n                                                                <div class=\"mt-2 mb-2 d-flex justify-content-between text-align-center fundraiser_sale\">\n                                                                    {item?.nft_data.length == 1 ? (\n                                                                        <span>{item.nft_data.length} NFT</span>\n                                                                    ) : (\n                                                                        <span>{item.nft_data.length} NFTs</span>\n                                                                    )\n                                                                    }\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Link>\n                                    )\n                                }) :\n                            <div className=\"col-12 col-sm-12 col-lg-12 no-data\">\n                                <h2>\n                                    No Popular Collections\n                                </h2>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n}\nexport default AllCollections; ","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport AllCollections from '../components/Collections/exploreCollection';\n\nconst ColExplore = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <AllCollections />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n\n}\n\nexport default ColExplore;","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AboutUsAction, getFooter } from '../../redux/Actions/footerAction'\n\nconst AboutUs = () => {\n    const dispatch = useDispatch()\n\n    const about = useSelector(state => {\n        return state.footer.aboutus\n    })\n\n    useEffect(() => {\n        dispatch(AboutUsAction())\n    }, [])\n    // console.log(about, 'footerabout')\n    return (\n        <section className=\"item-details-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-lg-12\">\n                        <div className=\"shape\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\n                                <defs>\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\n                                    </linearGradient>\n                                </defs>\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\n                                    <polygon points fill=\"url(#linearGradient-1)\">\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\n                                    </polygon>\n                                </g>\n                            </svg>\n                        </div>\n                        <h3>{about?.title}</h3>\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: about?.description }} />\n                    </div>\n\n\n\n                </div>\n            </div >\n\n        </section >\n    )\n}\n\nexport default AboutUs","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport AboutUs from '../components/Footer/about';\n\nconst Aboutus = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <AboutUs />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default Aboutus;","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport {\n    EmailShareButton,\n    FacebookIcon,\n    FacebookShareButton,\n    InstapaperShareButton,\n    InstapaperIcon,\n    LineShareButton,\n    LinkedinShareButton,\n    PinterestShareButton,\n    RedditShareButton,\n    TelegramIcon,\n    TelegramShareButton,\n    TwitterIcon,\n    TwitterShareButton,\n    WhatsappIcon,\n    WhatsappShareButton,\n    LinkedinIcon,\n    EmailIcon,\n} from \"react-share\";\nimport {\n    FacebookShareCount,\n    HatenaShareCount,\n    OKShareCount,\n    PinterestShareCount,\n    RedditShareCount,\n    TumblrShareCount,\n    VKShareCount\n} from \"react-share\";\nimport { Tooltip } from 'react-bootstrap';\nimport { useLocation } from 'react-router';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nfunction ReferalPopup(props) {\n    const location = useLocation();\n    const [copy, setCopy] = useState(false)\n    // const [title, setTitle] = useState(\"\");\n    // const [description, setDescription] = useState(\"\");\n    // const [short_url, setShortUrl] = useState(\"\");\n    // const [symbol, setSymbol] = useState(\"\");\n    const dispatch = useDispatch()\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\n    const OnSubmit = (data) => {\n        // dispatch(CreateCollectionAction(data))\n    }\n    const url = window.location.href + `?refid=${props.userRef}`\n    const userprojurl = `https://app.karmatica.io/projects/${props.id}` + `?refid=${props.userRef}`\n    console.log(userprojurl)\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header className=' align-items-start'>\n                {window.ethereum?.selectedAddress ? (\n\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Refer your friends\n                        <p>Earn Royalties When You Share: <br />30% of NFTs for first level and 5% for secondary referrals.</p>\n\n\n                    </Modal.Title>\n                ) : (\n                    <Modal.Title id=\"contained-modal-title-vcenter \">\n\n                        <p>Earn When You Share: <br />30% of NFT sales for first level referral </p>\n                        <p style={{ color: \"red\" }}>Connect your wallet to earn referral income in MATIC when you share projects</p>\n\n\n                    </Modal.Title>\n                )}\n                <div>\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                </div>\n            </Modal.Header>\n            <Modal.Body className='refer-frnd'>\n                <form className=\"item-form card no-hover\">\n                    <div className=\"row\">\n\n                        <div className=\"col-10 p-0\">\n\n                            <div className=\"form-group m-0\">\n                                {/* <label>Display name</label> */}\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"display_name\"\n                                    value={location.pathname === `/projnftdetails/${props.id}` ? userprojurl : url}\n                                    disabled={window.ethereum?.selectedAddress && sessionStorage.getItem('authToken') ? false : true}\n                                // required\n                                // placeholder=\"Enter collection name\"\n                                // {...register('title')}\n                                // value={title}\n                                // onChange={(e) => {\n\n                                //     setTitle(e.target.value);\n                                // }} \n                                />\n\n\n                            </div>\n                            {/* <FacebookShareCount url={\"shareUrl\"}>\n                            {shareCount => <span className=\"myShareCountWrapper\">{shareCount}</span>}\n                        </FacebookShareCount> */}\n\n\n                            <hr />\n                            <div className=\"refer-icons\">\n                                {location.pathname === `/projnftdetails/${props.id}` ? (\n                                    <>  <TwitterShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <TwitterIcon size={32} round={true} /></TwitterShareButton>\n                                        <FacebookShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <FacebookIcon size={32} round={true} /></FacebookShareButton>\n                                        <WhatsappShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\n                                        <TelegramShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><TelegramIcon size={32} round={true} /></TelegramShareButton>\n                                        <InstapaperShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" >  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\n                                        <LinkedinShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\n                                        <EmailShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><EmailIcon size={32} round={true} /></EmailShareButton></>\n                                ) : (\n\n                                    <><TwitterShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TwitterIcon size={32} round={true} /></TwitterShareButton>\n                                        <FacebookShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <FacebookIcon size={32} round={true} /></FacebookShareButton>\n                                        <WhatsappShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\n                                        <TelegramShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TelegramIcon size={32} round={true} /></TelegramShareButton>\n                                        <InstapaperShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\">  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\n                                        <LinkedinShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\n                                        <EmailShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><EmailIcon size={32} round={true} /></EmailShareButton></>\n                                )\n                                }\n                            </div>\n                        </div>\n                        <div className=\"col-2 p-0 text-right\">\n                            {location.pathname === `/projnftdetails/${props.id}` ? (\n                                <CopyToClipboard text={userprojurl} >\n                                    <div className='copy'>\n\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && sessionStorage.getItem('authToken') ? false : true}></i></a>\n                                    </div>\n                                </CopyToClipboard>\n                            ) : (\n\n                                <CopyToClipboard text={url} >\n                                    <div className='copy'>\n\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && sessionStorage.getItem('authToken') ? false : true}></i></a>\n                                    </div>\n                                </CopyToClipboard>\n                            )}\n                            {copy == true &&\n                                <span className='copytext'>Copied!</span>\n\n                            }\n\n\n                        </div>\n                    </div>\n\n\n                </form>\n            </Modal.Body>\n            {/* <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer> */}\n        </Modal>\n    );\n}\n\nexport default ReferalPopup","import { Button, Form, Input, } from 'antd';\nimport Modal from 'react-bootstrap/Modal';\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\nimport { useFormData } from './Context/context'\nimport MyVerticallyCenteredModal from './createCollection';\nimport styles from './styles/styles.module.scss'\nimport 'antd/lib/form/style/css';\nimport 'antd/lib/upload/style/css';\nimport { Collapse } from 'antd';\nimport 'antd/lib/modal/style/css';\nimport 'antd/lib/button/style/css'\nimport JoditEditor from 'jodit-react'\nimport Loader from '../Loader/loader';\nimport { useParams } from 'react-router';\nimport CollPopup from './createCollection';\nimport DModal from './3dModal';\nimport swal from 'sweetalert';\nconst getBase64 = (file) =>\n    new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = (error) => reject(error);\n    });\n// import ImgCrop from 'antd-img-crop';\nconst EditNft = (props) => {\n    // \n    const editor = useRef(null);\n    const [nftFileType, setNFtFileType] = useState('Image')\n    const [nft, setNft] = useState()\n    const [nftwidth, setNftwidth] = useState()\n    const [nftHeight, setNftheight] = useState()\n    const [Pimage, setPimage] = useState()\n    const [previewnft, setPreviewnft] = useState()\n    const [preview, setPreview] = useState()\n    const [source, setSource] = useState()\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\n    console.log(nft_collection_id, \"sdfasf\")\n    const [form] = Form.useForm()\n    const [image, setImage] = useState()\n    const [loading, setLoading] = useState(false)\n    const defaultValues = {\n        setNft_description: '',\n    }\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(GetCollectionsAction())\n        dispatch(NftList(props.nft_id, props.id))\n    }, [props.nft_id, props.id])\n    const col = useSelector(state => {\n        return state?.projectdetails?.getcollections\n    })\n    const nftdetail = useSelector(state => {\n        return state.projectdetails.nftlist\n    })\n    const handleUpload = (e) => {\n        const filetype = e.target.files[0].type;\n        var fr = new FileReader();\n        fr.onload = function () {\n            var img = new Image();\n            img.onload = function () {\n                setNftwidth(img.width);\n                setNftheight(img.height);\n            };\n            img.src = fr.result; // is the data URL because called with readAsDataURL\n        };\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\n        if (e.target.files[0].size > 104857600) {\n            alert(\"Filesize must 100mb or below\");\n        } else {\n            setSource(URL.createObjectURL(e.target.files[0]));\n            setNft(e.target.files[0]);\n            switch (filetype) {\n                case \"image/png\":\n                case \"image/jpg\":\n                case \"image/gif\":\n                case \"image/svg\":\n                    setNFtFileType(\"Image\");\n                    //   setSourceType(\"I\") \n                    break;\n                case \"audio/mpeg\":\n                case \"audio/ogg\":\n                case \"video/mp4\":\n                case \"video/webm\":\n                    setNFtFileType(\"Player\");\n                    break;\n                case \"\":\n                    setNFtFileType(\"modal\");\n                    break;\n                default:\n                    setNFtFileType(\"Image\");\n            }\n        }\n    };\n    const convertToBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = () => {\n                resolve(fileReader.result);\n            };\n            fileReader.onerror = (error) => {\n                reject(error);\n            };\n        });\n    };\n    const previewChange = async (e, index) => {\n        const pimage = e.target.files[0]\n        const base64 = await convertToBase64(pimage);\n        setPimage(base64)\n        setPreview(URL.createObjectURL(pimage))\n    };\n    useEffect(() => {\n        form.setFieldsValue({\n            nfts: [{\n                nft_name: nftdetail.title,\n                nft_description: nftdetail.description,\n                nft_collection_id: nftdetail.collection_id,\n                nft_image: nftdetail.image,\n                preview_imag: nftdetail.preview_imag,\n            }]\n        })\n        setImage(nftdetail.image)\n        setNFtFileType(nftdetail.extention)\n        setPreviewnft(nftdetail.preview_imag)\n        setNft_collection_id(nftdetail.collection_id)\n    }, [form, nftdetail])\n    const onFinish = async (values) => {\n        try {\n            setLoading(true)\n            if (source) {\n                const nftImagepromises = [uploadNFT(nft)]\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\n                var str = addedImage;\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\n                if (check === false) {\n                    const formData = new FormData()\n                    formData.append('image', addedImage)\n                    formData.append('title', values?.nfts?.map(x =>\n                        x.nft_name\n                    ))\n                    formData.append('collection_id', nft_collection_id)\n                    formData.append('preview_imag', Pimage)\n                    formData.append('extention', nftFileType)\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\n                    dispatch(UpdateNft(formData, props, setLoading))\n                } else {\n                    console.log('fail')\n                    swal('error!', 'Nft not uploaded', 'error')\n                }\n            } else {\n                const formData = new FormData()\n                formData.append('image', image)\n                formData.append('title', values?.nfts?.map(x =>\n                    x.nft_name\n                ))\n                formData.append('extention', nftFileType)\n                formData.append('preview_imag', previewnft)\n                formData.append('collection_id', nft_collection_id)\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\n                dispatch(UpdateNft(formData, props, setLoading))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    };\n    const nfts = [\n        {\n            key: 0,\n            name: 'Wheat Flour',\n            amount: 1000\n        },\n    ];\n    return (\n        <div className=\"main-create\" >\n            {loading ? (\n                <Loader />\n            ) : (\n                <Modal className=\"edit_nft_popup\"\n                    {...props}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                // centered\n                >\n                    <Modal.Header >\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\n                            Update NFT\n                        </Modal.Title>\n                        <div>\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                        </div>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div>\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\n                                nfts: nfts, defaultValues\n                            }}\n                                onFinish={(event) => onFinish(event)}\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\n                                <Form.List name=\"nfts\">\n                                    {(fields, { add, remove }) => (\n                                        <>\n                                            <>\n                                                {fields.map(({ key, name, ...restField }, index) => (\n                                                    <Fragment>\n                                                        <div className=\"row relative\">\n                                                            <div className=\"col-12\">\n                                                                <label>Name</label>\n                                                                <div>\n                                                                    <Form.Item\n                                                                        {...restField}\n                                                                        name={[name, \"nft_name\"]}\n                                                                        rules={[\n                                                                            {\n                                                                                required: true,\n                                                                                message: 'Missing  name',\n                                                                            },\n                                                                        ]}\n                                                                    >\n                                                                        {/* <label>Name</label> */}\n                                                                        <Input placeholder=\"Name\" />\n                                                                    </Form.Item>\n                                                                </div>\n                                                                <label>Description</label>\n                                                                <div>\n                                                                    <Form.Item\n                                                                        {...restField}\n                                                                        name={[name, \"nft_description\"]}\n                                                                        rules={[\n                                                                            {\n                                                                                required: true,\n                                                                                message: 'Missing  description',\n                                                                            },\n                                                                        ]}\n                                                                    >\n                                                                        <JoditEditor\n                                                                            ref={editor}\n                                                                            value={'nft_description'}\n                                                                            placeholder=\"start typing\"\n                                                                            tabIndex={1} // tabIndex of textarea\n                                                                            onChange={newContent => { }}\n                                                                        />\n                                                                        {/* }} */}\n                                                                        {/* /> */}\n                                                                    </Form.Item>\n                                                                </div>\n                                                            </div>\n                                                            <div className='col-12'>\n                                                                <label className='mt-2 mb-3'>Choose Collection</label>\n                                                            </div>\n                                                            <div className=\"col-md-6 col-lg-3 col-12\">\n                                                                <div className=\"form-group\">\n                                                                    <div className=\"card choose_div\" style={{\n                                                                        background: \"black\",\n                                                                        marginBottom: \"8px\",\n                                                                    }}>\n                                                                        <div className=\"card-body \">\n                                                                            <Button variant=\"primary\" className='collection_btn' onClick={() => setModalShowcoll(true)}>\n                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\n                                                                            </Button>\n                                                                            <CollPopup\n                                                                                show={modalShowcoll}\n                                                                                onHide={() => setModalShowcoll(false)} />\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            {col?.map((item, idx) => (\n                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-6 col-lg-3 col-12 choose_div\">\n                                                                    <div id={item.id} onClick={() => setNft_collection_id(item.id)} className=\"card\"\n                                                                        style={{\n                                                                            background: \"black\",\n                                                                            marginBottom: \"8px\",\n                                                                            border: nft_collection_id == item.id ? \"1px solid #fff\" : null\n                                                                        }}>\n                                                                        <div className=\"card-body\">\n                                                                            <div>\n                                                                                {item.title}\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            ))}\n                                                            <div className=\"col-12\">\n                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\n                                                                    <label className=\"mt-3\">Upload NFT</label>\n                                                                    <div\n                                                                        className=\"position-relative upload_nft\"\n                                                                        style={{\n                                                                            backgroundImage: \"url('')\",\n                                                                            backgroundSize: \"contain\",\n                                                                            backgroundRepeat: \"no-repeat\",\n                                                                        }}\n                                                                    >\n                                                                        <div\n                                                                            className={\n                                                                                nftFileType === \"Player\" || nftFileType === \"modal\"\n                                                                                    ? \" inputdragVedio\"\n                                                                                    : \"inputtdrag\"\n                                                                            }\n                                                                        >\n                                                                            <input\n                                                                                type=\"file\"\n                                                                                onChange={handleUpload}\n                                                                                maxCount={1}\n                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\n                                                                            />\n                                                                            {(nftFileType === \"Image\") &&\n                                                                                <div>\n                                                                                    {source ? (\n                                                                                        <img\n                                                                                            src={source}\n                                                                                            className=\"nft-image\"\n                                                                                        />\n                                                                                    ) : (\n                                                                                        <img\n                                                                                            src={image}\n                                                                                            className=\"nft-image\"\n                                                                                        />\n                                                                                    )}\n                                                                                </div>\n                                                                            }\n                                                                            {nftFileType === \"Player\" &&\n                                                                                <div>\n                                                                                    {source ? (\n                                                                                        <video\n                                                                                            width=\"100%\"\n                                                                                            controls\n                                                                                            src={source}\n                                                                                        />\n                                                                                    ) : (\n                                                                                        <video\n                                                                                            width=\"100%\"\n                                                                                            controls\n                                                                                            src={image}\n                                                                                        />\n                                                                                    )}\n                                                                                    <div className=\"uploadnftpopup_content\">\n                                                                                        <label>Preview Image</label>\n                                                                                        <p>\n                                                                                            Because you’ve included\n                                                                                            multimedia, you’ll need to provide\n                                                                                            an image (PNG, JPG, or GIF) for\n                                                                                            the card display of your item\n                                                                                        </p>\n                                                                                    </div>\n                                                                                    <div\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\n                                                                                        style={{\n                                                                                            backgroundImage:\n                                                                                                \"url('')\",\n                                                                                            backgroundSize: \"contain\",\n                                                                                            backgroundRepeat: \"no-repeat\",\n                                                                                            backgroundPosition: \"center\",\n                                                                                        }}\n                                                                                    >\n                                                                                        <input\n                                                                                            type=\"file\"\n                                                                                            onChange={previewChange}\n                                                                                        />\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\n                                                                                            {!preview ? (\n                                                                                                <img\n                                                                                                    className=\"preview_image\"\n                                                                                                    src={previewnft}\n                                                                                                />\n                                                                                            ) : (\n                                                                                                <img\n                                                                                                    className=\"preview_image\"\n                                                                                                    src={preview}\n                                                                                                />\n                                                                                            )}\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            }\n                                                                            {nftFileType === \"modal\" &&\n                                                                                <div>\n                                                                                    {!source ? (\n                                                                                        <DModal\n                                                                                            vdo={image}\n                                                                                        />\n                                                                                    ) : (\n                                                                                        <DModal\n                                                                                            vdo={source}\n                                                                                        />\n                                                                                    )}\n                                                                                    <div className=\"uploadnftpopup_content\">\n                                                                                        <label>Preview Image</label>\n                                                                                        <p className=\"\">\n                                                                                            Because you’ve included multimedia,\n                                                                                            you’ll need to provide an image\n                                                                                            (PNG, JPG, or GIF) for the card\n                                                                                            display of your item\n                                                                                        </p>\n                                                                                    </div>\n                                                                                    <div\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\n                                                                                        style={{\n                                                                                            backgroundImage:\n                                                                                                \"url('')\",\n                                                                                            backgroundSize: \"contain\",\n                                                                                            backgroundRepeat: \"no-repeat\",\n                                                                                            backgroundPosition: \"center\",\n                                                                                        }}\n                                                                                    >\n                                                                                        <input\n                                                                                            type=\"file\"\n                                                                                            onChange={previewChange}\n                                                                                        />\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\n                                                                                            {!preview ? (\n                                                                                                <img\n                                                                                                    className=\"preview_image\"\n                                                                                                    src={previewnft} />\n                                                                                            ) : (\n                                                                                                <img\n                                                                                                    className=\"preview_image\"\n                                                                                                    src={preview} />\n                                                                                            )}\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            }\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </Fragment>\n                                                ))}\n                                            </></>\n                                    )}\n                                </Form.List>\n                                <Form.Item>\n                                    <div className=\"col-12\">\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\n                                    </div>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n            )}\n        </div >\n    );\n};\nexport default EditNft;","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Collapse } from 'antd';\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\nimport { useParams } from 'react-router';\nimport { Table } from 'react-bootstrap';\nconst NftdataTable = (props) => {\n    const dispatch = useDispatch()\n    const { Panel } = Collapse;\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const slug = useParams()\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n\n    const nftdetail = useSelector(state => {\n        // \n        return state.projectdetails.nftlist\n\n    })\n    useEffect(() => {\n        dispatch(NftList(props.slug?.id))\n        // dispatch(ProjectDetail(slug))\n    }, [props.slug?.id])\n\n    return (\n        <div className='nft_detail_main position-relative'>\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\n                </svg>\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\n                <Panel header=\"Details\" key=\"1\">\n                    <Table responsive className='m-0'>\n                        <thead>\n                            {/* {latprojnftdetail?.map((items) => { \n                         return (  */}\n\n                            <><tr>\n                                <th>Blockchain</th>\n                                <td>Polygon (Matic)</td>\n                            </tr><tr className='contract-address'>\n                                    <th >Contract</th>\n                                    <td><a target=\"_blank\" href={`https://polygonscan.com/address/${nftdetail?.collectionData?.contract_id}`} >{nftdetail.collectionData?.contract_id?.slice(0, 5)}.....{nftdetail.collectionData?.contract_id?.slice(39, 42)}</a></td>\n                                </tr><tr>\n                                    <th>Token ID</th>\n                                    <td>{nftdetail.token_id?.slice(0,2)}</td>\n                                </tr><tr>\n                                    <th>Token Stranded</th>\n                                    <td>ERC721</td>\n                                </tr></>\n\n                            {/* )})} */}\n\n                        </thead>\n                        <tbody>\n                            {/* {projdetail.nft_data?.map((items) => { */}\n                            {/* // return ( */}\n                            <tr>\n\n                                <td>\n                                    {/* {items.collectionData?.contract_id} */}\n                                </td>\n                                <td>\n                                    {/* {items.token_id} */}\n                                </td>\n                                {/* <td>ERC721</td> */}\n                                {/* <td>Polygon (Matic)</td> */}\n                            </tr>\n                            {/* // ) */}\n                            {/* })} */}\n\n                        </tbody>\n                    </Table>\n                </Panel>\n                {/* <div className='nothing'>\n                No matching records found\n                        </div> */}\n            </Collapse>\n        </div>\n    )\n}\n\nexport default NftdataTable","import axios from \"axios\";\n\nexport const GetMatic = async (setMatic) => {\n\n    try {\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n\n            },\n        }\n        // \n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\n            config\n        )\n        setMatic(res?.data)\n        console.log('res', res)\n    } catch (error) {\n        // console.log(\"error\");\n    }\n};","import React, { Component, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { DeleteProject, LatestProjectDetail, ProjectDetail } from '../../redux/Actions/projectAction';\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\nimport { useState } from 'react';\nimport dayjs from 'dayjs'\nimport { BuyNft } from '../Wallet/interact';\nimport ProjNFTS from '../Auctions/projectnfts';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport { GetUserAction } from '../../redux/Actions/authAction';\nimport MyVerticallyCenteredModal from './refralPopup';\nimport swal from 'sweetalert';\nimport Banner from '../Create/editBanner';\nimport EditNft from '../Create/editNft';\nimport NftdataTable from '../Explore/nftdataTable';\nimport latNftdataTable from './../Explore/latProjNftdata';\nimport LatNftdataTable from './../Explore/latProjNftdata';\nimport ProjdataTable from '../Explore/projDetailtable';\nimport ReferalPopup from './refralPopup';\nimport ReadMore from '../../readMore';\nimport { GetMatic } from './GetMAtic';\nimport FormItem from 'antd/es/form/FormItem';\nimport { useLocation } from \"react-router-dom\";\nconst ProjDetails = () => {\n\n\n    const { slug } = useParams();\n    const search = useLocation().search;\n    const refid = new URLSearchParams(search).get('refid');\n    console.log(refid, 'refid')\n    const [tok, setTok] = useState('')\n    // console.log('tok', tok)\n    const dispatch = useDispatch()\n    const [modalShow, setModalShow] = React.useState(false);\n    const [matic, setMatic] = useState('')\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\n    // const [matic, setmatic] = useState('')\n    const latprojdetail = useSelector(state => {\n        // \n        return state.projectdetails.latestprojectdetails\n    })\n    console.log(\"latround\", Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad)))\n    const [modalShoww, setModalShoww] = React.useState(false);\n    console.log('latproj', latprojdetail?.nft_data)\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    const userDetail = userdet.referrer_id\n\n\n    useEffect(() => {\n        (GetMatic(setMatic))\n        dispatch(LatestProjectDetail(slug))\n        if(sessionStorage.getItem('authToken')){\n\n            dispatch(GetUserAction())\n        }\n\n    }, [slug])\n\n\n\n    return (\n\n        <section className=\"item-details-area project-nft-si main-proj-detail\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className='col-12'>\n                        <span className=\"p-0 title_main\">{latprojdetail.title}</span>\n                    </div>\n\n                    <div className=\"col-12 col-lg-8 relative\">\n                        <div className=\"item-info\" >\n\n\n                            <div className=\"item-thumb text-center\">\n                                <><div>\n                                    {latprojdetail?.user_data?.user_id === userdet?.user_id && sessionStorage.getItem('authToken') &&\n                                        <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() => setModalShow(true)}></i>\n\n\n                                    }\n                                    <Banner\n                                        id={slug}\n                                        show={modalShow}\n                                        onHide={() => setModalShow(false)} />\n                                </div><img src={latprojdetail?.image} alt=\"first nft\" /></>\n                            </div>\n\n                        </div>\n\n\n                        <div className=\"fundraiser mt-4 \">\n                            <div className='lorem_done'>\n                                <img width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" src={latprojdetail?.user_data?.organization_detail?.logo} />\n                                {/* <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                </svg> */}\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\n                            </div>\n\n\n                        </div>\n\n\n                    </div>\n\n                    <div className=\"col-lg-4 col-12 mt-4 mt-lg-0\">\n                        <div className='proj-left user_icon'>\n                            <div className=\"progress_nft \">\n                                <div className='progress_main '><span>\n                                    {/* ({Number(latprojdetail.project_count) * Number(matic['matic-network']?.cad)} of {Number(latprojdetail.price) * Number(Math.round(matic['matic-network']?.cad))} MATIC ) */}\n                                    <span className='nft_price'>${Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad))} raised of ${Math.round(Number(latprojdetail.price)) * Number(Math.round(matic['matic-network']?.cad))} Cdn Goal</span>\n                                    <div>\n\n                                        {/* ${Math.round(latprojdetail.project_count)} raised of ${Math.round(latprojdetail.price)} Cdn Goal */}\n                                        <span className='nft_price'>({Math.round(latprojdetail.project_count)} of {Math.round(latprojdetail.price)} MATIC) </span>\n                                    </div>\n                                    {/* <span className='nft_price'>{latprojdetail.project_count} raised of {latprojdetail.price} Cdn goal (150 of 758 MATIC)</span><small>  </small> */}\n                                    <div className='progressbar'>\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\n                                        {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\n                                    </div>\n                                    <p className='donation-count'> ${latprojdetail.project_count} RAISED</p>\n                                </span>\n                                </div>\n\n                                <div className=\"d-flex flex-wrap gap-5 justify-content-start\">\n\n\n                                    <>\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\n                                            Invest\n                                        </Button>\n\n\n\n                                        </a>\n                                        <Button className=\"btn sm:ml-2 btn-bordered-white m-0\" variant=\"primary\" onClick={() => setModalShowrefer(true)}>\n\n\n                                            Share\n                                        </Button><ReferalPopup\n                                            id={slug}\n                                            userRef={userDetail}\n                                            show={modalShowrefer}\n                                            onHide={() => setModalShowrefer(false)} /></>\n\n\n                                </div>\n                                {latprojdetail?.user_invest && latprojdetail?.user_invest?.length ?\n                                    [...new Map(latprojdetail?.user_invest?.slice(0, 3)?.map(item =>\n                                        [item[\"title\"], item])).values()].map((item, idx) => {\n                                            const date1 = new Date(item.updated_at)\n                                            const date2 = new Date()\n                                            const time_difference = date2.getTime() - date1.getTime();\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\n                                            console.log('days', days_difference)\n                                            return (\n                                                <ul className=\"m-0 custom_lis pl-0 \">\n                                                    <li>\n                                                        <div className='lorem_done p-0'>\n                                                            <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                                            </svg>\n                                                            </span>\n\n                                                            <span><div className=\"progress_name\">{item.username} </div> <div> ${item.price} Cdn / {Math.round(Number(latprojdetail.price) * Number(matic['matic-network']?.cad))} MATIC ({days_difference} days ago)</div></span>\n                                                        </div>\n                                                    </li>\n\n\n                                                </ul>\n                                            )\n                                        }) :\n                                    <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\n\n                                        <span className='allproj2 w-100'>\n                                            No user has invested yet\n                                        </span>\n\n                                    </div>\n                                }\n\n\n                            </div>\n                        </div>\n                    </div>\n                    {/* {userDetail !== null && ( */}\n\n                    {/* )} */}\n                    <div className=\"col-12 col-lg-8 mt-4\">\n                        <div class=\"user-description \">\n\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\n\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\n\t\t\t\t\t\t<i class=\"fa-sharp fa-solid fa-trash\"></i> */}\n\n\n                            </h5>\n                            <ReadMore data={latprojdetail.description} />\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\n                        </div>\n                    </div>\n\n                    <div className='col-12 col-lg-4 mt-4'>\n\n\n                        <div className='table-main-detail position-relative'>\n\n\n\n                            <ProjdataTable\n                                id={slug}\n                            />\n                        </div>\n\n                    </div>\n                    <div className='col-12'>\n                        <div className='mt-4'>\n                            <div className='table-detail'>\n                                <LatNftdataTable />\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className=\" col-12 mt-4\">\n                        <div id=\"invest\" className=\"items mt-0 explore-items p-0\">\n                            <ProjNFTS\n                                refid={refid}\n                            />\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n        </section>\n    );\n\n}\n\nexport default ProjDetails;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport ProjDetails from '../components/ItemDetails/viewProdetails';\n\n\nconst latprojDetails = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <ProjDetails />\n\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default latprojDetails;","import React, { useEffect } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { GetCollectionsAction } from '../../redux/Actions/projectAction'\nconst ShowCollections = () => {\n    const dispatch = useDispatch()\n    const col = useSelector(state => {\n        // \n        return state?.projectdetails?.getcollections\n    })\n    useEffect(() => {\n        dispatch(GetCollectionsAction())\n    }, [])\n    return (\n        <section className=\"explore-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-md-8 col-lg-7\">\n                        {/* Intro */}\n                        <div className=\"intro text-center mb-4\">\n                            <span>Explore</span>\n                            <h3 className=\"mt-3 mb-0\">My Collections</h3>\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row items explore-items h-auto\">\n                    <Link to={`/collection/${''}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\n                        <div>\n                            <div className=\"card\">\n                                <div className=\"image-over\">\n                                    {/* <Link to={`/collection/${''}`}> */}\n                                    <img className=\"card-img-top\" src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\n                                    {/* </Link> */}\n                                </div>\n                                {/* Card Caption */}\n                                <div className=\"card-caption col-12 p-0\">\n                                    {/* Card Body */}\n                                    <div className=\"card-body\">\n                                        <a href=\"/item-details\">\n                                            <h5 className=\"mb-0\">{col.name}</h5>\n                                        </a>\n                                        <div className=\"seller d-flex align-items-center my-3\">\n                                            <span style={{ color: '#8E8E8E' }}>{col?.nfts?.[0]?.name}</span>\n                                            <a href=\"/author\">\n                                                <h6 className=\"ml-2 mb-0\"> </h6>\n                                            </a>\n                                        </div>\n                                        <div className=\"card-bottom d-flex justify-content-between\">\n                                            <span> {col.price}</span>\n                                            <span> {col.number_of_nft}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Link>\n                    {/* ) */}\n                    {/* })} */}\n                </div>\n            </div>\n        </section>\n    )\n}\nexport default ShowCollections","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport ShowCollections from '../components/Create/showCollections';\n\nconst Showcollections = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n            <ShowCollections />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\nexport default Showcollections;","import React, { Component } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\nconst CollItem = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch()\n    const projdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.projectdetails\n    })\n    useEffect(() => {\n        // \n        dispatch(ProjectDetail(id))\n    }, [id])\n    return (\n        <div>\n            <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\n                <div className=\"col-12\">\n                    {/* Explore Menu */}\n                    <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\n                    </div>\n                </div>\n            </div>\n            <div className=\"row items explore-items\">\n                {Object.keys(projdetail).map((item, idx) => {\n                    // {projdetail?.map((item, idx) => {\n                    return (\n                        <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" >\n                            <div className=\"card no-hover text-center\">\n                                <div className=\"image-over\">\n                                    <a href=\"/item-details\">\n                                        {/* <img className=\"card-img-top\" src={item.img} alt=\"\" /> */}\n                                    </a>\n                                    {/* Author */}\n                                    <a className=\"author\" href=\"/authors\">\n                                        <div className=\"author-thumb avatar-lg\">\n                                            <img className=\"rounded-circle\" src={item?.nft_data?.title} alt=\"\" />\n                                        </div>\n                                    </a>\n                                </div>\n                                {/* Card Caption */}\n                                <div className=\"card-caption col-12 \">\n                                    {/* Card Body */}\n                                    <div className=\"card-body mt-4\">\n                                        <a href=\"/item-details\">\n                                            <h5 className=\"mb-2\">{item?.nft_data?.title}</h5>\n                                        </a>\n                                        {/* <span>{item.content}</span> */}\n                                        <hr />\n                                        <div className=\"card-bottom d-flex justify-content-between\">\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\nexport default CollItem;","import React, { Component, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { DeleteProject, GetCollectionDetails, ProjectDetail } from '../../redux/Actions/projectAction';\nimport { Button } from 'react-bootstrap';\nimport CollItem from './bread-crumb';\nimport ReadMore from '../../readMore';\n\nconst CollectionDetails = () => {\n\n    const initData = {\n        itemImg: \"/img/avtar1.png\",\n        date: \"2022-03-30\",\n        tab_1: \"Bids\",\n        tab_2: \"History\",\n        tab_3: \"Details\",\n        ownerImg: \"/img/avtar1.png\",\n        itemOwner: \"Themeland\",\n        created: \"15 Jul 2021\",\n        title: \"Walking On Air\",\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\n        price_1: \"1.5 ETH\",\n        price_2: \"$500.89\",\n        count: \"1 of 5\",\n        size: \"14000 x 14000 px\",\n        volume: \"64.1\",\n        highest_bid: \"2.9 BNB\",\n        bid_count: \"1 of 5\",\n        btnText: \"Place a Bid\"\n    }\n    const tabData_1 = [\n        {\n            id: \"1\",\n            img: \"/img/avtar1.png\",\n            price: \"14 ETH\",\n            time: \"4 hours ago\",\n            author: \"@arham\"\n        },\n        {\n            id: \"2\",\n            img: \"/img/avtar2.jpg\",\n            price: \"10 ETH\",\n            time: \"8 hours ago\",\n            author: \"@junaid\"\n        },\n        {\n            id: \"3\",\n            img: \"/img/avtar3.png\",\n            price: \"12 ETH\",\n            time: \"3 hours ago\",\n            author: \"@yasmin\"\n        }\n    ]\n\n    const tabData_2 = [\n        {\n            id: \"1\",\n            img: \"/img/avtar1.png\",\n            price: \"32 ETH\",\n            time: \"10 hours ago\",\n            author: \"@hasan\"\n        },\n        {\n            id: \"2\",\n            img: \"/img/avtar2.jpg\",\n            price: \"24 ETH\",\n            time: \"6 hours ago\",\n            author: \"@artnox\"\n        },\n        {\n            id: \"3\",\n            img: \"/img/avtar3.png\",\n            price: \"29 ETH\",\n            time: \"12 hours ago\",\n            author: \"@meez\"\n        }\n    ]\n\n    const sellerData = [\n        {\n            id: \"1\",\n            img: \"/img/avtar1.png\",\n            seller: \"@ArtNoxStudio\",\n            post: \"Creator\"\n        },\n        {\n            id: \"2\",\n            img: \"/img/avtar2.jpg\",\n            seller: \"Virtual Worlds\",\n            post: \"Collection\"\n        }\n    ]\n\n    const { id } = useParams();\n    // console.log(id, 'idd')\n    const [modalShow, setModalShow] = React.useState(false);\n\n    const dispatch = useDispatch()\n\n    const coldetail = useSelector(state => {\n        return state?.projectdetails?.getcollectiondetails\n    })\n    // console.log(coldetail, 'coldetail')\n\n    useEffect(() => {\n        dispatch(GetCollectionDetails(id))\n    }, [id])\n\n\n\n\n    return (\n        <section className=\"item-details-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-between\">\n                    <div className=\"col-12 col-lg-12\">\n                        <div className=\"item-info\">\n\n                            <><div className=\"item-thumb text-center\">\n                                <img src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\n                            </div>\n\n\n                            </>\n\n\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 col-lg-6\">\n                        <div className=\"content mt-5 mt-lg-0\">\n                            <div className='d-flex  align-items-center justify-content-between'>\n                                <h3 className=\"m-0\">{coldetail.title}</h3>\n\n                                <div className='eddlbtton d-flex  align-items-center '>\n                                    <Button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" variant=\"primary\" onClick={() => setModalShow(true)} style={{ color: '#FFF' }}>\n                                        Add item\n                                    </Button>\n                                </div>\n\n                            </div>\n\n                            <ReadMore data={coldetail?.description} />\n\n\n\n                        </div>\n                    </div>\n                    <CollItem />\n                </div>\n            </div >\n\n\n        </section >\n    );\n\n}\n\nexport default CollectionDetails;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport CollectionDetails from '../components/Create/collectionDetail';\n\n\nconst CollectionDetail = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <CollectionDetails />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default CollectionDetail;","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\n\n\nimport JoditEditor from 'jodit-react';\nimport { useParams } from 'react-router';\nimport { CityList, StateList } from '../../redux/Actions/authAction';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nfunction DesPopup(props) {\n    const editor = useRef(null);\n\n    const [country, setCountry] = useState()\n    const [type, setType] = useState()\n    const dispatch = useDispatch()\n    const slug = useParams()\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\n    const [description, setDescription] = useState();\n\n    const projdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.projectdetails\n    })\n    useEffect(() => {\n        if (projdetail && Object.keys(projdetail).length) {\n\n            setValue(\"title\", projdetail.title)\n            setValue(\"address\", projdetail.address)\n            setValue(\"description\", projdetail.description)\n            setValue('state', projdetail.state)\n            setValue('country', projdetail.country)\n            setValue('city', projdetail.city)\n            setValue(\"price\", projdetail.price)\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\n            setValue(\"start_date\", projdetail.start_date)\n            setValue(\"end_date\", projdetail.end_date)\n            setValue(\"type\", projdetail.type)\n            setValue('category_id', projdetail.category_id)\n\n            setType(projdetail.type)\n            setCountry(projdetail.country)\n            // setState(projdetail.state)\n            // setCity(projdetail.city)\n            setDescription(projdetail.description)\n            console.log(projdetail.state, 'edit state')\n            console.log(projdetail.city, 'edit city')\n            setValue(\"image\", projdetail.image)\n            const formData = new FormData()\n            // formData.append('country_id', event?.currentTarget?.value)\n            formData.append('country_id', projdetail.country)\n            formData.append('state_id', projdetail.state)\n            dispatch(StateList(formData))\n            dispatch(CityList(formData))\n\n        }\n    }, [projdetail]);\n\n    const OnSubmit = (data) => {\n        const formData = new FormData()\n\n        // formData.append('image', data.image[0])\n        formData.append('title', data.title)\n        formData.append('description', description)\n        formData.append('state', data.state)\n        formData.append('country', data.country)\n        formData.append('city', data.city)\n        formData.append('address', data.address)\n        formData.append('price', data.price)\n        formData.append('number_of_nft', data.number_of_nft)\n        if (data?.type == 1) {\n\n            formData.append('start_date', '')\n            formData.append('end_date', '')\n        } else {\n\n            formData.append('start_date', data.start_date)\n            formData.append('end_date', data.end_date)\n        }\n        formData.append('type', data.type)\n        formData.append('category_id', data.category_id)\n\n        dispatch(UpdateProject(props, formData))\n    }\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header >\n\n                <div>\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\n                    <div className=\"row\">\n\n                        <div className=\"col-12\">\n                            <label>Description</label>\n                            <div className=\"form-group\">\n\n                                <Controller\n                                    control={control}\n                                    name=\"description\"\n                                    defaultValue=\"\"\n                                    render={({ field: { value, onChange } }) => {\n                                        return <JoditEditor\n                                            ref={editor}\n                                            value={value}\n                                            // config={config}\n\n                                            placeholder=\"start typing\"\n                                            tabIndex={1} // tabIndex of textarea\n                                            onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\n                                            onChange={newContent => { }}\n                                        />\n                                    }}\n                                />\n                                {/* <textarea value={value} onChange={setDescription}></textarea> */}\n\n\n\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\n                            </div>\n                        </div>\n                        <div className=\"col-12\">\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\n                        </div>\n                    </div>\n\n\n\n                </form>\n            </Modal.Body>\n\n        </Modal >\n    );\n}\n\nexport default DesPopup","import React, { useEffect, useState } from 'react';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\nimport LatNftdataTable from '../Explore/latProjNftdata';\nimport Banner from './editBanner';\nimport DesPopup from './desPopup';\nimport ProjdataTable from '../Explore/projDetailtable';\nimport ReadMore from '../../readMore';\nimport { GetMatic } from '../ItemDetails/GetMAtic';\nimport ReferalPopup from '../ItemDetails/refralPopup';\nimport Swal from 'sweetalert2';\nimport { Alert, Space } from 'antd';\nimport ProTypePopup from './ProjectTypePopup';\n// import ProgressBar from 'react-bootstrap';\nconst ProjNftDetails = () => {\n    const { slug } = useParams()\n    // console.log(id, 'idd')\n    const latprojdetail = useSelector(state => {\n        // \n        return state.projectdetails.latestprojectdetails\n    })\n    const [matic, setmatic] = useState('')\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalShowedit, setModalShowedit] = React.useState(false);\n    const [nftId, setNftID] = useState();\n    const [modalShowadd, setModalShowadd] = React.useState(false);\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\n    const dispatch = useDispatch()\n    const [modalShowDes, setModalShowDes] = React.useState(false);\n    const [projmodalShows, setProjModalShows] = React.useState(false);\n    const projdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.projectdetails\n    })\n    console.log('projdetail', projdetail)\n    useEffect((event) => {\n        (GetMatic(setmatic))\n        dispatch(ProjectDetail(slug))\n    }, [slug])\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    const userDetail = userdet.referrer_id\n    const bannerHandler = () => {\n    }\n    return (\n        <section className=\"item-details-area project-nft-si main-proj-detail \">\n            <div className=\"container\">\n                {projdetail.type === \"1\" &&\n                    <Space\n                        direction=\"vertical\"\n                        style={{\n                            width: '100%',\n\n                        }}\n                        className='project_type-icon'\n\n                    >\n                        <Alert\n                            message=\"Change you project from single to campaign to add more NFTs\"\n                            type=\"info\"\n                            showIcon\n                            action={\n                                <>\n                                    <i class=\"fa-solid fa-check\" onClick={() => setProjModalShows(true)}></i>\n                                    <ProTypePopup\n                                        id={slug}\n                                        show={projmodalShows}\n                                        onHide={() => setProjModalShows(false)}\n                                    />\n                                </>\n                            }\n\n\n\n\n                            closable\n                        />\n                    </Space>\n                }\n                <div className=\"row justify-content-between p-0\">\n                    <div className='col-12'>\n                        <span className=\"my-2 p-0 title_main\">{projdetail.title}</span>\n                    </div>\n                    <div className='col-12 col-lg-8'>\n                        <div className=\"item-info\" >\n                            <div className=\"item-thumb text-center\">\n                                <div>\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() =>\n                                        setModalShow(true)}></i>\n                                    <Banner\n                                        id={slug}\n                                        show={modalShow}\n                                        onHide={() => setModalShow(false)} />\n                                </div>\n                                <img src={projdetail?.image} alt=\"first nft\" />\n                                {/* : null} */}\n                            </div>\n                        </div>\n                        <div className=\"fundraiser mt-4 p-0\">\n                            <div className='lorem_done'>\n                                <img src={latprojdetail?.user_data?.organization_detail?.logo} width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" />\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-12 col-lg-4 mt-3 mt-lg-0'>\n                        <div className='progress_nft_main'>\n                            <div >\n                                <div className=\"progress_nft mb-3\">\n                                    <div className='progress_main'><span>\n                                        <span className='nft_price'>${Number(projdetail.project_count) * Number(matic['matic-network']?.cad)} raised of ${Number(projdetail.price) * Number(Math.round(matic['matic-network']?.cad))} Cdn </span>\n                                        <div>\n                                            <span className='nft_price'>({projdetail.project_count} of {projdetail.price} MATIC )</span>\n                                        </div>\n                                        <div className='progressbar'>\n                                            <ProgressBar varient=\"success\" now={projdetail.project_percentage} />\n                                        </div>\n                                        <p className='donation-count'>${projdetail.project_count} Cdn RAISED</p>\n                                    </span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-start\">\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\n                                            Invest\n                                        </Button>\n                                        </a>\n                                        {projdetail?.nft_data && projdetail?.nft_data && projdetail?.nft_data.length > 0 && projdetail?.nft_data[0]?.is_mint == 0 ? (\n                                            <Button className=\" btn  btn-bordered-white m-0 ml-2\" variant=\"primary\" onClick={() => Swal.fire(\n                                                'Please mint your NFTs',\n                                            )}>\n                                                Share\n                                            </Button>\n                                        ) : (\n                                            <>\n                                                <Button className=\" btn  btn-bordered-white m-0 mr-2\" onClick={() => setModalShowrefer(true)} variant=\"primary\">\n                                                    Share\n                                                </Button>\n                                                <ReferalPopup\n                                                    id={slug}\n                                                    userRef={userDetail}\n                                                    show={modalShowrefer}\n                                                    onHide={() => setModalShowrefer(false)} />\n                                            </>\n                                        )}\n                                    </div>\n                                    {projdetail?.user_invest && projdetail?.user_invest?.length ?\n                                        [...new Map(projdetail?.user_invest?.slice(0, 3)?.map(item =>\n                                            [item[\"title\"], item])).values()].map((item, idx) => {\n                                                // {projdetail.user_invest?.slice(0, 3)?.map((items) => {\n                                                const date1 = new Date(item.updated_at)\n                                                const date2 = new Date()\n                                                const time_difference = date2.getTime() - date1.getTime();\n                                                const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\n                                                console.log('days', days_difference)\n                                                return (\n                                                    <ul className=\"m-0 custom_lis pl-0\">\n                                                        <li>\n                                                            <div className='lorem_done p-0'>\n                                                                <span>\n                                                                    <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                                                    </svg>\n                                                                </span>\n                                                                <span><div className=\"progress_name\">{item.username} </div> <div>${item.price} Cdn / 40 MATIC ({days_difference} days ago)</div></span>\n                                                            </div>\n                                                        </li>\n                                                    </ul>\n                                                )\n                                            }) :\n                                        <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\n                                            <span className='allproj2  w-100'>\n                                                No user has invested yet\n                                            </span>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-12 col-lg-8 mt-4'>\n                        <div class=\"user-description\">\n                            <h5 className='user_title justify-content-between'>\n                                <div className='d-flex align-items-center gap-5'> <div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div></div>\n                                <div >\n                                    <i class=\"fa-solid fa-pen\" onClick={() =>\n                                        setModalShowDes(true)}></i>\n                                    <DesPopup\n                                        id={slug}\n                                        show={modalShowDes}\n                                        onHide={() => setModalShowDes(false)} />\n                                </div>\n                            </h5>\n                            <ReadMore data={projdetail.description} />\n                        </div>\n                    </div>\n                    <div className='col-12 col-lg-4 mt-4'>\n                        <div className='container table-main-detail position-relative'>\n                            <ProjdataTable\n                                id={slug}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className='col-12 mt-4'>\n                    <div className='container table-detail'>\n                        <LatNftdataTable\n                        />\n                    </div>\n                </div>\n                <div className=\"col-12 mt-4\">\n                    <div className='nfts_main' id='invest'>\n                        <div className='intro row m-0 p-0'>\n                            <div className=\"intro-content\">\n                                <span >NFTs</span>\n                                <h3 className=\"w-full mb-0 pt-4\">NFTs</h3>\n                            </div>\n                        </div>\n                        <div className=\"row items mt-0 explore-items px-0\">\n                            {projdetail.number_of_nft != projdetail?.nft_data?.length && (\n                                <div className='col-12 col-sm-6 col-lg-3 item explore-item'>\n                                    <div className='card no-hover m-0 add-nft '>\n                                        <div class=\"image-over relative\">\n                                            <Link to={`/addnft/${projdetail.slug}?projectid=${projdetail.id}`}>\n                                                + Add NFT </Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                            {projdetail?.nft_data?.map((x, idx) => {\n                                return (\n                                    <div key={`eds_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item soldout-card\">\n                                    {x.sold_nft == 1 && \n                                        <div className='sold-outbtn'>SOLD OUT</div>  \n                                        }  \n                                        <div className=\"card no-hover m-0\">\n                                            <div className=\"image-over relative\">\n                                                {x.user_id == projdetail.user_id ? (\n                                                    <>\n                                                        <Link to={x.sold_nft == 0 && `/nft/details/${x.slug}?project=${slug}`}>\n                                                            {x.extention === 'Player' || x.extention === 'modal' ? (\n                                                                <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\n                                                            ) : (\n                                                                <img className=\"card-img-top\" src={x.image} alt=\"\" />\n                                                            )}\n                                                        </Link>\n                                                    </>\n                                                ) : (\n                                                    <Link to={x.sold_nft == 0 && `/nft/details/${x.slug}?project=${slug}`}>\n                                                        {x.extention === 'Player' || x.extention === 'modal' ? (\n                                                            <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\n                                                        ) : (\n                                                            <img className=\"card-img-top\" src={x.image} alt=\"\" />\n                                                        )}\n                                                    </Link>\n                                                )}\n                                                <div className='token'>\n                                                    <span>#{x?.token_id?.slice(0,2)}</span>\n                                                    <span className='cards-icons'>\n                                                        {x.is_mint == 0 &&\n                                                            <Link to={`/nft/details/${x.slug}?project=${slug}`} ><i className=\"fa-solid fa-pen\" /></Link>\n                                                        }\n                                                    </span>\n                                                </div>\n                                                {/* Author */}\n                                            </div>\n                                            {/* Card Caption */}\n                                            <div className=\"card-caption px-0 col-12 \">\n                                                {/* Card Body */}\n                                                <div className=\"card-body\">\n                                                    <a href=\"#\" className=\"d-flex justify-content-between align-items-center\">\n                                                        <h5 className=\"m-0 pb-2 p-0 text-capitalize\">{x.title.slice(0, 16)}...</h5>\n                                                    </a>\n                                                    <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\n                                                        <span className='align-self-start' dangerouslySetInnerHTML={{ __html: x.description.slice(0, 45) }} />\n                                                    </div>\n                                                    <div className='mint d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price' >\n                                                        {x.is_mint == 0 ? (\n                                                            <button className='btn py-2 ml-lg-auto btn-bordered-white'>\n                                                                <Link to={`/nft/details/${x.slug}`}>Sell</Link>\n                                                            </button>\n                                                        ) : (\n                                                            <>\n                                                                {x?.user_data?.user_id !== projdetail?.user_data?.user_id ? (\n                                                                    <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>\n                                                                        <a >SOLD OUT</a>\n                                                                    </button>\n                                                                ) : (\n                                                                    <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>\n                                                                        <a >Minted</a>\n                                                                    </button>\n                                                                )}\n                                                            </>\n                                                        )}\n                                                        <a> <img className=\"mr-1\" src='../img/image14.png' />{x.amount}</a>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section >\n    );\n}\nexport default ProjNftDetails;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport ProjNftDetails from '../components/Create/projdetails';\n\nconst ProjNft = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <ProjNftDetails />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\nexport default ProjNft;","\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Collapse } from 'antd';\nimport { getBid, NftList, ProjectDetail, ProjectList, UpdateBId } from '../../redux/Actions/projectAction';\nimport { useParams } from 'react-router';\nimport { Table } from 'react-bootstrap';\nimport { Center, Loader } from '@react-three/drei';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Spin } from 'antd';\n\n\nconst NftAuctiondataTable = (props) => {\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n    const { Panel } = Collapse;\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const { slug } = useParams()\n    const [bidstatus, setBidStatus] = useState(\" \")\n    console.log('biddst', bidstatus)\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n    const projdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.latestprojectdetails\n    })\n    console.log(projdetail, 'projdatanft')\n    const nftdetail = useSelector(state => {\n        // \n        return state.projectdetails.nftlist\n\n    })\n    console.log(nftdetail, 'nftdetail')\n    useEffect(() => {\n        // \n        dispatch(NftList(props.slug.id))\n\n    }, [props.slug.id])\n\n    const acceptHandler = (id) => {\n        console.log(\"accept\", id)\n        getBid(props)\n        dispatch(UpdateBId({ id, status: \"2\", setLoading, slug: props.slug.id }))\n    }\n    const rejectHandler = (id) => {\n        console.log(\"reject\", id)\n        getBid(props)\n        dispatch(UpdateBId({ id, status: \"3\", setLoading, slug: props.slug.id }))\n    }\n\n    const antIcon = (\n        <LoadingOutlined\n            style={{\n                fontSize: 35,\n                textAlign: \"center\"\n\n            }}\n            spin\n        />\n    )\n    return (\n        <div className='position-relative'>\n\n\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                </svg>\n                <Panel header=\"Latest Bids\" key=\"1\" >\n                    <Table responsive >\n                        {loading ? (\n                            <div className='spiner'>\n                                <Spin indicator={antIcon} />\n                            </div>\n                        ) : (\n                            <><thead>\n\n\n                                <tr>\n\n                                    <th>User</th>\n                                    <th>Bid Price</th>\n                                    <th>Wallet</th>\n                                    {/* <th>To</th> */}\n                                    {/* <th>Transaction</th> */}\n                                    <th>Action</th>\n                                </tr>\n\n\n                            </thead><tbody className='img_table'>\n                                    {nftdetail.bids?.map((item) => {\n\n                                        return (\n                                            <tr>\n\n                                                <td>{item.username}</td>\n                                                <td>{item.amount}</td>\n                                                <td>{item.pay_from?.slice(0, 4)}...{item.pay_from?.slice(35, 44)}</td>\n                                                {/* <td>{item.pay_to?.slice(0, 4)}...{item.pay_to?.slice(35, 44)}</td> */}\n                                                {/* <td>{item.txd_id?.slice(0, 4)}...{item.txd_id?.slice(35, 44)}</td> */}\n                                                <td className='Btn_td'>\n                                                    {item.status == 1 ? (\n\n                                                        <><Button type=\"submit\" className={nftdetail.bid_approved_id !== null ? \"btndisabled\" : \"table-btn \"} onClick={() => acceptHandler(item.id)} disabled={nftdetail.bid_approved_id !== null ? true : false}>Accept</Button>\n                                                            <Button type=\"submit\" className={nftdetail.bid_approved_id !== null ? \"btndisabled\" : \"table-btn \"} onClick={() => rejectHandler(item.id)} disabled={nftdetail.bid_approved_id !== null ? true : false}>Reject</Button></>\n                                                    ) : (\n                                                        <>\n                                                            {/* {nftdetail?.bid_approved_id !== null && } */}\n                                                            <a className='auctionbttn'>Confirmed</a>\n                                                        </>\n                                                    )}\n                                                </td>\n                                            </tr>\n                                        );\n                                    })}\n\n                                </tbody></>\n\n                        )}\n                    </Table>\n                    {nftdetail?.bids?.length == 0 &&\n                        <div className='nothing'>\n\n                            No matching records found\n                        </div>\n                    }\n                </Panel>\n\n            </Collapse>\n        </div >\n    )\n}\n\nexport default NftAuctiondataTable","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { set, useForm } from 'react-hook-form';\nimport 'antd/dist/antd.css';\nimport { Steps } from 'antd';\nimport { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined, CheckOutlined } from '@ant-design/icons'\nimport { useParams } from 'react-router';\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\n\nfunction NftPopup(props) {\n\n\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(true)\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\n    const { id } = useParams();\n    const OnSubmit = (data) => {\n        // dispatch(CreateCollectionAction(data))\n    }\n\n    const description = 'This is a description.';\n    function gettxhashAddress() {\n        // \n        return window.ethereum?.selectedAddress;\n    }\n    // function getconfirmAddress() {\n    //     // \n    //     return web3.eth.getTransactionReceipt;\n    // }\n    // useEffect(() => {\n    // setTxhash(gettxhashAddress())\n    // setConfirm(getconfirmAddress())\n    // if (txhas) {\n    // setCurrent(1)\n    // setCurrent(2)\n    // setCurrent(3)\n    // }\n    // }, [])\n    const nftdetail = useSelector(state => {\n        // \n        return state.projectdetails.nftlist\n    })\n    // console.log('latprojdetailpop', nftdetail)\n    // const mint = () => {\n    //     CreateMetaDataAndMint({\n    //         _name: nftdetail.title,\n    //         _des: nftdetail.description,\n    //         _imgBuffer: nftdetail.image\n    //     })\n    // }\n\n    const { Step } = Steps;\n    return (\n        <>\n\n            <Modal\n                {...props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Follow steps\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Steps current={props.current} direction='vertical'>\n                        <Step icon={props.current == 0 && <LoadingOutlined type=\"loading\" />} title=\"Deploying contract\" description='Uploading of all media assets and metadata to IPFS' />\n                        <Step icon={props.current == 0 && <LoadingOutlined type=\"loading\" />} title=\"Mint\" description='Send transaction to create your NFT' />\n                        <Step icon={props.current !== 2 ? <LoadingOutlined type=\"loading\" /> : props.current == 2 && <CheckOutlined type=\"finish\" />} title=\"Approve\" description='This transaction is conducted only once per collection' />\n\n                    </Steps>\n\n\n                </Modal.Body>\n\n            </Modal>\n        </>\n    );\n}\n\nexport default NftPopup","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { CreateCollectionAction, ResellNft, UpdateProject } from '../../redux/Actions/projectAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport JoditEditor from 'jodit-react';\nimport { useHistory, useLocation, useParams } from 'react-router';\nimport Web3 from 'web3';\nimport React from 'react';\nimport { CityList, StateList } from '../../redux/Actions/authAction';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\nimport { CreateMetaDataAndMint, UpdateStatus } from '../Wallet/interact';\nimport NftPopup from './nftPopup';\nimport { useFormData } from '../Create/Context/context';\nimport { LogsAction } from '../../redux/Actions/logsAction';\nimport Swal from 'sweetalert2';\nimport swal from 'sweetalert';\nconst alchemyKey = \"https://polygon-mainnet.g.alchemy.com/v2/bDM_VuUmdoyJSNn3Ky8pZL0vBMAc9BXd\";\n// const alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\n// console.log(NFTContract.abi,\"abi\")\nconst web3 = createAlchemyWeb3(alchemyKey);\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mainnet.g.alchemy.com/v2/bDM_VuUmdoyJSNn3Ky8pZL0vBMAc9BXd\");\n\nfunction SellPopup(props) {\n    const history = useHistory()\n    const [current, setCurrent] = React.useState(0)\n    const [loading, setLoading] = useState(false)\n    const dispatch = useDispatch()\n    const slug = useParams()\n    const [modalShow, setModalShow] = React.useState(false);\n\n    const [auctiontype, setAuctionType] = useState(\"\")\n    // console.log(\"auction type\", auctiontype)\n    const autionTypeChange = (event) => {\n\n        setAuctionType(event.target.value);\n\n    }\n    const [auctiondata, setAuctiondata] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [startdate, setStartdate] = useState(\"\")\n    const [enddate, setEnddate] = useState(\"\")\n    const location = useLocation();\n\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\n\n    const nftdetail = useSelector(state => {\n        return state.projectdetails.nftlist\n    })\n    console.log('nftdetail', nftdetail)\n\n    const mint = (contractAddress, type, start_date, end_date, price) => {\n        // \n        // auctiondata.map((item) => {\n        //     setPrice(item.price)\n        // })\n\n        CreateMetaDataAndMint({\n\n            _name: nftdetail.title,\n            _des: nftdetail.description,\n            _imgBuffer: nftdetail.image,\n            contractAddress,\n            setCurrent,\n            collid: nftdetail?.collection_id,\n            nft_file_content: nftdetail?.nft_file_content,\n            slug,\n            dispatch,\n            setModalShow,\n            setLoading,\n\n            // auctiondata\n            type,\n            price,\n            start_date,\n            end_date,\n\n        })\n    }\n\n    const deployContract = async (type, start_date, end_date, price) => {\n        try {\n            if (nftdetail?.collectionData?.contract_id == null) {\n\n                await window.ethereum.request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [{ chainId: web3.utils.toHex('137') }],\n                    // params: [{ chainId: web3.utils.toHex('80001') }],\n                })\n\n                // const { address } = await ConnectWallet()\n                const address = window?.ethereum?.selectedAddress\n                const MyNFTContract = new web3.eth.Contract(NFTContract.abi)\n                // const gas = await web3.eth.getGasPrice();\n                // const gas = 5000\n\n\n                const currentGasPrice = await web3.eth.getGasPrice();\n\n                const deployTransaction = MyNFTContract.deploy({\n                    data: NFTContract.bytecode,\n                    arguments: [nftdetail?.collectionData?.title, nftdetail?.collectionData?.symbol],\n                }).send({\n                    from: address,\n                    gasLimit: web3.utils.toHex(3000000)\n\n                })\n                deployTransaction\n                    .on('transactionHash', (transactionHash) => {\n                        console.log(transactionHash, \"transactionHash\")\n\n                    })\n                    .on('receipt', (receipt) => {\n                        console.log(receipt, \"reciept\")\n                    })\n                    .on('confirmation', (confNumber, receipt) => {\n                        console.log(receipt.contractAddress, \"confirmRecipet\")\n\n                        if (confNumber == 1) {\n                            mint(receipt?.contractAddress,type, start_date, end_date, price)\n                            // setContractAdd(receipt?.contractAddress)\n                            // UpdateContract(id)\n                        }\n\n                    })\n                    .on('error', (error) => {\n                        swal(\"error\", \"contract not deployed please try again\", \"error\")\n                        setModalShow(false)\n                        // console.log(error)\n                    })\n            } else {\n                \n                mint(nftdetail?.collectionData?.contract_id, type, start_date, end_date, price)\n            }\n            return {\n                success: true,\n                // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\n                status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\n            }\n        } catch (error) {\n            dispatch(LogsAction(error))\n            swal(\"error\", \"contract not deployed please try again\", \"error\")\n            setModalShow(false)\n            return {\n                success: false,\n                status: \":disappointed_relieved: Something went wrong: \" + error.message\n            }\n        }\n\n    }\n\n\n    console.log('mint', props.ismint)\n    const OnSubmit = async (data) => {\n\n        setModalShow(true)\n        const formData = new FormData()\n        formData.append(\"nft_id\", props.nftid)\n        formData.append(\"type\", data.auctiontype)\n        formData.append(\"end_date\", data.end_date)\n        formData.append(\"start_date\", data.start_date)\n        formData.append(\"price\", data.price)\n        {\n            props.ismint == 1 ? (\n\n                dispatch(ResellNft(formData, props, history))\n                ) : (\n                   await deployContract({ type: data.auctiontype, end_date: data.end_date, start_date: data.start_date, price: data.price })\n            )\n        }\n\n    }\n\n\n    const disablePastDate = () => {\n        const today = new Date();\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\n        const yyyy = today.getFullYear();\n        return yyyy + \"-\" + mm + \"-\" + dd;\n    };\n\n    const today = new Date();\n    const numberOfDaysToAdd = 30;\n    const date = today.setDate(today.getDate());\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header >\n                <div className='d-flex justify-content-between w-full'>\n                    <label className='modal-title h4 '>List for sale</label> <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover form-sell\">\n                    <div className=\"row\">\n\n                        <div className=\"col-12 \">\n                            <div className=\"form-group\">\n                                <div className='mb-3'>Choose a type of sale</div>\n\n                                <div className=\"form-check form-check-inline mr-2\">\n                                    {/* {data.usertype == 2 ? ( */}\n                                    <>\n                                        <input\n                                            className=\"form-check-input\"\n                                            type=\"radio\"\n                                            name=\"radiobutton\"\n                                            id=\"1\"\n                                            onChange={()=>autionTypeChange}\n                                            defaultChecked\n                                            value=\"1\"\n                                            {...register(\"auctiontype\", { required: true })}\n                                            aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\n\n                                        />\n                                        <label className=\"form-check-label mr-2\" htmlFor=\"buy\">Fixed Price</label>\n                                    </>\n\n\n                                    <><input\n                                        className=\"form-check-input\"\n                                        type=\"radio\"\n                                        name=\"radiobutton\"\n                                        id=\"2\"\n\n                                        onChange={autionTypeChange}\n                                        value=\"2\"\n                                        {...register(\"auctiontype\", { required: true })}\n\n                                        aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\n\n                                    />\n                                        <label className=\"form-check-label\" htmlFor=\"auction\">English Auction</label></>\n                                    {/* )} */}\n                                </div>\n\n                                {errors.auctiontype?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Type is required</p>}\n\n                            </div>\n                        </div>\n                        <div className=\"col-md-12 col-12\">\n                            {/* {type == 1 && ( */}\n\n                            <div className=\"form-group m-0\">\n                                <label>Set Price in MATIC</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"price\"\n                                    {...register(\"price\", { required: true })}\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\n                                />\n                                {/* {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>} */}\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">price is required</p>}\n\n                            </div>\n                            {/* )} */}\n                        </div>\n                        <>\n                            <label className='col-12 my-3'>Set Duration </label>\n                            <div className=\"col-12 col-md-6\">\n                                <div className=\"form-group\">\n                                    <label>Start date</label>\n                                    <input\n                                        type=\"date\"\n                                        // placeholder='dd-mm-yy'\n                                        // hidden={data.type == 1}\n                                        defaultValue={defaultValue}\n                                        className=\"form-control\"\n                                        name=\"start_date\"\n                                        // value={defaultValue}\n                                        min={disablePastDate()}\n\n                                        {...register(\"start_date\", { required: true })}\n                                    // aria-invalid={errors.start_date ? \"true\" : \"false\"} \n                                    />\n                                    {/* {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>} */}\n                                </div>\n                            </div>\n                            <div className=\"col-12 col-md-6\">\n                                <div className=\"form-group\">\n                                    <label>End Date</label>\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control\"\n                                        name=\"end_date\"\n                                        min={disablePastDate()}\n                                        defaultValue={defaultValue1}\n                                        // value={defaultValue1}\n                                        {...register(\"end_date\")}\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\n                                    />\n                                    <div >\n\n                                    </div>\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\n                                </div>\n                            </div>\n                            {auctiontype == 1 ? (\n\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days after which the listing may expire and be removed</span>\n                            ) : (\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days</span>\n                            )}\n                        </>\n                        <div className='w-full text-center'>\n                            {props.ismint == 1 ? (\n                                <button type=\"submit\" className=\" mb-0 btn btn-bordered-white\" style={{ color: '#FFF' }}\n                                >Sell</button>\n                            ) : (\n                                <>\n\n                                    <button type=\"submit\" className=\" mb-0 btn btn-bordered-white\" style={{ color: '#FFF' }}\n                                        id=\"nftdetail.id\">Mint</button><NftPopup\n                                        show={modalShow}\n                                        current={current}\n                                        onHide={() => setModalShow(false)}\n                                    />\n                                </>\n\n                            )}\n                        </div>\n                    </div>\n\n\n\n                </form>\n            </Modal.Body>\n\n        </Modal >\n    );\n}\n\nexport default SellPopup","import { Button, Form, Input, } from 'antd';\nimport Modal from 'react-bootstrap/Modal';\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\nimport { useFormData } from './Context/context'\nimport MyVerticallyCenteredModal from './createCollection';\nimport styles from './styles/styles.module.scss'\nimport 'antd/lib/form/style/css';\nimport 'antd/lib/upload/style/css';\nimport { Collapse } from 'antd';\nimport 'antd/lib/modal/style/css';\nimport 'antd/lib/button/style/css'\n\nimport swal from 'sweetalert';\nconst getBase64 = (file) =>\n    new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = (error) => reject(error);\n    });\n// import ImgCrop from 'antd-img-crop';\nconst EditNftName = (props) => {\n    // \n    const editor = useRef(null);\n    const [nftFileType, setNFtFileType] = useState('Image')\n    const [nft, setNft] = useState()\n    const [nftwidth, setNftwidth] = useState()\n    const [nftHeight, setNftheight] = useState()\n    const [Pimage, setPimage] = useState()\n    const [previewnft, setPreviewnft] = useState()\n    const [preview, setPreview] = useState()\n    const [source, setSource] = useState()\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\n    console.log(nft_collection_id, \"sdfasf\")\n    const [form] = Form.useForm()\n    const [image, setImage] = useState()\n    const [loading, setLoading] = useState(false)\n    const defaultValues = {\n        setNft_description: '',\n    }\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(GetCollectionsAction())\n        dispatch(NftList(props?.nft_id?.id))\n    }, [props?.nft_id?.id])\n    const col = useSelector(state => {\n        return state?.projectdetails?.getcollections\n    })\n    const nftdetail = useSelector(state => {\n        return state.projectdetails.nftlist\n    })\n    const handleUpload = (e) => {\n        const filetype = e.target.files[0].type;\n        var fr = new FileReader();\n        fr.onload = function () {\n            var img = new Image();\n            img.onload = function () {\n                setNftwidth(img.width);\n                setNftheight(img.height);\n            };\n            img.src = fr.result; // is the data URL because called with readAsDataURL\n        };\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\n        if (e.target.files[0].size > 104857600) {\n            alert(\"Filesize must 100mb or below\");\n        } else {\n            setSource(URL.createObjectURL(e.target.files[0]));\n            setNft(e.target.files[0]);\n            switch (filetype) {\n                case \"image/png\":\n                case \"image/jpg\":\n                case \"image/gif\":\n                case \"image/svg\":\n                    setNFtFileType(\"Image\");\n                    //   setSourceType(\"I\") \n                    break;\n                case \"audio/mpeg\":\n                case \"audio/ogg\":\n                case \"video/mp4\":\n                case \"video/webm\":\n                    setNFtFileType(\"Player\");\n                    break;\n                case \"\":\n                    setNFtFileType(\"modal\");\n                    break;\n                default:\n                    setNFtFileType(\"Image\");\n            }\n        }\n    };\n    const convertToBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = () => {\n                resolve(fileReader.result);\n            };\n            fileReader.onerror = (error) => {\n                reject(error);\n            };\n        });\n    };\n    const previewChange = async (e, index) => {\n        const pimage = e.target.files[0]\n        const base64 = await convertToBase64(pimage);\n        setPimage(base64)\n        setPreview(URL.createObjectURL(pimage))\n    };\n    useEffect(() => {\n        form.setFieldsValue({\n            nfts: [{\n                nft_name: nftdetail.title,\n                nft_description: nftdetail.description,\n                nft_collection_id: nftdetail.collection_id,\n                nft_image: nftdetail.image,\n                preview_imag: nftdetail.preview_imag,\n            }]\n        })\n        setImage(nftdetail.image)\n        setNFtFileType(nftdetail.extention)\n        setPreviewnft(nftdetail.preview_imag)\n        setNft_collection_id(nftdetail.collection_id)\n    }, [form, nftdetail])\n    const onFinish = async (values) => {\n        // \n        try {\n            setLoading(true)\n            if (source) {\n                const nftImagepromises = [uploadNFT(nft)]\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\n                var str = addedImage;\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\n                if (check === false) {\n                    const formData = new FormData()\n                    formData.append('image', addedImage)\n                    formData.append('title', values?.nfts?.map(x =>\n                        x.nft_name\n                    ))\n                    formData.append('collection_id', nft_collection_id)\n                    formData.append('preview_imag', Pimage)\n                    formData.append('extention', nftFileType)\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\n                    dispatch(UpdateNft(formData, props, setLoading))\n                } else {\n                    console.log('fail')\n                    swal('error!', 'Nft not uploaded', 'error')\n                }\n            } else {\n                const formData = new FormData()\n                formData.append('image', image)\n                formData.append('title', values?.nfts?.map(x =>\n                    x.nft_name\n                ))\n                formData.append('extention', nftFileType)\n                formData.append('preview_imag', previewnft)\n                formData.append('collection_id', nft_collection_id)\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\n                dispatch(UpdateNft(formData, props, setLoading))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    };\n    const nfts = [\n        {\n            key: 0,\n            name: 'Wheat Flour',\n            amount: 1000\n        },\n    ];\n    return (\n        <div className=\"main-create\" >\n            {/* {loading ? (\n                <Loader />\n            ) : ( */}\n            <Modal\n                {...props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            // centered\n            >\n                <Modal.Header >\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Update NFT\n                    </Modal.Title>\n                    <div>\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='col-12 item-form card no-hover'>\n                        <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\n                            nfts: nfts, defaultValues\n                        }}\n                            onFinish={(event) => onFinish(event)}\n                            autoComplete=\"off\" className=\"item-form card no-hover\">\n                            <Form.List name=\"nfts\">\n                                {(fields, { add, remove }) => (\n                                    <>\n                                        <>\n                                            {fields.map(({ key, name, ...restField }, index) => (\n                                                <Fragment>\n                                                    <div className=\"row relative\">\n                                                        <div className=\"col-12\">\n                                                            <label>Name</label>\n                                                            <div>\n                                                                <Form.Item\n                                                                    {...restField}\n                                                                    name={[name, \"nft_name\"]}\n                                                                    rules={[\n                                                                        {\n                                                                            required: true,\n                                                                            message: 'Missing  name',\n                                                                        },\n                                                                    ]}\n                                                                >\n                                                                    {/* <label>Name</label> */}\n                                                                    <Input placeholder=\"Name\" />\n                                                                </Form.Item>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </Fragment>\n                                            ))}\n                                        </></>\n                                )}\n                            </Form.List>\n                            <Form.Item>\n                                <div className=\"col-12\">\n                                    <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\n                                </div>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </Modal.Body>\n            </Modal>\n            {/* )} */}\n        </div >\n    );\n};\nexport default EditNftName;","import { Button, Form, Input, } from 'antd';\nimport Modal from 'react-bootstrap/Modal';\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\nimport 'antd/lib/modal/style/css';\nimport 'antd/lib/button/style/css'\nimport JoditEditor from 'jodit-react'\nimport swal from 'sweetalert';\nconst getBase64 = (file) =>\n    new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = (error) => reject(error);\n    });\n// import ImgCrop from 'antd-img-crop';\nconst EditNftDesc = (props) => {\n    // \n    const editor = useRef(null);\n    const [nftFileType, setNFtFileType] = useState('Image')\n    const [nft, setNft] = useState()\n    const [nftwidth, setNftwidth] = useState()\n    const [nftHeight, setNftheight] = useState()\n    const [Pimage, setPimage] = useState()\n    const [previewnft, setPreviewnft] = useState()\n    const [preview, setPreview] = useState()\n    const [source, setSource] = useState()\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\n    console.log(nft_collection_id, \"sdfasf\")\n    const [form] = Form.useForm()\n    const [image, setImage] = useState()\n    const [loading, setLoading] = useState(false)\n    const defaultValues = {\n        setNft_description: '',\n    }\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(GetCollectionsAction())\n        dispatch(NftList(props.nft_id?.id))\n    }, [props.nft_id?.id])\n    const col = useSelector(state => {\n        return state?.projectdetails?.getcollections\n    })\n    const nftdetail = useSelector(state => {\n        return state.projectdetails.nftlist\n    })\n    const handleUpload = (e) => {\n        const filetype = e.target.files[0].type;\n        var fr = new FileReader();\n        fr.onload = function () {\n            var img = new Image();\n            img.onload = function () {\n                setNftwidth(img.width);\n                setNftheight(img.height);\n            };\n            img.src = fr.result; // is the data URL because called with readAsDataURL\n        };\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\n        if (e.target.files[0].size > 104857600) {\n            alert(\"Filesize must 100mb or below\");\n        } else {\n            setSource(URL.createObjectURL(e.target.files[0]));\n            setNft(e.target.files[0]);\n            switch (filetype) {\n                case \"image/png\":\n                case \"image/jpg\":\n                case \"image/gif\":\n                case \"image/svg\":\n                    setNFtFileType(\"Image\");\n                    //   setSourceType(\"I\") \n                    break;\n                case \"audio/mpeg\":\n                case \"audio/ogg\":\n                case \"video/mp4\":\n                case \"video/webm\":\n                    setNFtFileType(\"Player\");\n                    break;\n                case \"\":\n                    setNFtFileType(\"modal\");\n                    break;\n                default:\n                    setNFtFileType(\"Image\");\n            }\n        }\n    };\n    const convertToBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = () => {\n                resolve(fileReader.result);\n            };\n            fileReader.onerror = (error) => {\n                reject(error);\n            };\n        });\n    };\n    const previewChange = async (e, index) => {\n        const pimage = e.target.files[0]\n        const base64 = await convertToBase64(pimage);\n        setPimage(base64)\n        setPreview(URL.createObjectURL(pimage))\n    };\n    useEffect(() => {\n        form.setFieldsValue({\n            nfts: [{\n                nft_name: nftdetail.title,\n                nft_description: nftdetail.description,\n                nft_collection_id: nftdetail.collection_id,\n                nft_image: nftdetail.image,\n                preview_imag: nftdetail.preview_imag,\n            }]\n        })\n        setImage(nftdetail.image)\n        setNFtFileType(nftdetail.extention)\n        setPreviewnft(nftdetail.preview_imag)\n        setNft_collection_id(nftdetail.collection_id)\n    }, [form, nftdetail])\n    const onFinish = async (values) => {\n        try {\n            setLoading(true)\n            if (source) {\n                const nftImagepromises = [uploadNFT(nft)]\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\n                var str = addedImage;\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\n                if (check === false) {\n                    const formData = new FormData()\n                    formData.append('image', addedImage)\n                    formData.append('title', values?.nfts?.map(x =>\n                        x.nft_name\n                    ))\n                    formData.append('collection_id', nft_collection_id)\n                    formData.append('preview_imag', Pimage)\n                    formData.append('extention', nftFileType)\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\n                    dispatch(UpdateNft(formData, props, setLoading))\n                } else {\n                    console.log('fail')\n                    swal('error!', 'Nft not uploaded', 'error')\n                }\n            } else {\n                const formData = new FormData()\n                formData.append('image', image)\n                formData.append('title', values?.nfts?.map(x =>\n                    x.nft_name\n                ))\n                formData.append('extention', nftFileType)\n                formData.append('preview_imag', previewnft)\n                formData.append('collection_id', nft_collection_id)\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\n                dispatch(UpdateNft(formData, props, setLoading))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    };\n    const nfts = [\n        {\n            key: 0,\n            name: 'Wheat Flour',\n            amount: 1000\n        },\n    ];\n    return (\n        <div className=\"main-create\" >\n            {/* {loading ? (\n                <Loader />\n            ) : ( */}\n            <Modal className=\"edit_nft_popup\"\n                {...props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n            // centered\n            >\n                <Modal.Header >\n                    <Modal.Title id=\"contained-modal-title-vcenter \">\n                        Update NFT\n                    </Modal.Title>\n                    <div>\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                    </div>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='col-12'>\n                        <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\n                            nfts: nfts, defaultValues\n                        }}\n                            onFinish={(event) => onFinish(event)}\n                            autoComplete=\"off\" className=\"item-form card no-hover\">\n                            <Form.List name=\"nfts\">\n                                {(fields, { add, remove }) => (\n                                    <>\n                                        <>\n                                            {fields.map(({ key, name, ...restField }, index) => (\n                                                <Fragment>\n                                                    <div className=\"row relative\">\n                                                        <div className=\"col-12\">\n                                                            <label>Name</label>\n                                                            <label>Description</label>\n                                                            <div>\n                                                                <Form.Item\n                                                                    {...restField}\n                                                                    name={[name, \"nft_description\"]}\n                                                                    rules={[\n                                                                        {\n                                                                            required: true,\n                                                                            message: 'Missing  description',\n                                                                        },\n                                                                    ]}\n                                                                >\n                                                                    <JoditEditor\n                                                                        ref={editor}\n                                                                        value={'nft_description'}\n                                                                        placeholder=\"start typing\"\n                                                                        tabIndex={1} // tabIndex of textarea\n                                                                        onChange={newContent => { }}\n                                                                    />\n                                                                    {/* }} */}\n                                                                    {/* /> */}\n                                                                </Form.Item>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </Fragment>\n                                            ))}\n                                        </></>\n                                )}\n                            </Form.List>\n                            <Form.Item>\n                                <div className=\"col-12\">\n                                    <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\n                                </div>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </Modal.Body>\n            </Modal>\n            {/* )} */}\n        </div >\n    );\n};\nexport default EditNftDesc;","import { Button, Form, Input, } from 'antd';\nimport Modal from 'react-bootstrap/Modal';\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\nimport { useFormData } from './Context/context'\nimport MyVerticallyCenteredModal from './createCollection';\nimport styles from './styles/styles.module.scss'\nimport 'antd/lib/form/style/css';\nimport 'antd/lib/upload/style/css';\nimport { Collapse } from 'antd';\nimport 'antd/lib/modal/style/css';\nimport 'antd/lib/button/style/css'\nimport JoditEditor from 'jodit-react'\nimport Loader from '../Loader/loader';\nimport { useParams } from 'react-router';\nimport CollPopup from './createCollection';\nimport DModal from './3dModal';\nimport swal from 'sweetalert';\nconst getBase64 = (file) =>\n    new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = (error) => reject(error);\n    });\n// import ImgCrop from 'antd-img-crop';\nconst EditNftImage = (props) => {\n    const editor = useRef(null);\n    const [nftFileType, setNFtFileType] = useState('Image')\n    const [nft, setNft] = useState([])\n    const [nftwidth, setNftwidth] = useState()\n    const [size, setSize] = useState()\n    const [nftHeight, setNftheight] = useState()\n    const [Pimage, setPimage] = useState()\n    const [previewnft, setPreviewnft] = useState()\n    const [preview, setPreview] = useState()\n    const [source, setSource] = useState()\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\n    const [form] = Form.useForm()\n    const [image, setImage] = useState()\n    const [loading, setLoading] = useState(false)\n    const defaultValues = {\n        setNft_description: '',\n    }\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(GetCollectionsAction())\n        dispatch(NftList(props.nft_id?.id))\n    }, [props.nft_id?.id])\n    const col = useSelector(state => {\n        return state?.projectdetails?.getcollections\n    })\n    const nftdetail = useSelector(state => {\n        return state.projectdetails.nftlist\n    })\n    const handleUpload = (e) => {\n        const filetype = e.target.files[0].type;\n        var fr = new FileReader();\n        fr.onload = function () {\n            var img = new Image();\n            img.onload = function () {\n                setNftwidth(img.width);\n                setNftheight(img.height);\n            };\n            img.src = fr.result; // is the data URL because called with readAsDataURL\n        };\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\n        if (e.target.files[0].size > 104857600) {\n            alert(\"Filesize must 100mb or below\");\n        } else {\n            setSource(URL.createObjectURL(e.target.files[0]));\n            setNft(prevState => {\n                return [\n                    e?.target?.files[0]\n                ]\n            }\n            );;\n            switch (filetype) {\n                case \"image/png\":\n                case \"image/jpg\":\n                case \"image/gif\":\n                case \"image/svg\":\n                    setNFtFileType(\"Image\");\n                    //   setSourceType(\"I\") \n                    break;\n                case \"audio/mpeg\":\n                case \"audio/ogg\":\n                case \"video/mp4\":\n                case \"video/webm\":\n                    setNFtFileType(\"Player\");\n                    break;\n                case \"\":\n                    setNFtFileType(\"modal\");\n                    break;\n                default:\n                    setNFtFileType(\"Image\");\n            }\n        }\n    };\n    const convertToBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = () => {\n                resolve(fileReader.result);\n            };\n            fileReader.onerror = (error) => {\n                reject(error);\n            };\n        });\n    };\n    const previewChange = async (e, index) => {\n        const pimage = e.target.files[0]\n        const base64 = await convertToBase64(pimage);\n        setPimage(base64)\n        setPreview(URL.createObjectURL(pimage))\n    };\n    useEffect(() => {\n        form.setFieldsValue({\n            nfts: [{\n                nft_name: nftdetail.title,\n                nft_description: nftdetail.description,\n                nft_collection_id: nftdetail.collection_id,\n                nft_image: nftdetail.image,\n                preview_imag: nftdetail.preview_imag,\n            }]\n        })\n        setImage(nftdetail.image)\n        setNFtFileType(nftdetail.extention)\n        setPreviewnft(nftdetail.preview_imag)\n        setNft_collection_id(nftdetail.collection_id)\n    }, [form, nftdetail])\n    const onFinish = async (values) => {\n        // \n        try {\n            setLoading(true)\n            if (source) {\n                // const nftImagepromises = uploadNFT(nft)\n                const imagesRes = await uploadNFT(nft, dispatch)\n                const addedImage = imagesRes?.data?.data.map(x => ipfsBaseUrl + x?.image_hash)\n                var str = addedImage;\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\n                // \n                if (check === false) {\n                    const formData = new FormData()\n                    formData.append('image', addedImage)\n                    formData.append('title', values?.nfts?.map(x =>\n                        x.nft_name\n                    ))\n                    formData.append('collection_id', nft_collection_id)\n                    formData.append('preview_imag', Pimage)\n                    formData.append('extention', nftFileType)\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\n                    dispatch(UpdateNft(formData, props, setLoading))\n                } else {\n                    console.log('fail')\n                    // setLoading(false)\n                    swal('error!', 'Nft not uploaded', 'error')\n                }\n            } else {\n                // \n                const formData = new FormData()\n                formData.append('image', image)\n                formData.append('title', values?.nfts?.map(x =>\n                    x.nft_name\n                ))\n                formData.append('extention', nftFileType)\n                formData.append('preview_imag', previewnft)\n                formData.append('collection_id', nft_collection_id)\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\n                dispatch(UpdateNft(formData, props, setLoading))\n            }\n        } catch (error) {\n            console.log(error)\n            swal(\"error\", error, 'error')\n            setLoading(false)\n        }\n    };\n    const nfts = [\n        {\n            key: 0,\n            name: 'Wheat Flour',\n            amount: 1000\n        },\n    ];\n    return (\n        <div className=\"main-create\">\n            <Modal className=\"edit_nft_popup\"\n                {...props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n            // centered\n            >\n                <><Modal.Header>\n                    <Modal.Title id=\"contained-modal-title-vcenter h-auto\">\n                        Update NFT\n                    </Modal.Title>\n                    <div>\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                    </div>\n                </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"col-12\">\n                            {loading ? (\n                                <Loader />\n                            ) : (\n                                <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\n                                    nfts: nfts, defaultValues\n                                }}\n                                    onFinish={(event) => onFinish(event)}\n                                    autoComplete=\"off\" className=\"item-form card no-hover\">\n                                    <Form.List name=\"nfts\">\n                                        {(fields, { add, remove }) => (\n                                            <>\n                                                <>\n                                                    {fields.map(({ key, name, ...restField }, index) => (\n                                                        <Fragment>\n                                                            <div className=\"row relative \">\n                                                                <div className=\"col-12\">\n                                                                    <div className=\"col-lg-12 col-12 uploadnftpopup p-0 mb-4\">\n                                                                        <label className=\"mt-3\">Upload NFT</label>\n                                                                        <div\n                                                                            className=\"position-relative upload_nft\"\n                                                                            style={{\n                                                                                backgroundImage: \"url('')\",\n                                                                                backgroundSize: \"contain\",\n                                                                                backgroundRepeat: \"no-repeat\",\n                                                                                margin: \"0 auto\",\n                                                                            }}\n                                                                        >\n                                                                            <div\n                                                                                className={nftFileType === \"Player\" || nftFileType === \"modal\"\n                                                                                    ? \" inputdragVedio\"\n                                                                                    : \"inputtdrag\"}\n                                                                            >\n                                                                                <input\n                                                                                    type=\"file\"\n                                                                                    onChange={handleUpload}\n                                                                                    maxCount={1}\n                                                                                    accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\" />\n                                                                                {(nftFileType === \"Image\") &&\n                                                                                    <div>\n                                                                                        {source ?\n                                                                                            nftHeight >= 500 && nftwidth >= 500 ?\n                                                                                                (\n                                                                                                    <img\n                                                                                                        src={source}\n                                                                                                        className=\"nft-image\" />\n                                                                                                ) : (\n                                                                                                    <>\n                                                                                                        <p style={{ color: \"red\", marginLeft: '10px' }}>\n                                                                                                            Minimum size should be 500x500\n                                                                                                        </p>\n                                                                                                        <p style={{ color: \"red\", marginLeft: '10px' }}>\n                                                                                                            Image size should be max 1mb\n                                                                                                        </p>\n                                                                                                    </>\n                                                                                                ) : (\n                                                                                                <img\n                                                                                                    src={image}\n                                                                                                    className=\"nft-image\" />\n                                                                                            )}\n                                                                                    </div>}\n                                                                                {nftFileType === \"Player\" &&\n                                                                                    <div>\n                                                                                        {source ? (\n                                                                                            <video\n                                                                                                width=\"100%\"\n                                                                                                controls\n                                                                                                src={source} />\n                                                                                        ) : (\n                                                                                            <video\n                                                                                                width=\"100%\"\n                                                                                                controls\n                                                                                                src={image} />\n                                                                                        )}\n                                                                                        <div className=\"uploadnftpopup_content\">\n                                                                                            <label>Preview Image</label>\n                                                                                            <p>\n                                                                                                Because you’ve included\n                                                                                                multimedia, you’ll need to provide\n                                                                                                an image (PNG, JPG, or GIF) for\n                                                                                                the card display of your item\n                                                                                            </p>\n                                                                                        </div>\n                                                                                        <div\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\n                                                                                            style={{\n                                                                                                backgroundImage: \"url('')\",\n                                                                                                backgroundSize: \"contain\",\n                                                                                                backgroundRepeat: \"no-repeat\",\n                                                                                                backgroundPosition: \"center\",\n                                                                                            }}\n                                                                                        >\n                                                                                            <input\n                                                                                                type=\"file\"\n                                                                                                onChange={previewChange} />\n                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\n                                                                                                {!preview ? (\n                                                                                                    <img\n                                                                                                        className=\"preview_image\"\n                                                                                                        src={previewnft} />\n                                                                                                ) : (\n                                                                                                    <img\n                                                                                                        className=\"preview_image\"\n                                                                                                        src={preview} />\n                                                                                                )}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                                {nftFileType === \"modal\" &&\n                                                                                    <div>\n                                                                                        {!source ? (\n                                                                                            <DModal\n                                                                                                vdo={image} />\n                                                                                        ) : (\n                                                                                            <DModal\n                                                                                                vdo={source} />\n                                                                                        )}\n                                                                                        <div className=\"uploadnftpopup_content\">\n                                                                                            <label>Preview Image</label>\n                                                                                            <p className=\"\">\n                                                                                                Because you’ve included multimedia,\n                                                                                                you’ll need to provide an image\n                                                                                                (PNG, JPG, or GIF) for the card\n                                                                                                display of your item\n                                                                                            </p>\n                                                                                        </div>\n                                                                                        <div\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\n                                                                                            style={{\n                                                                                                backgroundImage: \"url('')\",\n                                                                                                backgroundSize: \"contain\",\n                                                                                                backgroundRepeat: \"no-repeat\",\n                                                                                                backgroundPosition: \"center\",\n                                                                                            }}\n                                                                                        >\n                                                                                            <input\n                                                                                                type=\"file\"\n                                                                                                onChange={previewChange} />\n                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\n                                                                                                {!preview ? (\n                                                                                                    <img\n                                                                                                        className=\"preview_image\"\n                                                                                                        src={previewnft} />\n                                                                                                ) : (\n                                                                                                    <img\n                                                                                                        className=\"preview_image\"\n                                                                                                        src={preview} />\n                                                                                                )}\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div>}\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </Fragment>\n                                                    ))}\n                                                </></>\n                                        )}\n                                    </Form.List>\n                                    <Form.Item>\n                                        <div className=\"col-12\">\n                                            <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\n                                        </div>\n                                    </Form.Item>\n                                </Form>\n                            )}\n                        </div>\n                    </Modal.Body>\n                </>\n            </Modal>\n        </div >\n    );\n};\nexport default EditNftImage;","import React, { Component, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation, useParams } from 'react-router';\nimport { NftList, ProjectDetail, } from '../../redux/Actions/projectAction';\nimport { useState } from 'react';\nimport Web3 from 'web3';\n\nimport DModal from '../Create/3dModal';\nimport NftdataTable from '../Explore/nftdataTable';\nimport NftAuctiondataTable from './nftAuctiontable';\nimport SellPopup from './sellPopup';\nimport EditNftName from '../Create/editNftNamepopup';\nimport EditNftDesc from '../Create/editDescPopup';\nimport EditNftImage from '../Create/nftImageeditPopup';\nimport { GetMatic } from './GetMAtic';\nimport Loader from '../Loader/loader';\nimport ReadMore from '../../readMore';\n// const alchemyKey = \"https://polygon-mainnet.g.alchemy.com/v2/bDM_VuUmdoyJSNn3Ky8pZL0vBMAc9BXd\";\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\n// console.log(NFTContract.abi,\"abi\")\nconst web3 = createAlchemyWeb3(alchemyKey);\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\n\nconst NftDetails = (props) => {\n    const history = useHistory()\n    const [nftId, setNftID] = useState();\n    const search = useLocation().search;\n    const projslug = new URLSearchParams(search).get('project');\n    const [sellmodalShow, setSellModalShow] = React.useState(false);\n    const [modalShowedit, setModalShowedit] = React.useState(false);\n    const [modalShoweditdes, setModalShoweditdes] = React.useState(false);\n    const [matic, setMatic] = useState('')\n    const [modalShoweditimg, setModalShoweditimg] = React.useState(false);\n    const [loading, setLoading] = useState(false)\n\n    const slug = useParams();\n    const projdetail = useSelector(state => {\n\n        return state?.projectdetails?.projectdetails\n    })\n    console.log(projdetail, 'projdataaaa')\n    const dispatch = useDispatch()\n\n    const nftdetail = useSelector(state => {\n\n        return state.projectdetails.nftlist\n    })\n\n    useEffect(() => {\n        (GetMatic(setMatic))\n        dispatch(NftList(slug.id, setLoading))\n        dispatch(ProjectDetail(slug.id))\n    }, [slug, dispatch])\n\n    return (\n\n        <section className=\"item-details-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-between content_project px-0\">\n                    <div className=\"col-12 col-md-4 \">\n                        <div className=\"item-info\">\n                            {nftdetail.is_mint == 0 &&\n                                <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\n                                    <div >\n                                        <div className='position-absolute nft-edit-icon'><i className=\"fa-solid fa-pen\" onClick={(e) => {\n                                            setNftID(slug)\n                                            e.preventDefault();\n                                            setModalShoweditimg(true)\n                                        }\n                                        } ></i>\n                                        </div>\n                                        <div className='loader-img'>\n\n                                            {modalShoweditimg &&\n\n                                                <EditNftImage\n                                                    id={projslug}\n                                                    nft_id={nftId}\n                                                    show={modalShoweditimg}\n                                                    onHide={() => setModalShoweditimg(false)}\n\n                                                />\n                                            }\n                                        </div>\n                                    </div>\n\n                                </div>\n                            }\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\n                                {loading ? (\n                                    <Loader />\n                                ) : (\n                                    <>\n                                        {nftdetail.extention === \"Player\" &&\n\n                                            <video\n                                                width=\"100%\"\n                                                controls\n                                                src={nftdetail.image}\n                                            />\n                                        }\n                                        {nftdetail.extention === \"modal\" &&\n                                            <DModal\n                                                vdo={nftdetail.image}\n                                            />\n                                        }\n                                        {nftdetail.extention === \"Image\" &&\n\n                                            <img src={nftdetail.image} alt=\"\" />\n                                        }\n                                    </>\n                                )}\n                            </div>\n\n                            </>\n\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 col-lg-8 mt-4 mt-sm-0\">\n                        <div className=' card no-hover py-0 mt-2 mb-2 mt-lg-0 mb-lg-0 '>\n\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{nftdetail?.title} </span>\n                            {nftdetail.is_mint == 0 &&\n                                <div className='nft-edit-icon position-absolute mt-2'>\n                                    <i className=\"fa-solid fa-pen \" onClick={(e) => {\n                                        setNftID(slug)\n                                        e.preventDefault();\n                                        setModalShowedit(true)\n                                    }\n                                    } ></i>\n                                    {modalShowedit &&\n\n                                        <EditNftName\n                                            id={projslug}\n                                            nft_id={nftId}\n                                            show={modalShowedit}\n                                            onHide={() => setModalShowedit(false)} />\n                                    }\n                                </div>\n                            }\n\n                        </div>\n                        <div className=\"content sm:mt-3 mt-lg-2\">\n                            <div className=\"card no-hover position-relative\">\n\n                                <div className=\"owner align-items-start\">\n                                    <span className='boldertext w-100'>Owned By : </span>\n                                    <span>{nftdetail?.user_data?.username}</span>\n\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\n                                    </a>\n                                </div>\n\n                                <div>\n                                    <span className='boldertext w-100'>Collection Name : </span>\n                                    <span> {nftdetail?.collectionData?.title}</span>\n\n                                </div>\n                                <div className=\"item-info-list\">\n                                    <ul className=\"list-unstyled\">\n                                        <span class='boldertext'>Token :</span>\n                                        <span> #{nftdetail.token_id?.slice(0,2)}</span>\n                                    </ul>\n                                </div>\n                                {nftdetail.is_mint == 0 ? (\n\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\n\n\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\n                                            onClick={() => setSellModalShow(true)}>  Sell</button>\n                                            <SellPopup\n                                                show={sellmodalShow}\n\n                                                onHide={() => setSellModalShow(false)} />\n                                        </>\n\n                                    </div>\n                                ) : (\n                                    <>\n                                        {nftdetail.sold_nft == 1 ? (\n\n                                            <div className='eddlbtton d-flex  align-items-center mt-3'>\n\n\n                                                <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\n                                                    disabled>SOLD OUT</span>\n\n                                                </>\n\n                                            </div>\n                                        ) : (\n                                            <div className='eddlbtton d-flex  align-items-center'>\n\n\n                                                <><span className=\"purchase_btn d-flex align-items-center justify-content-center py-1 mx-2\"\n                                                    disabled>Status: Ready to purchase</span>\n\n                                                </>\n\n                                            </div>\n                                        )}\n                                    </>\n\n                                )}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 md:col-8 mt-4\">\n                        <div class=\"user-description \">\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\n                            </h5>\n                            <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\n\n                                {nftdetail?.is_mint == 0 &&\n                                    <div className='nft-edit-icon position-absolute mt-2'>\n                                        <i className=\"fa-solid fa-pen\" onClick={(e) => {\n                                            setNftID(slug)\n                                            e.preventDefault();\n                                            setModalShoweditdes(true)\n                                        }\n                                        } ></i>\n                                        {modalShoweditdes &&\n\n                                            <EditNftDesc\n                                                id={projslug}\n                                                nft_id={nftId}\n                                                show={modalShoweditdes}\n                                                onHide={() => setModalShoweditdes(false)} />\n                                        }\n                                    </div>\n                                }\n                            </div>\n                            <ReadMore data={nftdetail.description} className=\"nft-detail-nft \" />\n                            {/* <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft \" /> */}\n                        </div>\n                    </div>\n\n                    <div className='col-lg-4 col-12 mt-4'>\n                        <div className='price_nft'>\n                            <h5 className='user_title gap-5'>\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\n                                <div>Current price</div>\n                            </h5>\n                            <div className='price_nft_detail'>\n                                <div className='nft-price'>\n                                    <img src='../../img/image14.png' />\n                                    <span><small>{nftdetail.amount}  / ${nftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\n\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className='col-lg-8 col-12'>\n                        <div className=\"profile_detail mt-4\">\n\n                            <NftdataTable\n                                slug={slug}\n                            />\n                        </div>\n                    </div>\n                    <div className='col-12 mt-4'>\n                        <div className='container table-detail'>\n\n                            <NftAuctiondataTable\n                                slug={slug}\n                            />\n                        </div>\n                    </div>\n\n                </div >\n            </div>\n        </section >\n    );\n}\nexport default NftDetails;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport NftDetails from '../components/ItemDetails/nftDetails';\n\nconst Nft = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <NftDetails />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\nexport default Nft;","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Collapse } from 'antd';\nimport { Table } from 'react-bootstrap';\nconst FunddataTable = (props) => {\n    const { Panel } = Collapse;\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const [expandIconPosition] = useState('end');\n\n    // const { id } = useParams()\n    const funddetail = useSelector(state => {\n        return state?.fundraiser?.fundraiserdetail\n    })\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\n    return (\n        <div className='position-relative'>\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\n                </svg>\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\"/><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\"/></svg>    */}\n\n                <Panel header=\"Details\" key=\"1\" >\n                    <Table responsive>\n                        <tbody class=\"nfts_details\">\n                            <tr>\n                                <td><span>Organization Name </span> <span>{funddetail?.organization_detail?.organization_name}</span></td>\n                                <td><span>Country</span>  <span>{funddetail?.organization_detail?.country}</span></td>\n                                <td><span>Tax Number </span> <span>{funddetail?.organization_detail?.tax_number}</span></td>\n                                <td><span>Web URL</span>  <span>{funddetail?.organization_detail?.web_url}</span></td>\n                            </tr>\n                            {/* )\n                            })} */}\n                        </tbody>\n                    </Table>\n                </Panel>\n            </Collapse>\n        </div>\n    )\n}\nexport default FunddataTable","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\nimport { Link } from 'react-router-dom';\nimport FunddataTable from './fundraiserdetail';\nimport FundTransdataTable from './fundPaymenttable';\nimport ReadMore from '../../readMore';\nimport { Button } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\n\nconst FundraiserDetail = () => {\n    const { user_id } = useParams()\n    // const id = useParams()\n    // const { id } = useParams()\n    const dispatch = useDispatch()\n    const funddetail = useSelector(state => {\n        return state?.fundraiser?.fundraiserdetail\n    })\n    // console.log(funddetail, 'fdddetail')\n    const fundprojdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.getfundProjDetails\n    })\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    const userDetail = userdet.referrer_id\n    console.log('userdettt', userDetail)\n    const log = useSelector(state => {\n        return state.user.userToken\n    })\n\n    const latprojdetail = useSelector(state => {\n        // \n        return state.projectdetails.latestprojectdetails\n    })\n    console.log(fundprojdetail.user_data, 'fdprojetail')\n\n    useEffect(() => {\n\n        dispatch(TopFundraiserDetail(user_id))\n        dispatch(GetfundraiserProject(user_id))\n\n    }, [dispatch, user_id])\n    // state = {\n    //     initData: {},\n    //     tabData_1: [],\n    //     tabData_2: [],\n    //     sellerData: []\n    // }\n    // componentDidMount() {\n    //     this.setState({\n    //         initData: initData,\n    //         tabData_1: tabData_1,\n    //         tabData_2: tabData_2,\n    //         sellerData: sellerData\n    //     })\n    // }\n    // render() {\n    const investHandler = () => {\n\n        if (!window.ethereum?.selectedAddress) {\n            Swal.fire({\n                icon: 'warning',\n                html:\n                    'Connect Wallet to Invest',\n                showCloseButton: false,\n                focusConfirm: false,\n                confirmButtonText:\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\n                confirmButtonAriaLabel: 'Thumbs up, great!',\n\n            })\n        }\n    }\n    return (\n        <section className=\"item-details-area fundraise-main\">\n            <div className=\"container\">\n\n                <div className=\"row justify-content-between p-0\">\n                    <div className='col-12'>\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\n                    </div>\n                    <div className=\"col-12 col-lg-8\">\n                        <div className=\"item-info\">\n\n                            <div className=\"item-thumb text-center\">\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\n                                {/* <img src=\"/img/ph.jpg\" /> */}\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\n                            </div>\n\n                        </div>\n                        <div className='lorem_done mt-3'>\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                            </svg>\n                            {/* <img src={funddetail?.user_data?.avatar} width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" /> */}\n\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\n                        </div>\n\n                        <br />\n\n                        <div className=\"progress_nft mobile_nft mb-3\">\n                            <div className='progress_main'><span>\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\n                            </span>\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\n\n                                </li>\n                            </div>\n\n\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\n                                {fundprojdetail && fundprojdetail.length ?\n                                    [...new Map(fundprojdetail.map(item =>\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\n                                            const date1 = new Date(item.created_at)\n                                            const date2 = new Date()\n                                            // console.log('todat', date2)\n                                            const time_difference = date2.getTime() - date1.getTime();\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\n                                            // const totaldays = days_difference.slice(0,1)\n                                            // console.log(\"daysss\", days_difference)\n                                            return (\n                                                <li>\n                                                    <div className='lorem_done p-0'>\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\n                                                        </svg>\n\n                                                        </span>\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\n                                                    </div>\n                                                </li>\n\n\n                                            )\n                                        }) :\n                                    <div className=\"col-12 col-sm-12 col-lg-12\">\n\n                                        <span className='allproj2'>\n                                            No Projects\n                                        </span>\n\n                                    </div>\n                                }\n                            </ul>\n                            <Link className=\"\" to=\"/all/LatestProjects\"><p className='see_all'>See all</p></Link>\n\n                        </div>\n\n\n                        <div className='custam_col mt-3 mt-lg-0'>\n                            <h5 class=\"user_title \">\n\n                                <div className='d-flex align-item-center gap-5'>\n                                    <svg className='' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg>\n\n                                    <div>Description</div>\n\n                                </div>\n                            </h5>\n\n                            <div className=\" no-hover\">\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\n                                <ReadMore data={funddetail?.organization_detail?.description} />\n                                <div className=\"price d-flex justify-content-between align-items-center\">\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='funddeatil mt-3 '>\n\n                            <FunddataTable />\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 col-lg-4 desktop_nft\">\n                        <div className=\"progress_nft  mb-3\">\n                            <div className='progress_main'><span>\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\n                            </span>\n\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"100%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\n\n                                </li>\n                                {/* <div className='progressbar'>\n                                            <ProgressBar varient=\"success\" />\n                                            <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\n                                        </div> */}\n\n                                {/* <div className='progressbar'>\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\n                                        <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\n                                    </div> */}\n\n                            </div>\n\n                            <div className=\"d-flex gap-5 flex-wrap justify-content-start\">\n\n                                <div>\n\n                                    <Button variant=\"primary\" onClick={() => investHandler()} className=\" btn  btn-bordered-white m-0 mr-2\">\n                                        Invest\n                                    </Button>\n\n                                </div>\n\n\n\n\n\n                            </div>\n\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\n\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\n                                {fundprojdetail && fundprojdetail.length &&\n                                    [...new Map(fundprojdetail.map(item =>\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\n                                            const date1 = new Date(item.created_at)\n                                            const date2 = new Date()\n                                            // console.log('todat', date2)\n                                            const time_difference = date2.getTime() - date1.getTime();\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\n                                            // const totaldays = days_difference.slice(0,1)\n                                            // console.log(\"daysss\", days_difference)\n                                            return (\n                                                <li>\n                                                    <div className='lorem_done p-0'>\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\n                                                        </svg>\n\n                                                        </span>\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\n                                                    </div>\n                                                </li>\n\n\n                                            )\n                                        })}\n                            </ul>\n                            <Link className=\"\" to={`/all/fundraise/projects/${user_id}`}><p className='see_all'>See all</p></Link>\n                        </div>\n                        <div className=\"content mt-5 mt-lg-0\">\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\n                            {/* <p>{this.state.initData.content}</p> */}\n                            <div className=\"owner d-flex align-items-center\">\n\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\n                                    {/* <h6 className=\"ml-2\"></h6> */}\n\n                                </a>\n                            </div>\n\n                            {/* <div className=\"item-info-list\">\n\n                                <ul className=\"list-unstyled\">\n\n                                    <div className=\"custam_col no-hover\">\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\n                                        \n\n                                        {fundprojdetail && fundprojdetail.length &&\n                                            [...new Map(fundprojdetail.map(item =>\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\n                                                    const date1 = new Date(item.created_at)\n                                                    const date2 = new Date()\n                                                    const time_difference = date2.getTime() - date1.getTime();\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\n                                                    console.log(\"daysss\", days_difference)\n                                                    return (\n\n                                                        <>\n                                                            <ul className=\"project_back\">\n                                                                <li className='item_title'>\n                                                                    {item.title}\n                                                                </li><li className='item_created'>\n                                                                    {days_difference} days ago\n                                                                </li>\n                                                            </ul>\n                                                        </>\n                                                    )\n                                                })}\n                                        <li className='button_blow'>\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\n\n                                        </li>\n                                    </div>\n\n                                </ul>\n\n\n\n\n                            </div> */}\n\n                        </div>\n                    </div>\n                </div>\n                {/* <div className='row'>\n                    <div className='col-12 col-md-8'>\n\n                    </div>\n                    <div className='col-12 col-md-4'>\n\n                    </div>\n                </div> */}\n\n                <div className=''>\n                    {/* <div className='col-7'>\n                        <div className='funddeatil'>\n\n                            <FunddataTable />\n                        </div>\n                    </div> */}\n                    <div className='col-12 mt-3 mb-3'>\n                        <div className='funddeatil table-detail '>\n                            <FundTransdataTable />\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* </div> */}\n        </section >\n    );\n}\n// }\n\nexport default FundraiserDetail;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport FundraiserDetail from '../components/TopSeller/fundraiserDetails';\nimport Fundraiser from '../components/TopSeller/topfundraiser';\n\nconst FundDetail = () => {\n\n    return (\n        <div className=\"main main-fund-detail\">\n\n            <Header />\n            <FundraiserDetail />\n            <Fundraiser />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default FundDetail;","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Collapse } from 'antd';\nimport { GetNftwol } from '../../redux/Actions/projectAction';\nimport { useLocation, useParams } from 'react-router';\nimport { Table } from 'react-bootstrap';\nconst NftTransdataTable = (props) => {\n    const dispatch = useDispatch()\n    const { Panel } = Collapse;\n    const onChange = (key) => {\n        console.log(key);\n    };\n\n\n\n    const { id } = useParams()\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n    const latprojnftdetail = useSelector(state => {\n        return state?.projectdetails?.getnftwoldetails\n    })\n    console.log('lattt', latprojnftdetail)\n    useEffect(() => {\n        dispatch(GetNftwol(props.id))\n    }, [props.id])\n    const location = useLocation()\n    return (\n        <div className='position-relative'>\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                </svg>\n                <Panel header=\"Item Activity\" key=\"1\">\n                    <Table responsive >\n                        <thead>\n                            <tr >\n                                <th>NFT</th>\n                                <th>Project</th>\n                                <th>Price</th>\n                                <th>From</th>\n                                <th>To</th>\n                                <th>Token</th>\n                                <th>Transaction</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {latprojnftdetail?.nft_history?.map((items) => {\n                                return (\n                                    <tr className='contract-address'>\n                                        <td>#{items.nft_id}</td>\n                                        <td>#{items.project_id}</td>\n                                        <td className='referal'>{items.price}<img src='../../../img/image14.png' /></td>\n                                        <td>{items.pay_from?.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\n                                        <td>{items.pay_to?.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\n                                        <td>#{items.token_id?.slice(0,2)}</td>\n                                        <td><a target=\"_blank\" href={`https://polygonscan.com/tx/${items?.txd_id}`} >{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</a></td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </Table>\n                    <div className='nothing'>\n                        {latprojnftdetail?.nft_history?.length == 0 &&\n                            <span> No matching records found</span>\n                        }\n                    </div>\n                </Panel>\n            </Collapse>\n        </div>\n    )\n}\nexport default NftTransdataTable","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Collapse } from 'antd';\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\nimport { useParams } from 'react-router';\nimport { Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nconst { CONTRACT_ADDRESS_URL } = process.env;\nconst LatNftDataTable = (props) => {\n    const dispatch = useDispatch()\n    const { Panel } = Collapse;\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const { id } = useParams()\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n\n    // useEffect(() => {\n    //     \n    //     dispatch(NftList(id))\n    // }, [id])\n    const latprojnftdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.getnftwoldetails\n    })\n    console.log(latprojnftdetail, 'laptnft')\n\n    return (\n        <div className='nft_detail_main position-relative'>\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\n                </svg>\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\n                <Panel header=\"Details\" key=\"1\">\n                    <Table responsive className='m-0'>\n\n                        <thead>\n\n                            <tr>\n                                <th>Blockchain</th>\n                                <td>Polygon (Matic)</td>\n                            </tr>\n                            <tr className='contract-address'>\n                                <th>Contract ID</th>\n                                <td> <a target=\"_blank\" href={`https://polygonscan.com/address/${latprojnftdetail?.collectionData?.contract_id}`} >{latprojnftdetail?.collectionData?.contract_id?.slice(0, 5)}.....{latprojnftdetail?.collectionData?.contract_id?.slice(39, 42)}</a></td>\n                                {/* <td>{latprojnftdetail?.collectionData?.contract_id}</td> */}\n                            </tr>\n                            <tr>\n                                <th>Token ID</th>\n                                <td>{latprojnftdetail?.token_id?.slice(0,2)}</td>\n                            </tr>\n                            <tr>\n                                <th>Token Stranded</th>\n                                <td>ERC721</td>\n                            </tr>\n\n                            {/* <tr>\n\n                                <th>Contract Address</th>\n                                <th>Token ID</th>\n                                <th>Token Stranded</th>\n                                <th>Blockchain</th>\n                            </tr> */}\n\n\n                        </thead>\n\n                    </Table>\n                </Panel>\n            </Collapse>\n        </div>\n    )\n}\n\nexport default LatNftDataTable","import Modal from 'react-bootstrap/Modal';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { BidNft } from '../Wallet/interact';\nimport { useState } from 'react';\nimport { Loader } from '@react-three/drei';\nfunction BidPopup(props) {\n    // \n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\n    const onSubmit = () => {\n        // \n        BidNft(props.id, props.projid, props.from, props.onHide, setLoading)\n    }\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header >\n                <div>\n                    <div className='modal-title h4 '>Place a bid</div>\n                </div>\n            </Modal.Header>\n            <Modal.Body>\n                {loading ? (\n                    <Loader />\n\n                ) : (\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover\">\n                        <div className=\"row\">\n                            <div className=\"col-12 pb-2\">\n                                {window.ethereum?.selectedAddress && sessionStorage.getItem('authToken') ? (\n                                    <label>You are about to place a bid for {props.projtitle?.toUpperCase()} from {props.projcoll?.toUpperCase()}.</label>\n                                ) : (\n                                    <label style={{ color: 'red' }}>Connect your wallet.</label>\n                                )}\n                            </div>\n                            <div className=\"col-12\">\n                                <label>Wallet address:</label>\n                                <div class=\"bidinput\">{window.ethereum?.selectedAddress && sessionStorage.getItem('authToken') ? window.ethereum?.selectedAddress : <span style={{ color: 'red' }} disabled>Please connect your wallet</span>}</div>\n                            </div>\n                            <div className=\"col-12\">\n                                <div className=\"form-group\">\n                                    <label>Your bid</label>\n                                    <input\n                                        type=\"number\"\n                                        placeholder='Enter bid'\n                                        {...register('amount', { required: true })}\n                                        aria-invalid={errors.amount ? \"true\" : \"false\"}\n                                    />\n                                    {errors.amount?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Amount is required</p>}\n                                </div>\n                            </div>\n                            <hr />\n                            <div className=\"col-12\">\n                                <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Place Your Bid </button>\n                            </div>\n                        </div>\n                    </form>\n                )}\n            </Modal.Body>\n        </Modal >\n    );\n}\nexport default BidPopup","\nimport React, { useEffect } from \"react\";\nconst Timer = (props) => {\n    const [days, setDays] = React.useState(0);\n    const [hours, setHours] = React.useState(0);\n    const [minutes, setMinutes] = React.useState(0);\n    const [seconds, setSeconds] = React.useState(0);\n\n    const deadline = \"2023-03-05 00:00:00\"\n    const getTime = () => {\n        const time = Date.parse(`${props.time}`) - Date.now();\n        setDays(Math.floor(time / (1000 * 60 * 60 * 24)));\n        setHours(Math.floor((time / (1000 * 60 * 60)) % 24));\n        setMinutes(Math.floor((time / 1000 / 60) % 60));\n        setSeconds(Math.floor((time / 1000) % 60));\n    };\n    React.useEffect(() => {\n        const interval = setInterval(() => getTime(`${props.time}`), 1000);\n        return () => clearInterval(interval);\n    }, []);\n    return (\n        <div>\n            {days == 0 &&\n                <div className=\"timer\" role=\"timer\">\n                    {`${minutes}`.includes('-') ? (\n                        <div className=\"col-12\">\n                            <div className=\"box main-box_count\">\n                                <span className=\"box-count\">Sale Ended</span>\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"col-12\">\n                            <div className=\"box main-box_count\">\n                                <span className=\"box-count\">\n                                    <span id=\"day\">{`${days}`}</span>\n                                    <span className=\"text\">DAYS</span>\n                                </span>\n                                <span className=\"box-count\">\n                                    <span id=\"hour\">{`${hours}`}</span>\n                                    <span className=\"text\">HRS</span>\n                                </span>\n                                <span className=\"box-count\">\n                                    <span id=\"minute\">{`${minutes}`}</span>\n                                    <span className=\"text\">MINS</span>\n                                </span>\n                                <span className=\"box-count\">\n                                    <span id=\"second\">{`${seconds}`}</span>\n                                    <span className=\"text\">SECS</span>\n                                </span>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            }\n        </div>\n    );\n};\nexport default Timer","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport Loader from '../Loader/loader';\nimport { Tooltip } from 'react-bootstrap';\nimport { useLocation } from 'react-router';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nfunction BuyPopup(props) {\n    const location = useLocation();\n    const [copy, setCopy] = useState(false)\n    const dispatch = useDispatch()\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\n    const OnSubmit = (data) => {\n    }\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            className=\"loading\"\n        >\n            {props.loading &&\n                <><Loader />\n                    <div className=\"form-group m-0\">\n                        <span>Processing...</span>\n                    </div>\n                </>\n            }\n        </Modal>\n    );\n}\nexport default BuyPopup","import React, { Component, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useParams } from 'react-router';\nimport { GetNftwol, GetSettings } from '../../redux/Actions/projectAction';\nimport Web3 from 'web3';\n\nimport { BuyNft } from '../Wallet/interact';\nimport { updateReffid } from '../Wallet/interact';\nimport { useState } from 'react';\nimport NftTransdataTable from './nftTRansTable';\nimport LatNftDataTable from '../Explore/latnftTable';\nimport BidPopup from './bidPopup';\nimport DModal from '../Create/3dModal';\nimport Timer from './timer';\nimport BuyPopup from './buyPopup';\nimport { GetMatic } from './../ItemDetails/GetMAtic';\nimport { GetUserAction } from '../../redux/Actions/authAction';\nimport { Spin } from 'antd';\nimport swal from 'sweetalert';\nimport { Loader } from '@react-three/drei';\n\nconst alchemyKey = \"https://polygon-mainnet.g.alchemy.com/v2/bDM_VuUmdoyJSNn3Ky8pZL0vBMAc9BXd\";\n// const alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyKey);\n// const provider = new Web3.providers.HttpProvider(\"https://polygon-mainnet.g.alchemy.com/v2/bDM_VuUmdoyJSNn3Ky8pZL0vBMAc9BXd\");\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\n\nconst LatprojNftDetails = (props) => {\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n    const search = useLocation().search;\n    const refid = new URLSearchParams(search).get('refid');\n    const [matic, setMatic] = useState('')\n    const [bidmodalShow, setBidModalShow] = React.useState(false);\n    const [buymodalShow, setBuyModalShow] = React.useState(false);\n    // const [paymentFlow, setPaymentFlow] = useState()\n    // console.log('paymentFlow', paymentFlow)\n\n    const id = useParams();\n\n    const latprojnftdetail = useSelector(state => {\n        return state.projectdetails.getnftwoldetails\n    })\n    // const paymentflow = useSelector(state => {\n    //     return state?.projectdetails?.getPaymentFlow\n    // })\n    // const flow = Object.values(paymentflow)?.map(x=>x)\n    // console.log('flow', flow)\n    const getSett = useSelector(state => {\n        return state.projectdetails.settings\n    })\n\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\n\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n\n    useEffect(() => {\n        (GetMatic(setMatic))\n\n         if(sessionStorage.getItem('authToken')){\n\n            dispatch(GetUserAction())\n        }\n        dispatch(GetNftwol(id,refid))\n        dispatch(GetSettings())\n    }, [id])\n\n\n    const buyHandler = () => {\n        // setPaymentFlow(paymentflow)\n        \n        BuyNft({\n            contractAddress: latprojnftdetail?.collectionData?.contract_id,\n            tokenId: latprojnftdetail.token_id,\n            payFrom: latprojnftdetail.pay_from,\n            values: latprojnftdetail?.type == 2 ? latprojnftdetail?.bids[0]?.amount : setValue?.value,\n            sellingCount: latprojnftdetail.selling_count,\n            platformFee: ([latprojnftdetail.payment_flow?.karmatica_fee]),\n            ownerFee: ([latprojnftdetail.payment_flow?.project_data?.fees]),\n            ownerWallet: ([latprojnftdetail.payment_flow?.project_data?.wallets]),\n            flow: ([latprojnftdetail.payment_flow]),\n            refid: refid,\n            proj_id: latprojnftdetail.project_id,\n            nft_id: latprojnftdetail.id,\n            loadingg: setLoading,\n            modal: setBuyModalShow,\n            dispatch\n        })\n    }\n    const reffHandler = async () => {\n\n        await updateReffid({ tokenId: latprojnftdetail.token_id, refid, nft_id: latprojnftdetail.id, dispatch })\n        await buyHandler()\n    }\n\n\n    return (\n        <section className=\"item-details-area\">\n\n            <div className=\"container\">\n\n                <div className=\"row justify-content-between content_project px-0\">\n                    <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\n                        <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}  </span>\n                    </div>\n                    <div className=\"col-12 col-lg-4\">\n\n                        <div className=\"item-info\">\n\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\n                                {loading ? (\n                                    <Loader />\n                                ) : (\n                                    <>\n                                        {latprojnftdetail.extention === \"Player\" &&\n                                            <>\n                                                <video\n                                                    width=\"100%\"\n                                                    controls\n                                                    src={latprojnftdetail.image}\n                                                />\n                                            </>\n                                        }\n                                        {latprojnftdetail.extention === \"modal\" &&\n                                            <>\n                                                <DModal\n                                                    vdo={latprojnftdetail.image}\n\n                                                />\n                                            </>\n                                        }\n                                        {latprojnftdetail.extention === 'Image' &&\n                                            <>\n\n                                                <img src={latprojnftdetail.image} alt=\"\" />\n                                            </>\n                                        }\n\n                                    </>\n                                )}\n                            </div>\n\n                            </>\n\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\n\n                        <div className=\"content \">\n                            <div className=\"card no-hover position-relative\">\n\n                                <div className=\"owner align-items-start\">\n                                    <span className='boldertext w-100'>Owned By : </span>\n                                    <span>{latprojnftdetail.owned_by}</span>\n                                </div>\n                                <div>\n                                    <span className='boldertext w-100'>Collection Name : </span>\n                                    <span> {latprojnftdetail?.collectionData?.title}</span>\n                                </div>\n                                <div className=\"item-info-list\">\n                                    <ul className=\"list-unstyled mb-0\">\n                                        <span class='boldertext'>Token :</span>\n                                        <span> #{latprojnftdetail.token_id?.slice(0,2)}</span>\n                                    </ul>\n                                </div>\n                                <div>\n                                    <span className='boldertext w-100'>Affiliate first sale royalties : </span>\n                                    <span> 30%</span>\n                                </div>\n                                <div>\n                                    <span className='boldertext w-100'>NFT creator royalties : </span>\n                                    <span> 10%</span>\n                                </div>\n                                <div>\n                                    <span className='boldertext w-100'>Karmatica royalties : </span>\n                                    <span> 1%</span>\n                                </div>\n                                <div className='eddlbtton d-flex gap- align-items-center mt-2 justify-content-between'>\n\n\n                                    <div className='eddlbtton flex-wrap d-flex gap-10  align-items-center mt-2'>\n                                        {latprojnftdetail.sold_nft == 1 ? (\n                                            \n                                            <button className=\"d-flex align-items-center justify-content-center sold-outbtn\" disabled>SOLD OUT</button>\n                                        ) : (\n                                            <>\n                                                {latprojnftdetail.user_id === userdet.user_id ? (\n                                                    <div className='eddlbtton d-flex  align-items-center'>\n                                                        <><span className=\"purchase_btn  d-flex align-items-center justify-content-center py-1 mx-2\"\n                                                            disabled>Status: Ready to purchase</span>\n\n                                                        </>\n\n                                                    </div>\n\n                                                ) : (\n                                                    <>\n                                                        {latprojnftdetail.type == 1 ? (\n                                                            <>\n                                                                {userdet.role == 3 ? (\n                                                                    <>\n                                                                        <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\n                                                                            onClick={() => {\n                                                                                swal(\"warning\", \"To buy this nft you need to change your creator account to buyer \", \"warning\")\n                                                                            }}>Buy Now</button>\n\n                                                                    </>\n\n                                                                ) : (\n                                                                    <><button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\n                                                                        id=\"nftdetail.id\" onClick={() => { reffHandler(); setBuyModalShow(true); setLoading(true); }}>Buy Now</button><BuyPopup\n                                                                            show={buymodalShow}\n                                                                            loading={loading}\n\n\n                                                                            onHide={() => setBuyModalShow(false)} /></>\n                                                                )}\n                                                            </>\n                                                        ) : (\n                                                            <>\n                                                                {latprojnftdetail?.bid_approved_id === userdet?.user_id ? (\n\n                                                                    <><button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\n                                                                        onClick={() => { buyHandler(); setBuyModalShow(true); setLoading(true) }}>Make Payment</button><BuyPopup\n                                                                            show={buymodalShow}\n                                                                            loading={loading}\n\n\n                                                                            onHide={() => setBuyModalShow(false)} /></>\n                                                                ) : (\n                                                                    <>\n                                                                        {userdet.role == 3 ? (\n                                                                            <>\n                                                                                <button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\n                                                                                    onClick={() => swal(\"warning\", \"To make a bid for this nft you need to change your creator account to buyer \", \"warning\")}>Place Bid</button>\n                                                                            </>\n                                                                        ) : (\n                                                                            <>\n                                                                                <button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\n                                                                                    onClick={() => setBidModalShow(true)}>Place Bid</button><BidPopup\n\n                                                                                    id={latprojnftdetail.id}\n                                                                                    projid={latprojnftdetail.project_id}\n                                                                                    projtitle={latprojnftdetail.title}\n                                                                                    projcoll={latprojnftdetail?.collectionData?.title}\n                                                                                    from={userdet.wallet_id}\n                                                                                    show={bidmodalShow}\n                                                                                    onHide={() => setBidModalShow(false)} /></>\n                                                                        )}\n                                                                    </>\n\n                                                                )}\n\n                                                            </>\n                                                        )}\n                                                    </>\n                                                )}\n                                            </>\n                                        )}\n                                    </div>\n                                    <Timer\n                                        time={latprojnftdetail.end_date}\n                                    />\n                                    <div className='eddlbtton bitbtn d-flex  align-items-center mt-2'>\n\n                                        <div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 col-lg-8 mt-4\">\n                        <div class=\"user-description \">\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\n                            </h5>\n                            <p dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\n\n                        </div>\n                    </div>\n\n                    <div className='col-lg-4 col-12 mt-4 '>\n                        <div className='price_nft'>\n                            <h5 className='user_title gap-5'>\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\n                                <div>Current price</div>\n                            </h5>\n                            <div className='price_nft_detail'>\n                                <div className='nft-price'>\n                                    <img src='../img/image14.png' />\n                                    <span><small>{latprojnftdetail.amount}  / ${latprojnftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        <div className=''>\n                            <div className=\"profile_detail mt-4\">\n\n                                <LatNftDataTable\n                                // id={id}\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className='col-12 mt-4'>\n                        <div className='funddeatil table-detail '>\n                            <NftTransdataTable\n                                id={id}\n                            />\n                        </div>\n                    </div>\n\n                </div>\n            </div >\n\n\n        </section >\n    );\n}\n\n\nexport default LatprojNftDetails;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport LatprojNftDetails from '../components/Auctions/nftBuy';\n\nconst latnftprojDetails = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <LatprojNftDetails />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default latnftprojDetails;","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\nexport default ScrollToTop","import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, Modal, Upload } from 'antd';\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AddNftAction, CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\nimport MyVerticallyCenteredModal from './createCollection';\nimport styles from './styles/styles.module.scss'\nimport 'antd/lib/form/style/css';\nimport 'antd/lib/upload/style/css';\nimport { Collapse } from 'antd';\nimport 'antd/lib/modal/style/css';\nimport 'antd/lib/button/style/css'\nimport swal from 'sweetalert';\nimport JoditEditor from 'jodit-react'\nimport Loader from '../Loader/loader';\nimport { useHistory, useLocation, useParams } from 'react-router';\nimport DModal from './3dModal';\nconst getBase64 = (file) =>\n    new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = (error) => reject(error);\n    });\n// import ImgCrop from 'antd-img-crop';\nconst AddNft = ({ current, prev }) => {\n    const editor = useRef(null);\n    const [previewOpen, setPreviewOpen] = useState(false);\n    const [previewImage, setPreviewImage] = useState('');\n    const [previewTitle, setPreviewTitle] = useState('');\n    const [count, setCount] = useState(0);\n\n    const [nft, setNft] = useState([])\n    const [size, setSize] = useState()\n    const [nftwidth, setNftwidth] = useState()\n    const [nftHeight, setNftheight] = useState()\n    const [Pimage, setPimage] = useState()\n    const [modalShow, setModalShow] = React.useState(false);\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"1\" });\n    const [NFtFileExtension, setNFtExtension] = useState([])\n    const [source, setSource] = useState([])\n    const [preview, setPreview] = useState([])\n    const [nft_description, setNft_description] = useState([])\n    const [sourceType, setSourceType] = useState([])\n    const coll_id = (Object.values(nft_collection_id));\n    const [loading, setLoading] = useState(false)\n    const search = useLocation().search;\n    const projid = new URLSearchParams(search).get('projectid');\n    const handleIncrement = () => {\n        setCount(prevCount => prevCount + 1);\n    };\n    const handleDecrement = () => {\n        setCount(prevCount => prevCount - 1);\n    };\n    function onHandleClick(index, item) {\n        setNft_collection_id(previ => {\n            previ[index] = item\n            return {\n                ...previ,\n            }\n        }\n        );\n    };\n    const slug = useParams()\n\n    const defaultValues = {\n        setNft_description: '',\n    }\n\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\n        mode: 'all',\n        defaultValues\n    });\n    useEffect(() => {\n        register(\"nft_description\");\n    }, [register]);\n\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\nconst history = useHistory()\n    const dispatch = useDispatch()\n    const col = useSelector(state => {\n        return state?.projectdetails?.getcollections\n    })\n    const imaeg = useSelector(state => {\n        return state?.projectdetails?.nftres\n    })\n    const convertToBase64 = (file) => {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n            fileReader.onload = () => {\n                resolve(fileReader.result);\n            };\n            fileReader.onerror = (error) => {\n                reject(error);\n            };\n        });\n    };\n    const previewChange = async (e, index) => {\n        const pimage = e.target.files[0]\n        const base64 = await convertToBase64(pimage);\n        setPimage(base64)\n        setPreview(prevState => {\n            prevState[index] = e?.target?.files[0]\n            return [...prevState]\n        })\n    };\n    const handleUpload = (e, index) => {\n        const filetype = e.target.files[0].type\n        setNFtExtension(filetype)\n        // \n        // setNft(e.target.files[0])\n        setNft(previ => {\n            previ[index] = e.target.files[0]\n            return [\n                ...previ,\n\n            ]\n        })\n        var fr = new FileReader;\n        fr.onload = function () { // file is loaded\n            var img = new Image;\n            img.onload = function () {\n                setSize(e.target.files[0].size);\n                setNftwidth(img.width)\n                setNftheight(img.height)\n            };\n            img.src = fr.result; // is the data URL because called with readAsDataURL\n        };\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\n        let type = \"Image\"\n        if (e.target.files[0].size > 104857600) {\n            alert('Filesize must 100mb or below');\n        } else {\n            switch (filetype) {\n                case 'image/png':\n                case 'image/jpg':\n                case 'image/gif':\n                case 'image/svg':\n                    type = \"Image\"\n                    break;\n                case 'audio/mpeg':\n                case 'audio/ogg':\n                case 'video/mp4':\n                case 'video/webm':\n                    type = 'Player'\n                    break;\n                case '':\n                    // if (nft?.name?.str.includes(\".glb\")) {\n                    type = 'modal'\n                    // }\n                    break;\n                default:\n                    type = 'Image'\n            }\n            // setNFtFileType(type)\n            setSource(prevState => {\n                // \n                prevState[index] = { file: e.target.files[0], type: type }\n                setSourceType(type)\n                return [...prevState]\n            })\n\n        }\n\n    }\n    // console.log('col', col)\n    const lat = sessionStorage.getItem('latitude')\n    // console.log(lat, 'lattt')\n    const log = sessionStorage.getItem('longitude')\n\n    useEffect(() => {\n        dispatch(GetCollectionsAction())\n    }, []);\n    const onFinish = async (values) => {\n        try {\n            setLoading(true)\n            // const nftImagepromises = values?.nfts?.map(x => uploadNFT(nft))\n            const imagesRes = await uploadNFT(nft, dispatch)\n            // \n            // const addedImage = imagesRes?.data?.data.map(x => ipfsBaseUrl + x?.image_hash)\n            const addedImage = ipfsBaseUrl + imagesRes.data.data[0].image_hash\n            // \n            var str = addedImage;\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\n            const formData = new FormData()\n            if (check === false) {\n                // for (let i = 0; i < addedImage.length; i++) {\n                //     formData.append(\"image\", (addedImage[i]));\n                // }\n                formData.append('image', addedImage)\n                formData.append('title', values?.nfts?.map(x =>\n                    x.nft_name\n                ))\n                formData.append('collection_id', coll_id)\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\n                formData.append('preview_imag', Pimage)\n                formData.append('extention', sourceType)\n                dispatch(AddNftAction(formData, projid, slug, setLoading,history))\n            } else {\n                console.log('fail')\n                setLoading(false)\n                swal('error!', 'Nft not uploaded', 'error')\n            }\n        } catch (error) {\n            setLoading(false)\n            swal('error!', 'Nft not uploaded', 'error')\n            console.log(error, 'error')\n        }\n    };\n    const handleCancel = () => setPreviewOpen(false);\n    const handlePreview = async (file) => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n        setPreviewImage(file.url || file.preview);\n        setPreviewOpen(true);\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n    };\n    const fileProps = {\n        name: \"file\",\n        multiple: false,\n        beforeUpload: () => {\n            return false;\n        },\n        onChange(info) {\n            if (info.file.status !== \"uploading\") {\n                let reader = new FileReader();\n                reader.readAsDataURL(info.file);\n            }\n        }\n    };\n\n    const [form] = Form.useForm()\n\n    const { Panel } = Collapse;\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const nfts = [\n        {\n            key: 0,\n            name: 'Wheat Flour',\n            amount: 1000\n        },\n    ];\n    return (\n        <section className=\"author-area\">\n            <div className=\"container mt-3\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-md-9\">\n                        {/* Intro */}\n                        <div className=\"mt-5 mt-lg-0 mb-4 mb-lg-5\">\n                            <div className=\"intro-content\">\n                                <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\n                                <div>\n                                    {loading ? (\n                                        <Loader />\n                                    ) : (\n                                        <div className={current === 1 ? styles.showForm : styles.hideForm}>\n                                            <Form\n                                                form={form}\n                                                name=\"dynamic_form_nest_item\"\n                                                initialValues={{\n                                                    nfts: nfts,\n                                                }}\n                                                // onSubmit={(event) => handleSubmit(event)}\n                                                onFinish={(event) => onFinish(event)}\n                                                autoComplete=\"off\"\n                                                className=\"item-form card no-hover\"\n                                            >\n                                                <Form.List name=\"nfts\">\n                                                    {(fields, { add, remove }) => (\n                                                        <>\n                                                            <Button className=\"previous_btn\" onClick={() => prev()}>\n                                                                <svg\n                                                                    width=\"16px\"\n                                                                    height=\"16px\"\n                                                                    viewBox=\"0 0 24 24\"\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                                                >\n                                                                    <path\n                                                                        fill=\"none\"\n                                                                        stroke=\"#fff\"\n                                                                        stroke-width=\"2\"\n                                                                        d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\n                                                                        transform=\"matrix(-1 0 0 1 24 0)\"\n                                                                    />\n                                                                </svg>\n                                                                Previous\n                                                            </Button>\n                                                            <>\n                                                                {fields.map(({ key, name, ...restField }, index) => (\n                                                                    <Fragment>\n                                                                        {/* <div>Artwork {index}</div> */}\n                                                                        <div className=\"row relative\">\n                                                                            <div className=\"col-12\">\n                                                                                <label>Name</label>\n                                                                                <div>\n                                                                                    <Form.Item\n                                                                                        {...restField}\n                                                                                        name={[name, \"nft_name\"]}\n                                                                                        // label=\"Enter name\"\n                                                                                        // name=\"name\"\n                                                                                        rules={[\n                                                                                            {\n                                                                                                required: true,\n                                                                                                message: \"Name is required\",\n                                                                                            },\n                                                                                        ]}\n                                                                                    >\n                                                                                        {/* <label>Name</label> */}\n                                                                                        <Input placeholder=\"Name\" />\n                                                                                    </Form.Item>\n                                                                                </div>\n                                                                                <label>Description</label>\n                                                                                <div>\n                                                                                    <Form.Item\n                                                                                        {...restField}\n                                                                                        name={[name, \"nft_description\"]}\n                                                                                        // label=\"Enter name\"\n                                                                                        // name=\"name\"\n                                                                                        rules={[\n                                                                                            {\n                                                                                                required: true,\n                                                                                                message: \"Missing  description\",\n                                                                                            },\n                                                                                        ]}\n                                                                                    >\n\n                                                                                        <JoditEditor\n                                                                                            ref={editor}\n                                                                                            value={nft_description}\n                                                                                            // config={config}\n                                                                                            placeholder=\"start typing\"\n                                                                                            tabIndex={1} // tabIndex of textarea\n                                                                                            onBlur={(newContent) =>\n                                                                                                setNft_description(newContent)\n                                                                                            } // preferred to use only this option to update the content for performance reasons\n                                                                                            onChange={(newContent) => { }}\n                                                                                        />\n\n                                                                                    </Form.Item>\n                                                                                    {errors.nft_description?.type ===\n                                                                                        \"required\" && (\n                                                                                            <p style={{ color: \"red\" }} role=\"alert\">\n                                                                                                Description is required\n                                                                                            </p>\n                                                                                        )}\n                                                                                    {errors.nft_description &&\n                                                                                        errors.nft_description.type ===\n                                                                                        \"minLength\" && (\n                                                                                            <p style={{ color: \"red\" }}>\n                                                                                                min length of words is 300\n                                                                                            </p>\n                                                                                        )}\n                                                                                </div>\n                                                                            </div>\n                                                                            <div className=\"col-md-1 col-12 nft-remove\">\n                                                                                <MinusCircleOutlined\n                                                                                    onClick={(e) => {\n                                                                                        remove(name);\n                                                                                        handleDecrement(e);\n                                                                                    }}\n                                                                                />\n                                                                            </div>\n                                                                            {/* </div> */}\n                                                                            <div className=\"col-12\">\n                                                                                <label className=\"mt-2 mb-3\">\n                                                                                    Choose Collection\n                                                                                </label>\n                                                                            </div>\n                                                                            {col?.map((item, idx) => (\n                                                                                <div\n                                                                                    key={`auc_${idx}`}\n                                                                                    id={item.id}\n                                                                                    className=\"col-md-6 col-lg-3 col-12 choose_div\"\n                                                                                >\n                                                                                    <div\n                                                                                        id={item.id}\n                                                                                        onClick={() =>\n                                                                                            onHandleClick(index, item.id)\n                                                                                        }\n                                                                                        className=\"card\"\n                                                                                        style={{\n                                                                                            background: \"black\",\n                                                                                            marginBottom: \"8px\",\n                                                                                            border:\n                                                                                                nft_collection_id[index] == item.id\n                                                                                                    ? \"1px solid #fff\"\n                                                                                                    : null,\n                                                                                        }}\n                                                                                    >\n                                                                                        <div className=\"card-body\">\n                                                                                            <div>{item.title}</div>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                    {/* </Form.Item> */}\n                                                                                </div>\n                                                                                // </div>\n                                                                            ))}\n                                                                            <div className=\"col-md-6 col-lg-3 col-12\">\n                                                                                {/* <div className=\"col-24\"> */}\n                                                                                <div className=\"form-group\">\n                                                                                    <div\n                                                                                        className=\"card choose_div\"\n                                                                                        style={{\n                                                                                            background: \"black\",\n                                                                                            marginBottom: \"8px\",\n                                                                                        }}\n                                                                                    >\n                                                                                        <div className=\"card-body \">\n                                                                                            <Button\n                                                                                                variant=\"primary\"\n                                                                                                className=\"collection_btn\"\n                                                                                                onClick={() => setModalShow(true)}\n                                                                                            >\n                                                                                                <i className=\"f1a-regular fa-plus\"></i>{\" \"}\n                                                                                                Create Collection\n                                                                                            </Button>\n                                                                                            <MyVerticallyCenteredModal\n                                                                                                show={modalShow}\n                                                                                                onHide={() => setModalShow(false)}\n                                                                                            />\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div className=\"col-12\">\n                                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\n                                                                                    <label className=\"mt-3\">Upload NFT</label>\n                                                                                    <div\n                                                                                        className=\"position-relative upload_nft\"\n                                                                                        style={{\n                                                                                            backgroundImage: \"url('')\",\n                                                                                            backgroundSize: \"contain\",\n                                                                                            backgroundRepeat: \"no-repeat\",\n                                                                                        }}\n                                                                                    >\n\n                                                                                        <div\n                                                                                            className={\n                                                                                                source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\n                                                                                                    ? \" inputdragVedio\"\n                                                                                                    : \"inputtdrag\"\n                                                                                            }\n                                                                                        >\n                                                                                            <input\n                                                                                                type=\"file\"\n                                                                                                // onChange={handleUpload}\n                                                                                                maxCount={1}\n                                                                                                onChange={e => handleUpload(e, index)}\n                                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\n                                                                                            />\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\n                                                                                                <div>\n                                                                                                    {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\n                                                                                                    {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? (\n                                                                                                        <img\n                                                                                                            src={URL.createObjectURL(source[index].file)}\n                                                                                                            className=\"nft-image\"\n                                                                                                        />\n                                                                                                    ) : (\n                                                                                                        <>\n                                                                                                            <p style={{ color: \"red\", marginLeft: '10px' }}>\n                                                                                                                Minimum size should be 500x500\n                                                                                                            </p>\n                                                                                                            <p style={{ color: \"red\", marginLeft: '10px' }}>\n                                                                                                                Image size should be max 1mb\n                                                                                                            </p>\n                                                                                                        </>\n                                                                                                    )}\n\n                                                                                                </div>\n                                                                                            }\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\n                                                                                                <div>\n                                                                                                    <video\n                                                                                                        // className=\"VideoInput_video\"\n                                                                                                        width=\"100%\"\n                                                                                                        // height={height}\n                                                                                                        controls\n                                                                                                        src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\n                                                                                                    // onChange={setSource}\n                                                                                                    />\n                                                                                                    {/* )} */}\n                                                                                                    <div className=\"uploadnftpopup_content\">\n                                                                                                        <label>Preview Image</label>\n                                                                                                        <p>\n                                                                                                            Because you’ve included\n                                                                                                            multimedia, you’ll need to provide\n                                                                                                            an image (PNG, JPG, or GIF) for\n                                                                                                            the card display of your item\n                                                                                                        </p>\n                                                                                                    </div>\n                                                                                                    <div\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\n                                                                                                        style={{\n                                                                                                            backgroundImage:\n                                                                                                                \"url('')\",\n                                                                                                            backgroundSize: \"contain\",\n                                                                                                            backgroundRepeat: \"no-repeat\",\n                                                                                                            backgroundPosition: \"center\",\n                                                                                                        }}\n                                                                                                    >\n                                                                                                        <input\n                                                                                                            type=\"file\"\n                                                                                                            onChange={e => previewChange(e, index)}\n                                                                                                        // onChange={previewChange}\n                                                                                                        />\n                                                                                                        {preview?.length && preview?.[index] &&\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\n                                                                                                                {preview?.length && preview?.[index] && (\n                                                                                                                    <img\n                                                                                                                        className=\"preview_image\"\n                                                                                                                        src={URL.createObjectURL(preview[index])}\n                                                                                                                    // onChange={setPimage}\n                                                                                                                    />\n                                                                                                                )}\n                                                                                                            </div>\n                                                                                                        }\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            }\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\n                                                                                                <div>\n                                                                                                    <DModal\n                                                                                                        vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\n                                                                                                    // mdl={setModal}\n                                                                                                    />\n                                                                                                    <div className=\"uploadnftpopup_content\">\n                                                                                                        <label>Preview Image</label>\n                                                                                                        <p className=\"\">\n                                                                                                            Because you’ve included multimedia,\n                                                                                                            you’ll need to provide an image\n                                                                                                            (PNG, JPG, or GIF) for the card\n                                                                                                            display of your item\n                                                                                                        </p>\n                                                                                                    </div>\n                                                                                                    <div\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\n                                                                                                        style={{\n                                                                                                            backgroundImage:\n                                                                                                                \"url('')\",\n                                                                                                            backgroundSize: \"contain\",\n                                                                                                            backgroundRepeat: \"no-repeat\",\n                                                                                                            backgroundPosition: \"center\",\n                                                                                                        }}\n                                                                                                    >\n                                                                                                        <input\n                                                                                                            type=\"file\"\n                                                                                                            onChange={e => previewChange(e, index)}\n                                                                                                        />\n                                                                                                        {preview?.length && preview?.[index] &&\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\n                                                                                                                {preview?.length && preview?.[index] && (\n                                                                                                                    <img\n                                                                                                                        className=\"preview_image\"\n                                                                                                                        src={URL.createObjectURL(preview[index])} />\n                                                                                                                )}\n                                                                                                            </div>\n                                                                                                        }\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            )}\n                                                                                        </div>\n\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </Fragment>\n                                                                ))}\n                                                            </>\n                                                        </>\n                                                    )}\n                                                </Form.List>\n                                                <Form.Item>\n                                                    <div className=\"col-12\">\n                                                        <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\n                                                            Add\n                                                        </button>\n                                                    </div>\n                                                </Form.Item>\n                                            </Form>\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n};\nexport default AddNft;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\n\n\nimport AddNft from '../components/Create/addNft';\n\nconst AddNFT = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <AddNft />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n\n}\n\nexport default AddNFT;","import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ReadMore from '../../readMore';\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\nimport { ProjectList } from '../../redux/Actions/projectAction';\nimport FundDetail from '../../themes/fund-detail';\nimport latprojDetails from '../../themes/latproj-details';\nimport Loader from '../Loader/loader';\nimport { DeleteProject } from './../../redux/Actions/projectAction';\n\n\nconst GetAllFundraise = () => {\n\n\n    const latprojdetail = useSelector(state => {\n        // \n        return state.projectdetails.latestprojectdetails\n    })\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\n    const dispatch = useDispatch()\n\n    const fund = useSelector(state => {\n        return state?.fundraiser?.fundraiser\n    })\n    console.log(fund, 'fdd')\n\n    useEffect(() => {\n        dispatch(TopFundraiserAction({}))\n    }, [dispatch])\n\n\n\n\n    return (\n        <>\n\n            {loading ? (\n                <Loader />\n            ) : (\n\n                <section className=\"explore-area\">\n                    <div className=\"container\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-12 col-md-8 col-lg-7\">\n                                {/* Intro */}\n                                <div className=\"intro text-center mb-4\">\n                                    {/* <span>Explore</span> */}\n                                    <h3 className=\"mt-3 mb-0\">All Fundraiser's</h3>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"row items explore-items h-auto\">\n                            {/* {fund && fund.length ?\n                                [...new Map(fund.map(item =>\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\n                            {fund?.map((item, idx) => {\n\n                                return (\n                                    <Link key={`edth_${idx}`} to={`/fundraiser/detail/${item.user_id}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\n                                        <div>\n                                            <div className=\"card project_cards position-relative \">\n                                                {/* matic */}\n                                                {/* <div className=\"card-bottom d-flex justify-content-between\">\n                                                    <span className='matics'>{item.amount} MATIC</span>\n                                                  \n                                                </div> */}\n                                                <div className=\"image-over position-relative \">\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\n                                                    <img className=\"card-img-top\" src={item?.organization_detail?.banner_image} />\n                                                </div>\n                                                <div className='token'>\n                                                    <span></span>\n                                                </div>\n                                                {/* Card Caption */}\n                                                <div className=\"card-caption col-12 p-0\">\n                                                    {/* Card Body */}\n                                                    <div className=\"card-body\">\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\n                                                        <a>\n                                                            <h5 className=\"mb-0 mt-3\">{item?.organization_detail?.organization_name} </h5>\n                                                        </a>\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\n                                                                    <span>Owned By</span>\n                                                                    <a href=\"/author\">\n                                                                        <h6 className=\"ml-2 mb-0\">You</h6>\n                                                                    </a>\n                                                                </div> */}\n                                                        <div className=''>\n                                                            <p dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 50) }} />\n                                                            {/* <p> It is a long established fact that a reader</p> */}\n\n                                                        </div>\n\n                                                        <div className='mb-2 d-flex align-items-center justify-content-between'>\n                                                            <div className='mt-2 mb-2 d-flex text-align-center fundraiser_sale'>\n                                                                <div>\n                                                                    <span>Created</span>\n                                                                    <div>148</div>\n                                                                </div>\n                                                                <div>\n                                                                    <span>Sale</span>\n                                                                    <div>100</div>\n                                                                </div>\n                                                            </div>\n\n                                                            <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                                <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\n                                                            </svg></span>\n                                                        </div>\n\n                                                        {/* <div className='donate-btn'>\n                                                                <button className='btn ml-lg-auto btn-bordered-white'>Donate Now</button>\n                                                            </div> */}\n                                                        \n\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Link>\n                                )\n                            })}\n                            {/* }) :\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\n                                    <h2 className='allproj2'>\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\n                                    </h2>\n                                </div>\n                            } */}\n\n                        </div>\n                    </div>\n                </section>\n            )}\n        </>\n    );\n\n}\n\nexport default GetAllFundraise; ","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport GetAllFundraise from '../components/Explore/fundraiserProjects';\n\nconst AllFundraiser = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <GetAllFundraise />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\nexport default AllFundraiser;","import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\nimport { GetfundraiserProject, ProjectList } from '../../redux/Actions/projectAction';\nimport Loader from '../Loader/loader';\nimport { DeleteProject } from './../../redux/Actions/projectAction';\n\n\nconst GetAllFundraiseProjects = (props) => {\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\n    const dispatch = useDispatch()\n    const { user_id } = useParams()\n    const fundprojdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.getfundProjDetails\n    })\n    console.log(fundprojdetail, 'fundprojdetail')\n\n    useEffect(() => {\n\n        dispatch(GetfundraiserProject(user_id))\n    }, [dispatch])\n\n\n\n\n    return (\n        <>\n\n            {loading ? (\n                <Loader />\n            ) : (\n\n                <section className=\"explore-area\">\n                    <div className=\"container\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-12 col-md-8 col-lg-7\">\n                                {/* Intro */}\n                                <div className=\"intro text-center mb-4\">\n                                    {/* <span>Explore</span> */}\n                                    <h3 className=\"mt-3 mb-0\">Fundraiser Projects</h3>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"row items explore-items h-auto\">\n                            {/* {fund && fund.length ?\n                                [...new Map(fund.map(item =>\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\n                            {fundprojdetail?.map((item, idx) => {\n\n                                return (\n                                    <Link key={`edth_${idx}`} to={`/projects/${item.slug}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\n                                        <div>\n                                            <div className=\"card project_cards\">\n                                                <div className=\"image-over relative \">\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\n                                                    <img className=\"card-img-top\" src={item?.nft_data[0]?.image} alt={item.nft_data.description} />\n                                                </div>\n                                                <div className='token'>\n                                                    <span></span>\n                                                </div>\n                                                {/* Card Caption */}\n                                                <div className=\"card-caption col-12 p-0\">\n                                                    {/* Card Body */}\n                                                    <div className=\"card-body\">\n                                                        <a>\n                                                            <h5 className=\"mb-0\">{item.title.slice(0, 20)}</h5>\n                                                        </a>\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\n                                                            <span>Owned By</span>\n                                                            <a >\n                                                                <h6 className=\"ml-2 mb-0\"></h6>\n                                                            </a>\n                                                        </div> */}\n                                                        <div className=\"card-bottom d-flex justify-content-between\">\n                                                            <span>{item.price} MATIC</span>\n                                                            <span>{item.nft_data.length} NFTS </span>\n                                                            <span> + {item.number_of_nft} NFTS </span>\n                                                        </div>\n\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Link>\n                                )\n                            })}\n                            {/* }) :\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\n                                    <h2 className='allproj2'>\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\n                                    </h2>\n                                </div>\n                            } */}\n                        </div>\n                    </div>\n                </section>\n            )}\n        </>\n    );\n\n}\n\nexport default GetAllFundraiseProjects; ","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport GetAllFundraiseProjects from '../components/Explore/fundProj';\n\nconst AllFundraiserProjects = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <GetAllFundraiseProjects />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\nexport default AllFundraiserProjects;","import React, { Component, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport { Button } from 'bootstrap';\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\nimport dayjs from 'dayjs'\nimport { Link } from 'react-router-dom';\nimport FunddataTable from '../TopSeller/fundraiserdetail';\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\nimport ReadMore from '../../readMore';\n\nconst MyFundraiserDetail = () => {\n    const { user_id } = useParams()\n    // const { id } = useParams()\n    const dispatch = useDispatch()\n\n    const funddetail = useSelector(state => {\n        return state?.fundraiser?.fundraiserdetail\n    })\n    // console.log(funddetail, 'fdddetail')\n    const fundprojdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.getfundProjDetails\n    })\n    // console.log(fundprojdetail, 'fdprojetail')\n\n    useEffect(() => {\n\n        dispatch(TopFundraiserDetail(user_id))\n        dispatch(GetfundraiserProject(user_id))\n\n    }, [dispatch, user_id])\n    // state = {\n    //     initData: {},\n    //     tabData_1: [],\n    //     tabData_2: [],\n    //     sellerData: []\n    // }\n    // componentDidMount() {\n    //     this.setState({\n    //         initData: initData,\n    //         tabData_1: tabData_1,\n    //         tabData_2: tabData_2,\n    //         sellerData: sellerData\n    //     })\n    // }\n    // render() {\n    return (\n        <section className=\"item-details-area\">\n            <div className=\"container\">\n                <div class=\"row py-0\">\n                    <div className='col-12 p-0'>\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\n                    </div>\n                </div>\n                <div className=\"row justify-content-between px-0\">\n                    <div className=\"col-12 col-lg-8\">\n                        <div className=\"item-info\">\n\n                            <div className=\"item-thumb text-center\">\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\n                            </div>\n\n                        </div>\n                        <div className='lorem_done'>\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                            </svg>\n\n\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\n                        </div>\n\n                        <br />\n                        <div className='custam_col'>\n                            <h5 class=\"user_title\"><div>Description</div></h5>\n                            <div className=\" no-hover\">\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\n                                <ReadMore data={funddetail?.organization_detail?.description} />\n                                <div className=\"price d-flex justify-content-between align-items-center\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"content mt-5 mt-lg-0\">\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\n                            {/* <p>{this.state.initData.content}</p> */}\n                            <div className=\"owner d-flex align-items-center\">\n\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\n                                    {/* <h6 className=\"ml-2\"></h6> */}\n\n                                </a>\n                            </div>\n\n                            <div className=\"item-info-list\">\n\n                                <ul className=\"list-unstyled\">\n                                    <div className=\"card no-hover detail_single_nfts\">\n\n                                        <li className='nft_price'>\n                                            ${funddetail?.total_fundraised} raised from all projects\n\n                                        </li>\n\n\n                                        {/* <li className=\"price d-flex justify-content-between\">\n                                                <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"> 71% </span>\n    \n                                            </li> */}\n\n                                    </div>\n                                    <div className=\"custam_col no-hover\">\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\n                                        {/* <li className='card-inner-heading'>\n                                            <span style={{}}>Projects</span>\n                                        </li> */}\n\n                                        {fundprojdetail && fundprojdetail.length &&\n                                            [...new Map(fundprojdetail.map(item =>\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\n                                                    const date1 = new Date(item.created_at)\n                                                    const date2 = new Date()\n                                                    // console.log('todat', date2)\n                                                    const time_difference = date2.getTime() - date1.getTime();\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\n                                                    // const totaldays = days_difference.slice(0,1)\n                                                    // console.log(\"daysss\", days_difference)\n                                                    return (\n\n                                                        <>\n                                                            <ul className=\"project_back\">\n                                                                <li className='item_title'>\n                                                                    {item.title}\n                                                                </li><li className='item_created'>\n                                                                    {days_difference} days ago\n                                                                    {/* {(item.created_at).diff(new Date, 'day', true)} */}\n                                                                </li>\n                                                            </ul>\n                                                        </>\n                                                    )\n                                                })}\n                                        <li className='button_blow'>\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\n\n                                        </li>\n                                    </div>\n\n                                </ul>\n\n\n\n\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-12 col-md-8'>\n\n                    </div>\n                    <div className='col-12 col-md-4'>\n\n                    </div>\n                </div>\n\n                <div className='row'>\n                    <div className='col-12'>\n                        <div className='funddeatil'>\n\n                            <FunddataTable />\n\n                            <FundTransdataTable />\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section >\n    );\n}\n// }\n\nexport default MyFundraiserDetail;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport MyFundraiserDetail from '../components/Explore/my_fundraise';\n\nconst FundraiserProjects = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <MyFundraiserDetail />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\nexport default FundraiserProjects;","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFooter } from '../../redux/Actions/footerAction'\n\nconst Rewards = () => {\n\n    // console.log(footer, 'footer')\n    return (\n        <section className=\"item-details-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-lg-12\">\n                        <div className=\"shape\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\n                                <defs>\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\n                                    </linearGradient>\n                                </defs>\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\n                                    <polygon points fill=\"url(#linearGradient-1)\">\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\n                                    </polygon>\n                                </g>\n                            </svg>\n                        </div>\n                        <h3>How Creator and Referral MATIC Rewards Work</h3>\n                        <span className='termsandconditions'><li>Affiliates get 30% on first level NFT referred sales at Karmatica.io only.</li>\n                            <li>Creators get 10% of secondary NFT sales for the lifetime of the project.</li>\n                            <br />\n                            <h5>NFT sale to BUYER 1 </h5>\n                            69% goes to Creator <br />\n                            30% goes to Affiliate<br />\n                            1% to Karmatica<br />\n                            <br />\n                            <h5>NFT resold from BUYER 1 to BUYER 2 via Affiliate</h5>\n                            84% goes to BUYER 1<br />\n                            10% goes to NFT Creator<br />\n                            5% goes to Affiliate <br />\n                            1% to Karmatica<br />\n                        </span>\n                    </div>\n\n\n\n                </div>\n            </div >\n\n        </section >\n    )\n}\n\nexport default Rewards","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport Rewards from '../components/Footer/reward';\n\nconst NftReward = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <Rewards />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\nexport default NftReward;","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AllNoti, GetUserAction, NotiDelete } from '../../redux/Actions/authAction'\nimport { getFooter } from '../../redux/Actions/footerAction'\nimport moment from \"moment\";\nconst AllNotifications = () => {\n    const dispatch = useDispatch()\n\n    const nooti = useSelector(state => {\n\n        return state?.user?.noti\n    })\n    useEffect(() => {\n        dispatch(AllNoti())\n        dispatch(GetUserAction())\n    }, [])\n    const deleteHandler = (id) => {\n        dispatch(NotiDelete(id))\n    }\n    console.log(nooti, 'noti')\n    return (\n\n        <section className=\"item-details-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-lg-7\">\n                        <div className=\"shape\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\n                                <defs>\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\n                                    </linearGradient>\n                                </defs>\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\n                                    <polygon points fill=\"url(#linearGradient-1)\">\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\n                                    </polygon>\n                                </g>\n                            </svg>\n                        </div>\n                        <ul className='termsandconditions' >\n                            {nooti.map((item) => {\n                                return (\n                                    <><li>{item.title}</li>\n                                        <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\n                                            <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\n                                )\n                            })}\n                        </ul>\n\n                        {/* <h3>{footer?.footer?.title}</h3> */}\n                    </div>\n\n\n\n                </div>\n            </div >\n\n        </section >\n    )\n}\n\nexport default AllNotifications","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport AllNotifications from './../components/Header/Allnotifications';\n\nconst Notifi = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <AllNotifications />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default Notifi;","import React, { Component, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { GetUserAction } from \"../../redux/Actions/authAction\";\nimport {\n    CategoriesAction,\n    getPublicLiveProjects,\n} from \"../../redux/Actions/projectAction\";\n\n\nconst ExploreBuyedNfts = () => {\n    const { type } = useParams();\n    const dispatch = useDispatch();\n\n\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n\n    useEffect(() => {\n        dispatch(GetUserAction())\n\n    }, [dispatch]);\n\n    return (\n        <section className=\"explore-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-md-8 col-lg-7\">\n                        <div className=\"intro text-center mb-4\">\n                            <h3 className=\"mt-3 mb-0\">\n                                My NFTs\n                                {/* {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")} */}\n                            </h3>\n                            <p>\n                                Invest in NFTs that are based on real-life projects or events\n                                related to important causes\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row items explore-items h-auto\">\n                    {userdet?.purchase_nft && userdet?.purchase_nft?.length ? (\n                        [\n                            ...new Map(\n                                userdet?.purchase_nft?.map((item) => [item[\"title\"], item])\n                            ).values(),\n                        ].map((item, idx) => {\n                            return (\n                                <Link\n                                    key={`edth_${idx}`}\n                                    className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\n                                >\n                                    <div>\n                                        <Link to={`/my/nfts-detail/${item.slug}`}>\n                                            <div className=\"card\">\n                                                <div className=\"image-over\">\n                                                    <Link to={`/my/nfts-detail/${item.slug}`}>\n                                                        <img\n                                                            className=\"card-img-top\"\n                                                            src={item.image}\n                                                            alt=\"\"\n                                                        />\n                                                    </Link>\n                                                    {/* <div className=\"image-over\">\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\n                                                </div>\n\n                                                <div className=\"card-caption col-12 p-0\">\n                                                    {/* Card Body */}\n                                                    <div className=\"card-body\">\n                                                        {/* <div className=\"countdown-times \">\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\n                                                    </div> */}\n                                                        <a >\n                                                            <h5 className=\"mb-0\">\n                                                                {item.title.slice(0, 15)}\n                                                            </h5>\n                                                        </a>\n                                                        <div\n                                                            className=\"seller d-flex align-items-center my-3\"\n\n                                                        >\n                                                            <span>Owned By</span>\n                                                            {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\n\n                                                            <a >\n                                                                <h6 className=\"ml-2 mb-0\">\n                                                                    {/* {item.user_data.username.slice(0, 12)} */}\n                                                                    You\n                                                                </h6>\n                                                            </a>\n\n                                                            {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\n                                                        </div>\n                                                        <div className=\"card-bottom d-flex justify-content-between nft-price\">\n                                                            <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\n                                                            {/* {item?.number_of_nft == 1 ? (\n                                                                <span>{item.number_of_nft} NFT</span>\n                                                            ) : (\n                                                                <span>{item.number_of_nft} NFTs</span>\n                                                            )} */}\n                                                        </div>\n                                                        <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\n                                                            <Link to={`/my/nfts-detail/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\n\n\n                                                                <i className=\"icon-handbag\" />\n                                                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\n                                                            </Link>\n                                                            <Link to={`/my/nfts-detail/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\n\n\n                                                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\n                                                            </Link>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Link>\n                                    </div>\n                                </Link>\n                            );\n                        })\n                    ) : (\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\n                            <h2 className=\"allproj2\">No latest project found</h2>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </section>\n    );\n};\nexport default ExploreBuyedNfts;\n","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport ExploreBuyedNfts from '../components/Explore/BuyedNfts';\n\nconst BuyedNft = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <ExploreBuyedNfts />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n\n}\n\nexport default BuyedNft;","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Collapse } from 'antd';\nimport { GetbuyedNftDetails, NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\nimport { useParams } from 'react-router';\nimport { Table } from 'react-bootstrap';\nconst NftBuydataTable = (props) => {\n    const dispatch = useDispatch()\n    const { Panel } = Collapse;\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const slug = useParams()\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n\n    const nftdetail = useSelector(state => {\n        // \n        return state.projectdetails?.getBuyedNftdetails\n\n    })\n    useEffect(() => {\n        dispatch(GetbuyedNftDetails(props.slug))\n        // dispatch(ProjectDetail(slug))\n    }, [props.slug])\n\n    return (\n        <div className='nft_detail_main position-relative'>\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\n                </svg>\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\n                <Panel header=\"Details\" key=\"1\">\n                    <Table responsive className='m-0'>\n                        <thead>\n                            {/* {latprojnftdetail?.map((items) => { \n                         return (  */}\n\n                            <><tr>\n                                <th>Blockchain</th>\n                                <td>Polygon (Matic)</td>\n                            </tr><tr className='contract-address'>\n                                    <th >Contract</th>\n                                    <td><a target=\"_blank\" href={`https://polygonscan.com/address/${nftdetail?.collectionData?.contract_id}`} >{nftdetail.collectionData?.contract_id?.slice(0, 5)}.....{nftdetail.collectionData?.contract_id?.slice(39, 42)}</a></td>\n                                </tr><tr>\n                                    <th>Token ID</th>\n                                    <td>{nftdetail.token_id?.slice(0,2)}</td>\n                                </tr><tr>\n                                    <th>Token Stranded</th>\n                                    <td>ERC721</td>\n                                </tr></>\n\n                            {/* )})} */}\n\n                        </thead>\n                        <tbody>\n                            {/* {projdetail.nft_data?.map((items) => { */}\n                            {/* // return ( */}\n                            <tr>\n\n                                <td>\n                                    {/* {items.collectionData?.contract_id} */}\n                                </td>\n                                <td>\n                                    {/* {items.token_id} */}\n                                </td>\n                                {/* <td>ERC721</td> */}\n                                {/* <td>Polygon (Matic)</td> */}\n                            </tr>\n                            {/* // ) */}\n                            {/* })} */}\n\n                        </tbody>\n                    </Table>\n                </Panel>\n                {/* <div className='nothing'>\n                No matching records found\n                        </div> */}\n            </Collapse>\n        </div>\n    )\n}\n\nexport default NftBuydataTable","import React, { Component, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation, useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { DeleteProject, GetbuyedNftDetails, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\nimport { useState } from 'react';\nimport dayjs from 'dayjs'\nimport Web3 from 'web3';\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\nimport EditCollection from '../ItemDetails/updateCollection';\nimport UserTransdataTable from '../AuthorProfile/userDetails';\nimport { CreateMetaDataAndMint } from './../Wallet/interact';\nimport NftPopup from '../ItemDetails/nftPopup';\nimport axios from 'axios';\nimport { redirect } from 'next/dist/server/api-utils';\nimport LatprojNftDetails from '../Auctions/nftBuy';\nimport DModal from '../Create/3dModal';\nimport NftdataTable from '../Explore/nftdataTable';\nimport LatNftdataTable from '../Explore/latProjNftdata';\nimport NftAuctiondataTable from '../ItemDetails/nftAuctiontable';\nimport SellPopup from '../ItemDetails/sellPopup';\nimport EditNftName from '../Create/editNftNamepopup';\nimport EditNftDesc from '../Create/editDescPopup';\nimport EditNftImage from '../Create/nftImageeditPopup';\nimport NftBuydataTable from './NftBuyData';\nimport { GetMatic } from '../ItemDetails/GetMAtic';\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\n// console.log(NFTContract.abi,\"abi\")\nconst web3 = createAlchemyWeb3(alchemyKey);\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\n\n\nconst BuyedNftDetails = (props) => {\n    const history = useHistory()\n    const [nftId, setNftID] = useState();\n    // const search = useLocation().search;\n    // const projslug = new URLSearchParams(search).get('project');\n    // console.log(projslug, 'projslug')\n    // const latprojnftdetail = useSelector(state => {\n    //     // \n    //     return state.projectdetails.getnftwoldetails\n    // })\n    const [modalShow, setModalShow] = React.useState(false);\n    const [matic, setMatic] = useState('')\n    const [sellmodalShow, setSellModalShow] = React.useState(false);\n    const [modalShowedit, setModalShowedit] = React.useState(false);\n    const [modalShoweditdes, setModalShoweditdes] = React.useState(false);\n    const [modalShoweditimg, setModalShoweditimg] = React.useState(false);\n    // const [mintmodalShow, setMintModalShow] = React.useState(false);\n\n    const [current, setCurrent] = React.useState(0)\n    const [contractAdd, setContractAdd] = useState('')\n\n    const slug = useParams();\n\n    const dispatch = useDispatch()\n\n    const nftdetail = useSelector(state => {\n        // \n        return state?.projectdetails?.getBuyedNftdetails\n\n    })\n    // console.log(\"nftmint\", nftdetail.is_mint)\n    useEffect(() => {\n        (GetMatic(setMatic))\n        dispatch(GetbuyedNftDetails(slug))\n        // dispatch(GetSettings())\n    }, [slug])\n\n\n\n\n    return (\n\n        <section className=\"item-details-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-between content_project px-0\">\n                    <div className=\"col-12 col-md-4 \">\n                        <div className=\"item-info\">\n                            {/* {latprojdetail?.map((item, key) => ( */}\n                            {/* {nftdetail.is_mint == 0 &&\n\n                                <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\n\n\n                                    <div >\n                                        <div className='position-absolute nft-edit-icon'><i className=\"fa-solid fa-pen\" onClick={(e) => {\n                                            setNftID(slug)\n                                            e.preventDefault();\n                                            setModalShoweditimg(true)\n                                        }\n                                        } ></i>\n                                        </div>\n                                        <div className='loader-img'>{modalShoweditimg &&\n\n                                            <EditNftImage\n                                                // \n                                                id={projslug}\n                                                nft_id={nftId}\n                                                show={modalShoweditimg}\n                                                onHide={() => setModalShoweditimg(false)} />\n                                        }\n                                        </div>\n                                    </div>\n                                </div>\n                            } */}\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\n                                {nftdetail.extention === \"Player\" &&\n\n                                    <video\n                                        // className=\"VideoInput_video\"\n                                        width=\"100%\"\n                                        // height={height}\n                                        controls\n                                        src={nftdetail.image}\n                                    // onChange={setSource}\n                                    />\n                                }\n                                {nftdetail.extention === \"modal\" &&\n                                    <DModal\n                                        vdo={nftdetail.image}\n                                    // mdl={setModal}\n                                    />\n                                }\n                                {nftdetail.extention === \"Image\" &&\n\n                                    <img src={nftdetail.image} alt=\"\" />\n                                }\n                            </div>\n\n                            </>\n\n                        </div>\n                    </div>\n\n\n                    <div className=\"col-12 col-lg-8 mt-4 mt-sm-0\">\n                        <div className=' card no-hover py-0 mt-2 mb-2 mt-lg-0 mb-lg-0 '>\n\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{nftdetail?.title} </span>\n                            {/* {nftdetail.is_mint == 0 &&\n                                <div className='nft-edit-icon position-absolute mt-2'>\n                                    <i className=\"fa-solid fa-pen \" onClick={(e) => {\n                                        setNftID(slug)\n                                        e.preventDefault();\n                                        setModalShowedit(true)\n                                    }\n                                    } ></i>\n                                    {modalShowedit &&\n\n                                        <EditNftName\n                                            // \n                                            id={projslug}\n                                            nft_id={nftId}\n                                            show={modalShowedit}\n                                            onHide={() => setModalShowedit(false)} />\n                                    }\n                                </div>\n                            } */}\n\n                        </div>\n                        <div className=\"content sm:mt-3 mt-lg-2\">\n                            <div className=\"card no-hover position-relative\">\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\n                                </svg></span> */}\n                                <div className=\"owner align-items-start\">\n                                    <span className='boldertext w-100'>Owned By : </span>\n                                    {/* <span>{nftdetail?.user_data?.username}</span> */}\n                                    <span>You</span>\n\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\n                                    </a>\n                                </div>\n\n                                <div>\n                                    <span className='boldertext w-100'>Collection Name : </span>\n                                    <span> {nftdetail?.collectionData?.title}</span>\n\n                                </div>\n                                <div className=\"item-info-list\">\n                                    <ul className=\"list-unstyled\">\n                                        <span class='boldertext'>Token :</span>\n                                        <span> #{nftdetail.token_id?.slice(0,2)}</span>\n                                    </ul>\n                                </div>\n                                {nftdetail.nft_type === \"1\" ? (\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\n\n\n                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\n                                            disabled>Status: Ready to purchase</span>\n\n                                        </>\n\n                                    </div>\n\n\n                                ) : (\n\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\n\n\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\n                                            onClick={() => setSellModalShow(true)}>  Sell</button>\n                                            <SellPopup\n\n                                                show={sellmodalShow}\n                                                slug={slug}\n\n                                                onHide={() => setSellModalShow(false)}\n                                                nftid={nftdetail.id}\n                                                ismint={nftdetail.is_mint}\n                                            />\n\n                                        </>\n\n                                    </div>\n                                )}\n\n                            </div>\n                        </div>\n                    </div>\n\n\n\n\n\n                    <div className=\"col-12 md:col-8 mt-4\">\n                        <div class=\"user-description \">\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\n                            </h5>\n                            {/* <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\n\n                                {nftdetail?.is_mint == 0 &&\n                                    <div className='nft-edit-icon position-absolute mt-2'>\n                                        <i className=\"fa-solid fa-pen\" onClick={(e) => {\n                                            setNftID(slug)\n                                            e.preventDefault();\n                                            setModalShoweditdes(true)\n                                        }\n                                        } ></i>\n                                        {modalShoweditdes &&\n\n                                            <EditNftDesc\n                                                // \n                                                id={projslug}\n                                                nft_id={nftId}\n                                                show={modalShoweditdes}\n                                                onHide={() => setModalShoweditdes(false)} />\n                                        }\n                                    </div>\n                                }\n                            </div> */}\n                            <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft \" />\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} /> */}\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\n                        </div>\n                    </div>\n\n                    <div className='col-lg-4 col-12 mt-4'>\n                        <div className='price_nft'>\n                            <h5 className='user_title gap-5'>\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\n                                <div>Current price</div>\n                            </h5>\n                            <div className='price_nft_detail'>\n                                <div className='nft-price'>\n                                    {/* <img src='../../img/image14.png' /> */}\n                                    {/* <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg> */}\n                                    {/* <span>{latprojnftdetail.amount}</span> */}\n                                    <img src='../../img/image14.png' />\n                                    <span><small>{nftdetail.amount} / ${nftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn</small> </span>\n                                    {/* <span><small>${nftdetail.amount}</small></span> */}\n                                </div>\n\n                                <div className='sales'>\n                                    <span>\n                                        Creator royalties on secondary sales:\n                                    </span>\n                                    <span>5%</span>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className='col-lg-8 col-12'>\n                        <div className=\"profile_detail mt-4\">\n\n                            <NftBuydataTable\n                                slug={slug}\n                            />\n                        </div>\n                    </div>\n                    {/* <div className='col-12 mt-4'>\n                        <div className='container table-detail'>\n\n                            <NftAuctiondataTable\n                                slug={slug}\n                            />\n\n\n                        </div>\n                    </div> */}\n\n\n                    {/* <div className='col-12 description'>\n                    <h3 > Description</h3>\n                    <div className=\"card no-hover countdown-times my-4\">\n            \n                        <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft\" />\n                    </div>\n                     </div> */}\n                </div >\n            </div>\n        </section >\n    );\n\n}\n\n\nexport default BuyedNftDetails;","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport BuyedNftDetails from '../components/Explore/NftBuyedDetails';\nconst BuyNftDetail = () => {\n\n    return (\n        <div className=\"main main-fund-detail\">\n\n            <Header />\n            <BuyedNftDetails />\n\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default BuyNftDetail;","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnnualRevenueList, CountryList, CreateOrganizationAfterRoleChange, HearAboutList, Register } from '../../redux/Actions/authAction'\nimport { Controller, useForm } from 'react-hook-form'\n\nimport { useHistory } from 'react-router'\nimport { useFormData } from './Context/context'\nimport styles from './styles/styles.module.scss'\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\nimport { useState } from 'react'\nimport JoditEditor from 'jodit-react';;\n\n// import { Widget } from \"@uploadcare/react-widget\";\n// import FileUpload from \"react-material-file-upload\";\n// import { uploadcare } from '../lib/uploadcare.min.js';\nconst RoleChangeOrganizationdetails = () => {\n\n    const [description, setDescription] = useState()\n\n    const editor = useRef(null);\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const { countries } = useSelector(state => state.countries)\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\n        mode: 'all',\n\n    });\n\n    const OnSubmit = (values) => {\n        // \n        // FormData.append('email', data.email)\n        // FormData.append('password', data.password)\n        // FormData.append('confirm_password', data.confirm_password)\n        const formData = new FormData()\n        formData.append('banner_image', values.banner_image[0])\n        formData.append('logo', values.logo[0])\n        formData.append('wallet_id', values.wallet_id)\n        // formData.append('role', data.role)\n        formData.append('goal', values.goal)\n        formData.append('organization_name', values.organization_name)\n        formData.append('url', values.url)\n        formData.append('country', values.country)\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\n        formData.append('tax_id', values.tax_id)\n\n        formData.append('social', values.social)\n        formData.append('social_link', values.social_link)\n        formData.append('description', description)\n        // formData.append('method_heard_detail', values.method_heard_detail)\n\n        dispatch(CreateOrganizationAfterRoleChange(formData, dispatch))\n        // if (formData) {\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\n        //     history.push('/login')\n        // }\n    }\n\n    const socialmedia = useSelector(state => {\n        return state?.getSocialmediaIcons?.getsocial\n    })\n    // console.log('social', socialmedia)\n    useEffect(() => {\n        dispatch(CountryList())\n        dispatch(AnnualRevenueList())\n        dispatch(HearAboutList())\n        dispatch(GetSocialMediaIcons())\n    }, [])\n\n\n\n\n    return (\n        <section className=\"author-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-md-9\">\n                        {/* Intro */}\n                        <div className=\"intro text-center\">\n                            <span></span>\n                            <h3 className=\"mt-3 mb-0\"></h3>\n                            <p></p>\n                        </div>\n                        {/* Item Form */}\n                        {/* <div className={formStep === 1 ? styles.showForm : styles.hideForm}> */}\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\n                            {/* <button\n                                    // className={styles.back}\n                                    onClick={prevFormStep}\n                                    type=\"button\"\n                                >\n                                    back\n                                </button> */}\n                            <div className=\"row\">\n\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Fundraising Goal</label>\n                                        <input\n                                            type=\"number\"\n                                            className=\"form-control\"\n                                            name=\"goal\"\n                                            step=\"0.01\"\n                                            placeholder=\"Fundraising goal (MATIC)\"\n                                            {...register(\"goal\",\n                                                {\n                                                    required: true,\n\n                                                })}\n                                            aria-invalid={errors.goal ? \"true\" : \"false\"} />\n                                        {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Funding Wallet </label>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"wallet_id\"\n                                            // defaultValue='1'\n                                            placeholder=\"Funding Wallet\"\n                                            {...register(\"wallet_id\", { required: true })}\n                                            // {...register(\"email\")}\n                                            aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\n                                        />\n                                        {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Name</label>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"organization_name\"\n                                            placeholder=\"Organization name\"\n                                            {...register(\"organization_name\", { required: true })}\n                                            // {...register(\"email\")}\n                                            aria-invalid={errors.organization_name ? \"true\" : \"false\"}\n                                        />\n                                        {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\n                                    </div>\n                                </div>\n\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Website</label>\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            name=\"url\"\n                                            placeholder=\"Website\"\n                                            {...register(\"url\", {\n                                                required: true,\n                                                pattern: {\n                                                    value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\n\n                                                }\n                                            })}\n                                            // {...register(\"email\")}\n                                            aria-invalid={errors.url ? \"true\" : \"false\"}\n                                        />\n\n                                        {errors.url && errors.url?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\n                                        {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\n                                    </div>\n                                </div>\n\n                                {/* <div className=\"col-12\">\n                                        <div className=\"form- group mt-3\">\n                                            <label>Description</label>\n                                            <textarea\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                name=\"description\"\n                                                placeholder=\"Describe your project\"\n\n                                                {...register(\"description\", { required: true })}\n                                                // {...register(\"email\")}\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\n                                            />\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\n                                        </div>\n                                    </div> */}\n                                <div className=\"col-12\">\n                                    <div className=\"form- group mt-3\">\n                                        <label>Description</label>\n                                        <Controller\n                                            control={control}\n                                            name=\"description\"\n                                            defaultValue=\"\"\n\n                                            // {...register(\"description\", { required: true })}\n                                            rules={{ required: true, min: 150 }}\n                                            // rules={{\n                                            //     required: true, pattern: {\n\n                                            //         message: \"Description is required\",\n                                            //     },\n                                            // }}\n                                            render={({ field }) => {\n                                                return <JoditEditor\n                                                    ref={field.ref}\n                                                    value={field.value}\n                                                    // config={config}\n                                                    aria-invalid={errors.description ? \"true\" : \"false\"}\n                                                    placeholder=\"start typing\"\n                                                    tabIndex={1} // tabIndex of textarea\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\n                                                    onChange={field.onChange}\n                                                />\n                                            }}\n                                        />\n                                        {errors?.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\n                                    </div>\n                                </div>\n\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Country</label>\n\n                                        <select name=\"country\"\n                                            {...register(\"country\", { required: true })}>\n                                            aria-invalid={errors.country ? \"true\" : \"false\"}\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\n                                            {countries.data?.data?.map((option, key) => (\n                                                <><option key={key.id} value={option.id}>\n                                                    {option.name}\n                                                </option></>\n                                            ))}\n                                        </select>\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\n                                    </div>\n                                </div>\n                                {/* <div className=\"col-12\">\n                                        <div className=\"form-group mt-3\">\n                                            <select name=\"annual_revenue_range\"\n                                                {...register(\"annual_revenue_range\", { required: true })}>\n                                                {annualRevenue?.data?.data?.map((option, key) => (\n\n                                                    <option key={key.id} value={option.id} >\n                                                        {option.title}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\n                                        </div>\n                                    </div> */}\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>EIN Number/Tax Id</label>\n                                        <input\n                                            type=\"number\"\n                                            className=\"form-control\"\n                                            name=\"tax_id\"\n                                            placeholder=\"EIN Number/Tax Id(optional)\"\n                                            {...register(\"tax_id\", { required: true })}\n                                            // {...register(\"email\")}\n                                            aria-invalid={errors.tax_id ? \"true\" : \"false\"}\n                                        />\n                                        {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Social Media (required)</label>\n                                        <select name=\"social\"\n                                            {...register(\"social\", { required: true })}>\n                                            aria-invalid={errors.social ? \"true\" : \"false\"}\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\n                                            {socialmedia?.map((option, key) => (\n                                                <><option key={key.id} value={option.id}>\n                                                    {option.title}\n                                                </option></>\n                                            ))}\n                                        </select>\n                                        {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\n                                    </div>\n                                </div>\n\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Social Media (secondary)</label>\n                                        <div className=\"input-group-prepend\">\n\n                                            <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                name=\"social_link\"\n                                                placeholder=\"social link(optional) \"\n                                                {...register(\"social_link\")}\n                                            // {...register(\"email\")}\n                                            // aria-invalid={errors.social_link ? \"true\" : \"false\"}\n                                            />\n                                        </div>\n                                        {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\n                                    </div>\n                                </div>\n\n                                {/* <div className=\"col-12\">\n                                        <div className=\"form-group mt-3\">\n                                            <select name=\"project\"\n                                                {...register(\"hear_about\", { required: true })}>\n                                                {hereAbout?.data?.data?.map((option, key) => (\n\n                                                    <option key={key} value={option.id} >\n                                                        {option.title}\n                                                    </option>\n                                                ))}\n                                            </select>\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\n                                        </div>\n                                    </div> */}\n\n\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Banner</label>\n                                        <input\n                                            className=\"form-control p-2\"\n                                            type=\"file\"\n\n                                            name=\"banner_image\"\n                                            placeholder=\"Select file\"\n                                            disp\n                                            {...register(\"banner_image\", { required: true })}\n                                            aria-invalid={errors.banner_image ? \"true\" : \"false\"}\n                                        />\n                                        <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\n\n                                        {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <label>Logo</label>\n                                        <input\n                                            className=\"form-control p-2\"\n                                            type=\"file\"\n                                            name=\"logo\"\n                                            placeholder=\"Select file\"\n                                            {...register(\"logo\", { required: true })}\n                                            aria-invalid={errors.logo ? \"true\" : \"false\"}\n                                        />\n                                        <div className='logo_one'>\n\n                                            <span className='logo-dis'>maximum height should be 250 pixels</span>\n                                        </div>\n                                        {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\n                                    </div>\n                                </div>\n                                {/* <div className=\"col-12\">\n                                    <div className=\"form-group mt-3\">\n                                        <div className=\"form-check form-check-inline\">\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\n                                        </div>\n                                    </div>\n                                </div> */}\n                                <div className=\"col-12\">\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\n                                </div>\n                                {/* <div className=\"col-3\">\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => goBack()}>Previous</button>\n                                    </div> */}\n                            </div>\n                        </form>\n                        {/* </div> */}\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default RoleChangeOrganizationdetails","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport RoleChangeOrganizationdetails from '../components/Signup/roleChangeOrginazationdetails';\n\nexport const createOrganizationafterRoleChange = () => {\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <RoleChangeOrganizationdetails />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { GetSettings, } from '../../redux/Actions/projectAction';\nimport Web3 from 'web3';\nimport { BuyNft, } from '../Wallet/interact';\nimport { useState } from 'react';\nimport NftTransdataTable from './nftTRansTable';\nimport LatNftDataTable from '../Explore/latnftTable';\nimport DModal from '../Create/3dModal';\nimport BuyPopup from './buyPopup';\nimport { GetMatic } from './../ItemDetails/GetMAtic';\nimport { ResellActionDetails } from '../../redux/Actions/resellNftAction';\nimport { GetUserAction } from '../../redux/Actions/authAction';\nimport swal from 'sweetalert';\nimport { useLocation } from 'react-router-dom/cjs/react-router-dom.min';\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyKey);\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\nconst ResellNftDetails = (props) => {\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(true)\n    const [matic, setMatic] = useState('')\n    const [buymodalShow, setBuyModalShow] = React.useState(false);\n   \n    const slug = useParams();\n    const resellnftdetail = useSelector(state => {\n        return state.resell?.reselldetails\n    })\n    const getSett = useSelector(state => {\n        return state.projectdetails.settings\n    })\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\n    useEffect(() => {\n        (GetMatic(setMatic))\n        if(sessionStorage.getItem('authToken')){\n\n            dispatch(GetUserAction())\n        }\n        dispatch(ResellActionDetails(slug))\n        dispatch(GetSettings())\n    }, [slug])\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n    const buyHandler = () => {\n        \n        BuyNft({\n            contractAddress: resellnftdetail?.collectionData?.contract_id,\n            tokenId: resellnftdetail.token_id,\n            payFrom: resellnftdetail.pay_from,\n            values: setValue.value,\n            sellingCount: resellnftdetail.selling_count,\n            platformFee: ([resellnftdetail.payment_flow?.karmatica_fee]),\n            ownerFee: ([resellnftdetail.payment_flow?.project_data?.fees]),\n            ownerWallet: ([resellnftdetail.payment_flow?.project_data?.wallets]),\n            flow: ([resellnftdetail.payment_flow]),\n            proj_id: resellnftdetail.project_id,\n            nft_id: resellnftdetail.id,\n            refid: null,\n            loadingg: setLoading,\n            modal: setBuyModalShow,\n            dispatch\n        })\n    }\n    return (\n        <section className=\"item-details-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-between content_project px-0\">\n                    <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\n                        <span Class=\"title_main \" style={{ color: '#fff' }}>{resellnftdetail.title}  </span>\n                    </div>\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"item-info\">\n                            <><div className=\"item-thumb text-center\">\n                                {resellnftdetail.extention === \"PLayer\" &&\n                                    <video\n                                        // className=\"VideoInput_video\"\n                                        width=\"100%\"\n                                        // height={height}\n                                        controls\n                                        src={resellnftdetail.image}\n                                    // onChange={setSource}\n                                    />\n                                }\n                                {resellnftdetail.extention === \"modal\" &&\n                                    <DModal\n                                        vdo={resellnftdetail.image}\n                                    />\n                                }\n                                {resellnftdetail.extention === 'Image' &&\n                                    <img src={resellnftdetail.image} alt=\"\" />\n                                }\n                                {/* ) */}\n                                {/* })} */}\n                            </div>\n                            </>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\n                        <div className=\"content \">\n                            <div className=\"card no-hover position-relative\">\n                                <div className=\"owner align-items-start\">\n                                    <span className='boldertext w-100'>Owned By : </span>\n                                    <span>{resellnftdetail.owned_by}</span>\n                                </div>\n                                <div>\n                                    <span className='boldertext w-100'>Collection Name : </span>\n                                    <span> {resellnftdetail?.collectionData?.title}</span>\n                                </div>\n                                <div className=\"item-info-list\">\n                                    <ul className=\"list-unstyled mb-0\">\n                                        <span class='boldertext'>Token :</span>\n                                        <span> #{resellnftdetail.token_id?.slice(0,2)}</span>\n                                    </ul>\n                                </div>\n                                <div>\n                                    <span className='boldertext w-100'>Affiliate first sale royalties : </span>\n                                    <span> 30%</span>\n                                </div>\n                                <div>\n                                    <span className='boldertext w-100'>NFT creator royalties : </span>\n                                    <span> 10%</span>\n                                </div>\n                                <div>\n                                <span className='boldertext w-100'>Karmatica royalties : </span>\n                                <span> 1%</span>\n                            </div>\n                                <div className='eddlbtton d-flex gap- align-items-center mt-2 justify-content-between'>\n                                    <div className='eddlbtton flex-wrap d-flex gap-10  align-items-center mt-2'>\n                                        {resellnftdetail.sold_nft == 1 ? (\n                                            <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" disabled>SOLD OUT</button>\n                                        ) : (\n                                            <>\n                                                {resellnftdetail?.user_data?.wallet_id === window.ethereum.selectedAddress ? (\n                                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\n                                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\n                                                            disabled>Your NFT is now ready to purchase</span>\n                                                        </>\n                                                    </div>\n                                                ) : (\n                                                    <>\n                                                    {userdet.role == 3 ?(\n                                                        <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\n                                                        onClick={() => {\n                                                            swal(\"warning\", \"To buy this nft you need to change your creator account to buyer \", \"warning\")\n                                                        }}>Buy Now</button>\n                                                    ):(\n<>\n                                                        <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\n                                                            id=\"nftdetail.id\" onClick={() => { buyHandler(); setBuyModalShow(true); setLoading(true); }}>Buy Now</button><BuyPopup\n                                                                show={buymodalShow}\n                                                                loading={loading}\n                                                                onHide={() => setBuyModalShow(false)} />\n                                                                </>\n                                                    )}\n                                                            </>\n                                                )}\n                                            </>\n                                        )}\n                                    </div>\n                                    <div className='eddlbtton bitbtn d-flex  align-items-center mt-2'>\n                                        <div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-lg-8 mt-4\">\n                        <div class=\"user-description \">\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\n                            </h5>\n                            <p dangerouslySetInnerHTML={{ __html: resellnftdetail.description }} />\n                        </div>\n                    </div>\n                    <div className='col-lg-4 col-12 mt-4 '>\n                        <div className='price_nft'>\n                            <h5 className='user_title gap-5'>\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\n                                <div>Current price</div>\n                            </h5>\n                            <div className='price_nft_detail'>\n                                <div className='nft-price'>\n                                    <img src='../../../../img/image14.png' />\n                                    <span><small>{resellnftdetail.amount}  / ${resellnftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=''>\n                            <div className=\"profile_detail mt-4\">\n                                <LatNftDataTable\n                                // id={id}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='col-12 mt-4'>\n                        <div className='funddeatil table-detail '>\n                            <NftTransdataTable\n                                id={slug}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div >\n        </section >\n    );\n}\nexport default ResellNftDetails;","import { React } from 'react';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport ResellNftDetails from '../components/Auctions/resellNftBuy';\n\nconst ResellDetail = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <ResellNftDetails />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n\n}\n\nexport default ResellDetail;","import React, { Component, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n    CategoriesAction,\n    getPublicLiveProjects,\n} from \"../../redux/Actions/projectAction\";\nimport { ResellAction } from \"../../redux/Actions/resellNftAction\";\n\n\n\nconst ExploreAllResell = () => {\n    const slug = useParams();\n    const dispatch = useDispatch();\n    const nfts = useSelector((state) => {\n        return state?.resell?.resell;\n    });\n    console.log(nfts, \"resellnfts\");\n    useEffect(() => {\n        dispatch(ResellAction())\n\n    }, [dispatch]);\n    return (\n        <section className=\"explore-area\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12 col-md-8 col-lg-7\">\n                        <div className=\"intro text-center mb-4\">\n                            <h3 className=\"mt-3 mb-0\">\n                                All Reselled NFTs\n                            </h3>\n                            <p>\n                                Invest in NFTs that are based on real-life projects or events\n                                related to important causes\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row items explore-items h-auto\">\n                    {nfts && nfts.length ? (\n                        [\n                            ...new Map(\n                                nfts?.map((item) => [item[\"title\"], item])\n                            ).values(),\n                        ].map((item, idx) => {\n                            return (\n                                <Link\n                                    key={`edth_${idx}`}\n                                    className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\n                                >\n                                    <div>\n                                        <Link to={`/nft/resell/details/${item.slug}`}>\n                                            <div className=\"card\">\n                                                <div className=\"image-over\">\n                                                    <Link to={`/nft/resell/details/${item.slug}`}>\n                                                        <img\n                                                            className=\"card-img-top\"\n                                                            src={item.image}\n                                                            alt=\"\"\n                                                        />\n                                                    </Link>\n                                                    {/* <div className=\"image-over\">\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\n                                                </div>\n\n                                                <div className=\"card-caption col-12 p-0\">\n                                                    {/* Card Body */}\n                                                    <div className=\"card-body\">\n                                                        {/* <div className=\"countdown-times \">\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\n                                                    </div> */}\n                                                        <a >\n                                                            <h5 className=\"mb-0\">\n                                                                {item.title.slice(0, 15)}\n                                                            </h5>\n                                                        </a>\n                                                        <div\n                                                            className=\"seller d-flex align-items-center my-3\"\n\n                                                        >\n                                                            <span>Owned By</span>\n                                                            {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\n\n                                                            <a >\n                                                                <h6 className=\"ml-2 mb-0\">\n                                                                    {item.user_data.username.slice(0, 12)}\n                                                                </h6>\n                                                            </a>\n\n                                                            {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\n                                                        </div>\n                                                        <div className=\"card-bottom d-flex justify-content-between nft-price\">\n                                                            <span><img className=\"mr-1\" src='../../img/image14.png' />{Math.round(item.price)} MATIC</span>\n                                                            {/* {item?.number_of_nft == 1 ? ( */}\n                                                            <span>1 NFT</span>\n                                                            {/* ) : ( */}\n                                                            {/* <span>{item.number_of_nft} NFTs</span> */}\n                                                            {/* )} */}\n                                                        </div>\n                                                        <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\n                                                            <Link to={`/nft/resell/details/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\n\n\n                                                                <i className=\"icon-handbag\" />\n                                                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\n                                                            </Link>\n                                                            <Link to={`/nft/resell/details/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\n\n\n                                                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\n                                                            </Link>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Link>\n                                    </div>\n                                </Link>\n                            );\n                        })\n                    ) : (\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\n                            <h2 className=\"allproj2\">No NFTs found</h2>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </section>\n    );\n};\nexport default ExploreAllResell;\n","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\nimport ExploreAllResell from '../components/Explore/viewallResell';\n\nconst AllResellNft = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n\n            <ExploreAllResell />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n\n}\n\nexport default AllResellNft;","import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport {\n    EmailShareButton,\n    FacebookIcon,\n    FacebookShareButton,\n    InstapaperShareButton,\n    InstapaperIcon,\n    LineShareButton,\n    LinkedinShareButton,\n    PinterestShareButton,\n    RedditShareButton,\n    TelegramIcon,\n    TelegramShareButton,\n    TwitterIcon,\n    TwitterShareButton,\n    WhatsappIcon,\n    WhatsappShareButton,\n    LinkedinIcon,\n    EmailIcon,\n} from \"react-share\";\nimport {\n    FacebookShareCount,\n    HatenaShareCount,\n    OKShareCount,\n    PinterestShareCount,\n    RedditShareCount,\n    TumblrShareCount,\n    VKShareCount\n} from \"react-share\";\nimport { ModalHeader, Tooltip } from 'react-bootstrap';\nimport { useLocation } from 'react-router';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nfunction WidgetPopup(props) {\n    const location = useLocation();\n    const [copy, setCopy] = useState(false)\n    \n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n           <ModalHeader className='html_boxheader'>\n           <div>\n                    <a><i class=\"fa-regular html_box-close fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\n                </div>\n           </ModalHeader>\n            <Modal.Body className='refer-frnd html-box'>\n                <form className=\"item-form card no-hover\">\n                    <div className=\"row html_boxrow\">\n\n                        <div className=\" p-0\">\n\n                            <div className=\"form-group m-0\">\n                                {/* <label>Display name</label> */}\n                                <textarea\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"display_name\"\n                                    value={props.data}\n                                    \n                                   \n                                />\n\n\n                            </div>\n                           \n                        </div>\n                        <div className=\" p-0 copy_text\">\n                            \n\n                                <CopyToClipboard text={props.data} >\n                                    <div className='copy'>\n\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && sessionStorage.getItem('authToken') ? false : true}></i></a>\n                                    </div>\n                                </CopyToClipboard>\n                           \n                            {copy == true &&\n                                <span className='copytext'>Copied!</span>\n\n                            }\n\n\n                        </div>\n                    </div>\n\n\n                </form>\n            </Modal.Body>\n            {/* <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer> */}\n        </Modal>\n    );\n}\n\nexport default WidgetPopup","\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Collapse } from 'antd';\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\nimport { useLocation, useParams } from 'react-router';\nimport { Table } from 'react-bootstrap';\nimport { GetUserAction } from '../../redux/Actions/authAction';\nimport { Link } from 'react-router-dom';\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { NftList } from '../../redux/Actions/projectAction';\nimport dayjs from 'dayjs';\nimport WidgetPopup from './widgetPopup';\nimport { set } from 'react-hook-form';\nconst RefralTransdataTable = (props) => {\n    const dispatch = useDispatch()\n    const [projSlug, setProjSlug] = useState(\" \")\n    const [nftSlug, setNftslug] = useState(\" \")\n    const [nftData, setNftdata] = useState()\n    console.log('nftSlug', nftSlug)\n    const { Panel } = Collapse;\n    console.log('projSlug', projSlug)\n    const onChange = (key) => {\n        console.log(key);\n    };\n    const [copy, setCopy] = useState(false)\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\n    const [widgetModalShow, setWidgetModalShow] = useState(false)\n    const onPositionChange = (newExpandIconPosition) => {\n        setExpandIconPosition(newExpandIconPosition);\n    };\n    const nftdetail = useSelector(state => {\n        return state.projectdetails.nftlist\n    })\n\n    const userdet = useSelector(state => {\n        \n        return state?.user?.userdetail\n    })\nconsole.log('nftdetail', nftdetail)\n    const projects = useSelector(state => {\n        return state?.projectdetails?.projects\n    })\n    console.log('projects', projects)\n    console.log(projects, 'projects')\n    const HandleProj = (e) => {\n        setProjSlug(e?.currentTarget?.value)\n        // if (projSlug != \" \") {\n            dispatch(ProjectDetail(e?.currentTarget?.value))\n            setNftslug(\" \")\n        // }\n        if (nftSlug != \" \") {\n\n            dispatch(NftList(nftSlug))\n        }\n    }\n    // const HandleNFT = (e) => {\n    //     // setProjSlug(e?.currentTarget?.value)\n    //     // if (projSlug != \" \") {\n    //         {projects?.data?.nft_data?.map((key)=>{\n\n    //             set\n    //         })}\n    //         // setNftslug(\" \")\n    //     // }\n    //     if (nftSlug != \" \") {\n\n    //         dispatch(NftList(nftSlug))\n    //     }\n    // }\n\n    const count = 1\n    useEffect(() => {\n        dispatch(ProjectList({ location, count: count }))\n    }, [dispatch])\n\n    const location = useLocation()\n    useEffect(() => {\n        dispatch(GetUserAction())\n    }, [props.id])\n\n    const projdetail = useSelector(state => {\n        return state?.projectdetails?.projectdetails\n    })\n\n    // useEffect(() => {\n    //     if (projSlug != \" \") {\n    //         dispatch(ProjectDetail(projSlug))\n    //     }\n    //     if (nftSlug != \" \") {\n\n    //         dispatch(NftList(nftSlug))\n    //     }\n    // }, [projSlug, nftSlug])\n\n    console.log('projdetail', projdetail)\n\n    return (\n        <footer className=\"item-details-area referal-detail\">\n            {/* Footer Top */}\n            <div >\n                <div className=\"container\">\n                    <Tabs>\n                        <TabList>\n                            <Tab>How To Earn</Tab>\n                            <Tab>My Referrals</Tab>\n                            <Tab>Referral Widget</Tab>\n                        </TabList>\n                        <TabPanel>\n                            <div className=\"pb-5\"> <h3>How Creator and Referral MATIC Rewards Work</h3>\n                                <div className='main-heading'>\n                                    <div>Affiliates get 30% on first level NFT referred sales at Karmatica.io only.</div>\n                                    <div>Creators get 10% of secondary NFT sales for the lifetime of the project.</div>\n                                </div>\n                                <div className='referal-main'>\n                                    <h5>NFT sale to BUYER 1 </h5>\n                                    <ul>\n                                        <li><span>69%</span> goes to Creator </li>\n                                        <li><span>30%</span> goes to Affiliate</li>\n                                        <li><span>1% </span>to Karmatica</li>\n                                    </ul>\n                                </div>\n                                <div className='referal-main'>\n                                    <h5>NFT resold from BUYER 1 to BUYER 2 via Affiliate</h5>\n                                    <ul>\n                                        <li> <span>84%</span> goes to BUYER 1</li>\n                                        <li> <span>10%</span> goes to NFT Creator</li>\n                                        <li> <span>5% </span>goes to Affiliate </li>\n                                        <li> <span>1% </span>to Karmatica</li>\n                                    </ul>\n                                </div></div>\n                        </TabPanel>\n                        <TabPanel>\n                            <div className='position-relative'>\n                                <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\n                                    <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                        <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                        <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                                    </svg>\n                                    <Panel header=\"Referral Activity\" key=\"1\">\n                                        <Table responsive className='m-0' >\n                                            <thead>\n                                                <tr>\n                                                    <th>Item</th>\n                                                    <th>Token</th>\n                                                    <th>NFT Price</th>\n                                                    <th>Referral Amount</th>\n                                                    <th>Collection</th>\n                                                    <th>From</th>\n                                                    <th>To</th>\n                                                    <th>Transaction</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {userdet?.referral_history?.map((items) => {\n                                                    return (\n                                                        <><tr className='contract-address'>\n                                                            <td ><Link to={`/nftprojdetails/${items.slug}`} >{items.title?.slice(0, 20)}</Link>...</td>\n                                                            <td>#{items.token_id?.slice(0, 2)}</td>\n                                                            <td>{items.price}</td>\n                                                            {/* <td>{items.referral_amount} </td> */}\n                                                            <td className='referal'>{items.referral_amount} <img src='../../img/image14.png' /></td>\n                                                            <td><Link to={`/popularcollection/details/${items.collection_slug}`}>{items.collection_name}</Link></td>\n                                                            <td>{items.pay_from?.slice(0, 4)}...{items.pay_from?.slice(35, 44)}</td>\n                                                            <td>{items.pay_to?.slice(0, 4)}...{items.pay_to?.slice(35, 44)}</td>\n                                                            <td><a target=\"_blank\" href={`https://polygonscan.com/tx/${items?.transaction_hash}`} >{items.transaction_hash?.slice(0, 4)}...{items.transaction_hash?.slice(35, 44)}</a></td>\n                                                        </tr>\n                                                        </>\n                                                    )\n                                                })}\n                                            </tbody>\n                                        </Table>\n                                        <div className='nothing'>\n                                            {userdet?.referral_history?.length == 0 &&\n                                                <span> No matching records found</span>\n                                            }\n                                        </div>\n                                    </Panel>\n                                </Collapse>\n                            </div>\n                        </TabPanel>\n                        <TabPanel>\n                            <h6 className='top-content'>Share with friends using our NFT widget on your website.<br />\n                                Upload your NFTs to get an affiliate referral link to earn 30% of NFTs sold in MATIC</h6>\n                            <div className=\"col-12 col-md-12 pr-0 pl-0 select_bar\">\n                                <div className=\"form-group\">\n                                    <label>Select Project</label>\n                                    <select name=\"category_id\"\n                                        onChange={HandleProj}\n                                    >\n                                        <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select project </option>\n\n                                        {projects?.data?.map((option, key) => (\n                                            <option key={key.slug} value={option.slug}  >\n                                                {option.title}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </div>\n                            </div>\n\n                            <div className=\"col-12 mt-4\">\n                                <div className='nfts_main' id='invest'>\n                                    <div className='intro row m-0 p-0'>\n                                        {projSlug !== \" \" &&\n\n                                            <div className=\"intro-content\">\n                                                <span >NFTs</span>\n                                                <h3 className=\"w-full mb-0 pt-4\">NFTs</h3>\n                                            </div>\n                                        }\n                                    </div>\n                                    <div className=\"row items mt-0 explore-items px-0\">\n                                        {copy == true &&\n                                            <span className='copytext'>Copied!</span>\n\n                                        }\n                                        {projdetail?.nft_data?.map((x, idx) => {\n                                            const iFrame = `<iframe id=\"inlineFrameExample\"\n                                 title=\"Inline Frame Example\"\n                                 width=\"100%\"\n                                 height=\"auto\"\n                                 src='https://app.karmatica.io/referral/widget/${x.slug}'>\n                             </iframe>`\n                                            return (\n\n                                                <><div key={`eds_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item \">\n                                                    <div className=\"card no-hover m-0\" onClick={() => setNftslug(x.slug)}>\n\n                                                        <div className=\"image-over relative\">\n                                                            {x.user_id == projdetail.user_id ? (\n                                                                <>\n                                                                    {/* <Link to={`/nft/details/${x.slug}?project=${slug}`}> */}\n                                                                    {x.extention === 'Player' || x.extention === 'modal' ? (\n                                                                        <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\n                                                                    ) : (\n                                                                        <img className=\"card-img-top\" src={x.image} alt=\"\" />\n                                                                    )}\n                                                                    {/* </Link> */}\n                                                                </>\n                                                            ) : (\n                                                                // <Link to={`/nft/details/${x.slug}?project=${slug}`}>\n                                                                <>\n                                                                    {x.extention === 'Player' || x.extention === 'modal' ? (\n                                                                        <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\n                                                                    ) : (\n                                                                        <img className=\"card-img-top\" src={x.image} alt=\"\" />\n                                                                    )}\n                                                                </>\n                                                                // </Link>\n                                                            )}\n                                                            <div className='token'>\n                                                                <span>#{x?.token_id?.slice(0, 2)}</span>\n                                                                <span className='cards-icons'>\n                                                                    {/* {x.is_mint == 0 && */}\n                                                                    {/* // <Link to={`/nft/details/${x.slug}?project=${slug}`} ><i className=\"fa-solid fa-pen\" /></Link> */}\n                                                                    {/* } */}\n                                                                </span>\n                                                            </div>\n                                                            {/* Author */}\n                                                        </div>\n                                                        {/* Card Caption */}\n                                                        <div className=\"card-caption px-0 col-12 \">\n                                                            {/* Card Body */}\n                                                            <div className=\"card-body\">\n                                                                {/* <a href=\"#\" className=\"d-flex justify-content-between align-items-center\">\n                                                                    <h5 className=\"m-0 pb-2 p-0 text-capitalize\">{x.title.slice(0, 16)}...</h5>\n                                                                </a> */}\n                                                                <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\n                                                                    Project Name:<span>{x?.project_name?.slice(0, 12)}..</span>\n                                                                </div>\n                                                                <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\n                                                                    NFT Name :<span>{x?.title?.slice(0, 12)}..</span>\n                                                                </div>\n                                                                <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\n                                                                    NFT Price :<span> {x?.price} (MATIC)</span>\n                                                                </div>\n                                                                <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\n                                                                    NFT End-Date :<span>{dayjs(x?.end_date).format(\"DD MMM YYYY\")}</span>\n                                                                </div>\n\n\n                                                            </div>\n                                                        </div>\n\n                                                        <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setWidgetModalShow(true)}></i>\n                                                        <WidgetPopup\n                                                            data={iFrame}\n                                                            show={widgetModalShow}\n                                                            onHide={() => setWidgetModalShow(false)}\n                                                        />\n\n                                                    </div>\n\n                                                </div>\n\n                                                </>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        </TabPanel>\n                    </Tabs>\n                </div>\n            </div>\n        </footer>\n\n    )\n}\nexport default RefralTransdataTable","import { React } from 'react';\n\nimport Header from '../components/Header/Header';\n\nimport Footer from '../components/Footer/Footer';\nimport ModalSearch from '../components/Modal/ModalSearch';\nimport ModalMenu from '../components/Modal/ModalMenu';\nimport Scrollup from '../components/Scrollup/Scrollup';\n\nimport RefralTransdataTable from '../components/Explore/viewReferals';\n\nconst AllReraltrans = () => {\n\n    return (\n        <div className=\"main\">\n            <Header />\n            <RefralTransdataTable />\n            <Footer />\n            <ModalSearch />\n            <ModalMenu />\n            <Scrollup />\n        </div>\n    );\n}\n\n\nexport default AllReraltrans;","import { Button, Result } from 'antd'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst NotFound = () => {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Link to='/'><Button type=\"submit\" className='table-btn'>Back Home</Button></Link>}\n        />\n    )\n}\n\nexport default NotFound","import React, { Component, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useParams } from 'react-router';\nimport { GetNftwol, GetSettings } from '../../redux/Actions/projectAction';\n\n\nimport { BuyNft } from '../Wallet/interact';\n\nimport { useState } from 'react';\nimport DModal from '../Create/3dModal';\nimport { GetUserAction } from '../../redux/Actions/authAction';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport dayjs from 'dayjs';\n\n\nconst Widget = () => {\n    const dispatch = useDispatch()\n\n    const slug = useParams();\n\n    const latprojnftdetail = useSelector(state => {\n        return state.projectdetails.getnftwoldetails\n    })\n\n\n    const userdet = useSelector(state => {\n        return state?.user?.userdetail\n    })\n\n    useEffect(() => {\n        dispatch(GetUserAction())\n        dispatch(GetNftwol(slug))\n\n    }, [slug])\n    const [copy, setCopy] = useState(false)\n\nconst location = useLocation()\n\nconst userprojurl = `http://localhost:3000/referral/widget/${slug.slug}` + `?refid=${latprojnftdetail?.user_data?.wallet_id}`\n    return (\n        <section className=\"item-details-area\">\n            {/* <Spin spinning={loading}> */}\n            <div className=\"container\">\n\n                <div className=\"row justify-content-between content_project px-0\">\n                    <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\n                        <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}  </span>\n                    </div>\n                    <div className=\"col-12 col-lg-4\">\n\n                        <div className=\"item-info\">\n\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\n\n                                <>\n                                    {latprojnftdetail.extention === \"Player\" &&\n                                        <>\n                                            <video\n                                                width=\"100%\"\n                                                controls\n                                                src={latprojnftdetail.image}\n                                            />\n                                        </>\n                                    }\n                                    {latprojnftdetail.extention === \"modal\" &&\n                                        <>\n                                            <DModal\n                                                vdo={latprojnftdetail.image}\n\n                                            />\n                                        </>\n                                    }\n                                    {latprojnftdetail.extention === 'Image' &&\n                                        <>\n\n                                            <img src={latprojnftdetail.image} alt=\"\" />\n                                        </>\n                                    }\n\n                                </>\n\n                            </div>\n\n                            </>\n\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\n\n                        <div className=\"content \">\n                            <div className=\"card no-hover position-relative\">\n\n                                <div className=\"owner align-items-start\">\n                                    <span className='boldertext w-100'>Project Name : </span>\n                                    <span>{latprojnftdetail.project_name}</span>\n                                </div>\n                                <div className=\"owner align-items-start\">\n                                    <span className='boldertext w-100'>Project Price : </span>\n                                    <span>{latprojnftdetail.price}</span>\n                                </div>\n\n                                <div className=\"item-info-list\">\n                                    <ul className=\"list-unstyled mb-0\">\n                                        <span class='boldertext'>End-Date</span>\n                                        <span> {dayjs(latprojnftdetail.end_date).format(\"DD MMM YYYY\")}</span>\n                                    </ul>\n                                </div>\n                                <div className=\"row\">\n\n                                    <div className=\"col-10 p-0\">\n\n                                        <div className=\"form-group m-0\">\n\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                name=\"display_name\"\n                                                value={`https://app.karmatica.io/referral/widget/${slug.slug}`+`?refid=${latprojnftdetail?.user_data?.wallet_id}`}\n\n                                            />\n\n\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div className=\"col-2 p-0 text-right\">\n                                <CopyToClipboard text={userprojurl} >\n                                    <div className='copy'>\n\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && sessionStorage.getItem('authToken') ? false : true}></i></a>\n                                    </div>\n                                </CopyToClipboard>\n                            \n                            {copy == true &&\n                                <span className='copytext'>Copied!</span>\n\n                            }\n\n\n                        </div>\n                            </div>\n                        </div>\n\n\n\n\n\n\n\n                    </div>\n                </div >\n                </div >\n\n\n        </section >\n    );\n}\n\n\nexport default Widget;","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n// importing all the themes\nimport ThemeOne from \"../themes/theme-one\";\nimport ExploreOne from \"../themes/explore-one\";\nimport ExploreTwo from \"../themes/project-list\";\nimport ExploreFour from \"../themes/latestProjects\";\nimport Auctions from \"../themes/auctions\";\nimport ItemDetails from \"../themes/item-details\";\nimport HelpCenter from \"../themes/help-center\";\nimport Author from \"../themes/author\";\nimport WalletConnect from \"../themes/wallet-connect\";\nimport Create from \"../themes/create\";\nimport Login from \"../themes/login\";\nimport Signup from \"../themes/signup\";\nimport Contact from \"../themes/contact\";\nimport Forgot from \"../themes/forgotpassword\";\nimport PrivateRoute from \"./privateRoutes\";\nimport ProjectUpdate from \"../themes/update\";\nimport TermsCond from \"../themes/term&cond\";\nimport All from \"../themes/viewalllatest\";\nimport ColExplore from \"../themes/exploreCollections\";\nimport Aboutus from \"../themes/Aboutus\";\nimport latprojDetails from \"../themes/latproj-details\";\nimport Showcollections from \"../themes/showcollections\";\nimport CollectionDetail from \"../themes/collectn-details\";\nimport ProjNft from \"../themes/projnft-details\";\nimport Nft from './../themes/nft-list';\nimport FundDetail from \"../themes/fund-detail\";\nimport latnftprojDetails from \"../themes/Latnft\";\nimport ScrollToTop from \"../ScrollToTop\";\nimport EditNft from \"../components/Create/editNft\";\nimport AddNFT from \"../themes/addnftTheme\";\nimport AllFundraiser from \"../themes/allFundproj\";\nimport AllFundraiserProjects from \"../themes/fund-projects\";\nimport FundraiserProjects from \"../themes/fundraise\";\nimport NftReward from \"../themes/rwrd\";\nimport Notifi from \"../themes/allnot\";\nimport BuyedNft from \"../themes/buyed-nft\";\nimport BuyNftDetail from \"../themes/buyNft-details\";\nimport { createOrganizationafterRoleChange } from \"../themes/rolechange-organization\";\nimport ResellDetail from \"../themes/resell-details\";\nimport AllResellNft from \"../themes/allresellNfts\";\nimport AllReraltrans from \"../themes/all-refrals\";\nimport NotFound from \"../notFound\";\nimport Widget from \"../components/Explore/widget\";\n\n\nconst MyRouts = () => {\n  return (\n    <div>\n      <BrowserRouter>\n        <ScrollToTop />\n        <Switch>\n          <Route exact path=\"/\" component={ThemeOne} />\n\n          <Route exact path=\"/explore-1\" component={ExploreOne} />\n          <PrivateRoute exact path=\"/projectlist\" component={ExploreTwo} />\n          <Route exact path=\"/create/organization\" component={createOrganizationafterRoleChange} />\n          <PrivateRoute exact path=\"/allnotifications\" component={Notifi} />\n          <PrivateRoute exact path=\"/updateproject/:id\" component={ProjectUpdate} />\n          <Route exact path=\"/explore-4\" component={ExploreFour} />\n          <Route exact path=\"/nft/resell/details/:slug\" component={ResellDetail} />\n          <PrivateRoute exact path=\"/my/nfts\" component={BuyedNft} />\n          <Route exact path=\"/my/nfts-detail/:slug\" component={BuyNftDetail} />\n          <Route exact path=\"/rewards\" component={NftReward} />\n          <Route exact path=\"/auctions\" component={Auctions} />\n          <Route exact path=\"/popularcollection/details/:slug\" component={ItemDetails} />\n          <Route exact path=\"/projects/:slug\" component={latprojDetails} />\n          <PrivateRoute exact path=\"/referrals-detail\" component={AllReraltrans} />\n          <Route exact path=\"/nftprojdetails/:slug\" component={latnftprojDetails} />\n          <Route exact path=\"/fundraiser/detail/:user_id\" component={FundDetail} />\n          <Route exact path=\"/myfundraiser/detail/:user_id\" component={FundraiserProjects} />\n          <PrivateRoute exact path=\"/projnftdetails/:slug\" component={ProjNft} />\n          <PrivateRoute exact path=\"/referral/widget/:slug\" component={Widget} />\n          <Route exact path=\"/allfundraise\" component={AllFundraiser} />\n          <Route exact path=\"/all/fundraise/projects/:user_id\" component={AllFundraiserProjects} />\n          <PrivateRoute exact path=\"/nft/details/:id\" component={Nft} />\n          <PrivateRoute exact path=\"/nftedit/:id/:id\" component={EditNft} />\n          <PrivateRoute exact path=\"/addnft/:id\" component={AddNFT} />\n          <Route exact path=\"/help-center\" component={HelpCenter} />\n          <PrivateRoute exact path=\"/profile\" component={Author} />\n          <Route exact path=\"/terms&conditions\" component={TermsCond} />\n          <Route exact path=\"/all/:type\" component={All} />\n          <Route exact path=\"/all/resll/nfts\" component={AllResellNft} />\n          <Route exact path=\"/aboutus\" component={Aboutus} />\n          <Route exact path=\"/allcollections\" component={ColExplore} />\n          <Route exact path=\"/wallet-connect\" component={WalletConnect} />\n          <Route exact path=\"/my-collections\" component={Showcollections} />\n          <Route exact path=\"/collection/:id\" component={CollectionDetail} />\n          <Route exact path=\"/create\" component={Create} />\n          <PrivateRoute exact path=\"/forgotpassword\" component={Forgot} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route exact path=\"*\" component={NotFound} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\nexport default MyRouts\n","import React from 'react';\nimport { useEffect } from 'react';\nimport MyRouts from './routers/routes'\n\nfunction App() {\n  return (\n    <div>\n\n      <MyRouts />\n    </div>\n  );\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\nimport { authReducer } from '../redux/Slices/authSlice'\nimport { combineReducers } from '@reduxjs/toolkit'\nimport { projectReducer } from './Slices/projectSlice'\nimport { footerReducer } from './Slices/footerSlice'\nimport { fundraiserReducer } from './Slices/fundraiserSlice'\nimport { collectionReducer } from './Slices/popularCollectionSlice'\nimport { contactReducer } from './Slices/contactSlice';\nimport { resellReducer } from './Slices/resellNftSlice'\n\nconst reducer = combineReducers({\n    user: authReducer,\n    countries: authReducer,\n    annualRevenue: authReducer,\n    hereAbout: authReducer,\n    login: authReducer,\n    forgotpassword: authReducer,\n    errmessage: authReducer,\n    createproject: projectReducer,\n    // getproject: projectReducer,\n    projectdetails: projectReducer,\n    latestprojects: projectReducer,\n    fundraiser: fundraiserReducer,\n    footer: footerReducer,\n    collection: collectionReducer,\n    getcollections: collectionReducer,\n    getcollectiondetails: collectionReducer,\n    getSocialmediaIcons: projectReducer,\n    contact: contactReducer,\n    resell: resellReducer\n    // userDetail: authReducer,\n\n    // Nftlist: projectReducer\n})\n\nconst store = configureStore({\n    reducer,\n})\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css'\nimport App from './App';\nimport store from '../src/redux/store';\nimport { Provider } from 'react-redux'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3-0wM\",\"formCard\":\"styles_formCard__1QZ1M\",\"formRow\":\"styles_formRow__VvUkJ\",\"back\":\"styles_back__1Wf9Y\",\"input-error\":\"styles_input-error__2LB1_\",\"error\":\"styles_error__1St-a\",\"disabledBtn\":\"styles_disabledBtn__1p8cC\",\"steps\":\"styles_steps__1ABwy\",\"errorText\":\"styles_errorText__3FOf8\",\"hideForm\":\"styles_hideForm__S4n3A\",\"showForm\":\"styles_showForm__1L2Tp\"};"],"sourceRoot":""}