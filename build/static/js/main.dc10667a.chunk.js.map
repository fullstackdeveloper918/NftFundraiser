{"version":3,"sources":["components/Signup/styles/styles.module.scss","redux/Slices/authSlice.js","redux/Slices/projectSlice.js","redux/Actions/logsAction.js","redux/Actions/projectAction.js","components/Wallet/interact.js","redux/Actions/authAction.js","components/Header/Header.js","components/Hero/Hero.js","components/Auctions/AuctionsOne.js","redux/Slices/popularCollectionSlice.js","redux/Actions/popularAction.js","components/Collections/Collections.js","components/Work/Work.js","redux/Slices/footerSlice.js","redux/Actions/footerAction.js","components/Footer/Footer.js","components/Modal/ModalSearch.js","components/Modal/ModalMenu.js","components/Scrollup/Scrollup.js","redux/Slices/fundraiserSlice.js","redux/Actions/fundraiserAction.js","components/TopSeller/topfundraiser.js","redux/Slices/resellNftSlice.js","redux/Actions/resellNftAction.js","components/Auctions/resellNft.js","themes/theme-one.js","components/Breadcrumb/Breadcrumb.js","components/Explore/ExploreTwo.js","themes/explore-one.js","components/Loader/loader.js","components/Explore/ProjectList.js","themes/project-list.js","themes/latestProjects.js","components/Explore/LatestProjects.js","themes/auctions.js","readMore.js","components/TopSeller/fundPaymenttable.js","components/AuthorProfile/userDetails.js","components/AuthorProfile/userTransTable.js","components/Create/projectDetailpopup.js","components/Explore/projDetailtable.js","components/Explore/latProjNftdata.js","components/Auctions/projectnfts.js","components/Collections/collectionNfts.js","components/Explore/popularDetails.js","themes/item-details.js","components/HelpCenter/HelpCenter.js","components/Faq/Faq.js","themes/help-center.js","shared/Upload.js","utils/blobfromurl.js","components/Create/editBanner.js","components/AuthorProfile/avatarUpload.js","components/AuthorProfile/bannerUpload.js","components/AuthorProfile/AuthorProfile.js","components/Explore/ExploreSix.js","components/Author/Author.js","themes/author.js","components/Wallet/Wallet.js","themes/wallet-connect.js","components/Create/Context/context.js","components/Create/Create.js","components/Create/createCollection.js","components/Create/3dModal.js","components/Create/ProjectTypePopup.js","components/Create/uploadNft.js","components/Create/index.js","themes/create.js","components/Login/Login.js","themes/login.js","components/Signup/FormCard.js","components/Signup/Context/context.js","components/Signup/Signup.js","components/Signup/createOrganization.js","components/Signup/index.js","themes/signup.js","redux/Slices/contactSlice.js","components/Contact/Contact.js","redux/Actions/contactAction.js","themes/contact.js","components/ForgotPassword/forgotPassword.js","themes/forgotpassword.js","routers/utils.js","routers/privateRoutes.js","components/Create/geoLocation.js","Edit/editProject.js","themes/update.js","components/Footer/t&c.js","themes/term&cond.js","components/Explore/viewAllLatest.js","themes/viewalllatest.js","components/Collections/exploreCollection.js","themes/exploreCollections.js","components/Footer/about.js","themes/Aboutus.js","components/ItemDetails/refralPopup.js","components/Create/editNft.js","components/Explore/nftdataTable.js","components/ItemDetails/GetMAtic.js","components/ItemDetails/viewProdetails.js","themes/latproj-details.js","components/Create/showCollections.js","themes/showcollections.js","components/Create/bread-crumb.js","components/Create/collectionDetail.js","themes/collectn-details.js","components/Create/desPopup.js","components/Create/projdetails.js","themes/projnft-details.js","components/ItemDetails/nftAuctiontable.js","components/ItemDetails/nftPopup.js","components/ItemDetails/sellPopup.js","components/Create/editNftNamepopup.js","components/Create/editDescPopup.js","components/Create/nftImageeditPopup.js","components/ItemDetails/nftDetails.js","themes/nft-list.js","components/TopSeller/fundraiserdetail.js","components/TopSeller/fundraiserDetails.js","themes/fund-detail.js","components/Auctions/nftTRansTable.js","components/Explore/latnftTable.js","components/Auctions/bidPopup.js","components/Auctions/timer.js","components/Auctions/buyPopup.js","components/Auctions/nftBuy.js","themes/Latnft.js","ScrollToTop.js","components/Create/addNft.js","themes/addnftTheme.js","components/Explore/fundraiserProjects.js","themes/allFundproj.js","components/Explore/fundProj.js","themes/fund-projects.js","components/Explore/my_fundraise.js","themes/fundraise.js","components/Footer/reward.js","themes/rwrd.js","components/Header/Allnotifications.js","themes/allnot.js","components/Explore/BuyedNfts.js","themes/buyed-nft.js","components/Explore/NftBuyData.js","components/Explore/NftBuyedDetails.js","themes/buyNft-details.js","components/Signup/roleChangeOrginazationdetails.js","themes/rolechange-organization.js","components/Auctions/resellNftBuy.js","themes/resell-details.js","components/Explore/viewallResell.js","themes/allresellNfts.js","components/Explore/viewReferals.js","themes/all-refrals.js","routers/routes.js","App.js","redux/store.js","index.js","components/Create/styles/styles.module.scss"],"names":["module","exports","userToken","localStorage","getItem","authSlice","createSlice","name","initialState","user","userdetail","role","logout","message","countries","states","city","noti","annualRevenue","hereAbout","updpro","wallesign","organization","reducers","registerSuccess","state","action","payload","data","auth_token","setItem","registerFail","response","allnotification","updateprofile","userDetail","loginSuccess","logoutSuccess","removeItem","forgotpasswordSuccess","createOrganizationSuccess","wallsignin","getCountryList","getStateList","getCityList","getAnnualRevenueList","getHearAboutList","authReducer","reducer","actions","projectSlice","project","projects","nftlist","projectdetails","latestprojectdetails","categories","collections","getcollections","getcollectiondetails","collectiondetails","getSocialmediaIcons","getfundProjDetails","getmostProjActivity","getBuyedNftdetails","getnftwoldetails","settings","liveProjectsPag","nftadd","nftres","nftupdate","updbanner","matic","liveProjects","LatestProjects","RecentCampaigns","createProjectSuccess","createCollectionSuccess","getCollections","getsocial","getCollectionDetails","getNftwolDetails","nftUpd","nftAdd","getfundprojdetails","getmostprojactivity","getbuyednftdetails","getProjectList","getMatic","getCategoriesList","getSettings","getLatestProjectList","createFail","getProjectDetail","getCollectionDetail","Nftres","getNftList","getLatestProjectDetail","updatebanner","publicLiveProjects","type","res","publicLiveProjectspagination","deleteProject","id","filter","item","projectReducer","LogsAction","params","dispatch","formData","FormData","append","config","headers","transformRequest","axios","post","process","console","log","CreateProjectAction","setLoading","history","token","Authorization","status","swal","title","text","icon","buttons","timer","then","push","ProjectDetail","slug","get","LatestProjectDetail","ProjectList","NftList","uploadNFT","nft","i","length","success","getPublicLiveProjects","createAsyncThunk","thunkAPI","setLatestData","projectType","latitude","longitude","UpdateProject","props","onHide","CategoriesAction","GetCollectionsAction","GetSocialMediaIcons","GetSettings","GetNftwol","GetfundraiserProject","UpdateNft","nft_id","AddNftAction","projid","window","location","getBid","UpdateBId","GetbuyedNftDetails","ResellNft","createAlchemyWeb3","require","contractABI","isMetaMaskInstalled","Boolean","ethereum","web3","Roles","creatorWalletUpdate","selectedAddress","UpdateWalletAddress","ConnectWallet","chainId","networkVersion","request","method","utils","toHex","code","chainName","nativeCurrency","decimals","symbol","rpcUrls","addressArray","obj","address","target","rel","href","getCurrentWalletConnected","UpdateStatus","token_id","transaction_hash","pay_from","pay_to","price","start_date","end_date","UpdateContract","collid","contractAddress","CreateMetaDataAndMint","_imgBuffer","_des","_name","setCurrent","nft_file_content","setModalShow","eth","Contract","abi","contract","sendTransaction","to","from","methods","mint","encodeABI","on","hash","receipt","confNumber","tokid","hexToNumber","logs","topics","transactionHash","error","UpdateBuyHistory","proj_id","refid","txd_id","payFrom","tokenId","values","updateReffid","referral_fees","fees","BuyNft","platformFee","sellingCount","ownerFee","flow","ownerWallet","loadingg","modal","wallets","fee","buyer_data","map","x","karmatica_fees","project_data","nftContract","memory_clients","wal","memory_amounts","amt","amountToSend","toWei","transferowner","buyNft","JSON","stringify","UpdateBid","amount","project_id","BidNft","Register","GetUserAction","CreateOrganizationAfterRoleChange","CountryList","StateList","CityList","AnnualRevenueList","HearAboutList","UpdateProfileAction","Swal","fire","html","showCloseButton","showConfirmButton","focusConfirm","AllNoti","NotiDelete","delete","Header","useLocation","useHistory","useDispatch","useState","setAddress","add1","slice","toUpperCase","add2","userRole","useSelector","notification","useNotification","useEffect","getSelectedAddress","accounts","addEventListener","handleBeforeUnload","removeEventListener","e","preventDefault","returnValue","userdet","notiHandler","activeOption","setActiveOption","toast","configure","roleHandler","ChangeUserRole","WalletHandler","is_new_user","continue","skip","value","className","src","alt","exact","activeClassName","onClick","confirmButtonText","confirmButtonAriaLabel","pathname","notification_count","moment","created_at","format","style","color","backgroundColor","email","class","display","user_id","projectTypesMap","Hero","options","enableHighAccuracy","timeout","maximumAge","pos","crd","coords","errors","err","warn","mostactivityProjects","cursor","navigator","geolocation","permissions","query","result","getCurrentPosition","onchange","alert","image","user_data","username","xmlns","viewBox","version","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fill","fillRule","points","dur","repeatCount","attributeName","AuctionsOne","match","join","idx","Math","round","number_of_nft","collectionSlice","collection","collectiondetail","getPopularCollection","getPopularCollectiondetails","collectionReducer","PopularCollectionAction","PopularCollectionActionDetails","Collections","coll","avatar","width","height","nft_data","preHeading","heading","workData","Work","footerSlice","footer","aboutus","getfooter","getabout","footerReducer","getFooter","AboutUsAction","Footer","Date","getFullYear","ModalSearch","placeholder","ModalMenu","Scrollup","fundraiserSlice","fundraiser","fundraiserdetail","getTopFundraiser","getTopFundraiserDetail","fundraiserReducer","TopFundraiserAction","TopFundraiserDetail","Fundraiser","fund","organization_detail","banner_image","organization_name","Number","resellSlice","resell","reselldetails","getResell","getReselldetails","resellReducer","ResellAction","Resell","nfts","Home","Breadcrumb","this","subpage","page","Component","ExploreTwo","exploreData","setState","catch","btnText","img","owner","ExploreOne","Loader","Spinner","animation","margin","GetAllProjects","loading","showDeleteHandler","dangerMode","willDelete","DeleteProject","Map","is_nft_mintted","description","LatestProject","Auctions","ReadMore","isReadMore","setIsReadMore","dangerouslySetInnerHTML","__html","FundTransdataTable","Panel","Collapse","expandIconPosition","funddetail","country","defaultActiveKey","onChange","key","opacity","d","cx","cy","r","header","Table","responsive","payment_history","items","UserTransdataTable","useParams","UserdataTable","wallet_id","referrers","referral_amount","total_fundraised","ProjDetailPopup","useRef","useForm","register","handleSubmit","formState","setValue","control","watch","setDescription","setType","setCountry","setCity","handleChangeCountry","event","currentTarget","handleChangeState","handleChangeCity","cities","projdetail","cat","Object","keys","category_id","Modal","size","centered","Body","onSubmit","required","render","field","onBlur","ref","disabled","selected","option","defaultValue","min","max","today","dd","String","getDate","padStart","mm","getMonth","disablePastDate","ProjdataTable","React","modalShowproj","setModalShowproj","latprojdetail","date1","updated_at","time_difference","getTime","days_difference","ceil","show","dayjs","country_name","state_name","city_name","category","LatNftdataTable","project_activity","nft_title","ProjNFTS","marginLeft","extention","preview_imag","sold_nft","CollectionNFTS","collNft","CollectionDetails","Web3","providers","HttpProvider","ItemDetails","initData","pre_heading","content","HelpCenter","btnClass","quote","contentId","contentClass","Faq","UploadImage","initalImag","setImageSrc","imageSrc","initialImage","borderRadius","language","objectFit","compressInitial","hideDownloadBtn","imageSrcProp","imageChanged","newDataUri","dataURLtoBlob","dataurl","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","Banner","Title","Upload","Button","UpdateBanner","AvatarUpload","BannerUpload","AuthorProfile","modalSho","setModalSho","modalShowavatar","setModalShowavatar","textTransform","filter_1","filter_2","filter_3","filter_4","filter_5","group","author","likes","Author","Wallet","handleConnect","walletData","WalletConnect","FormContext","createContext","FormProvider","children","setData","Provider","setFormValues","prevValues","useFormData","useContext","Create","current","next","prev","setPrice","setImage","usertype","setUserType","countryName","setCountryName","mode","imageUri","country_id","date","setDate","toISOString","substr","styles","showForm","hideForm","imageBanner","pattern","rules","minLength","tabIndex","newContent","step","entries","MyVerticallyCenteredModal","dat","short_url","CreateCollectionAction","DModal","vdo","refContainer","renderer","setRenderer","source","file","container","scW","clientWidth","scH","clientHeight","THREE","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","outputEncoding","appendChild","domElement","scene","scale","camera","initialCameraPosition","sin","PI","cos","ambientLight","add","controls","OrbitControls","autoRotate","enableZoom","minDistance","minZoom","GLTFLoader","load","gltf","traverse","child","isMesh","m","receiveShadow","castShadow","isLight","l","shadow","bias","mapSize","xhr","animate","loaded","total","req","frame","requestAnimationFrame","p","rotSpeed","sqrt","pow","position","y","z","lookAt","update","cancelAnimationFrame","dispose","left","top","ProTypePopup","defaultValue1","startdate","enddate","nftno","maxLength","UploadNft","editor","count","setCount","nft_description","setNft_description","modalShow","projmodalShow","setProjModalShow","nft_collection_id","setNft_collection_id","nftimage","setNftImage","nftwidth","setNftwidth","nftHeight","setNftheight","Pimage","setPimage","startDate","setStartDate","endDate","setEndDate","numberofNfts","setNumberofNfts","coll_id","setSource","sourceType","setSourceType","setNFtExtension","preview","setPreview","projtype","setProjType","nftName","setNftName","nftDescription","convertToBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","previewChange","index","pimage","files","base64","prevState","col","lat","onFinish","imagesRes","addedImage","image_hash","check","includes","nft_name","Form","form","nftNameHandler","initialValues","autoComplete","List","fields","remove","transform","restField","accordion","URL","createObjectURL","Item","previ","nftDescriptionHandler","MinusCircleOutlined","prevCount","onHandleClick","background","marginBottom","border","variant","backgroundImage","backgroundSize","backgroundRepeat","maxCount","filetype","fr","Image","handleUpload","accept","backgroundPosition","block","PlusOutlined","steps","UploadNftIndex","Login","login","password","FormCard","currentStep","prevFormStep","formSchema","Yup","shape","confirm_password","oneOf","Signup","formStep","nextFormStep","resolver","yupResolver","errMessage","errmessage","validate","val","CreateOrganization","goBack","socialmedia","logo","goal","url","tax_id","social","social_link","disp","SignupIndex","setFormStep","contactSlice","contact","postContact","contactReducer","Contact","subject","ContactAction","cols","rows","ForgotPassword","forgotpassword","statusCode","Forgot","TOKEN_KEY","PrivateRoute","component","rest","restricted","Geonames","lan","encoding","EditProject","htmlFor","ProjectUpdate","TermsConditions","TermsCond","ExploreAll","liveProjectspag","page_per_data","All","AllCollections","ColExplore","AboutUs","about","Aboutus","ReferalPopup","copy","setCopy","userRef","userprojurl","TwitterShareButton","TwitterIcon","FacebookShareButton","FacebookIcon","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","EmailIcon","onMouseLeave","EditNft","nftFileType","setNFtFileType","setNft","previewnft","setPreviewnft","modalShowcoll","setModalShowcoll","nftdetail","setFieldsValue","collection_id","nft_image","nftImagepromises","all","defaultValues","NftdataTable","collectionData","contract_id","GetMatic","setMatic","ProjDetails","search","URLSearchParams","modalShowrefer","setModalShowrefer","project_count","cad","referrer_id","ProgressBar","varient","now","project_percentage","user_invest","latprojDetails","ShowCollections","Showcollections","CollItem","coldetail","GetCollectionDetails","CollectionDetail","DesPopup","ProjNftDetails","setmatic","modalShowDes","setModalShowDes","is_mint","ProjNft","NftAuctiondataTable","bidstatus","bids","NftPopup","Step","Steps","closeButton","direction","LoadingOutlined","CheckOutlined","SellPopup","auctiontype","setAuctionType","autionTypeChange","deployContract","MyNFTContract","NFTContract","getGasPrice","deploy","bytecode","arguments","send","ismint","OnSubmit","nftid","defaultChecked","EditNftName","EditNftDesc","EditNftImage","NftDetails","nftId","setNftID","projslug","sellmodalShow","setSellModalShow","modalShowedit","setModalShowedit","modalShoweditdes","setModalShoweditdes","modalShoweditimg","setModalShoweditimg","Class","Nft","FunddataTable","tax_number","web_url","FundraiserDetail","fundprojdetail","investHandler","FundDetail","NftTransdataTable","latprojnftdetail","nft_history","LatNftDataTable","CONTRACT_ADDRESS_URL","BidPopup","projtitle","projcoll","Timer","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","interval","setInterval","time","parse","floor","clearInterval","BuyPopup","LatprojNftDetails","bidmodalShow","setBidModalShow","buymodalShow","setBuyModalShow","find","buyHandler","selling_count","payment_flow","karmatica_fee","reffHandler","spinning","owned_by","bid_approved_id","latnftprojDetails","ScrollToTop","scrollTo","AddNft","AddNFT","GetAllFundraise","AllFundraiser","GetAllFundraiseProjects","AllFundraiserProjects","MyFundraiserDetail","FundraiserProjects","Rewards","NftReward","AllNotifications","nooti","Notifi","ExploreBuyedNfts","purchase_nft","BuyedNft","NftBuydataTable","BuyedNftDetails","nft_type","BuyNftDetail","RoleChangeOrganizationdetails","createOrganizationafterRoleChange","ResellNftDetails","resellnftdetail","ResellActionDetails","ResellDetail","ExploreAllResell","AllResellNft","RefralTransdataTable","referral_history","collection_slug","collection_name","AllReraltrans","MyRouts","path","ThemeOne","ExploreFour","App","combineReducers","createproject","latestprojects","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc10667a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3EpRl\",\"formCard\":\"styles_formCard__128GU\",\"formRow\":\"styles_formRow__31I_A\",\"back\":\"styles_back__2acxp\",\"input-error\":\"styles_input-error__1SwWq\",\"error\":\"styles_error__10-bT\",\"disabledBtn\":\"styles_disabledBtn__3b7hK\",\"steps\":\"styles_steps__29JeH\",\"errorText\":\"styles_errorText__Ha8IR\",\"hideForm\":\"styles_hideForm__3in2Q\",\"showForm\":\"styles_showForm__105xC\"};","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\nconst userToken = localStorage.getItem('authToken')\r\n    // ? JSON.parse(localStorage.getItem('user'))\r\n    ? localStorage.getItem('authToken')\r\n    : null\r\n\r\nconst authSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: {},\r\n        userdetail: [],\r\n        userToken,\r\n        role: null,\r\n        // wallToken,\r\n        logout: {},\r\n        message: {},\r\n        countries: [],\r\n        states: [],\r\n        city: [],\r\n        noti: [],\r\n        annualRevenue: [],\r\n        hereAbout: [],\r\n        updpro: [],\r\n        wallesign: [],\r\n        organization: false\r\n    },\r\n    reducers: {\r\n        registerSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.userToken = action.payload.data.data.auth_token;\r\n            state.role = action.payload.data.data.role;\r\n            localStorage.setItem('authToken', action.payload.data.data.auth_token)\r\n        },\r\n        registerFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        allnotification: (state, action) => {\r\n\r\n            state.noti = action.payload.data.data\r\n        },\r\n        updateprofile: (state, action) => {\r\n            // \r\n            state.updpro = action?.payload?.data?.data;\r\n        },\r\n        userDetail: (state, action) => {\r\n            // \r\n            state.userdetail = action.payload.data.data\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.role = action.payload?.data?.data?.role;\r\n            state.message = action.payload?.data?.message\r\n            state.userToken = action.payload?.data?.data?.auth_token;\r\n            localStorage.setItem('authToken', action.payload?.data?.data?.auth_token)\r\n        },\r\n        logoutSuccess: (state) => {\r\n            localStorage.removeItem('authToken')\r\n            state.user.role = null\r\n            state.userToken = null\r\n        },\r\n        forgotpasswordSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.message = action.payload.data.message\r\n\r\n        },\r\n        createOrganizationSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.organization = true\r\n        },\r\n        wallsignin: (state, action) => {\r\n            state.wallesign = action.payload?.data?.data;\r\n        },\r\n        getCountryList: (state, action) => {\r\n            state.countries = action.payload;\r\n        },\r\n        getStateList: (state, action) => {\r\n            state.states = action.payload;\r\n        },\r\n        getCityList: (state, action) => {\r\n            state.city = action.payload;\r\n        },\r\n\r\n        getAnnualRevenueList: (state, action) => {\r\n            state.annualRevenue = action.payload;\r\n        },\r\n\r\n        getHearAboutList: (state, action) => {\r\n            state.hereAbout = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer\r\n\r\nexport const {\r\n    allnotification,\r\n    registerSuccess,\r\n    createOrganizationSuccess,\r\n    getCountryList,\r\n    getStateList,\r\n    getCityList,\r\n    getAnnualRevenueList,\r\n    getHearAboutList,\r\n    loginSuccess,\r\n    forgotpasswordSuccess,\r\n    logoutSuccess,\r\n    registerFail,\r\n    userDetail,\r\n    wallsignin,\r\n    updateprofile\r\n} = authSlice.actions;","import { createSlice } from '@reduxjs/toolkit'\r\n// // Slice\r\n// const userToken = localStorage.getItem('authToken')\r\n//     // ? JSON.parse(localStorage.getItem('user'))\r\n//     ? localStorage.getItem('authToken')\r\n//     : null\r\nconst projectSlice = createSlice({\r\n    name: 'project',\r\n\r\n    initialState: {\r\n        project: [],\r\n        projects: [],\r\n        nftlist: [],\r\n        projectdetails: [],\r\n        latestprojectdetails: [],\r\n        categories: [],\r\n        collections: [],\r\n        getcollections: [],\r\n        getcollectiondetails: [],\r\n        collectiondetails: [],\r\n        getSocialmediaIcons: [],\r\n        getfundProjDetails: [],\r\n        getmostProjActivity: [],\r\n        getBuyedNftdetails: [],\r\n        getnftwoldetails: [],\r\n        settings: [],\r\n        liveProjectsPag: [],\r\n        nftadd: [],\r\n        nftres: [],\r\n        nftupdate: [],\r\n        updbanner: [],\r\n        matic: [],\r\n        // liveProjects: [],\r\n        liveProjects: {\r\n            LatestProjects: [],\r\n            RecentCampaigns: []\r\n        },\r\n        message: {},\r\n    },\r\n    reducers: {\r\n        createProjectSuccess: (state, action) => {\r\n            state.project = action.payload;\r\n        },\r\n        createCollectionSuccess: (state, action) => {\r\n            state.collections = action.payload;\r\n        },\r\n        getCollections: (state, action) => {\r\n            // \r\n            state.getcollections = action?.payload?.data?.data;\r\n        },\r\n        getSocialmediaIcons: (state, action) => {\r\n            // \r\n            state.getsocial = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetails: (state, action) => {\r\n            // \r\n            state.getcollectiondetails = action?.payload?.data?.data;\r\n        },\r\n        getNftwolDetails: (state, action) => {\r\n            // \r\n            state.getnftwoldetails = action?.payload?.data?.data;\r\n        },\r\n        nftUpd: (state, action) => {\r\n            // \r\n            state.nftupdate = action?.payload?.data?.data;\r\n        },\r\n        nftAdd: (state, action) => {\r\n            // \r\n            state.nftadd = action?.payload?.data?.data;\r\n        },\r\n        getfundprojdetails: (state, action) => {\r\n            // \r\n            state.getfundProjDetails = action?.payload?.data?.data;\r\n        },\r\n        getmostprojactivity: (state, action) => {\r\n            state.getmostProjActivity = action?.payload?.data?.data;\r\n        },\r\n        getbuyednftdetails: (state, action) => {\r\n            state.getBuyedNftdetails = action?.payload?.data?.data;\r\n        },\r\n        getProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        getMatic: (state, action) => {\r\n            state.matic = action.payload?.data?.data\r\n        },\r\n        getCategoriesList: (state, action) => {\r\n            state.categories = action?.payload?.data?.data;\r\n        },\r\n        getSettings: (state, action) => {\r\n            state.settings = action?.payload?.data?.data;\r\n        },\r\n\r\n        getLatestProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        createFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        getProjectDetail: (state, action) => {\r\n            // \r\n            state.projectdetails = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetail: (state, action) => {\r\n            // \r\n            state.collectiondetails = action?.payload?.data?.data;\r\n        },\r\n        Nftres: (state, action) => {\r\n            // \r\n            state.nftres = action?.payload?.data?.data;\r\n        },\r\n        getNftList: (state, action) => {\r\n            // \r\n            state.nftlist = action?.payload?.data?.data;\r\n        },\r\n        getLatestProjectDetail: (state, action) => {\r\n            // \r\n            state.latestprojectdetails = action?.payload?.data?.data;\r\n        },\r\n        updatebanner: (state, action) => {\r\n            // \r\n            state.updbanner = action?.payload?.data?.data;\r\n        },\r\n        publicLiveProjects: (state, action) => {\r\n            state.liveProjects[action.payload.type] = action.payload.res.data.data.data\r\n            // state.liveProjects = action.payload.data.data.data\r\n            // state.liveProjects['R'] = action.payload.data.data.data\r\n        },\r\n        publicLiveProjectspagination: (state, action) => {\r\n            state.liveProjectsPag = action.payload.res.data.data\r\n            // state.liveProjects = action.payload.data.data.data\r\n            // state.liveProjects['R'] = action.payload.data.data.data\r\n        },\r\n        deleteProject: (state, action) => {\r\n            const { id } = action.payload?.data?.data;\r\n            state.projects = state.projects.filter(item => item.id !== id)\r\n        }\r\n    },\r\n});\r\n\r\nexport const projectReducer = projectSlice.reducer\r\n\r\nexport const {\r\n    createProjectSuccess,\r\n    getProjectList,\r\n    getProjectDetail,\r\n    getLatestProjectDetail,\r\n    publicLiveProjects,\r\n    publicLiveProjectspagination,\r\n    createCollectionSuccess,\r\n    deleteProject,\r\n    createFail,\r\n    getLatestProjectList,\r\n    getCategoriesList,\r\n    getCollections,\r\n    getbuyednftdetails,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getCollectionDetail,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    Nftres,\r\n    updatebanner,\r\n    getmostprojactivity,\r\n    nftUpd,\r\n    nftAdd,\r\n    getMatic\r\n} = projectSlice.actions;","import axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nexport const LogsAction = (params) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const formData = new FormData()\r\n        formData.append('content', params.message)\r\n\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/create_application_logs`,\r\n            formData, config)\r\n        await (dispatch(res()))\r\n\r\n        console.log(\"logres\", res)\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n        // if (e?.response?.data.message) {\r\n        //     // swal('error', e.response.data.message, 'error')\r\n        // }\r\n    }\r\n}","import axios from \"axios\";\r\nimport {\r\n    createProjectSuccess,\r\n    getProjectDetail,\r\n    getProjectList,\r\n    createFail,\r\n    publicLiveProjects,\r\n    deleteProject,\r\n    getLatestProjectDetail,\r\n    getCategoriesList,\r\n    createCollectionSuccess,\r\n    getCollections,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    updatebanner,\r\n    nftUpd,\r\n    nftAdd,\r\n    getMatic,\r\n    getmostprojactivity,\r\n    getbuyednftdetails,\r\n    publicLiveProjectspagination\r\n} from \"../Slices/projectSlice\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport swal from \"sweetalert\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\nexport const CreateProjectAction = (params, setLoading, history) => async dispatch => {\r\n    // debugger\r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        // \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(createProjectSuccess(res));\r\n\r\n        if (res.status === 200) {\r\n            // if (res.data.id == 1) { }\r\n            setLoading(false)\r\n\r\n            swal({ title: \"success\", text: res.data.message, icon: 'success', buttons: false, timer: 1500 })\r\n                .then(() => {\r\n                    history.push(\"/projectlist\");\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            dispatch(LogsAction(e))\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectDetail = (slug) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/details/${slug}`,\r\n            config)\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        // console.log('details', res)\r\n        dispatch(getProjectDetail(res));\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const LatestProjectDetail = (slug) => async dispatch => {\r\n    // debugger\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjectDetails/${slug}`,\r\n            config)\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getLatestProjectDetail(res));\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectList = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    // setLoading(true)\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/list`,\r\n            config)\r\n\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        await dispatch(getProjectList(res.data?.data));\r\n        // setLoading(false)\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            // setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const NftList = (slug, setLoading) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    // setLoading(true)\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdx/${slug}`,\r\n            config)\r\n\r\n        // console.log(res, 'proj')\r\n        await dispatch(getNftList(res));\r\n        setLoading(false)\r\n\r\n\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            setLoading(false)\r\n        }\r\n    }\r\n}\r\nexport const uploadNFT = async (nft, dispatch) => {\r\n    // debugger\r\n    try {\r\n\r\n        // const [loading, setLoading] = useState()\r\n        // setLoading(true)\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            // transformRequest: formData.append('image', params)\r\n        }\r\n        const formData = new FormData();\r\n\r\n        for (let i = 0; i < nft.length; i++) {\r\n            formData.append(\"image[]\", nft[i]);\r\n        }\r\n\r\n        return axios\r\n            .post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n                formData, config)\r\n            .then(function (response) {\r\n\r\n                // console.log(response, 'resss')\r\n                return {\r\n                    success: true,\r\n                    data: response.data\r\n                };\r\n            },\r\n\r\n\r\n            )\r\n    } catch (error) {\r\n\r\n        dispatch(LogsAction(error))\r\n        swal('error', error, 'error')\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const getPublicLiveProjects = createAsyncThunk(\r\n    \"auth/liveProjects\",\r\n\r\n    async (params, thunkAPI, setLatestData) => {\r\n        try {\r\n            const { projectType } = params\r\n            const latitude = localStorage.getItem('latitude')\r\n            const longitude = localStorage.getItem('longitude')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjects?page=1   &latitude=${latitude}&longitude=${longitude}&search_keyword=&category_id=&type`, config)\r\n            // console.log(res, 'projres')\r\n            thunkAPI.dispatch(publicLiveProjects({\r\n                res: res,\r\n                type: projectType,\r\n            }));\r\n            thunkAPI.dispatch(publicLiveProjectspagination({\r\n                res: res,\r\n\r\n            }));\r\n            // setLatestData(res.data.data())\r\n            // thunkAPI.dispatch(publicLiveProjects(res));\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n\r\nexport const UpdateProject = (props, params) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/update/${props.id}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'proj')\r\n        await dispatch(getProjectDetail(res));\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success')\r\n            dispatch(ProjectDetail(props.id))\r\n            // .then(function () {\r\n            // window.location = `/projnftdetails/${props}`;\r\n            // });\r\n\r\n        }\r\n        props.onHide(false)\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const DeleteProject = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/projects/destroy/${id}`,\r\n            config)\r\n        // \r\n        // console.log(res.status, 'proj')\r\n        await dispatch(deleteProject(res));\r\n        if (res.status === 200) {\r\n            dispatch(ProjectList())\r\n            // swal(\"success\", res.data.message, 'success').then(function () {\r\n            //     window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CategoriesAction = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCategories`, config)\r\n        // console.log(res, 'catres')\r\n        dispatch(getCategoriesList(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const GetCollectionsAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollection`,\r\n            config)\r\n        // console.log('colres', res)\r\n        await dispatch(getCollections(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CreateCollectionAction = ({ dat, imageBanner, props }) => async dispatch => {\r\n    try {\r\n        const formData = new FormData()\r\n        formData.append('title', dat.title)\r\n        formData.append('description', dat.description)\r\n        formData.append('short_url', dat.short_url)\r\n        formData.append('symbol', dat.symbol)\r\n        formData.append('image', imageBanner)\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createCollection`, formData,\r\n            config)\r\n        // dispatch(GetCollectionsAction)\r\n        await dispatch(createCollectionSuccess(res));\r\n        if (res?.status === 200) {\r\n\r\n            await dispatch(GetCollectionsAction());\r\n            props.onHide(false)\r\n            // swal(\"success\", 'Collection Created', 'success')\r\n            // .then(function () {\r\n            //     onClick={() => props.onHide()}\r\n            // });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\nexport const GetCollectionDetails = (id) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollectionById/${id}`,\r\n            config)\r\n\r\n        await dispatch(getCollectionDetails(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSocialMediaIcons = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSocialMediaIcon`,\r\n            config)\r\n        // console.log('social', res)\r\n        await dispatch(getSocialmediaIcons(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateCollection = (id, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${id}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(getLatestProjectDetail(res));\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSettings = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSettings`,\r\n            config)\r\n        // \r\n        // console.log(res, 'sett rres')\r\n        await dispatch(getSettings(res));\r\n\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetNftwol = ({ slug }) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdxWithoutLogin/${slug}`,\r\n            config)\r\n\r\n        await dispatch(getNftwolDetails(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetfundraiserProject = (slug) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getProjectByfundraiserIdx/${slug}`,\r\n            config)\r\n\r\n        await dispatch(getfundprojdetails(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateBanner = (formData, props) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/image_update/${props.id}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(updatebanner(res));\r\n\r\n        if (res.status === 200) {\r\n\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                dispatch(ProjectDetail(props.id))\r\n                dispatch(LatestProjectDetail(props.id))\r\n\r\n                // window.location = \"/projectlist\";\r\n            });\r\n            props.onHide(false)\r\n\r\n        }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const UpdateNft = (formData, props, setLoading) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/update/${props.id}/${props.nft_id?.id}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftUpd(res));\r\n\r\n        if (res.status === 200) {\r\n            swal(\"success\", \"updated\", 'success')\r\n            setLoading(false)\r\n            dispatch(NftList(props.nft_id?.id))\r\n            dispatch(ProjectDetail(props.id))\r\n            props.onHide(false)\r\n            // .then(function () {\r\n            //     window.location = `/nft/details/${props.nft_id?.id}?project=${props.id}`;\r\n\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const AddNftAction = (formData, projid, slug, setLoading) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/create/${projid}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftAdd(res));\r\n\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                // dispatch(ProjectDetail(props.id))\r\n                // dispatch(LatestProjectDetail(params))\r\n                window.location = `/projnftdetails/${slug.id}`;\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetMatic = () => async dispatch => {\r\n\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n\r\n        }\r\n        // \r\n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\r\n            config\r\n        )\r\n        await dispatch(getMatic(res))\r\n        console.log('res', res)\r\n    } catch (error) {\r\n        dispatch(LogsAction(error))\r\n        // console.log(\"error\");\r\n    }\r\n};\r\nexport const getBid = (id) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getBidsDetailByIdx/${id}}`,\r\n            config)\r\n        await dispatch(res)\r\n\r\n        console.log('res bid', res)\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        // console.log(\"error\");\r\n    }\r\n};\r\nexport const UpdateBId = ({ id, status }) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/change_bids_status/${id}}`,\r\n            { status: status }, config)\r\n        await dispatch(res)\r\n        if (res.status == 200) {\r\n            swal(\"success\", \"success\", \"success\")\r\n        }\r\n        console.log('res bid', res)\r\n    } catch (e) {\r\n        swal(\"error\", e?.response?.data?.message, \"success\")\r\n        dispatch(LogsAction(e))\r\n        // console.log(\"error\");\r\n    }\r\n};\r\n\r\nexport const GetMostactivityProject = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getMostActivityProject`,\r\n            config)\r\n\r\n        await dispatch(getmostprojactivity(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetbuyedNftDetails = (slug) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPurchaseNftDetailByIdx/${slug?.slug}`,\r\n            config)\r\n\r\n        await dispatch(getbuyednftdetails(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ResellNft = (params, props) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/create_resale_nft`,\r\n            params, config)\r\n        await dispatch(res())\r\n        if (res?.status === 200) {\r\n            await dispatch(GetbuyedNftDetails(props.slug?.slug))\r\n            props.onHide(false)\r\n        }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        // console.log(\"error\");\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n};","\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport { NftList } from '../../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\nimport { logdispatch, LogsAction } from '../../redux/Actions/logsAction';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n\r\nconst contractABI = require('../../backend/contracts/artWork.sol/NFTContract.json')\r\n\r\n\r\nfunction isMetaMaskInstalled() {\r\n  return Boolean(window.ethereum);\r\n}\r\n\r\n// const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\n\r\nexport const Roles = {\r\n  \"ADMIN\": 1,\r\n  \"BUYER\": 2,\r\n  \"CREATOR\": 3\r\n}\r\nexport const creatorWalletUpdate = async (auth_token) => {\r\n  try {\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/wallet/connect`,\r\n      formData, config\r\n    )\r\n\r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n}\r\n\r\nexport const UpdateWalletAddress = async (role, auth_token = null) => {\r\n  try {\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    formData.append('role', Roles[role])\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/sign_in`,\r\n      formData, config\r\n    )\r\n\r\n    return response\r\n\r\n  } catch (error) {\r\n    // dispatch(LogsAction(error))\r\n    return error\r\n    // await dispatch(LogsAction(error))\r\n  }\r\n};\r\n\r\nexport const ConnectWallet = async (role, dispatch) => {\r\n\r\n  const chainId = 80001// Polygon Mainnet\r\n\r\n  if (window?.ethereum?.networkVersion !== chainId) {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: web3.utils.toHex(chainId) }]\r\n      });\r\n\r\n    } catch (err) {\r\n      dispatch(LogsAction(err))\r\n      // This error code indicates that the chain has not been added to MetaMask\r\n      if (err.code === 4902) {\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainName: 'Mumbai Testnet',\r\n              chainId: web3.utils.toHex(chainId),\r\n              nativeCurrency: { name: 'MATIC', decimals: 18, symbol: 'MATIC' },\r\n              rpcUrls: ['https://rpc-mumbai.maticvigil.com/']\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  }\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n\r\n    if (window.ethereum) {\r\n      try {\r\n        const addressArray = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: web3.utils.toHex('80001') }],\r\n        })\r\n\r\n        const obj = {\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n          address: addressArray[0],\r\n        };\r\n\r\n        const res = await UpdateWalletAddress(role)\r\n        return {\r\n          ...obj,\r\n          res\r\n        }\r\n\r\n      } catch (err) {\r\n        dispatch(LogsAction(err))\r\n        return {\r\n          address: \"\",\r\n          status: \"😥 \" + err.message,\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        address: \"\",\r\n        status: (\r\n          <span>\r\n            <p>\r\n              {\" \"}\r\n              🦊{\" \"}\r\n              <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n                You must install Metamask, a virtual Ethereum wallet, in your\r\n                browser.\r\n              </a>\r\n            </p>\r\n          </span>\r\n        ),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCurrentWalletConnected = async (dispatch) => {\r\n  if (window.ethereum) {\r\n    try {\r\n      // \r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      // console.log(addressArray, 'address')\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n          status: \"🦊 Connect to Metamask using the top right button.\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      dispatch(LogsAction(err))\r\n      return {\r\n        address: \"\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const UpdateStatus = async ({ slug, token_id, transaction_hash, pay_from, pay_to, type }) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('is_mint', '1');\r\n    formData.append('token_id', token_id);\r\n    formData.append('transaction_hash', transaction_hash);\r\n    formData.append('pay_from', pay_from);\r\n    formData.append('pay_to', pay_to);\r\n    formData.append('type', type.type)\r\n    formData.append('price', type.price)\r\n    formData.append('start_date', type.start_date)\r\n    formData.append('end_date', type.end_date)\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/NftUpdate/${slug}`,\r\n      formData, config\r\n\r\n    )\r\n  } catch (error) {\r\n    return error\r\n    // await dispatch(LogsAction(error))\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nconst UpdateContract = async (collid, contractAddress) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('contract_id', contractAddress);\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${collid}`,\r\n      formData, config\r\n    )\r\n  } catch (e) {\r\n    // await dispatch(LogsAction(e))\r\n\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const sendFileToIPFS = async (fileImg) => {\r\n  if (fileImg) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", fileImg);\r\n\r\n      const resFile = await axios({\r\n        method: \"post\",\r\n        url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\r\n        data: formData,\r\n        headers: {\r\n          'pinata_api_key': `${process.env.REACT_APP_PINATA_API_KEY}`,\r\n          'pinata_secret_api_key': `${process.env.REACT_APP_PINATA_API_SECRET}`,\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        },\r\n      });\r\n\r\n      const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n\r\n      return ImgHash\r\n\r\n    } catch (e) {\r\n      return e\r\n      // await dispatch(LogsAction(e))\r\n\r\n      // console.log(\"Error sending File to IPFS: \")\r\n      // console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const CreateMetaDataAndMint = async ({ slug, _imgBuffer, _des, _name, setCurrent, contractAddress, collid, nft_file_content, type, price, start_date, end_date, setModalShow, dispatch }) => {\r\n\r\n  const contract = await new web3.eth.Contract(contractABI.abi, contractAddress);//loadContract();\r\n  // new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\");//loadContract();\r\n\r\n  try {\r\n    let txHash = null\r\n\r\n    // const web3 = new Web3(window.ethereum);\r\n\r\n    await web3.eth.sendTransaction({\r\n      to: contractAddress, // Required except during contract publications.\r\n      // to: \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\", // Required except during contract publications.\r\n      from: window.ethereum.selectedAddress,\r\n      data: contract.methods.mint(nft_file_content).encodeABI() //make call to NFT smart contract\r\n    })\r\n      .on('transactionHash', function (hash) {\r\n        txHash = hash\r\n\r\n        // console.log('txhash11', txHash)\r\n\r\n        setCurrent(1)\r\n      })\r\n      .on('receipt', function (receipt) {\r\n        // console.log(receipt, 'recipt')\r\n        // console.log(receipt.logs[0].topics[3])\r\n        setCurrent(1)\r\n      })\r\n      .on('confirmation', async (confNumber, receipt) => {\r\n        if (confNumber == 1) {\r\n\r\n          if (collid != 1) {\r\n\r\n            await UpdateContract(collid, contractAddress)\r\n          }\r\n\r\n\r\n          // await UpdateContract(collid, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n          const tokid = web3.utils.hexToNumber(receipt.logs[0].topics[3])\r\n\r\n          // console.log(startdate)\r\n          await UpdateStatus({ slug: slug.id, token_id: tokid, transaction_hash: receipt.transactionHash, pay_from: receipt.from, pay_to: receipt.to, type, price, start_date, end_date })\r\n          setCurrent(2)\r\n          await dispatch(NftList(slug.id))\r\n\r\n          // history.push(`nft/details/${slug.id}`)\r\n          // return redirect(`nft/details/${id}`)\r\n          // console.log('tokid', tokid)\r\n        }\r\n      })\r\n      .on('error', function (error) {\r\n\r\n      })\r\n\r\n    // \r\n    // console.log('txHash', txHash)\r\n    return {\r\n      success: true,\r\n      // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n      status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n    }\r\n  } catch (error) {\r\n    await dispatch(LogsAction(error))\r\n    // Await dispatch(LogsAction(error)\r\n\r\n    // \r\n    swal(\"error\", \"Transaction rejected please try again!\", \"error\")\r\n    setModalShow(false)\r\n    return {\r\n      success: false,\r\n      status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n    }\r\n  }\r\n}\r\n\r\nconst UpdateBuyHistory = async (nft_id, proj_id, refid, txd_id, payFrom, pay_to, tokenId, values) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('price', nft_id.values);\r\n    formData.append('txd_id', nft_id.txd_id);\r\n    formData.append('project_id', nft_id.proj_id);\r\n    formData.append('nft_id', nft_id.nft_id);\r\n    formData.append('pay_from', nft_id.payFrom);\r\n    formData.append('pay_to', nft_id.pay_to);\r\n    formData.append('token_id', nft_id.tokenId);\r\n    formData.append('ref_id', nft_id.refid);\r\n    formData.append('status', '1');\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/transaction/store`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    return error\r\n    // await dispatch(LogsAction(error))\r\n\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const updateReffid = async ({ tokenId, refid, nft_id, dispatch }) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('token_id', tokenId);\r\n    formData.append('ref_id', refid);\r\n    formData.append('nft_id', nft_id);\r\n\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getUserPercentage`,\r\n      formData, config\r\n    )\r\n    // await dispatch(res())\r\n    // const reffee = localStorage.setItem('refamount', res?.data?.data?.referral_fees[0]?.fees)\r\n    if (res?.status === 200) {\r\n      await localStorage.setItem('refamount', res?.data?.data?.referral_fees[0]?.fees)\r\n    }\r\n\r\n    // if (res.status === 200) {\r\n    // setRefamount(res?.data?.data)\r\n    // }\r\n  } catch (error) {\r\n    await dispatch(LogsAction(error))\r\n\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\nexport const BuyNft = async ({ contractAddress, tokenId, payFrom, values, platformFee, sellingCount, ownerFee, flow, ownerWallet, refid, proj_id, nft_id, loadingg, modal, dispatch }) => {\r\n  // debugger\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n\r\n    try {\r\n      // if (refid == null) {\r\n      //   setReferalid(\"\")\r\n\r\n      // }\r\n\r\n      let wallets = []\r\n      let fee = []\r\n      // web3.fromWei(web3.eth.getBalance\r\n      // const bala = web3.fromWei(web3.eth.getBalance(window.ethereum?.selectedAddress))\r\n      // console.log(bala, 'balance')\r\n      // .then(console.log);\r\n      wallets = refid === \"null\" ? [...wallets, ...flow[0]?.buyer_data?.map(x => x.wallets), flow[0]?.karmatica_fees[0]?.wallets, flow[0]?.project_data[0]?.wallets] : [...wallets, ...flow[0]?.buyer_data?.map(x => x.wallets), flow[0]?.karmatica_fees[0]?.wallets, flow[0]?.project_data[0]?.wallets, refid]\r\n      fee = refid === \"null\" ? [...fee, ...flow[0]?.buyer_data?.map(x => x.fees), flow[0]?.karmatica_fees[0]?.fees, flow[0]?.project_data[0]?.fees] : [...fee, ...flow[0]?.buyer_data?.map(x => x.fees), flow[0]?.karmatica_fees[0]?.fees, flow[0]?.project_data[0]?.fees, localStorage.getItem('refamount')]\r\n      console.log(fee)\r\n      console.log(wallets)\r\n\r\n\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      const obj = {\r\n        status: \"👆🏽 Write a message in the text-field above.\",\r\n        address: addressArray[0],\r\n      };\r\n\r\n      const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n      // const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n\r\n      // const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n\r\n      const memory_clients = wallets.map(wal => {\r\n\r\n        return (`${wal}`)\r\n      })\r\n\r\n\r\n\r\n      const memory_amounts = fee.map(amt => {\r\n        const amountToSend = ((amt / 100) * 0.03)\r\n        return web3.utils.toWei(`${amountToSend}`, \"ether\")\r\n      })\r\n\r\n      const transferowner = {\r\n        'from': window.ethereum?.selectedAddress,\r\n        'to': contractAddress,\r\n        // 'to': \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\",\r\n        // 'value': web3.utils.toWei(`${values}`),\r\n        'value': web3.utils.toWei('0.03', 'ether'),\r\n        // 'input': nftContract.methods.buyNft(contractAddress, tokenId).encodeABI()\r\n        'input': nftContract.methods.buyNft(contractAddress, tokenId, memory_clients, memory_amounts).encodeABI()\r\n      };\r\n\r\n      // const txHash = await web3.eth.sendTransaction(tx)\r\n\r\n      // console.log('txhash', txHash)\r\n      await web3.eth.sendTransaction(transferowner)\r\n        .on('transactionHash', function (hash) {\r\n          let txHash = hash\r\n          // console.log('tx', txHash)\r\n\r\n\r\n        })\r\n        .on('receipt', function (receipt) {\r\n          // console.log(receipt, 'recipt')\r\n        })\r\n        .on('confirmation', async (confNumber, receipt) => {\r\n          if (confNumber == 1) {\r\n            console.log(confNumber, 'counttrans')\r\n            console.log(receipt, 'conf')\r\n            // localStorage.setItem('txd_id', receipt.transactionHash)\r\n            // localStorage.setItem('pay_to', receipt.receipt.to)\r\n            UpdateBuyHistory({ nft_id, proj_id, refid, txd_id: receipt.transactionHash, payFrom, pay_to: window.ethereum?.selectedAddress, tokenId, values })\r\n            loadingg(false)\r\n            swal(\"success\", \"Confirmed\", 'success').then(function () {\r\n              window.location = `/my/nfts`;\r\n            });\r\n          }\r\n          // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n          // setModeShow(false)\r\n\r\n          // modalShow(false)\r\n        })\r\n        .on('error', function (error) {\r\n          dispatch(LogsAction(error))\r\n          // console.log(error.message, \"error\")\r\n          swal('error', JSON.stringify(error.message, 'error'))\r\n          // alert(JSON.stringify(error.message))\r\n          modal(false)\r\n          loadingg(false)\r\n        })\r\n        .then(function (receipt) {\r\n          // will be fired once the receipt is mined\r\n        })\r\n    } catch (error) {\r\n      dispatch(LogsAction(error))\r\n\r\n      swal(\"error\", JSON.stringify(error.message), \"error\")\r\n      loadingg(false)\r\n      // alert(JSON.stringify(error.message))\r\n\r\n    }\r\n  }\r\n}\r\n\r\nconst UpdateBid = async ({ amount, project_id, nft_id, pay_to, from, onHide }) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('amount', amount);\r\n    formData.append('project_id', project_id);\r\n    formData.append('nft_id', nft_id);\r\n    formData.append('pay_from', from);\r\n    formData.append('pay_to', pay_to);\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/project/bids`,\r\n      formData, config\r\n    )\r\n    console.log('ress', res)\r\n    if (res.status == 200) {\r\n      swal(\"success\", res?.data?.message, 'success')\r\n      onHide(false)\r\n    }\r\n  } catch (error) {\r\n    swal(\"error\", error?.response?.data?.message, 'error')\r\n    return error\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const BidNft = async (id, projid, from, onHide) => {\r\n\r\n  // if (!isMetaMaskInstalled()) {\r\n  //   swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  // } else {\r\n  try {\r\n\r\n\r\n    // const addressArray = await window.ethereum.request({\r\n    //   method: \"eth_requestAccounts\",\r\n    // });\r\n\r\n    // const obj = {\r\n    //   status: \"👆🏽 Write a message in the text-field above.\",\r\n    //   address: addressArray[0],\r\n    // };\r\n\r\n    // const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n    // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n    // const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n    // const amountToSendPlatform = ((`${platformFee[0]?.fees}` / 100) * 0.03)\r\n    // const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n    // // const amountToSend = (amountToSendPlatform - amount, \"either\")\r\n    // const amountToSend = (0.0005)\r\n    // const amountToSend = ; // Convert to wei value\r\n    // const memory_clients = [platformFee[0].wallets, ownerWallet[0]]\r\n    // const memory_amounts = [web3.utils.toWei(`${amountToSendPlatform}`, \"ether\"), web3.utils.toWei(`${amountToSendowner}`, \"ether\")]\r\n\r\n    // web3.eth.sendTransaction(\r\n    //   {\r\n    //     from: window.ethereum?.selectedAddress,\r\n    //     to: \"0xB79722911A09502fb54De1f7769F6624C301810a\",\r\n    //     value: web3.utils.toWei(\"0.01\"),\r\n    //     data: \"0xdf\"\r\n    //   }, function (err, transactionHash) {\r\n    //     if (!err)\r\n    //       console.log(transactionHash + \" success\");\r\n    UpdateBid({ amount: \"0.03\", project_id: projid, nft_id: id, from, onHide })\r\n    // });\r\n    // await web3.eth.sendTransaction(transferbid)\r\n    //   .on('transactionHash', function (hash) {\r\n    //     let txHash = hash\r\n    //     // console.log('tx', txHash)\r\n\r\n\r\n    //   })\r\n    //   .on('receipt', function (receipt) {\r\n    //     // console.log(receipt, 'recipt')\r\n    //   })\r\n    //   .on('confirmation', async (confNumber, receipt) => {\r\n    //     // \r\n    //     console.log(receipt, 'conf')\r\n    //     // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n    //     // setModeShow(false)\r\n\r\n    //     // modalShow(false)\r\n    //   })\r\n    //   .on('error', function (error) {\r\n\r\n    //   })\r\n    //   .then(function (receipt) {\r\n    //     // will be fired once the receipt is mined\r\n    //   })\r\n  } catch (error) {\r\n    // await dispatch(LogsAction(error))\r\n\r\n    // \r\n    swal(\"error\", error, \"error\")\r\n    // alert(error)\r\n\r\n    // }\r\n  }\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport { allnotification, createOrganizationSuccess, getAnnualRevenueList, getCityList, getCountryList, getHearAboutList, getStateList, loginSuccess, updateprofile, userDetail } from \"../Slices/authSlice\";\r\nimport swal from \"sweetalert\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { creatorWalletUpdate } from \"../../components/Wallet/interact\";\r\nimport Swal from \"sweetalert2\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\nexport const Register = createAsyncThunk(\r\n    \"auth/register\",\r\n    async (params, thunkAPI, dispatch) => {\r\n        try {\r\n            const token = localStorage.getItem('authToken')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                transformRequest: formData => formData\r\n            }\r\n\r\n            //create oraginization creator login\r\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/signup`,\r\n                params, config)\r\n\r\n            await creatorWalletUpdate(res?.data?.data?.auth_token)\r\n\r\n            thunkAPI.dispatch(loginSuccess(res));\r\n\r\n            if (res.status === 200) {\r\n                swal(\"success\", res.data.message, 'success').then(function () {\r\n                    window.location = \"/create\";\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            dispatch(LogsAction(e))\r\n            if (e?.response?.data) {\r\n                if (e?.response?.data.message) {\r\n\r\n                    swal('error', e?.response?.data?.message, 'error')\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\nexport const LoginAction = (params, history) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/organization_signin`,\r\n            params, config)\r\n\r\n        dispatch(loginSuccess(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n\r\n            swal('error', e?.response?.data?.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ForgotPasswordAction = (params, dispatch) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/forgot_pssword`,\r\n            params, config)\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = \"/login\";\r\n            });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetUserAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getUserDetails`,\r\n            config)\r\n        // console.log('userres', res)\r\n        dispatch(userDetail(res));\r\n\r\n\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CreateOrganizationAction = (params) => async dispatch => {\r\n    // \r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\r\n            params, config)\r\n\r\n        dispatch(createOrganizationSuccess(res));\r\n\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error').then(function () {\r\n                // dispatch(ProjectDetail(params))\r\n                window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    }\r\n}\r\nexport const CreateOrganizationAfterRoleChange = createAsyncThunk(\r\n    \"auth/register\",\r\n    async (params, thunkAPI, dispatch) => {\r\n        // debugger\r\n        try {\r\n            const token = localStorage.getItem('authToken')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                transformRequest: formData => formData\r\n            }\r\n\r\n            //create oraginization creator login\r\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\r\n                params, config)\r\n\r\n            // await creatorWalletUpdate(res?.data?.data?.auth_token)\r\n\r\n            // thunkAPI.dispatch(loginSuccess(res));\r\n\r\n            if (res.status === 200) {\r\n                thunkAPI.dispatch(GetUserAction())\r\n                swal(\"success\", res.data.message, 'success').then(function () {\r\n                    window.location = \"/create\";\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            await dispatch(LogsAction(e))\r\n            if (e?.response?.data) {\r\n                if (e?.response?.data.message) {\r\n\r\n                    swal('error', e?.response?.data?.message, 'error')\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\nexport const CountryList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCountryList`,\r\n            config)\r\n        dispatch(getCountryList(res));\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const StateList = (formData) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getStateById`,\r\n            formData, config)\r\n        // debugger\r\n        dispatch(getStateList(res));\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CityList = (formData) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getCityById`,\r\n            formData, config)\r\n        dispatch(getCityList(res));\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AnnualRevenueList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAnnualRevenueList`,\r\n            config)\r\n        dispatch(getAnnualRevenueList(res));\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const HearAboutList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getHearAboutList`,\r\n            config)\r\n        dispatch(getHearAboutList(res));\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const UpdateProfileAction = (formData, props) => async dispatch => {\r\n\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/profileUpdate`,\r\n            formData, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        await dispatch(updateprofile(res));\r\n\r\n        if (res.status === 200) {\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                html:\r\n                    'User information saved',\r\n                showCloseButton: false,\r\n                showConfirmButton: false,\r\n                focusConfirm: false,\r\n                timer: 1000\r\n            })\r\n            dispatch(GetUserAction())\r\n            props.onHide(false)\r\n            // swal(\"success\", \"updated\", 'success')\r\n            // .then(function () {\r\n            // dispatch(ProjectDetail(params))\r\n            // window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CountSet = () => async dispatch => {\r\n    // debugger\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/notification/update`,\r\n            {}, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n\r\n\r\n        }\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AllNoti = () => async dispatch => {\r\n\r\n\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAllNotification`,\r\n            config)\r\n        // \r\n        console.log(res, 'allnoti rres')\r\n        await dispatch(allnotification(res));\r\n\r\n\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const NotiDelete = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/notification/delete/${id}`,\r\n            config)\r\n        // \r\n        console.log(res, 'delete rres')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n            await dispatch(AllNoti())\r\n\r\n\r\n        }\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const ChangeUserRole = (history) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/change_user_roles`, \"\",\r\n            config)\r\n        // \r\n        console.log(res, 'user role')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n            if (res?.data?.data?.organization === false) {\r\n                history.push('/create/organization')\r\n            } else {\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { ChangeUserRole, CountSet, GetUserAction, NotiDelete } from '../../redux/Actions/authAction';\r\nimport swal from 'sweetalert';\r\nimport { loginSuccess, logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\nimport { isCancel } from 'axios';\r\nimport moment from \"moment\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Space, Switch, Tooltip, notification, Button } from 'antd';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Header = () => {\r\n    const location = useLocation();\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [address, setAddress] = useState(null)\r\n    const [active, setActive] = useState(null)\r\n    const add1 = address?.slice(0, 4).toUpperCase()\r\n    const add2 = address?.slice(35, 44).toUpperCase()\r\n\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n        setAddress(null)\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state?.user.userdetail?.role\r\n    })\r\n    // console.log(userRole)\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const close = () => {\r\n        console.log(\r\n            'Notification was closed. Either the close button was clicked or duration time elapsed.',\r\n        );\r\n    };\r\n\r\n    const [api, contextHolder] = notification.useNotification();\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n        getCurrentWalletConnected(dispatch)\r\n        setAddress(getSelectedAddress)\r\n\r\n        if (window.ethereum) {\r\n            window.ethereum.on('accountsChanged', function (accounts) {\r\n                if (!accounts.length) {\r\n                    setAddress(null)\r\n                    //  setIsLoggedIn(false)\r\n                    localStorage.removeItem('auth_token')\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [dispatch, address])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n        return () => {\r\n            window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n        };\r\n    }, []);\r\n\r\n    const handleBeforeUnload = (e) => {\r\n        e.preventDefault();\r\n        const message =\r\n            \"Are you sure you want to leave? All provided data will be lost.\";\r\n        e.returnValue = message;\r\n        return message;\r\n    };\r\n\r\n    function getSelectedAddress() {\r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    // const names = Object?.keys(userdet?.notification?.status);\r\n    // console.log(names)\r\n    const notiHandler = () => {\r\n        // debugger\r\n        dispatch(CountSet())\r\n    }\r\n    const deleteHandler = (id) => {\r\n        dispatch(NotiDelete(id))\r\n    }\r\n    const SwitchOptions = [{\r\n        OPTION1: \"Buyer\",\r\n        OPTION2: \"Creator\"\r\n    }]\r\n    const [activeOption, setActiveOption] = useState(false);\r\n    toast.configure()\r\n    // useEffect(() => {\r\n    //     toast('🦄 Wow so easy!', {\r\n    //         position: toast.POSITION.TOP_CENTER,\r\n    //         autoClose: false,\r\n    //         hideProgressBar: false,\r\n    //         closeOnClick: true,\r\n    //         pauseOnHover: true,\r\n    //         draggable: true,\r\n    //         progress: undefined,\r\n    //         theme: \"light\",\r\n    //     });\r\n    // }, [])\r\n\r\n    const roleHandler = () => {\r\n        dispatch(ChangeUserRole(history))\r\n        setActiveOption(!activeOption)\r\n    }\r\n    const WalletHandler = async () => {\r\n        const response = await ConnectWallet(\"BUYER\", dispatch)\r\n        const { res } = response\r\n\r\n        // debugger\r\n        if (!res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            history.push('/all/LatestProjects')\r\n        }\r\n        else if (res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            // history.push('/create')\r\n\r\n            swal({\r\n                title: \"Welcome to Karmatica!!!\",\r\n                text: \"Karmatica would like to know more about yourself. Update your profile\",\r\n                icon: \"success\",\r\n                buttons: {\r\n                    continue: '',\r\n                    skip: '',\r\n                }\r\n            }).then((value) => {\r\n                switch (value) {\r\n                    case \"continue\":\r\n                        window.location = '/profile'\r\n                        break;\r\n\r\n                    case \"skip\":\r\n                        window.location = '/all/LatestProjects'\r\n                        break;\r\n\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n        else if (!res?.data?.data?.is_new_user && Roles[\"CREATOR\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        if (window.ethereum.selectedAddress) {\r\n\r\n            if (Roles[\"CREATOR\"] == userRole) {\r\n                history.push('/create')\r\n            }\r\n            else if (Roles[\"BUYER\"] == userRole) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n            else if (!userToken && !localStorage.getItem('authToken')) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Connect your wallet to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n            history.push('/wallet-connect')\r\n        }\r\n\r\n    }\r\n    console.log(activeOption, \"active\")\r\n    return (\r\n        <header id=\"header\">\r\n            {/* Navbar */}\r\n            <nav data-aos=\"zoom-out\" data-aos-delay={800} className=\"navbar navbar-expand\">\r\n                <div className=\"container header\">\r\n                    {/* Navbar Brand*/}\r\n                    {/* <div className=\"your-required-wrapper\" style={{ width: 100, height: 30 }}> */}\r\n\r\n                    {/* </div> */}\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        <img className=\"navbar-brand-sticky desktop_logo\" src=\"/img/karmatica.png\" alt=\"karmatica\" />\r\n                        <img className=\"mobile-logo\" src=\"/img/logo.png\" alt=\"\" />\r\n                    </Link>\r\n                    <div className=\"ml-auto\" />\r\n\r\n\r\n                    {/* Navbar */}\r\n                    <ul className=\"navbar-nav items mx-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact activeClassName=\"navbar__link--active\" className=\"nav-link\" to=\"/\">Explore</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            {/* <button onClick={tstt}>df</button> */}\r\n                        </li>\r\n                        {/* {log !== null && ( */}\r\n                        <li className=\"nav-item text-left nav-main\" >\r\n                            <a onClick={() => handleCreate()} className={location.pathname === `/create` && \"nav-link-active\"} activeClassName={location.pathname === `/create` && \"navbar__link--active\"} >Create</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact activeClassName=\"navbar__link--active\" to={`/all/${\"LatestProjects\"}`} className=\"nav-link\">Latest</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a target=\"_blank\" href=\"https://changelly.com/?from=btc&to=matic&amount=0.1&ref_id=_-GPCBjccW7TMMjO\" className=\"nav-link\">Swap</a>\r\n                        </li>\r\n\r\n\r\n\r\n                    </ul>\r\n                    {/* Navbar Toggler */}\r\n                    {window.ethereum?.selectedAddress &&\r\n                        <div className=\"dropdown notification relative\">\r\n                            <i className=\"btn btn-secondary dropdown-toggle fa-sharp fa-solid fa-bell  text-white w-auto m-0 \" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" onClick={() => notiHandler()} ></i>\r\n                            {userdet?.notification_count > 0 &&\r\n\r\n                                <small className='dropdown-notification'>{userdet?.notification_count}</small>\r\n                            }\r\n\r\n                            <ul className=\"creator-dropdown dropdown-menu notification-menu dropdown-scrollbar\" aria-labelledby=\"dropdownMenuButton1\">\r\n\r\n                                {userdet?.notification?.map((item) => {\r\n                                    return (\r\n\r\n                                        <><li>{item.title}</li>\r\n                                            <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\r\n                                                <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\r\n                                    )\r\n                                })}\r\n                                {userdet?.notification?.length > 0 &&\r\n                                    <span><button type='submit' className='noty_all'><Link to='/allnotifications'>See all</Link></button></span>\r\n                                }\r\n                                {userdet?.notification?.length == 0 &&\r\n                                    <li>No new notifications</li>\r\n                                }\r\n                            </ul>\r\n\r\n                        </div>\r\n                    }\r\n                    <ul className=\"navbar-nav toggle\">\r\n                        <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#menu\">\r\n                                <i className=\"fas fa-bars toggle-icon m-0\" />\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Navbar Action Button */}\r\n                    {/* Navbar Action Button */}\r\n                    <ul className=\"navbar-nav action\">\r\n                        {window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? (\r\n\r\n                            <>\r\n\r\n                                <li className=\"nav-item mr-2\">\r\n                                    <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />{add1}...{add2}</a>\r\n                                </li>\r\n                            </>\r\n                        ) : (\r\n\r\n\r\n                            <li className=\"nav-item ml-3\">\r\n                                <Tooltip title='You will be signed in as a buyer' color='#4528dc'> <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />Connect Wallet</a></Tooltip>\r\n                            </li>\r\n\r\n                        )}\r\n\r\n                    </ul>\r\n                    {window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? (\r\n                        <>\r\n\r\n                            <div className=\"dropdown dropdown_login\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <i className=\"fa fa-solid fa-user\"></i>\r\n                                </button>\r\n                                <ul className=\"creator-dropdown dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                    {/* <li>{userdet?.username}</li> */}\r\n                                    <div className=\"background\">\r\n                                        <div className=\"SwitchContainer\">\r\n                                            <div\r\n                                                className=\"ToggleItem\"\r\n                                                style={{\r\n                                                    backgroundColor:\r\n                                                        userRole == 2 ? \"#4528DC\" : \"transparent\"\r\n                                                }}\r\n                                                onClick={() => roleHandler(SwitchOptions.OPTION1)}\r\n                                            >\r\n                                                <div className={\"Text\"}>Buyer</div>\r\n                                            </div>\r\n                                            <div\r\n                                                className=\"ToggleItem\"\r\n                                                style={{\r\n                                                    backgroundColor:\r\n                                                        userRole == 3 ? \"#4528DC\" : \"transparent\"\r\n                                                }}\r\n                                                onClick={() => roleHandler(SwitchOptions.OPTION2)}\r\n                                            >\r\n                                                <div className={\"Text\"}>Creator</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <li>\r\n                                        \r\n                                        <Space direction=\"vertical\">\r\n                                           \r\n\r\n                                            <Switch\r\n                                                className='switch_custom'\r\n                                                checkedChildren={<div onClick={() => roleHandler()}> {userRole == 2 ? 'switch to creator' : 'switch to buyer'}</div>}\r\n                                                unCheckedChildren={<div onClick={() => roleHandler()}>{userRole == 2 ? 'switch to creator' : 'switch to buyer'}</div>}\r\n\r\n                                            />\r\n                                          \r\n                                        </Space>\r\n                                    </li> */}\r\n                                    <li> {userdet?.email}</li>\r\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/profile'><i class=\"fa-regular fa-user\"></i> My Profile</Link></button></li>\r\n                                    {userRole == 2 && (\r\n                                        <li><button type='button' class=\"dropdown-item\"><Link to='/my/nfts'><i class=\"fa-regular fa-file-image\" style={{ color: 'white', display: \"table-cell\" }} /> My NFTs</Link></button></li>\r\n                                    )}\r\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/referals-detail'><i class=\"fa-solid fa-coins\" style={{ color: 'white', display: \"table-cell\" }}></i>Referral Program</Link></button></li>\r\n                                    {userRole == 3 && (\r\n                                        <><li><button type='button' class=\"dropdown-item\"><Link to='/projectlist'><i class=\"fa-regular fa-file\" style={{ color: 'white', display: \"table-cell\" }}></i> My Projects</Link></button></li>\r\n\r\n                                            <li><button type='button' class=\"dropdown-item\"><Link to={`/fundraiser/detail/${userdet.user_id}`}><i class=\"fa-solid fa-hand-holding-heart\" style={{ display: \"table-cell\", color: \"white\" }}></i> Fundraise</Link></button></li></>\r\n                                    )}\r\n                                    {/* {userRole == 2 ? ( */}\r\n\r\n\r\n                                    {/* <li><button type='button' class=\"dropdown-item\" onClick={() => roleHandler()}>Switch to Creator</button></li></> */}\r\n                                    {/* ) : (\r\n                                        <li><button type='button' class=\"dropdown-item\" onClick={() => roleHandler()}>Switch to Buyer</button></li>\r\n                                    )} */}\r\n                                    <li><button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'><i class=\"fa-solid fa-right-from-bracket\" style={{ display: \"table-cell\", color: \"white\" }}></i> Logout</a></button></li>\r\n                                </ul>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <ul className=\"navbar-nav action\">\r\n                            <li className=\"nav-item ml-3\">\r\n                                <Tooltip title='You will be signed in as a creator' color='#4528dc'>  <a className=\"creator-button btn ml-md-auto btn-bordered-white\"\r\n                                    onClick={() => history.push('/wallet-connect')} style={{ color: '#f8f9fa' }}><i className=\"fa fa-user\" />\r\n                                    <div>Creator</div></a></Tooltip>\r\n                                {/* <Link to=\"/login\" className=\"creator-button btn ml-md-auto btn-bordered-white\">\r\n                                    <i className=\"fa fa-user\" />\r\n                                    <div>CREATOR</div>\r\n                                </Link> */}\r\n                            </li>\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </nav >\r\n        </header >\r\n\r\n    )\r\n}\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { Roles } from '../Wallet/interact';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { GetMostactivityProject, getPublicLiveProjects } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst projectTypesMap = {\r\n    \"LatestProjects\": 2,\r\n    \"RecentCampaigns\": 1\r\n}\r\nconst Hero = ({ type }) => {\r\n    const history = useHistory()\r\n\r\n    var options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0,\r\n    };\r\n\r\n    function success(pos) {\r\n        var crd = pos.coords;\r\n\r\n        // console.log(\"Your current position is:\");\r\n        // console.log(`Latitude : ${crd.latitude}`);\r\n        // console.log(`Longitude: ${crd.longitude}`);\r\n        // console.log(`More or less ${crd.accuracy} meters.`);\r\n        localStorage.setItem('latitude', `${crd.latitude}`);\r\n        localStorage.setItem('longitude', `${crd.longitude}`);\r\n        // setLatitude(`${crd.latitude}`)\r\n        // setLongitude(`${crd.longitude}`)\r\n    }\r\n\r\n    function errors(err) {\r\n        console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n    const dispatch = useDispatch()\r\n\r\n    const mostactivityProjects = useSelector(state => {\r\n        return state?.projectdetails?.getmostProjActivity\r\n    })\r\n    console.log(mostactivityProjects, 'mostactivityProjects')\r\n    useEffect(() => {\r\n        dispatch(getPublicLiveProjects({\r\n            cursor: 1,\r\n            type: projectTypesMap[type],\r\n            projectType: type,\r\n        }))\r\n        dispatch(GetMostactivityProject())\r\n    }, [dispatch])\r\n    const currentLocation = () => {\r\n        // \r\n        if (navigator.geolocation) {\r\n            navigator.permissions\r\n                .query({ name: \"geolocation\" })\r\n                .then(function (result) {\r\n                    if (result.state === \"granted\") {\r\n                        // console.log(result.state);\r\n                        //If granted then you can directly call your function here\r\n                        navigator.geolocation.getCurrentPosition(success);\r\n                    } else if (result.state === \"prompt\") {\r\n                        navigator.geolocation.getCurrentPosition(success, errors, options);\r\n                    } else if (result.state === \"denied\") {\r\n                        //If denied then you have to show instructions to enable location\r\n                    }\r\n                    result.onchange = function () {\r\n                        // console.log(result.state);\r\n                    };\r\n                });\r\n        } else {\r\n            alert(\"Sorry Not available!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        currentLocation()\r\n    }, [])\r\n\r\n    const handleCreate = () => {\r\n        if (window.ethereum.selectedAddress) {\r\n\r\n            if (Roles[\"CREATOR\"] == userRole) {\r\n                history.push('/create')\r\n            }\r\n            else if (Roles[\"BUYER\"] == userRole) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n            else if (!userToken && !localStorage.getItem('authToken')) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Connect your wallet to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n            history.push('/wallet-connect')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section className=\"hero-section\">\r\n            <div className=\"container\">\r\n                <div className=\"row \">\r\n\r\n                    <div className=\"col-12 col-md-6 col-lg-7\">\r\n\r\n                        <h1 className=\"mt-4\">Create NFTs to fund real-life projects. Earn up to 30% by sharing with friends.</h1>\r\n                        {/* <p>Earn rewards by referring your friends.</p> */}\r\n                        {/* Buttons */}\r\n                        <div className=\"button-group\">\r\n                            <Link className=\"btn btn-bordered-white\" to={`/all/${\"LatestProjects\"}`}><i className=\"icon-rocket mr-2\" />Explore</Link>\r\n                            <a className=\"btn btn-bordered-white\" onClick={handleCreate}><i className=\"icon-note mr-2\" />Create </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-md-6 col-lg-4 auction-slider auctions-slides'>\r\n                        {/* {mostactivityProjects[0]?.map((item, idx) => { */}\r\n                        {/* return ( */}\r\n\r\n                        <div key={`auc_${mostactivityProjects[0]?.id}`} className=\"item card\">\r\n\r\n\r\n\r\n                            <div className=\"image-over\">\r\n                                <Link to={`/projects/${mostactivityProjects[0]?.slug}`}>\r\n\r\n                                    <img class=\"card-img-top\" src={mostactivityProjects[0]?.image} alt=\"\"></img>\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"card-caption col-12 p-0\">\r\n\r\n                                <div className=\"card-body pt-0\">\r\n\r\n                                    {/* <a href=\"#\">\r\n                                        <h5 className=\"mb-0\">{mostactivityProjects[0]?.title?.slice(0, 16)}</h5>\r\n                                    </a> */}\r\n                                    {/* <a className=\"seller d-flex align-items-center mb-2\" href=\"#\">\r\n                                        <img className=\"avatar-sm rounded-circle\" src={mostactivityProjects[0]?.user_data?.avatar} alt=\"\" />\r\n                                        <span className=\"ml-2 mb-0\">{mostactivityProjects[0]?.user_data?.username}</span>\r\n                                    </a>\r\n                                    <div className=\"card-bottom d-flex justify-content-between\">\r\n                                        <span>{Math.round(mostactivityProjects[0]?.price)} MATIC</span>\r\n                                        {mostactivityProjects[0]?.number_of_nft == 1 ? (\r\n\r\n                                            <span>{mostactivityProjects[0]?.number_of_nft} NFT</span>\r\n                                        ) : (\r\n                                            <span>{mostactivityProjects[0]?.number_of_nft} NFTs</span>\r\n                                        )\r\n\r\n                                        }\r\n                                    </div> */}\r\n\r\n                                    {/* ) */}\r\n                                    {/* })} */}\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n\r\n                                            {/* <a > */}\r\n                                            <h5 className=\"mb-0\">{mostactivityProjects[0]?.title?.slice(0, 16)}</h5>\r\n                                            {/* </a> */}\r\n\r\n\r\n                                            <div\r\n                                                className=\"seller d-flex align-items-center my-2\"\r\n                                            >\r\n\r\n                                                <a href=\"#\">\r\n                                                    <h6 className=\"ml-2 mb-0\">\r\n                                                        {mostactivityProjects[0]?.user_data.username?.slice(0, 12)}\r\n                                                    </h6>\r\n                                                </a>\r\n\r\n                                                {/* <a > */}\r\n                                                <h6 className=\"ml-2 mb-0\">\r\n                                                    {mostactivityProjects[0]?.user_data.username?.slice(0, 12)}\r\n                                                </h6>\r\n                                                {/* </a> */}\r\n\r\n                                                {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                            </div>\r\n                                            {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                              <span>{Math.round(item.price)} MATIC</span>\r\n                              {item?.number_of_nft == 1 ? (\r\n                                <span>{item.number_of_nft} NFT</span>\r\n                              ) : (\r\n                                <span>{item.number_of_nft} NFTs</span>\r\n                              )}\r\n                            </div> */}\r\n\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Shape */}\r\n            <div className=\"shape\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                    <defs>\r\n                        <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                            <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                            <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                        <polygon points fill=\"url(#linearGradient-1)\">\r\n                            <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                        </polygon>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Hero;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getPublicLiveProjects } from \"../../redux/Actions/projectAction\";\r\nconst projectTypesMap = {\r\n  LatestProjects: 2,\r\n  RecentCampaigns: 1,\r\n};\r\nconst AuctionsOne = ({ type }) => {\r\n  const dispatch = useDispatch();\r\n  const liveProjects = useSelector((state) => {\r\n    return state?.projectdetails?.liveProjects[type];\r\n  });\r\n  console.log(liveProjects, \"liveeproj\");\r\n  useEffect(() => {\r\n    dispatch(\r\n      getPublicLiveProjects({\r\n        cursor: 1,\r\n        type: projectTypesMap[type],\r\n        projectType: type,\r\n      })\r\n    );\r\n  }, [dispatch]);\r\n  return (\r\n    <section className=\"live-auctions-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            {/* Intro */}\r\n            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n              <div className=\"intro-content\">\r\n                <span>Project</span>\r\n                <h3 className=\"mt-3 mb-0\">\r\n                  {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}\r\n                </h3>\r\n              </div>\r\n              <div className=\"intro-btn\">\r\n                {liveProjects?.length > 4 && (\r\n                  <Link to={`/all/${type}`} style={{ color: \"white\" }}>\r\n                    <a className=\"btn content-btn\">View All</a>\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"auctions-slides \">\r\n          <div className=\"swiper-container slider-mid items \">\r\n            <div className=\"swiper-wrapper  \">\r\n              {/* Single Slide */}\r\n              {liveProjects?.map((item, idx) => {\r\n                return (\r\n                  <div\r\n                    key={`auc_${item.id}`}\r\n                    className=\"swiper-slide item card position-relative auctions-slides-card\"\r\n                  >\r\n                    <div className=\"image-over\">\r\n                      <Link to={`/projects/${item.slug}`}>\r\n                        <img\r\n                          className=\"card-img-top\"\r\n                          src={item?.image}\r\n                          alt=\"\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"card-caption col-12 p-0\">\r\n                      <div className=\"card-body\">\r\n                        {/* <a> */}\r\n                        <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                        {/* </a> */}\r\n                        <div\r\n                          className=\"seller d-flex align-items-center my-3\"\r\n                        >\r\n                          <span>Owned By</span>\r\n                          {/* <a> */}\r\n                          <h6 className=\"ml-2 mb-0\">\r\n                            {item.user_data.username.slice(0, 12)}\r\n                          </h6>\r\n                          {/* </a> */}\r\n                        </div>\r\n                        <div className=\"card-bottom d-flex justify-content-between nft-price\" >\r\n                          <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                          {item?.number_of_nft == 1 ? (\r\n                            <span>{item.number_of_nft} NFT</span>\r\n                          ) : (\r\n                            <span>{item.number_of_nft} NFTs</span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between edit-buttons nft-price \">\r\n                          <a\r\n                            className=\"btn  btn-smaller mt-3 mb-0\"\r\n                            href=\"/login\"\r\n                          ><i className=\"icon-handbag\" />\r\n                            {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                          </a>\r\n                          <a\r\n                            className=\"btn  btn-smaller mt-3 ml-2 mb-0\"\r\n                            href=\"/login\"\r\n                          ><i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"swiper-pagination\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default AuctionsOne;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst collectionSlice = createSlice({\r\n    name: 'collection',\r\n\r\n    initialState: {\r\n        collection: [],\r\n        collectiondetail: [],\r\n    },\r\n    reducers: {\r\n        getPopularCollection: (state, action) => {\r\n            // \r\n            state.collection = action.payload;\r\n        },\r\n        getPopularCollectiondetails: (state, action) => {\r\n            // \r\n            state.collectiondetail = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const collectionReducer = collectionSlice.reducer\r\n\r\nexport const {\r\n    getPopularCollection,\r\n    getPopularCollectiondetails\r\n} = collectionSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getPopularCollection, getPopularCollectiondetails } from \"../Slices/popularCollectionSlice\";\r\nimport swal from \"sweetalert\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\nexport const PopularCollectionAction = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnection`, config)\r\n            console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollection(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const PopularCollectionActionDetails = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ slug }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnectionByIdx/${slug}`, config)\r\n            // console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollectiondetails(res));\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { Link } from 'react-router-dom';\r\nconst Collections = () => {\r\n    const dispatch = useDispatch()\r\n    const coll = useSelector(state => {\r\n        //\r\n        return state?.collection?.collection\r\n    })\r\n    console.log(coll, \"coll detail\")\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionAction({}))\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"popular-collections-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>POPULAR</span>\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {coll?.length > 8 &&\r\n                                    <Link className=\"btn content-btn text-left\" to=\"/allcollections\">Explore More</Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {coll?.slice(0, 8)?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`cd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/popularcollection/details/${item?.slug}`}>\r\n                                            <img className=\"card-img-top\" src={item?.image} alt=\"\" />\r\n                                        </Link>\r\n                                        {/* Seller */}\r\n                                        <div className=\"seller\" >\r\n                                            <div className=\"seller-thumb avatar-lg\">\r\n                                                <img className='rounded-circle' src={item?.user_data?.avatar} alt='logo' width={50} height={50} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            {/* <a> */}\r\n                                            <h5 className=\"\">{item.title.slice(0, 12)} </h5>\r\n                                            {/* </a> */}\r\n                                            <div class=\"align-items-center\">\r\n                                                <div class=\"d-flex justify-content-center text-align-center gap-5\">\r\n                                                    <div class=\" align-items-center\">\r\n                                                        <div class=\"d-flex justify-content-center text-align-center gap-5\">\r\n                                                            {item?.nft_data.length == 1 ? (\r\n                                                                <span>Total NFT :</span>\r\n                                                            ) : (\r\n                                                                <span>Total NFTs :</span>\r\n                                                            )\r\n                                                            }\r\n                                                            <span>{item?.nft_data?.length}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div >\r\n            </div >\r\n        </section >\r\n    );\r\n}\r\nexport default Collections;","import { React } from 'react';\r\n\r\nconst data = {\r\n    preHeading: \"How It Works\",\r\n    heading: \"Create and sell your NFTs\",\r\n    workData: [\r\n        {\r\n            \"id\": 1,\r\n            \"icon\": \"icons icon-wallet text-effect\",\r\n            \"title\": \"Setup your wallet\",\r\n            \"text\": \"Click Connect Wallet in the top right corner to login and get started.\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"icon\": \"icons icon-grid text-effect\",\r\n            \"title\": \"Create your collection\",\r\n            \"text\": \"Click Creator and set up your organization profile, description, fundraising goal and more.\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"icon\": \"icons icon-drawer text-effect\",\r\n            \"title\": \"Add your NFTs\",\r\n            \"text\": \"Upload your project art or images and description.\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"icon\": \"icons icon-bag text-effect\",\r\n            \"title\": \"List them for sale\",\r\n            \"text\": \"Choose how you want to price and sell your NFTs!\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst Work = () => {\r\n\r\n\r\n    return (\r\n        <section className=\"work-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro mb-4\">\r\n                            <div className=\"intro-content\">\r\n                                <span>{data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {data?.workData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Work */}\r\n                                <div className=\"single-work\">\r\n                                    <i className={item.icon} />\r\n                                    <h4>{item.title}</h4>\r\n                                    <p>{item.text}</p>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Work;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst footerSlice = createSlice({\r\n    name: 'footer',\r\n\r\n    initialState: {\r\n        footer: [],\r\n        aboutus: []\r\n\r\n    },\r\n    reducers: {\r\n\r\n        getfooter: (state, action) => {\r\n            state.footer = action.payload;\r\n        },\r\n        getabout: (state, action) => {\r\n            state.aboutus = action.payload;\r\n        },\r\n\r\n    },\r\n});\r\n\r\nexport const footerReducer = footerSlice.reducer\r\n\r\nexport const {\r\n    getfooter,\r\n    getabout,\r\n} = footerSlice.actions;","import axios from \"axios\";\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getabout, getfooter } from \"../Slices/footerSlice\";\r\nimport swal from \"sweetalert\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\n\r\nexport const getFooter = createAsyncThunk(\r\n    \"auth/footer\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/term-condition`, config)\r\n            thunkAPI.dispatch(getfooter(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const AboutUsAction = createAsyncThunk(\r\n    \"auth/about\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAbouts`, config)\r\n            thunkAPI.dispatch(getabout(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getFooter } from '../../redux/Actions/footerAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Footer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter(dispatch))\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n    // console.log(userRole)\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const history = useHistory()\r\n    const handleCreate = () => {\r\n        if (window.ethereum.selectedAddress) {\r\n\r\n            if (Roles[\"CREATOR\"] == userRole) {\r\n                history.push('/create')\r\n            }\r\n            else if (Roles[\"BUYER\"] == userRole) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n            else if (!userToken && !localStorage.getItem('authToken')) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Connect your wallet to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n            history.push('/wallet-connect')\r\n        }\r\n\r\n    }\r\n\r\n    function getYear() {\r\n        return new Date().getFullYear();\r\n    }\r\n    return (\r\n\r\n\r\n        <footer className=\"footer-area\">\r\n            {/* Footer Top */}\r\n            <div className=\"footer-top\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Logo */}\r\n                                <a className=\"navbar-brand\" href=\"/\">\r\n                                    <img src=\"/img/logo.png\" alt=\"\" />\r\n                                </a>\r\n                                <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                                {/* Social Icons */}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Useful Links</h4>\r\n                                <ul>\r\n                                    <li className=\"nav-item\">\r\n                                        <a onClick={() => handleCreate()} className=\"\">Create Project</a>\r\n                                    </li>\r\n                                    {/* <li><Link to=\"/create\" onClick={handleCreate}>Create Project</Link></li> */}\r\n                                    <li><Link to={`/all/${\"LatestProjects\"}`}>Explore NFTs</Link></li>\r\n                                    <li><Link to=\"/terms&conditions\">Terms of Service</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Community</h4>\r\n                                <ul>\r\n                                    <li><a target=\"_blank\" href=\"https://www.canopycrypto.io/our-team/\">About Us</a></li>\r\n                                    {/* <li><Link to='/https://www.canopycrypto.io/our-team/'>About Us</Link></li> */}\r\n                                    <li><Link to='/contact'>Get Support</Link></li>\r\n                                    <li><Link to='/rewards'>Rewards</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Footer Bottom */}\r\n            <div className=\"footer-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Copyright Area */}\r\n                            <div className=\"copyright-area d-flex flex-wrap justify-content-center justify-content-sm-between text-center py-4\">\r\n                                {/* Copyright Left */}\r\n\r\n                                <div className=\"copyright-left\">© {getYear()} Copyright Karmatica.</div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ModalSearch = () => {\r\n    const dispatch = useDispatch()\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n    }\r\n    return (\r\n        <div id=\"search\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        {/* {this.state.data.menuName} <i className={this.state.data.menuIcon} /> */}\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form className=\"row\">\r\n                            <div className=\"col-12 align-self-center\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 pb-3\">\r\n                                        <Link to='/author'>Profile</Link>\r\n                                        <Link to='/projectlist'>My Projects</Link>\r\n                                        {/* <button type='button' class=\"dropdown-item\"><a href='/author'>Profile</a></button>\r\n                <button type='button' class=\"dropdown-item\"><a href='/projectlist'>My Projects</a></button> */}\r\n                                        <button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'>Logout</a></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group mt-4\">\r\n                                        <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group align-self-center\">\r\n                                        {/* <button className=\"btn btn-bordered-white mt-3\">{this.state.data.btnText}</button> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ModalSearch;","import React from 'react';\r\n\r\nconst ModalMenu = () => {\r\n    return (\r\n        <div id=\"menu\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header text-right justify-content-end\" data-dismiss=\"modal\">\r\n                        <i className=\"far fa-times-circle icon-close\" />\r\n                    </div>\r\n                    <div className=\"menu modal-body\">\r\n                        <div className=\"row w-100\">\r\n                            <div className=\"items p-0 col-12 text-center\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalMenu;","import React from 'react';\r\n\r\nconst Scrollup = () => {\r\n    return (\r\n        <div id=\"scroll-to-top\" className=\"scroll-to-top\">\r\n            <a href=\"#header\" className=\"smooth-anchor\">\r\n                <i className=\"fas fa-arrow-up\" />\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scrollup;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst fundraiserSlice = createSlice({\r\n    name: 'fundraiser',\r\n\r\n    initialState: {\r\n        fundraiser: [],\r\n        fundraiserdetail: [],\r\n    },\r\n    reducers: {\r\n        getTopFundraiser: (state, action) => {\r\n            // \r\n            state.fundraiser = action.payload;\r\n\r\n        },\r\n        getTopFundraiserDetail: (state, action) => {\r\n            // \r\n            state.fundraiserdetail = action?.payload?.data?.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const fundraiserReducer = fundraiserSlice.reducer\r\n\r\nexport const {\r\n    getTopFundraiser,\r\n    getTopFundraiserDetail\r\n} = fundraiserSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getTopFundraiser, getTopFundraiserDetail } from \"../Slices/fundraiserSlice\";\r\nimport swal from \"sweetalert\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\n\r\nexport const TopFundraiserAction = createAsyncThunk(\r\n    \"auth/topfundraiser\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // \r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers`, config)\r\n            // console.log(res, 'fund res')\r\n            thunkAPI.dispatch(getTopFundraiser(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n// export const TopFundraiserDetail = createAsyncThunk(\r\n//     \"auth/topfundraiserdetail\",\r\n//     async (id, thunkAPI) => {\r\n//         // \r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//             }\r\n//             const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${id}`, config)\r\n\r\n//             thunkAPI.dispatch(getTopFundraiserDetail(res?.data?.data));\r\n\r\n//         } catch (e) {\r\n//             if (e?.response?.data.message) {\r\n//                 swal('error', e.response.data.message, 'error')\r\n//             }\r\n//         }\r\n//     })\r\nexport const TopFundraiserDetail = (user_id) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${user_id}`,\r\n            config)\r\n\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getTopFundraiserDetail(res));\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Fundraiser = () => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <section className=\"top-seller-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Fundraisers</span>\r\n                                <h3 className=\"mt-3 mb-0\">Top Fundraisers</h3>\r\n                            </div>\r\n\r\n                            <div className=\"intro-btn\">\r\n                                {fund?.length > 5 &&\r\n\r\n                                    <Link className=\"btn content-btn\" to='/allfundraise'>View All</Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {fund?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Seller */}\r\n                                <Link to={`/fundraiser/detail/${item.user_id}`}>\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n\r\n                                            <img className=\"avatar-md rounded-circle\" src={item?.organization_detail?.banner_image} alt=\"\" />\r\n\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3 nft-price\">\r\n                                                <a className=\"seller mb-2 text-capitalize\">{item?.organization_detail?.organization_name}</a>\r\n                                                {/* <span dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 15) }} /> */}\r\n                                                <span><img className=\"mr-1\" src='../img/image14.png' /> ${Number(Math.round(item.amount))} Raised</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Fundraiser;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst resellSlice = createSlice({\r\n    name: 'resell',\r\n\r\n    initialState: {\r\n        resell: [],\r\n        reselldetails: [],\r\n    },\r\n    reducers: {\r\n        getResell: (state, action) => {\r\n            state.resell = action.payload?.data?.data;\r\n        },\r\n        getReselldetails: (state, action) => {\r\n            state.reselldetails = action.payload?.data?.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const resellReducer = resellSlice.reducer\r\nexport const {\r\n    getResell,\r\n    getReselldetails\r\n} = resellSlice.actions;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { getResell, getReselldetails } from \"../Slices/resellNftSlice\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\nexport const ResellAction = () => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getResaleNft`,\r\n            \"\", config)\r\n        console.log(\"resproj\", res)\r\n        dispatch(getResell(res));\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const ResellActionDetails = (slug) => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getResaleNftByIdx/${slug.slug}`,\r\n            slug, config)\r\n        console.log(\"resproj\", res)\r\n        dispatch(getReselldetails(res));\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getPublicLiveProjects } from \"../../redux/Actions/projectAction\";\r\nimport { ResellAction } from \"../../redux/Actions/resellNftAction\";\r\nconst Resell = ({ type }) => {\r\n    const dispatch = useDispatch();\r\n    const nfts = useSelector((state) => {\r\n        return state?.resell?.resell;\r\n    });\r\n    console.log(nfts[0]?.image, \"resellnfts\");\r\n    useEffect(() => {\r\n        dispatch(ResellAction())\r\n    }, [dispatch]);\r\n    return (\r\n        <section className=\"live-auctions-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>NFTs</span>\r\n                                <h3 className=\"mt-3 mb-0\">\r\n                                    Latest NFTs\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {nfts?.length > 4 && (\r\n                                    <Link to='/all/resll/nfts' style={{ color: \"white\" }}>\r\n                                        <a className=\"btn content-btn\">View All</a>\r\n                                    </Link>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auctions-slides \">\r\n                    <div className=\"swiper-container slider-mid items \">\r\n                        <div className=\"swiper-wrapper  \">\r\n                            {/* Single Slide */}\r\n                            {nfts?.map((item, idx) => {\r\n                                return (\r\n                                    <div\r\n                                        key={`auc_${item.id}`}\r\n                                        className=\"swiper-slide item card position-relative auctions-slides-card\"\r\n                                    >\r\n                                        <div className=\"image-over\">\r\n                                            <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                                <img\r\n                                                    className=\"card-img-top\"\r\n                                                    src={item?.image}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            <div className=\"card-body\">\r\n                                                {/* <a> */}\r\n                                                <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                                                {/* </a> */}\r\n                                                <div\r\n                                                    className=\"seller d-flex align-items-center my-3\"\r\n                                                >\r\n                                                    <span>Owned By</span>\r\n                                                    {/* <a> */}\r\n                                                    <h6 className=\"ml-2 mb-0\">\r\n                                                        {item.user_data.username.slice(0, 12)}\r\n                                                    </h6>\r\n                                                    {/* </a> */}\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between nft-price\" >\r\n                                                    <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                    <span>1 NFT</span>\r\n                                                </div>\r\n                                                <div className=\"d-flex justify-content-between edit-buttons nft-price \">\r\n                                                    <Link to={`/nft/details/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n                                                        <i className=\"icon-handbag\" />\r\n                                                    </Link>\r\n                                                    <Link to={`/nft/details/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n                                                        <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"swiper-pagination\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default Resell;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Hero from '../components/Hero/Hero';\r\nimport Auctions from '../components/Auctions/AuctionsOne';\r\nimport Collections from '../components/Collections/Collections';\r\nimport Work from '../components/Work/Work';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\nimport Resell from '../components/Auctions/resellNft';\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Hero />\r\n            <Auctions key=\"latestProjects\" type={\"LatestProjects\"} />\r\n            <Resell />\r\n\r\n            <Fundraiser />\r\n            <Collections />\r\n            <Work />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Breadcrumb extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"breadcrumb-area overlay-dark d-flex align-items-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Breamcrumb Content */}\r\n                            <div className=\"breadcrumb-content text-center\">\r\n                                <h2 className=\"m-0\">{this.props.title}</h2>\r\n                                <ol className=\"breadcrumb d-flex justify-content-center\">\r\n                                    <li className=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\r\n                                    <li className=\"breadcrumb-item\"><a href=\"#\">{this.props.subpage}</a></li>\r\n                                    <li className=\"breadcrumb-item active\">{this.props.page}</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/explore\";\r\n\r\nclass ExploreTwo extends Component {\r\n    state = {\r\n        data: {},\r\n        exploreData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    exploreData: res.data.exploreData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/explore-1\">{this.state.data.btnText}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.exploreData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`edt_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/item-details\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                </a>\r\n                                                <div className=\"seller d-flex align-items-center my-3\">\r\n                                                    <span>Owned By</span>\r\n                                                    <a href=\"/author\">\r\n                                                        <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span>{item.price}</span>\r\n                                                    {/* <span>{item.count}</span> */}\r\n                                                </div>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreTwo;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass ExploreOne extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 1\" />\r\n                <Explore />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreOne;","/**\r\n * Loader Spinner\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n\r\n\r\n\r\n    return (\r\n        // <div style={{position: 'absolute', backgroundColor: '#0002', width: '100%', height: '100%'}}>\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                height: \"100px\",\r\n                width: \"100px\",\r\n                margin: \"auto\",\r\n                display: \"block\",\r\n                // position: 'absolute',\r\n                // left: 'calc(50% - 50px)',\r\n                // top: 'calc(50% - 50px)'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\nimport swal from 'sweetalert';\r\nimport { Pagination } from 'antd';\r\n\r\nconst GetAllProjects = () => {\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const projects = useSelector(state => {\r\n        return state.projectdetails.projects\r\n    })\r\n\r\n    console.log(projects, 'projects')\r\n\r\n    useEffect(() => {\r\n        dispatch(ProjectList())\r\n    }, [dispatch])\r\n\r\n    const showDeleteHandler = (id) => {\r\n        // debugger\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this project!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    dispatch(DeleteProject(id))\r\n                    swal(\"Poof! Your project has been deleted!\", {\r\n                        icon: \"success\",\r\n                    });\r\n                } else {\r\n                    swal(\"Your project is safe!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    {window.ethereum?.selectedAddress && (\r\n\r\n                                        <h3 className=\"mt-3 mb-0\">My Projects</h3>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {projects && projects.length ?\r\n                                [...new Map(projects.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                        return (\r\n                                            // <Link key={`edth_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                            <div className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                                {/* <button onClick={() => showDeleteHandler()}>delete</button> */}\r\n                                                <div className=\"card project_cards\">\r\n                                                    <div className=\"image-over relative \">\r\n                                                        {item.is_nft_mintted !== 1 &&\r\n\r\n                                                            <i class=\"fa-sharp fa-solid fa-trash\" onClick={() => showDeleteHandler(item.id)}></i>\r\n                                                        }\r\n                                                        <Link to={`/projnftdetails/${item.slug}`}>\r\n                                                            {/* <i class=\"fa-solid fa-pen\" ></i> */}\r\n                                                            <img className=\"card-img-top\" src={item?.image} alt={item.nft_data.description} />\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className='token'>\r\n                                                        <span></span>\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            {/* <a> */}\r\n                                                            <h5 className=\"mb-0 pb-0 break-all\">{item.title.slice(0, 16)}</h5>\r\n                                                            {/* </a> */}\r\n                                                            <div className=\"seller d-flex align-items-center my-2\">\r\n                                                                <span>Owned By</span>\r\n\r\n                                                                <h6 className=\"ml-2 mb-0\">You</h6>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                {item?.number_of_nft == 1 ? (\r\n\r\n                                                                    <span>{item?.number_of_nft} NFT </span>\r\n                                                                ) : (\r\n                                                                    // <><span>{item.nft_data.length} NFTs </span>\r\n                                                                    <span> +{item.number_of_nft} NFTs </span>\r\n                                                                )}\r\n                                                            </div>\r\n\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            // </Link>\r\n                                        )\r\n                                    }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    {window.ethereum?.selectedAddress ? (\r\n                                        <h2 className='allproj2'>\r\n                                            You have no projects yet, <Link to=\"/create\">create one now</Link>\r\n                                        </h2>\r\n\r\n                                    ) : (\r\n                                        <h2 className='allproj2'>\r\n                                            Please connect you wallet to continue, <Link to=\"/wallet-connect\">Connect</Link>\r\n                                        </h2>\r\n                                    )}\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        {/* <Pagination defaultCurrent={6} total={500} /> */}\r\n                    </div>\r\n                </section>\r\n            )\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllProjects; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport GetAllProjects from '../components/Explore/ProjectList';\r\n\r\nconst ExploreTwo = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExploreTwo;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\n\r\nconst LatestProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AuctionsOne type=\"LatestProjects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LatestProjects;","import React, { Component } from 'react';\r\nimport AuctionsOne from '../Auctions/AuctionsOne';\r\n\r\n\r\n\r\nconst LatestProject = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <AuctionsOne />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default LatestProject;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\n\r\nconst Auctions = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LatestProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Auctions;","\r\nimport React, { useState } from \"react\";\r\n\r\nconst ReadMore = ({ data }) => {\r\n\r\n    const [isReadMore, setIsReadMore] = useState(true);\r\n    console.log(data)\r\n    const toggleReadMore = () => {\r\n        setIsReadMore(!isReadMore);\r\n    };\r\n\r\n    return (\r\n        <p className=\"text\">\r\n            <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: isReadMore ? data?.slice(0, 1000) : data }} />\r\n            {data?.length > 1000 &&\r\n\r\n                <span onClick={toggleReadMore} className=\"read-or-hide\">\r\n                    {isReadMore ? \"...read more\" : \" show less\"}\r\n                </span>\r\n            }\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default ReadMore","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst FundTransdataTable = () => {\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [expandIconPosition] = useState('end');\r\n\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n\r\n\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg class=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></circle><path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {funddetail?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                    {funddetail?.payment_history?.length == 0 &&\r\n                        <div className='nothing'>\r\n                            No matching records found\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FundTransdataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst UserTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const location = useLocation()\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {userdet?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n                {userdet?.payment_history?.length == 0 &&\r\n                    <div className='nothing'>\r\n                        No matching records found\r\n                    </div>\r\n                }\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default UserTransdataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst UserdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details' >\r\n                        <tbody >\r\n                            <tr>\r\n                                <td><span>Name </span> <span>{userdet.username}</span></td>\r\n                                <td><span>Wallet ID</span>  <span>{userdet.wallet_id}</span></td>\r\n                                <td><span>Number of Referrals </span> <span>{userdet.referrers}</span></td>\r\n                                <td><span>Referral Amount </span> <span>{userdet.referral_amount} KARMATICA token</span></td>\r\n                                <td><span>Fundraised </span> <span>{userdet.total_fundraised} MATIC</span></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default UserdataTable","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\nimport { useParams } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ProjDetailPopup(props) {\r\n    const editor = useRef(null);\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n    const id = useParams()\r\n    const [type, setType] = useState()\r\n    const { countries } = useSelector(state => state.countries)\r\n    const [country, setCountry] = useState('')\r\n    console.log('country', country)\r\n    const [state, setState] = useState('')\r\n    const [city, setCity] = useState('')\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n    }, [])\r\n    const handleChangeCountry = (event) => {\r\n        event?.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // debugger\r\n        event.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n    };\r\n    const handleChangeCity = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCity(event?.currentTarget?.value);\r\n    };\r\n    const cities = useSelector(state => {\r\n        // debugger\r\n        return state.countries.city\r\n    })\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            setDescription(projdetail.description)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n        }\r\n    }, [projdetail]);\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n        dispatch(UpdateProject(props, formData))\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Project name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Project name\"\r\n                                    {...register(\"title\", { required: true })}\r\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <div className=\"col-6 col-12\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    placeholder=\"Web Address\"\r\n                                    {...register(\"address\", { required: true })}\r\n                                    aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Country</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"country\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"country\"\r\n                                            {...register(\"country\", { required: true })}\r\n                                            // value={value}\r\n                                            // defaultValue={value}\r\n                                            onChange={handleChangeCountry}\r\n                                        >\r\n                                            aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                Select your country</option>\r\n                                            {countries?.data?.data?.map((option, key) => (\r\n                                                <>\r\n                                                    <option key={key.id} value={option.id}  >\r\n                                                        {option.name}\r\n                                                    </option>\r\n                                                </>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>State or Province</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"state\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"state\"\r\n                                            {...register(\"state\", { required: true })}\r\n                                            // defaultValue={value}\r\n                                            // value={value}\r\n                                            onChange={handleChangeState} >\r\n                                            aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n                                            {states?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id} >\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>City or Region</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"city\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}\r\n                                            // value={value}\r\n                                            onChange={handleChangeCity}\r\n                                        >\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                {projdetail.type == 2 ? (\r\n                                    <label>Price</label>\r\n                                ) : (\r\n                                    <label>Price per NFT</label>\r\n                                )}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    placeholder=\"Price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    defaultValue={1}\r\n                                    // disabled={type == 1}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    min={1}\r\n                                    max={10}\r\n                                    {...register(\"number_of_nft\", { required: true })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {projdetail.type == 2 && (\r\n                            <><div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // min={disablePastDate()}\r\n                                        // placeholder=\"Start date\"\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                        aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                    {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                </div>\r\n                            </div><div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Campaign End Date</label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n                                            name=\"end_date\"\r\n                                            min={disablePastDate()}\r\n                                            // placeholder=\"End date\"\r\n                                            {...register(\"end_date\", { required: true })}\r\n                                            aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                        {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                    </div>\r\n                                </div></>\r\n                        )}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"annual_revenue_range\"\r\n                                    // defaultValue={}\r\n                                    {...register(\"category_id\")}>\r\n                                    {cat?.map((option, key) => (\r\n                                        <option key={key.id} value={option.id}>\r\n                                            {option.title}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\nexport default ProjDetailPopup","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { LatestProjectDetail, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { ProgressBar, Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nimport dayjs from 'dayjs';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\nconst ProjdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { slug } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'userprojdata')\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(latprojdetail, 'userprojdetaaaa')\r\n    // const [projuserID, setProjuserid] = useState()\r\n    // console.log('projjj', projuserID)\r\n    // const projuserid = projdetail?.user_data?.map((item) => {\r\n    //     return (\r\n    //         setProjuserid(item.user_id)\r\n    //     )\r\n    // })\r\n    console.log(userdet.user_id, 'uid')\r\n    useEffect(() => {\r\n        dispatch(LatestProjectDetail(slug))\r\n        dispatch(ProjectDetail(slug))\r\n        dispatch(PopularCollectionActionDetails(props.idx))\r\n    }, [slug])\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    const location = useLocation();\r\n    const date1 = new Date(coll?.updated_at)\r\n    const date2 = new Date()\r\n    const time_difference = date2.getTime() - date1.getTime();\r\n    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n    console.log('days', days_difference)\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details'>\r\n                        {projdetail?.user_data?.user_id === userdet?.user_id && localStorage.getItem('authToken') &&\r\n\r\n                            <div >\r\n                                <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                    setModalShowproj(true)}></i>\r\n                                <ProjDetailPopup\r\n                                    // debugger\r\n                                    id={props.id}\r\n                                    show={modalShowproj}\r\n                                    onHide={() => setModalShowproj(false)} />\r\n                                {/* <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a> */}\r\n\r\n                                {/* <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                {/* </a> */}\r\n                            </div>\r\n                        }\r\n                        <tbody className=''>\r\n                            {/* {projdetail.nft_data?.map((items) => {\r\n                                return ( */}\r\n                            <tr>\r\n\r\n                                {/* {projdetail?.country_name?.map((item) => {\r\n                                    return (\r\n\r\n                                        <tr>Country : {item.name}</tr>\r\n                                    )\r\n                                })} */}\r\n                                {location.pathname === `/projects/${slug}` ? (\r\n\r\n                                    <>\r\n                                        {/* <td><span>Owned By:</span> <span>{latprojdetail?.user_data?.username}</span> </td> */}\r\n                                        {/* <td><span>Total NFT's:</span> <span>{latprojdetail?.number_of_nft}</span></td> */}\r\n                                        <td><span>Chain: </span> <span>Polygon (Matic)</span></td>\r\n                                        <td><span>Created : </span> <span> {dayjs(latprojdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\r\n                                        <td><span>Country </span> <span>{latprojdetail?.country_name?.name}</span></td>\r\n                                        <td><span>State</span>  <span>{latprojdetail?.state_name?.name}</span> </td>\r\n                                        <td><span>City</span>  <span>{latprojdetail?.city_name?.name}</span> </td>\r\n                                        <td><span>Number of NFTs</span>  <span>{latprojdetail?.number_of_nft}</span> </td>\r\n                                        {latprojdetail.type == 2 &&\r\n\r\n                                            <><td><span>Start Date</span>  <span>{latprojdetail?.start_date}</span> </td>\r\n                                                <td><span>End Date </span> <span>{latprojdetail?.end_date}</span> </td></>\r\n                                        }\r\n                                        <td><span>Price </span> <span> {latprojdetail?.price} </span> </td></>\r\n                                ) : (\r\n                                    <>\r\n                                        {location.pathname === `/popularcollection/details/${slug}` ? (\r\n                                            <>\r\n\r\n                                                <td><span>Number of NFTs </span><span> {coll?.nft_data?.length}</span></td>\r\n                                                <td><span>Chain </span> <span>Polygon (Matic)</span></td>\r\n                                                <td><span>Created at</span>  <span>{days_difference} days ago</span> </td>\r\n                                                <td><span>Category</span>  <span>{coll?.category}</span> </td>\r\n                                            </>\r\n                                        ) : (\r\n\r\n                                            <>\r\n                                                <td><span>Chain: </span> <span>Polygon (Matic)</span></td>\r\n                                                <td><span>Created : </span> <span> {dayjs(projdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\r\n                                                <td><span>Country </span> <span>{projdetail.country_name?.name}</span></td>\r\n                                                <td><span>State</span>  <span>{projdetail.state_name?.name}</span> </td>\r\n                                                <td><span>City</span>  <span>{projdetail.city_name?.name}</span> </td>\r\n                                                <td><span>Number of NFTs</span>  <span>{projdetail.number_of_nft}</span> </td>\r\n                                                {projdetail.type == 2 &&\r\n\r\n                                                    <><td><span>Start Date</span>  <span>{projdetail.start_date}</span> </td>\r\n                                                        <td><span>End Date </span> <span>{projdetail.end_date}</span> </td></>\r\n                                                }\r\n                                                <td><span>Price </span> <span> {projdetail.price} </span> </td>\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjdataTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst LatNftdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { slug } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(ProjectDetail(slug))\r\n    }, [slug])\r\n\r\n    return (\r\n        <div className='position-relative'>\r\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\" >\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>Item</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody className='img_table'>\r\n                            {projdetail?.project_activity && projdetail?.project_activity?.length ?\r\n                                [...new Map(projdetail?.project_activity.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                        return (\r\n                                            <tr className='contract-address'>\r\n\r\n                                                <td><img\r\n                                                    src={item.image}\r\n                                                    className=\"rounded-circle mr-2\"\r\n                                                    alt=\"Avatar\"\r\n                                                />{item.nft_title.slice(0, 13)}...</td>\r\n                                                <td>{item.price}</td>\r\n                                                <td>{item.pay_from.slice(0, 4)}...{item.pay_from.slice(35, 44)}</td>\r\n                                                <td>{item.pay_to.slice(0, 4)}...{item.pay_to.slice(35, 44)}</td>\r\n                                                <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/tx/${item?.txd_id}`} >{item.txd_id.slice(0, 4)}...{item.txd_id.slice(35, 44)}</a></td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) :\r\n                                // <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                <>\r\n\r\n                                </>\r\n                            }\r\n                        </tbody>\r\n                        {/* <div className='nothing col-spam-5' colspan=\"5\">\r\n                            No matching records found\r\n                        </div> */}\r\n                    </Table>\r\n                    <div className='nothing'>\r\n                        {projdetail?.project_activity == 0 &&\r\n                            <span> No matching records found</span>\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftdataTable","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { LatestProjectDetail } from '../../redux/Actions/projectAction';\r\nconst ProjNFTS = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams();\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(latprojdetail, \"prjj\")\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    useEffect(() => {\r\n        // \r\n        dispatch(LatestProjectDetail(slug))\r\n    }, [slug])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container\">\r\n                <div className='intro row m-0'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {latprojdetail?.nft_data?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.slug}?refid=${props.refid}`}>\r\n                                            {item.extention === 'modal' || item.extention === 'Player' ? (\r\n                                                <img className=\"card-img-top\" src={item.preview_imag} alt=\"\" />\r\n                                            ) : (\r\n                                                <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                            )}\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0 nfts-detail\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"mb-0\">{item.title.slice(0, 16)} ...</h5>\r\n                                            <div className=\"card-bottom mt-1\">\r\n                                                <p dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                                            </div>\r\n                                            <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\r\n                                                {item.sold_nft == 1 ? (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>SOLD OUT</button></a>\r\n                                                ) : (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={`/nftprojdetails/${item.slug}?refid=${props.refid}`} style={{ color: \"white\" }}>Invest</Link></button></a>\r\n                                                )}\r\n                                                <a> <img className=\"mr-1\" src='../img/image14.png' />{item.price}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\nexport default ProjNFTS;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPopularCollectiondetails } from '../../redux/Slices/popularCollectionSlice';\r\nconst CollectionNFTS = () => {\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams();\r\n    const collNft = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    console.log(collNft, \"collNft\")\r\n    useEffect(() => {\r\n        dispatch(getPopularCollectiondetails())\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container p-0\">\r\n                <div className='intro row ml-0 mr-0 mt-3'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {collNft?.nft_data?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.slug}`}>\r\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0 nfts-detail\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"mb-0\">{item.title.slice(0, 16)} ...</h5>\r\n                                            <div className=\"card-bottom mt-1\">\r\n                                                <p dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                                            </div>\r\n                                            <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\r\n                                                {item.sold_nft == 1 ? (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled><i className=\"icon-handbag mr-1\" />SOLD OUT</button></a>\r\n                                                ) : (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={`/nftprojdetails/${item.slug}`} style={{ color: \"white\" }}>Invest</Link></button></a>\r\n                                                )}\r\n                                                <a> <img className=\"mr-1\" src='../../img/image14.png' />{item.price}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\nexport default CollectionNFTS;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Nftprice, Nftdeatil } from './nftprice'\r\nimport { useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport ReadMore from '../../readMore';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport UserdataTable from '../AuthorProfile/userTransTable';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport ProjdataTable from './projDetailtable';\r\nimport LatNftdataTable from './latProjNftdata';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { getPopularCollection } from '../../redux/Slices/popularCollectionSlice';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\nimport CollectionNFTS from '../Collections/collectionNfts';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst CollectionDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const slug = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionActionDetails(slug))\r\n\r\n\r\n    }, [slug])\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    console.log(coll, 'coll')\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail collection_detail\">\r\n            <div className=\"container\">\r\n                <div className='col-12 col-lg-12 '>\r\n                    <span className=\"p-0 title_main \">{coll?.title}</span>\r\n                </div>\r\n                <div className=\"row\">\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n\r\n                                <img src={coll?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12 col-lg-4 '>\r\n                        <div class=\"user-description mt-4 mt-sm-0\">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={coll?.description?.slice(0, 505)} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: coll.description }} /> */}\r\n                        </div>\r\n\r\n                        {/* <div className='content content_project'>\r\n                        <div className='card no-hover position-relative'>\r\n                        <div><span className='boldertext'>Number of NFTs :</span><span> {coll?.nft_data?.length}</span></div>\r\n                        <div><span className='boldertext'>Chain :</span> <span>Polygon (Matic)</span></div>\r\n                        <div><span className='boldertext'>Created at:</span>  <span> {days_difference}12  days ago</span></div>\r\n                        <div><span className='boldertext'>Category:</span>  <span>{coll?.category}</span></div>\r\n                        </div>\r\n\r\n                    </div> */}\r\n                        {/* \r\n                        <div className='table-main-detail mt-3 mt-lg-0 position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                                idx={slug}\r\n                            />\r\n                        </div> */}\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {/* <div className=\"col-lg-4 col-12 mt-3 mt-lg-0\">\r\n                        <div>\r\n                            <div className=\" mb-3\">\r\n\r\n\r\n\r\n\r\n\r\n                                {coll?.user_invest?.slice(0, 3)?.map((items) => {\r\n                                    const date1 = new Date(items.updated_at)\r\n                                    const date2 = new Date()\r\n                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                    console.log('days', days_difference)\r\n                                    return (\r\n\r\n                                        <ul className=\"m-0 custom_lis pl-0\">\r\n                                            <li>\r\n                                                <div className='lorem_done p-0'>\r\n                                                    <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    </svg>\r\n                                                    </span>\r\n\r\n                                                   \r\n                                                </div>\r\n                                            </li>\r\n\r\n\r\n                                        </ul>\r\n\r\n                                    )\r\n                                })}\r\n\r\n\r\n                                <p className='see_all'>See all</p>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-12 col-lg-12 mt-3\">\r\n                        {/* <div className='row'>\r\n                            <div className='filter'>\r\n                                <div className='filter-main-name'>\r\n                                    <div>Short</div>\r\n                                    <div>\r\n                                        <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"0\" fill=\"none\" width=\"24\" height=\"24\"/><g><path d=\"M7 10l5 5 5-5\" fill=\"#fff\"/></g></svg>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='filter-main'>\r\n                                    <ul>\r\n                                        <li>Latest</li>\r\n                                        <li>Oldest</li>\r\n                                        <li>Price:Low to Heigh</li>\r\n                                        <li>Price:Heigh to Low </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n\r\n\r\n\r\n                        {/* <div>\r\n\r\n                        <ProjdataTable\r\n                            idx={id}\r\n                        //  id={id}\r\n                        />\r\n                    </div> */}\r\n\r\n                        {/* </div> */}\r\n\r\n                        {/* <div className='col-12'>\r\n                        <div className='mt-3'>\r\n                            <div className='table-detail'>\r\n                                <LatNftdataTable />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div> */}\r\n\r\n                        <div className=\" col-12 mt-3 p-0\">\r\n                            <div className=\"items mt-0 explore-items p-0\">\r\n                                <CollectionNFTS />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default CollectionDetails;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Explore/popularDetails';\r\n\r\nconst ItemDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <CollectionDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ItemDetails;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Help Center\",\r\n    heading: \"How can we help you?\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        icon: \"icon icon-plane text-effect\",\r\n        title: \"Getting Started\",\r\n        content: \"Learn how to create an account, set up your wallet, and what you can do on NetStorm\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        icon: \"icon icon-note text-effect\",\r\n        title: \"Creating\",\r\n        content: \"Learn how to create your very first NFT and how to create your NFT collections so you can begin selling and sharing\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        icon: \"icon icon-handbag text-effect\",\r\n        title: \"Buying\",\r\n        content: \"Learn how to purchase your first NFT and understand gas fees and what's gas free on NetStorm\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        icon: \"icon icon-chart text-effect\",\r\n        title: \"Selling\",\r\n        content: \"Learn how list your NFTs for sale and understand the different ways to list your NFTs\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        icon: \"icon icon-link text-effect\",\r\n        title: \"Partners\",\r\n        content: \"Learn how you can partner with us to showcase your NFT drops\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        icon: \"icon icon-flag text-effect\",\r\n        title: \"Developers\",\r\n        content: \"Learn how you can develop with NetStorm &amp; sell them on Marketplace\"\r\n    }\r\n]\r\n\r\nclass HelpCenter extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"help-center-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`hd_${idx}`} className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                    {/* Help Card */}\r\n                                    <div className=\"card help-card\">\r\n                                        <a className=\"d-block text-center\" href=\"#\">\r\n                                            <i className={item.icon} />\r\n                                            <h4>{item.title}</h4>\r\n                                            <p>{item.content}</p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"FAQ\",\r\n    heading: \"Frequently Asked Questions\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        btnClass: \"btn d-block text-left w-100 py-4\",\r\n        target: \"#collapseOne\",\r\n        quote: \"How do I create an NetStorm account?\",\r\n        contentId: \"collapseOne\",\r\n        contentClass: \"collapse show\",\r\n        content: \"The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text.\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseTwo\",\r\n        quote: \"Where can I see transaction details?\",\r\n        contentId: \"collapseTwo\",\r\n        contentClass: \"collapse\",\r\n        content: \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source.\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseThree\",\r\n        quote: \"How do royalties work on NetStorm?\",\r\n        contentId: \"collapseThree\",\r\n        contentClass: \"collapse\",\r\n        content: \"It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFour\",\r\n        quote: \"How do I list an NFT to sell?\",\r\n        contentId: \"collapseFour\",\r\n        contentClass: \"collapse\",\r\n        content: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFive\",\r\n        quote: \"How do I create an NFT?\",\r\n        contentId: \"collapseFive\",\r\n        contentClass: \"collapse\",\r\n        content: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"\r\n    }\r\n]\r\n\r\nclass Faq extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"faq-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* FAQ Content */}\r\n                            <div className=\"faq-content\">\r\n                                {/* Netstorm Accordion */}\r\n                                <div className=\"accordion\" id=\"netstorm-accordion\">\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <div className=\"col-12 col-md-10\">\r\n                                            {/* Single Accordion Item */}\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <div key={`fd_${idx}`} className=\"single-accordion-item p-3\">\r\n                                                        {/* Card Header */}\r\n                                                        <div className=\"card-header bg-inherit border-0 p-0\">\r\n                                                            <h2 className=\"m-0\">\r\n                                                                <button className={item.btnClass} type=\"button\" data-toggle=\"collapse\" data-target={item.target}>\r\n                                                                    {item.quote}\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id={item.contentId} className={item.contentClass} data-parent=\"#netstorm-accordion\">\r\n                                                            {/* Card Body */}\r\n                                                            <div className=\"card-body py-3\">\r\n                                                                {item.content}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Faq;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Help from '../components/HelpCenter/HelpCenter';\r\nimport Faq from '../components/Faq/Faq';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass HelpCenter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Help Center\" subpage=\"Community\" page=\"Help Center\" />\r\n                <Help />\r\n                <Faq />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import { React } from 'react';\r\nimport ReactImagePickerEditor from 'react-image-picker-editor';\r\n\r\nimport 'react-image-picker-editor/dist/index.css'\r\n\r\nconst UploadImage = ({ initalImag, imageSrc, setImageSrc, show = true }) => {\r\n  const config2 = {\r\n    borderRadius: '8px',\r\n    language: 'en',\r\n    width: '330px',\r\n    height: '250px',\r\n    objectFit: 'contain',\r\n    compressInitial: null,\r\n    hideDownloadBtn: true\r\n  };\r\n\r\n  const initialImage = initalImag;\r\n\r\n  return <div className='image-container'>\r\n    < ReactImagePickerEditor\r\n      config={config2}\r\n      // initialImage={im}\r\n      imageSrcProp={initialImage}\r\n      imageChanged={(newDataUri) => { setImageSrc(newDataUri) }} />\r\n    {/* <br /> <br />\r\n    <hr />\r\n    <br /> */}\r\n    {/* <p>Image preview:</p> */}\r\n    {/* {imageSrc && <img src={imageSrc} alt=\"example\" style={{ maxHeight: '900px', maxWidth: '100%', objectFit: 'contain', background: 'black' }} />}\r\n    {!imageSrc && <h2 style={{ textAlign: 'center', color: '#FFF' }}>No image loaded yet</h2>} */}\r\n\r\n  </div>\r\n}\r\n\r\nexport default UploadImage;\r\n\r\n\r\n","export const dataURLtoBlob = (dataurl) => {\r\n    var arr = dataurl?.split(','), mime = arr[0]?.match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr?.length, u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new Blob([u8arr], { type: mime });\r\n}\r\n\r\nexport const blobToDataURl = (blob) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = _e => resolve(reader.result);\r\n        reader.onerror = _e => reject(reader.error);\r\n        reader.onabort = _e => reject(new Error(\"Read aborted\"));\r\n        reader.readAsDataURL(blob);\r\n    });\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\n\r\nfunction Banner(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submit = () => {\r\n        // debugger\r\n        const formData = new FormData()\r\n\r\n        const image = dataURLtoBlob(imageSrc)\r\n        formData.append('image', image)\r\n        dispatch(UpdateBanner(formData, props))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Project Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default Banner","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\nfunction AvatarUpload(props) {\r\n    const [imageSrc, setImageSrc] = useState('');\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const avatar = dataURLtoBlob(imageSrc)\r\n        formData.append('avatar', avatar)\r\n        formData.append('username', userdet.username)\r\n        dispatch(UpdateProfileAction(formData, props))\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    User Image\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\nexport default AvatarUpload","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\nfunction BannerUpload(props) {\r\n    const [imageSrc, setImageSrc] = useState('');\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const banner_image = dataURLtoBlob(imageSrc)\r\n        formData.append('username', userdet.username)\r\n        formData.append('banner_image', banner_image)\r\n        dispatch(UpdateProfileAction(formData, props))\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Profile Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\nexport default BannerUpload","import React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GetUserAction, UpdateProfileAction } from \"../../redux/Actions/authAction\";\r\nimport { useEffect } from \"react\";\r\nimport UserTransdataTable from \"./userTransTable\";\r\nimport UserdataTable from \"./userDetails\";\r\nimport Banner from \"../Create/editBanner\";\r\nimport AvatarUpload from \"./avatarUpload\";\r\nimport BannerUpload from \"./bannerUpload\";\r\nimport { Link } from \"react-router-dom\";\r\nconst AuthorProfile = () => {\r\n    const [modalSho, setModalSho] = React.useState(false);\r\n    const [modalShowavatar, setModalShowavatar] = React.useState(false);\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet, 'user')\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const dispatch = useDispatch()\r\n    const onSubmit = (data) => {\r\n        const formData = new FormData()\r\n        formData.append('username', data.username)\r\n        formData.append('email', data.email)\r\n        dispatch(UpdateProfileAction(formData))\r\n    }\r\n    useEffect(() => {\r\n        dispatch(GetUserAction());\r\n    }, []);\r\n    useEffect(() => {\r\n        if (userdet && Object.keys(userdet).length) {\r\n            setValue(\"avatar\", userdet.avatar);\r\n            setValue(\"username\", userdet.username);\r\n            setValue(\"email\", userdet.email);\r\n        }\r\n    }, [userdet]);\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"container\">\r\n                {/* <h3 class=\"p-0\">Author Name </h3> */}\r\n                <div className=\"row pt-0\">\r\n                    <div className='col-md-8'>\r\n                        <div className=\"banner item-thumb text-center\">\r\n                            <div>\r\n                                <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                    onClick={() => setModalSho(true)}\r\n                                ></i>\r\n                                <BannerUpload\r\n                                    show={modalSho}\r\n                                    onHide={() => setModalSho(false)} />\r\n                            </div>\r\n                            <img src={userdet.banner_image} alt=\"first nft\" />\r\n                        </div>\r\n                        <div className=\"table-detail mt-4\">\r\n                            <UserdataTable />\r\n                        </div>\r\n                        <div className=\"profile_detail mt-4 position-relative\">\r\n                            <UserTransdataTable />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4 mt-4 mt-lg-0\">\r\n                        <div className=\"profile_main_right card wrap_card no-hover text-center\">\r\n                            <div className=\"image-over\">\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                        onClick={() => setModalShowavatar(true)}\r\n                                    ></i>\r\n                                    <AvatarUpload\r\n                                        show={modalShowavatar}\r\n                                        onHide={() => setModalShowavatar(false)} />\r\n                                </div>\r\n                                <img className=\"card-img-top\" src={userdet.avatar} alt=\"\" />\r\n                            </div>\r\n                            {/* Card Caption */}\r\n                            <div className=\"card-caption col-12 p-0\">\r\n                                {/* Card Body */}\r\n                            </div>\r\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover p-0\">\r\n                                <div className=\"card-body\">\r\n                                    <from className=\"Edite_able\" >\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                style={{ textTransform: 'none' }}\r\n                                                name=\"username\"\r\n                                                placeholder=\"username\"\r\n                                                {...register(\"username\", { required: true })}\r\n                                                aria-invalid={errors.username ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n                                            <i class=\"fa-solid fa-pen\"></i>\r\n                                        </label>\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control \"\r\n                                                name=\"email\"\r\n                                                disabled={userdet.role == 3 ? true : false}\r\n                                                placeholder=\"email\"\r\n                                                {...register(\"email\")}\r\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {userdet.role == 2 &&\r\n                                                <i class=\"fa-solid fa-pen\"></i>\r\n                                            }\r\n                                        </label>\r\n                                        <button className=\"btn btn-bordered-white btn-smaller\" type=\"submit\" >\r\n                                            Update\r\n                                        </button>\r\n                                        <div>\r\n                                            <br />\r\n                                            {userdet.role == 3 ? (\r\n                                                <>You are logged in as a Creator/merchant<br />\r\n                                                    <span>click here to <Link to=\"/create\">create project</Link></span></>\r\n                                            ) : (\r\n                                                <span>You are logged in as a Buyer</span>\r\n                                            )}\r\n                                        </div>\r\n                                    </from>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\" \"}\r\n            </div>\r\n            {\" \"}\r\n        </div>\r\n    );\r\n};\r\nexport default AuthorProfile;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Explore\",\r\n    heading: \"Exclusive Digital Assets\",\r\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n    filter_1: \"All\",\r\n    filter_2: \"Art\",\r\n    filter_3: \"Music\",\r\n    filter_4: \"Collectibles\",\r\n    filter_5: \"Sports\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_1.jpg\",\r\n        author: \"/img/avatar_1.jpg\",\r\n        title: \"Virtual Worlds\",\r\n        content: \"ERC-729\",\r\n        price: \"4.37 BNB\",\r\n        likes: \"154\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        group: '[\"music\"]',\r\n        img: \"/img/auction_2.jpg\",\r\n        author: \"/img/avatar_2.jpg\",\r\n        title: \"Walking On Air\",\r\n        content: \"ERC-543\",\r\n        price: \"2.37 BNB\",\r\n        likes: \"74\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        group: '[\"music\",\"collectibles\"]',\r\n        img: \"/img/auction_3.jpg\",\r\n        author: \"/img/avatar_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        content: \"ERC-932\",\r\n        price: \"1.89 BNB\",\r\n        likes: \"\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        group: '[\"music\",\"sports\",\"art\",\"collectibles\"]',\r\n        img: \"/img/auction_4.jpg\",\r\n        author: \"/img/avatar_4.jpg\",\r\n        title: \"Sports\",\r\n        content: \"ERC-250\",\r\n        price: \"0.74 BNB\",\r\n        likes: \"184\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        group: '[\"sports\",\"art\",\"music\"]',\r\n        img: \"/img/auction_5.jpg\",\r\n        author: \"/img/avatar_5.jpg\",\r\n        title: \"Cartoon Heroes\",\r\n        content: \"ERC-167\",\r\n        price: \"4.23 BNB\",\r\n        likes: \"126\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_6.jpg\",\r\n        author: \"/img/avatar_6.jpg\",\r\n        title: \"Domain Names\",\r\n        content: \"ERC-037\",\r\n        price: \"3.41 BNB\",\r\n        likes: \"23\"\r\n    }\r\n]\r\n\r\nclass ExploreSix extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                    <div className=\"col-12\">\r\n                        {/* Explore Menu */}\r\n                        <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n                            <label className=\"btn active d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"all\" defaultChecked className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_1}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"art\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_2}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"music\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_3}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"collectibles\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_4}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_5}</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items explore-items\">\r\n                    {this.state.data.map((item, idx) => {\r\n                        return (\r\n                            <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" data-groups={item.group}>\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <a href=\"/item-details\">\r\n                                            <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                        </a>\r\n                                        {/* Author */}\r\n                                        <a className=\"author\" href=\"/authors\">\r\n                                            <div className=\"author-thumb avatar-lg\">\r\n                                                <img className=\"rounded-circle\" src={item.author} alt=\"\" />\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            <a href=\"/item-details\">\r\n                                                <h5 className=\"mb-2\">{item.title}</h5>\r\n                                            </a>\r\n                                            <span>{item.content}</span>\r\n                                            <hr />\r\n                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                <span>{item.price}</span>\r\n                                                <span><i className=\"icon-heart mr-2\" />{item.likes}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreSix;","import React, { Component } from 'react';\r\nimport AuthorProfile from '../AuthorProfile/AuthorProfile';\r\nimport Explore from '../Explore/ExploreSix';\r\n\r\nclass Author extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"author-area explore-area author-details-area  popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-12\">\r\n                            <AuthorProfile />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Author;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport AuthorProfile from '../components/Author/Author';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst Author = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AuthorProfile />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Author;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ConnectWallet } from './interact';\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginSuccess } from '../../redux/Slices/authSlice';\r\n\r\nconst data = {\r\n    \"preHeading\": \"Wallet Connect\",\r\n    \"heading\": \"Connect your Wallet\",\r\n    \"content\": \"Connect your wallet to continue browsing our website\",\r\n    \"walletData\": [\r\n        {\r\n            \"id\": 1,\r\n            \"img\": \"/img/metamask.png\",\r\n            \"title\": \"MetaMask\",\r\n            \"content\": \"A browser extension with great flexibility. The web's most popular wallet\"\r\n        },\r\n    ]\r\n}\r\n\r\nconst Wallet = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleConnect = async () => {\r\n        const res = await ConnectWallet(\"CREATOR\", dispatch)\r\n\r\n        if (res?.res?.response?.status === 401) {\r\n            history.push('/signup')\r\n        }\r\n        else {\r\n            dispatch(loginSuccess(res?.res))\r\n            localStorage.setItem('authToken', res?.res?.data?.data?.auth_token)\r\n            history.push('/projectlist')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"wallet-connect-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mt-4 pt-2 mb-1\">\r\n                            {/* <span>{data.preHeading}</span> */}\r\n                            <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            <p>{data.content}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center items\">\r\n                    {data?.walletData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} onClick={handleConnect}\r\n                                className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                {/* Single Wallet */}\r\n                                <div className=\"card single-wallet\">\r\n                                    <a className=\"d-block text-center\">\r\n                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                        <h4 className=\"mb-0\">{item.title}</h4>\r\n                                        <p>{item.content}</p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Wallet;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Wallet from '../components/Wallet/Wallet';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst WalletConnect = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Wallet />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default WalletConnect;","import { createContext, useContext, useState } from \"react\";\r\nexport const FormContext = createContext();\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    console.log(data, 'dataaacreate')\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\nexport const useFormData = () => useContext(FormContext);","import React, { Component, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { CategoriesAction, CreateProjectAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport styles from \"./styles/styles.module.scss\"\r\nimport { useFormData } from './Context/context';\r\nimport JoditEditor from 'jodit-react'; import { CityList, CountryList, GetUserAction, StateList } from '../../redux/Actions/authAction';\r\nimport UploadImage from '../../shared/Upload';\r\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\r\nconst Create = ({ current, next, prev }) => {\r\n    const editor = useRef(null);\r\n    const { data, setFormValues, prevValues } = useFormData();\r\n    const [description, setDescription] = useState()\r\n    const [country, setCountry] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const [collection_id, setCollectionId] = useState(0);\r\n    const [usertype, setUserType] = useState(\"1\");\r\n    const [nonft, setNonft] = useState('1')\r\n    function onHandleClick(event) {\r\n        setCollectionId(event.currentTarget.id);\r\n    };\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [countryName, setCountryName] = useState(\" \")\r\n    const { countries } = useSelector(state => state.countries)\r\n    const states = useSelector(state => {\r\n        return state.countries.states\r\n    })\r\n    const cities = useSelector(state => { return state.countries.city })\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({\r\n        mode: \"all\",\r\n    });\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const onSubmit = (data) => {\r\n        const imageBanner = dataURLtoBlob(image)\r\n        setFormValues({ ...data, description, type: usertype, image: imageBanner, imageUri: image });\r\n        next()\r\n    }\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        if (prev) {\r\n            setValue('title', data.title)\r\n            setValue('address', data.address)\r\n            setValue('category_id', data.category_id)\r\n            setValue('country', data.country)\r\n            setValue('state', data.state)\r\n            setValue('city', data.city)\r\n            setValue('description', data.description)\r\n            setValue('price', data.price)\r\n            setValue('type', data.usertype)\r\n            setValue('image', data.imageUri)\r\n            setUserType(data.usertype)\r\n            setCountry(data.country)\r\n            setDescription(data.description)\r\n            setImage(data.imageUri)\r\n            setState(data.state)\r\n            setCity(data.city)\r\n        }\r\n        handleChangeCountry()\r\n    }, [data])\r\n    const cat = useSelector(state => {\r\n        return state?.projectdetails?.categories\r\n    })\r\n    const handleChangeCountry = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        const formData = new FormData()\r\n        if (event?.currentTarget?.value) {\r\n            setCountry(event?.currentTarget?.value);\r\n            formData.append('country_id', event?.currentTarget?.value)\r\n        } else {\r\n            setCountryName(userdet?.organization_detail?.country)\r\n            setCountry(userdet?.organization_detail?.country_id);\r\n            formData.append('country_id', userdet?.organization_detail?.country_id)\r\n        }\r\n        dispatch(StateList(formData)) // if (country) {\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setCountry(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event.currentTarget.value)\r\n        dispatch(CityList(formData))\r\n    };\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate())\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const handleSubmitDraft = (data) => {\r\n        // debugger\r\n        // \r\n        const imageBanner = dataURLtoBlob(image)\r\n        const formData = new FormData()\r\n        for (const [key, value] of Object.entries(data)) {\r\n            formData.append(key, value)\r\n        }\r\n        formData.append(\"image\", imageBanner)\r\n        formData.append(\"type\", \"1\")\r\n        formData.append(\"status\", 3)\r\n        formData.append(\"number_of_nft\", \"1\")\r\n        formData.append(\"on_which_step_left\", 0)\r\n        dispatch(CreateProjectAction(formData, setLoading, history))\r\n    }\r\n    return (\r\n        <div className={current === 0 ? styles.showForm : styles.hideForm}>\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 col-12\">\r\n                        {/* {type == 1 && ( */}\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Project name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"title\"\r\n                                placeholder=\"Project name\"\r\n                                {...register(\"title\", { required: true, pattern: { value: /[A-Za-z]/ } })}\r\n                                aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>}\r\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n                        </div>\r\n                        {/* )} */}\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Web address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                // required={false}\r\n                                name=\"address\"\r\n                                placeholder=\"Web address\"\r\n                                {...register(\"address\", {\r\n                                    required: true,\r\n                                    pattern: {\r\n                                        value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n                                    }\r\n                                })}\r\n                                aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.address && errors.address?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                            {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <label>Description</label>\r\n                        <div className=\"form-group\">\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"description\"\r\n                                defaultValue=\"\"\r\n                                rules={{ required: true, minLength: 100 }}\r\n                                render={({ field }) => {\r\n                                    return <JoditEditor\r\n                                        ref={field.ref}\r\n                                        value={field.value}\r\n                                        placeholder=\"start typing\"\r\n                                        aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        tabIndex={1} // tabIndex of textarea\r\n                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                        onChange={field.onChange}\r\n                                    />\r\n                                }}\r\n                            />\r\n                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            {errors.description && errors.description.type === \"minLength\" && (\r\n                                <p style={{ color: 'red' }}>\r\n                                    min length of words is 100\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Country</label>\r\n                            <select name=\"country\"\r\n                                {...register(\"country\", { required: true })} onChange={handleChangeCountry}>\r\n                                aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n                                <option value={userdet?.organization_detail?.country_id} selected>{countryName}</option>\r\n                                {countries?.data?.data?.map((option, key) => (\r\n                                    <>\r\n                                        <option key={key.id} value={option.id}>\r\n                                            {option.name}\r\n                                        </option>\r\n                                    </>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>State or province</label>\r\n                            <select name=\"state\"\r\n                                {...register(\"state\")} onChange={handleChangeState}>\r\n                                aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state/province</option>\r\n                                {states?.data?.data?.map((option, key) => (\r\n                                    <><option key={key.id} value={option.id}  >\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group\">\r\n                            <label>City or Region</label>\r\n                            <select name=\"city\"\r\n                                {...register(\"city\")}>\r\n                                aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city/region</option>\r\n                                {cities?.data?.data?.map((option, key) => (\r\n                                    <><option key={key.id} value={option.id}>\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-12 pr-0 pl-0\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"category_id\"\r\n                                    {...register(\"category_id\", { required: true })}\r\n                                >\r\n                                    aria-invalid={errors.category_id ? \"true\" : \"false\"}\r\n                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select category </option>\r\n                                    {cat?.map((option, key) => (\r\n                                        <option key={key.id} value={option.id} >\r\n                                            {option.title}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {errors.category_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Category is required</p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            {usertype == 2 ? (\r\n                                <label>Price per NFT (In MATIC tokens)</label>\r\n                            ) : (\r\n                                <label>Price (In MATIC tokens)</label>\r\n                            )}\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                step=\"0.01\"\r\n                                name=\"price\"\r\n                                placeholder=\"Price\"\r\n                                {...register(\"price\", { required: true })}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                                aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <div className=\"form-group pricing-detail\">\r\n                                <p><span>Price</span> <span>{price ? price : '--'} MATIC</span></p>\r\n                                <p><span>Karmatica Fee</span><span>1%</span></p>\r\n                                <p><span>You will receive </span><span>{99 * price / 100 ? 99 * price / 100 : \"--\"} MATIC</span></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\" col-12\">\r\n                        <div className=\"form-group\">\r\n                            <label>Banner image</label>\r\n                            <UploadImage\r\n                                imageSrc={image}\r\n                                // src={image}\r\n                                initalImag={data.imageUri}\r\n                                setImageSrc={setImage}\r\n                            />\r\n                            <div >\r\n                                <div className='logo-dis logo-dis-img'>\r\n                                    <span>Allowed types: JPG, PNG, GIF</span><span>Banner should be 800 px wide x 500 px high, 10MB max</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={handleSubmit(handleSubmitDraft)}>\r\n                            Save as Draft\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default Create;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\r\nimport UploadImage from '../../shared/Upload';\r\nfunction MyVerticallyCenteredModal(props) {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const [image, setImage] = useState()\r\n    const OnSubmit = (dat) => {\r\n        const imageBanner = dataURLtoBlob(image)\r\n        dispatch(CreateCollectionAction({ dat, imageBanner, props }))\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Create Collection\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className='row'>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Display name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                    placeholder=\"Enter collection name\"\r\n                                    {...register('title', { required: true })}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n                            </div>\r\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">collection name is required</p>}\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Symbol</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"symbol\"\r\n                                    aria-invalid={errors.symbol ? \"true\" : \"false\"}\r\n                                    placeholder=\"Enter token symbol\"\r\n                                    {...register('symbol', { required: true })}\r\n                                // value={symbol}\r\n                                // onChange={(e) => {\r\n                                //     setSymbol(e.target.value);\r\n                                // }} \r\n                                />\r\n                                {errors.symbol?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">symbol is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Description</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"description\"\r\n                                    aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                    {...register('description', { required: true })}\r\n                                    // value={description}\r\n                                    // onChange={(e) => {\r\n                                    //     setDescription(e.target.value);\r\n                                    // }}\r\n                                    placeholder=\"Spread some words about your collection\"\r\n                                />\r\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">description is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web URL</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    aria-invalid={errors.short_url ? \"true\" : \"false\"}\r\n                                    name=\"short_url\"\r\n                                    placeholder=\"Web URL\"\r\n                                    {...register('short_url', { required: true })}\r\n                                // value={short_url}\r\n                                // onChange={(e) => {\r\n                                //     setShortUrl(e.target.value);\r\n                                // }} \r\n                                />\r\n                                {errors.short_url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Web URL is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Banner image</label>\r\n                                <UploadImage\r\n                                    imageSrc={image}\r\n                                    // initalImag={image}\r\n                                    setImageSrc={setImage}\r\n                                />\r\n                                <div >\r\n                                    <span className='logo-dis'>Allowed types: JPG, PNG, GIF<br />Banner should be 1500 px wide x 500 px high</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Button key=\"create-collection\" type=\"submit\" className=\"btn btn-primary\">Create</Button>\r\n                    {/* </div> */}\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\nexport default MyVerticallyCenteredModal","import { useState, useEffect, useRef } from \"react\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nfunction loadGLTFModel(scene, glbPath, options) {\r\n    const { receiveShadow, castShadow } = options;\r\n    return new Promise((resolve, reject) => {\r\n        const loader = new GLTFLoader();\r\n        loader.load(\r\n            glbPath,\r\n            (gltf) => {\r\n                const obj = gltf.scene;\r\n                obj.name = \"dinosaur\";\r\n                obj.position.y = 0;\r\n                obj.position.x = 0;\r\n                obj.receiveShadow = receiveShadow;\r\n                obj.castShadow = castShadow;\r\n                scene.add(obj);\r\n                obj.traverse(function (child) {\r\n                    if (child.isMesh) {\r\n                        child.castShadow = castShadow;\r\n                        child.receiveShadow = receiveShadow;\r\n                    }\r\n                });\r\n                resolve(obj);\r\n            },\r\n            undefined,\r\n            function (error) {\r\n                console.log(error);\r\n                reject(error);\r\n            }\r\n        );\r\n    });\r\n}\r\nfunction easeOutCirc(x) {\r\n    return Math.sqrt(1 - Math.pow(x - 1, 4));\r\n}\r\nconst DModal = ({ vdo }) => {\r\n    // debugger\r\n    // const { vdo } = props\r\n    const refContainer = useRef();\r\n    const [loading, setLoading] = useState(true);\r\n    const [renderer, setRenderer] = useState();\r\n    const [source, setSource] = useState('')\r\n    console.log('source', source)\r\n    useEffect(() => {\r\n        // debugger\r\n        const file = vdo;\r\n        const { current: container } = refContainer;\r\n        if (container && !renderer) {\r\n            const scW = container.clientWidth;\r\n            const scH = container.clientHeight;\r\n            const renderer = new THREE.WebGLRenderer({\r\n                antialias: true,\r\n                alpha: true\r\n            });\r\n            renderer.setPixelRatio(window.devicePixelRatio);\r\n            renderer.setSize(scW, scH);\r\n            renderer.outputEncoding = THREE.sRGBEncoding;\r\n            container.appendChild(renderer.domElement);\r\n            setRenderer(renderer);\r\n            const scene = new THREE.Scene();\r\n            const scale = 5.6;\r\n            const camera = new THREE.OrthographicCamera(\r\n                -scale,\r\n                scale,\r\n                scale,\r\n                -scale,\r\n                0.01,\r\n                50000\r\n            );\r\n            const target = new THREE.Vector3(-0.5, 1.2, 0);\r\n            const initialCameraPosition = new THREE.Vector3(\r\n                20 * Math.sin(0.2 * Math.PI),\r\n                10,\r\n                20 * Math.cos(0.2 * Math.PI)\r\n            );\r\n            const ambientLight = new THREE.AmbientLight(0xcccccc, 1);\r\n            scene.add(ambientLight);\r\n            const controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.autoRotate = false;\r\n            controls.enableZoom = true;\r\n            controls.minDistance = 0\r\n            controls.minZoom = 0\r\n            controls.target = target;\r\n            const loader = new GLTFLoader()\r\n            loader.load(\r\n                file,\r\n                function (gltf) {\r\n                    gltf.scene.traverse(function (child) {\r\n                        if (child.isMesh) {\r\n                            const m = child\r\n                            m.receiveShadow = true\r\n                            m.castShadow = true\r\n                        }\r\n                        if (child.isLight) {\r\n                            const l = child\r\n                            l.castShadow = true\r\n                            l.shadow.bias = -0.003\r\n                            l.shadow.mapSize.width = 2048\r\n                            l.shadow.mapSize.height = 2048\r\n                        }\r\n                    })\r\n                    scene.add(gltf.scene)\r\n                },\r\n                (xhr) => {\r\n                    animate();\r\n                    setLoading(false);\r\n                    // mdl(file)\r\n                    console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\r\n                },\r\n                (error) => {\r\n                    // debugger\r\n                    console.log(error)\r\n                }\r\n            )\r\n            let req = null;\r\n            let frame = 0;\r\n            const animate = () => {\r\n                req = requestAnimationFrame(animate);\r\n                frame = frame <= 100 ? frame + 1 : frame;\r\n                if (frame <= 100) {\r\n                    const p = initialCameraPosition;\r\n                    const rotSpeed = -easeOutCirc(frame / 120) * Math.PI * 20;\r\n                    camera.position.y = 10;\r\n                    camera.position.x =\r\n                        p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed);\r\n                    camera.position.z =\r\n                        p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed);\r\n                    camera.lookAt(target);\r\n                } else {\r\n                    controls.update();\r\n                }\r\n                renderer.render(scene, camera);\r\n            };\r\n            return () => {\r\n                cancelAnimationFrame(req);\r\n                renderer.dispose();\r\n            };\r\n        }\r\n    }, [vdo]);\r\n    return (\r\n        <div\r\n            style={{ height: \"270px\", width: \"300px\", position: \"relative\" }}\r\n            ref={refContainer}\r\n        >\r\n            {loading && (\r\n                <span style={{ position: \"absolute\", left: \"50%\", top: \"50%\" }}>\r\n                    Loading...\r\n                </span>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default DModal\r\n","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nfunction ProTypePopup(props) {\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        props.startdate(data.start_date)\r\n        props.enddate(data.end_date)\r\n        props.nftno(data.number_of_nft)\r\n        props.onHide(true)\r\n    }\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate())\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div>\r\n                    <label>Switch to Campaign for multiple NFTs</label><br />\r\n                    <span>fill the following mandatory fields to continue</span>\r\n                </div>\r\n                <div>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n                        <><div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Campaign Start date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"start_date\"\r\n                                    min={disablePastDate()}\r\n                                    defaultValue={defaultValue}\r\n                                    {...register(\"start_date\", { required: true })}\r\n                                    aria-invalid={errors.start_date ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        defaultValue={defaultValue1}\r\n                                        min={disablePastDate()}\r\n                                        {...register(\"end_date\", { required: true })}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    {errors.end_date && errors?.end_date?.type === 'min' && <p style={{ color: 'red' }} role=\"alert\">End date should be greater or equal to startdate</p>}\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div></>\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    min={1}\r\n                                    max={10}\r\n                                    maxLength={10}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    {...register(\"number_of_nft\", { required: true, min: 1, max: 10 })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFTs per project is required with a limit of 10</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type='submit'>switch</button>\r\n                        </div>\r\n                        {/* } */}\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\nexport default ProTypePopup","import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Tooltip } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\n\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router';\r\nimport DModal from './3dModal';\r\nimport ProTypePopup from './ProjectTypePopup';\r\nimport { LogsAction } from '../../redux/Actions/logsAction';\r\n\r\nconst UploadNft = ({ current, prev }) => {\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n\r\n    const [count, setCount] = useState(1);\r\n    console.log(\"count\", count)\r\n    const [nft_description, setNft_description] = useState([])\r\n    console.log(\"nftdescr\", nft_description)\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [projmodalShow, setProjModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: '1' });\r\n    const [nftFileType, setNFtFileType] = useState()\r\n    const [nftimage, setNftImage] = useState([])\r\n    // console.log(nftimage.map(x => x), \"nfttttt\")\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [size, setSize] = useState()\r\n    const [Pimage, setPimage] = useState([])\r\n    const [startDate, setStartDate] = useState(\"\")\r\n    console.log(\"startdate\", startDate)\r\n    const [endDate, setEndDate] = useState(\"\")\r\n    console.log(\"enddate\", endDate)\r\n    const [numberofNfts, setNumberofNfts] = useState(\"\")\r\n    console.log(\"noof nfts\", numberofNfts)\r\n\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    const [source, setSource] = useState([])\r\n    const [sourceType, setSourceType] = useState()\r\n\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [modal, setModal] = useState()\r\n    const [NFtFileExtension, setNFtExtension] = useState()\r\n    const [preview, setPreview] = useState([])\r\n    console.log('previwimg', preview[0])\r\n    const [projtype, setProjType] = useState(\"1\")\r\n\r\n    console.log(nft_collection_id, \"nft collections\")\r\n    const [nftName, setNftName] = useState([])\r\n    const [nftDescription, setNftDescription] = useState([])\r\n    console.log(\"nftDescription\", nftDescription)\r\n    console.log(\"nftName\", nftName)\r\n\r\n\r\n    const handleIncrement = () => {\r\n        // if (startDate && endDate && numberofNfts) {\r\n\r\n        setCount(prevCount => prevCount + 1);\r\n        // }\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n        setPreview(prevState => {\r\n            // debugger\r\n            prevState[index] = e?.target?.files[0]\r\n\r\n            return [...prevState]\r\n        })\r\n\r\n        // setPreview(pimage)\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n        // debugger\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n\r\n\r\n    const defaultValues = {\r\n        setNft_description: null,\r\n    }\r\n\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n    useEffect(() => {\r\n\r\n        register(\"nft_description\");\r\n\r\n\r\n    }, [register]);\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n\r\n    const OnSubmit = (values) => {\r\n\r\n        setFormValues(values)\r\n\r\n    }\r\n\r\n    const handleUpload = (e, index) => {\r\n        const filetype = e.target.files[0].type\r\n        setNFtExtension(filetype)\r\n\r\n        setNftImage(prevState => {\r\n            return [\r\n                ...nftimage,\r\n                e?.target?.files[0]\r\n            ]\r\n\r\n        }\r\n        );\r\n\r\n        var fr = new FileReader;\r\n\r\n        fr.onload = function () { // file is loaded\r\n            var img = new Image;\r\n\r\n            img.onload = function () {\r\n                setSize(e.target.files[0].size); // image is loaded; sizes are available\r\n                setNftwidth(img.width)\r\n                setNftheight(img.height)\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n\r\n        let type = \"Image\"\r\n\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert('Filesize must 100mb or below');\r\n        } else {\r\n\r\n\r\n            switch (filetype) {\r\n                case 'image/png':\r\n                case 'image/jpg':\r\n                case 'image/gif':\r\n                case 'image/svg':\r\n                    type = \"Image\"\r\n                    break;\r\n                case 'audio/mpeg':\r\n                case 'audio/ogg':\r\n                case 'video/mp4':\r\n                case 'video/webm':\r\n                    type = 'Player'\r\n                    break;\r\n                case '':\r\n                    // if (nft?.name?.str.includes(\".glb\")) {\r\n                    type = 'modal'\r\n                    // }\r\n                    break;\r\n                default:\r\n                    type = 'Image'\r\n            }\r\n\r\n            // setNFtFileType(type)\r\n\r\n            setSource(prevState => {\r\n                // debugger\r\n                prevState[index] = { file: e.target.files[0], type: type }\r\n                setSourceType(type)\r\n\r\n                return [...prevState]\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, [])\r\n    const nftDescriptionHandler = (index, item) => {\r\n        // setNft_description(event?.currentTarget?.value)\r\n        setNft_description(previ => {\r\n            return {\r\n                ...previ,\r\n                [item]: index\r\n            }\r\n        })\r\n        // setNft_description(nftDescription[index])\r\n    }\r\n\r\n\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n\r\n\r\n            const imagesRes = await uploadNFT(nftimage, dispatch)\r\n\r\n            const addedImage = imagesRes?.data?.data.map(x => ipfsBaseUrl + x?.image_hash)\r\n\r\n            // const addedImagetype = imagesRes?.map(x => x?.data?.data?.extension)\r\n            var str = addedImage;\r\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n            // console.log(check)\r\n            // console.log(addedImage.includes('undefined'), 'add')\r\n\r\n            const formData = new FormData()\r\n\r\n            // debugger\r\n            if (check === false) {\r\n                console.log('uploaded')\r\n                formData.append('title', data.title)\r\n                formData.append('description', data.description)\r\n                formData.append('address', data.address)\r\n\r\n                formData.append('country', data.country)\r\n                if (!data.state) {\r\n\r\n                    formData.append('state', '')\r\n                } else {\r\n                    formData.append('state', data.state)\r\n                }\r\n                if (!data.city) {\r\n                    formData.append('city', '')\r\n                } else {\r\n\r\n                    formData.append('city', data.city)\r\n                }\r\n                formData.append('latitude', lat)\r\n                formData.append('logitude', log)\r\n                formData.append('price', data.price)\r\n\r\n                formData.append('image', data.image)\r\n                if (projtype == 1) {\r\n                    // formData.append('preview_imag', \"\")\r\n                    formData.append('number_of_nft', \"1\")\r\n                    formData.append('start_date', '')\r\n                    formData.append('end_date', '')\r\n                } else {\r\n\r\n                    formData.append('number_of_nft', numberofNfts)\r\n                    formData.append('start_date', startDate)\r\n                    formData.append('end_date', endDate)\r\n                }\r\n                formData.append('preview_imag', Pimage)\r\n                formData.append('type', projtype)\r\n                formData.append('category_id', data.category_id)\r\n\r\n\r\n                formData.append('nft_image', addedImage)\r\n                formData.append('extention', source.map(x => x.type))\r\n                formData.append('nft_name', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n\r\n                formData.append('nft_collection_id', coll_id)\r\n                formData.append('nft_description', Object?.values(nft_description))\r\n\r\n\r\n                dispatch(CreateProjectAction(formData, setLoading, history))\r\n            } else {\r\n\r\n                console.log('fail')\r\n                setLoading(false)\r\n                swal('error', 'Nft not uploaded', 'error')\r\n\r\n            }\r\n        } catch (error) {\r\n            swal('error', error, 'error')\r\n            setLoading(false)\r\n            console.log(error, 'error')\r\n            dispatch(LogsAction(error))\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n\r\n        beforeUpload: file => {\r\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n            if (!isJpgOrPng) {\r\n\r\n                alert('You can only upload JPG/PNG file!');\r\n            }\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader?.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n    const nftNameHandler = (event, index) => {\r\n        // debugger\r\n        setNftName(prevState => {\r\n            return {\r\n                ...prevState,\r\n                [index]: event?.target?.value\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        // <section className=\"author-area\">\r\n        <div className=\"main-create \">\r\n\r\n            {loading ? (\r\n                <Loader />\r\n\r\n            ) : (\r\n                <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                    <Form\r\n                        form={form}\r\n                        name=\"dynamic_form_nest_item\"\r\n                        initialValues={{\r\n                            nfts: nfts,\r\n                        }}\r\n                        // onSubmit={(event) => handleSubmit(event)}\r\n                        onFinish={(event) => onFinish(event)}\r\n                        onSubmit={OnSubmit}\r\n                        onChange={nftNameHandler}\r\n                        autoComplete=\"off\"\r\n                        className=\"item-form card no-hover\"\r\n                    >\r\n                        <Form.List name=\"nfts\">\r\n                            {(fields, { add, remove }) => (\r\n                                <>\r\n                                    <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                        <svg\r\n                                            width=\"16px\"\r\n                                            height=\"16px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                            <path\r\n                                                fill=\"none\"\r\n                                                stroke=\"#fff\"\r\n                                                stroke-width=\"2\"\r\n                                                d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\r\n                                                transform=\"matrix(-1 0 0 1 24 0)\"\r\n                                            />\r\n                                        </svg>\r\n                                        Previous\r\n                                    </Button>\r\n\r\n                                    <>\r\n                                        {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n\r\n                                            <Collapse accordion\r\n                                                defaultActiveKey={[count]}\r\n                                                onChange={onChange}\r\n                                                expandIconPosition={expandIconPosition}\r\n                                            >\r\n\r\n                                                <Panel key={count} header={[nftName[index] ? <div className='Collapse-text'> {nftName[index].slice(0, 50)}  </div> : \"Detail\", source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? <div> <img src={URL.createObjectURL(source[index].file)} className=\"images-Collapse\" /></div> : <div> <img src={preview?.[index] && window.URL.createObjectURL(preview[index])} className=\"images-Collapse\" /></div>]} className=\"p-0 nft-Collapse\">\r\n\r\n\r\n                                                    <Fragment>\r\n                                                        {/* <div>Artwork {index}</div> */}\r\n                                                        <div className=\"row relative\">\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: \"Name is required\",\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" onChange={e => nftNameHandler(e, index)} />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: \"Missing  description\",\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                            // onBlur={(newContent, e) => setNft_description(newContent)}\r\n                                                                            // preferred to use only this option to update the content for performance reasons\r\n                                                                            onChange={e => nftDescriptionHandler(e, index)}\r\n                                                                        />\r\n\r\n                                                                    </Form.Item>\r\n                                                                    {errors.nft_description?.type ===\r\n                                                                        \"required\" && (\r\n                                                                            <p style={{ color: \"red\" }} role=\"alert\">\r\n                                                                                Description is required\r\n                                                                            </p>\r\n                                                                        )}\r\n                                                                    {errors.nft_description &&\r\n                                                                        errors.nft_description.type ===\r\n                                                                        \"minLength\" && (\r\n                                                                            <p style={{ color: \"red\" }}>\r\n                                                                                min length of words is 300\r\n                                                                            </p>\r\n                                                                        )}\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                <MinusCircleOutlined\r\n                                                                    onClick={(e) => {\r\n                                                                        remove(name);\r\n                                                                        handleDecrement(e);\r\n                                                                    }}\r\n                                                                />\r\n                                                            </div>\r\n                                                            {/* </div> */}\r\n                                                            <div className=\"col-12\">\r\n                                                                <label className=\"mt-2 mb-3\">\r\n                                                                    Choose Collection\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div className='d-flex flex-wrap gap-10 col-12'>\r\n\r\n\r\n\r\n                                                                {col?.map((item, idx) => (\r\n                                                                    <div\r\n                                                                        key={`auc_${idx}`}\r\n                                                                        id={item.id}\r\n                                                                        className=\"choose_div\"\r\n                                                                    >\r\n                                                                        <div\r\n                                                                            id={item.id}\r\n                                                                            onClick={() =>\r\n                                                                                onHandleClick(index, item.id)\r\n                                                                            }\r\n                                                                            className=\"\"\r\n                                                                            style={{\r\n                                                                                background: \"black\",\r\n                                                                                marginBottom: \"8px\",\r\n                                                                                border:\r\n                                                                                    nft_collection_id[index] == item.id\r\n                                                                                        ? \"1px solid #fff\"\r\n                                                                                        : null,\r\n                                                                            }}\r\n                                                                        >\r\n\r\n                                                                            <div>{item.title}</div>\r\n\r\n                                                                        </div>\r\n                                                                        {/* </Form.Item> */}\r\n                                                                    </div>\r\n\r\n\r\n\r\n                                                                ))}\r\n                                                                <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                    {/* <div className=\"col-24\"> */}\r\n\r\n                                                                    <div className=\"form-group\">\r\n                                                                        <div\r\n                                                                            className=\"card choose_div\"\r\n                                                                            style={{\r\n                                                                                background: \"black\",\r\n                                                                                marginBottom: \"8px\",\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <div className=\"card-body \">\r\n                                                                                <Button\r\n                                                                                    variant=\"primary\"\r\n                                                                                    className=\"collection_btn\"\r\n                                                                                    onClick={() => setModalShow(true)}\r\n                                                                                >\r\n                                                                                    <i className=\"f1a-regular fa-plus\"></i>{\" \"}\r\n                                                                                    Create Collection\r\n                                                                                </Button>\r\n\r\n\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                        <label className=\"mt-3\">Upload NFT</label>\r\n                                                                        <div\r\n                                                                            className=\"position-relative upload_nft\"\r\n                                                                            style={{\r\n                                                                                backgroundImage: \"url('')\",\r\n                                                                                backgroundSize: \"contain\",\r\n                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                            }}\r\n                                                                        >\r\n\r\n                                                                            <div\r\n                                                                                className={\r\n                                                                                    source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\r\n                                                                                        ? \" inputdragVedio\"\r\n                                                                                        : \"inputtdrag\"\r\n                                                                                }\r\n                                                                            >\r\n                                                                                <input\r\n                                                                                    type=\"file\"\r\n                                                                                    // onChange={handleUpload}\r\n                                                                                    maxCount={1}\r\n                                                                                    onChange={e => handleUpload(e, index)}\r\n                                                                                    accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                                />\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\r\n                                                                                    <div>\r\n                                                                                        {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\r\n                                                                                        {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? (\r\n\r\n\r\n                                                                                            <img\r\n                                                                                                src={URL.createObjectURL(source[index].file)}\r\n                                                                                                className=\"nft-image\"\r\n                                                                                            />\r\n                                                                                        ) : (\r\n                                                                                            <>\r\n                                                                                                <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                    Image width & height should be 500x500\r\n                                                                                                </p>\r\n                                                                                                <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                    Image size should be max 1mb\r\n                                                                                                </p>\r\n                                                                                            </>\r\n                                                                                        )\r\n\r\n                                                                                        }\r\n                                                                                    </div>\r\n                                                                                }\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\r\n                                                                                    <div>\r\n                                                                                        {/* { source?.length && source?.[index] && source[index]?.type === \"Player\" && ( */}\r\n                                                                                        <video\r\n                                                                                            // className=\"VideoInput_video\"\r\n                                                                                            width=\"100%\"\r\n                                                                                            // height={height}\r\n                                                                                            controls\r\n                                                                                            src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                        // onChange={setSource}\r\n                                                                                        />\r\n                                                                                        {/* )} */}\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p>\r\n                                                                                                Because you’ve included\r\n                                                                                                multimedia, you’ll need to provide\r\n                                                                                                an image (PNG, JPG, or GIF) for\r\n                                                                                                the card display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage:\r\n                                                                                                    \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={e => previewChange(e, index)}\r\n                                                                                            // onChange={previewChange}\r\n                                                                                            />\r\n                                                                                            {preview?.length && preview?.[index] &&\r\n                                                                                                <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                    {preview?.length && preview?.[index] && (\r\n                                                                                                        <img\r\n                                                                                                            className=\"preview_image\"\r\n                                                                                                            src={URL.createObjectURL(preview[index])}\r\n\r\n\r\n                                                                                                        // onChange={setPimage}\r\n                                                                                                        />\r\n                                                                                                    )}\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n                                                                                }\r\n\r\n                                                                                {/* )} */}\r\n                                                                                {/* <div className=\"VideoInput_footer\">{vdo || \"Nothing selectd\"}</div> */}\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\r\n                                                                                    <div>\r\n                                                                                        <DModal\r\n                                                                                            vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                        // mdl={setModal}\r\n                                                                                        />\r\n\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p className=\"\">\r\n                                                                                                Because you’ve included multimedia,\r\n                                                                                                you’ll need to provide an image\r\n                                                                                                (PNG, JPG, or GIF) for the card\r\n                                                                                                display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage:\r\n                                                                                                    \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={e => previewChange(e, index)}\r\n                                                                                            />\r\n                                                                                            {preview?.length && preview?.[index] &&\r\n                                                                                                <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                    {preview?.length && preview?.[index] && (\r\n                                                                                                        <img\r\n                                                                                                            className=\"preview_image\"\r\n                                                                                                            src={URL.createObjectURL(preview[index])} />\r\n                                                                                                    )}\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Fragment>\r\n                                                </Panel>\r\n                                            </Collapse>\r\n                                        ))}\r\n\r\n                                        {/* {!((data?.number_of_nft === count)) ? */}\r\n                                        {sourceType &&\r\n\r\n                                            <Form.Item>\r\n                                                <Tooltip title={count == 1 ? \"Switch to Campaign for multiple NFTs\" : 'Add more NFTs'} color='#4528dc'>\r\n                                                    <Button\r\n                                                        type=\"dashed\"\r\n                                                        onClick={(e) => {\r\n                                                            {\r\n                                                                count == 1 &&\r\n                                                                    setProjModalShow(true)\r\n                                                            }\r\n\r\n                                                            // {\r\n                                                            //     count == 2 &&\r\n\r\n\r\n                                                            // }\r\n                                                            {\r\n                                                                numberofNfts && startDate && endDate &&\r\n                                                                    add(e)\r\n                                                                setProjType(\"2\")\r\n                                                                handleIncrement(e);\r\n                                                                // setPannelKey(pannelKey + 1)\r\n\r\n                                                            };\r\n                                                            // {startDate && endDate && numberofNfts && \r\n\r\n\r\n                                                            // }\r\n\r\n                                                        }}\r\n                                                        block\r\n\r\n                                                        icon={<PlusOutlined />}\r\n                                                    // disabled={data?.number_of_nft == count}\r\n                                                    >\r\n                                                        Add NFT\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n\r\n                                            </Form.Item>\r\n\r\n\r\n                                        }\r\n                                        {/* : null} */}\r\n                                    </>\r\n                                </>\r\n                            )}\r\n                        </Form.List>\r\n                        <Form.Item>\r\n                            <div className=\"col-12\">\r\n                                <button key=\"create-project\" className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\r\n                                    Create\r\n                                </button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <ProTypePopup\r\n                        show={projmodalShow}\r\n                        onHide={() => setProjModalShow(false)}\r\n                        enddate={setEndDate}\r\n                        startdate={setStartDate}\r\n                        nftno={setNumberofNfts}\r\n\r\n                    />\r\n                    <MyVerticallyCenteredModal\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                    />\r\n\r\n                </div>\r\n            )\r\n            }\r\n        </div >\r\n    )\r\n}\r\nexport default UploadNft","import { useEffect, useState } from \"react\";\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\nimport Create from \"./Create\";\r\nimport UploadNft from \"./uploadNft\";\r\nimport FormProvider, { useFormData } from \"./Context/context\";\r\nimport { Button, message, Steps } from 'antd';\r\nimport { set, useForm } from \"react-hook-form\";\r\nconst steps = [\r\n  {\r\n    title: 'Create Project',\r\n    content: <Create />\r\n  },\r\n  {\r\n    title: 'Upload NFT',\r\n    content: <UploadNft />,\r\n  },\r\n];\r\nconst UploadNftIndex = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n  const { setValue } = useForm();\r\n  const prev = () => {\r\n    // \r\n    setCurrent(current - 1);\r\n  };\r\n  const items = steps.map((item) => ({ key: item.title, title: item.title }));\r\n  return (\r\n    <section className=\"author-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-14 col-md-9 mt-10\">\r\n            {/* Intro */}\r\n            <div className=\"intro mt-5  mb-4 mb-lg-5\">\r\n              <div className=\"intro-content\">\r\n                <span>Get Started</span>\r\n                {current === 0 ? (\r\n                  <h3 className=\"mt-3 mb-0\">Create Project</h3>\r\n                ) : (\r\n                  <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <FormProvider>\r\n              {/* <FormCard currentStep={formStep} prevFormStep={prevFormStep}> */}\r\n              <div className=\"steps-content\">\r\n                <Steps current={current} items={items} />\r\n                {current === 0 && (\r\n                  <Create current={current} next={next} prev={prev} />\r\n                )}\r\n                {current === 1 && <><UploadNft prev={prev} />\r\n                </>\r\n                }\r\n              </div>\r\n              {/* </FormCard> */}\r\n            </FormProvider>\r\n          </div>\r\n        </div >\r\n      </div >\r\n    </section >\r\n  );\r\n};\r\nexport default UploadNftIndex;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nimport UploadNftIndex from '../components/Create';\r\n\r\nconst Create = () => {\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n      <UploadNftIndex />\r\n      <Footer />\r\n      <ModalSearch />\r\n      <ModalMenu />\r\n      <Scrollup />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => {\r\n        // \r\n        // console.log(login.authToken, 'login')\r\n        return state.login\r\n    })\r\n    // console.log(user, 'user')\r\n\r\n    if (user?.status === 200) {\r\n        history.push('/')\r\n    }\r\n\r\n    const mesg = useSelector(state => {\r\n        // \r\n        return state.user.message\r\n    })\r\n    // if (login?.userToken) {\r\n    //     console.log('hello')\r\n    // }\r\n    // console.log(login?.status)\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        // \r\n        dispatch(LoginAction(data, dispatch))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"Enter your Password\"\r\n                                            {...register(\"password\", { required: \"Password is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" defaultChecked />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Log In</button>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\"><Link to=\"/forgotpassword\">Forgot Password</Link></span>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\">If not registered? <Link to=\"/signup\"><b>Sign Up</b></Link></span>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport LoginSection from '../components/Login/Login';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LoginSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","export default function FormCard({ children, currentStep, prevFormStep }) {\r\n    return (\r\n        <div >\r\n            {currentStep < 1 && (\r\n                <>\r\n                    {currentStep > 0 && (\r\n                        <button\r\n                            onClick={prevFormStep}\r\n                            type=\"button\"\r\n                        >\r\n                            back\r\n                        </button>\r\n                    )}\r\n\r\n                </>\r\n\r\n            )}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    // console.log(data, 'dataaa')\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport { React } from 'react'\r\nimport { useDispatch, useSelector, } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as Yup from 'yup'\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required(\"Email is required\"),\r\n    // wallet_id: Yup.string()\r\n    //     .wallet_id()\r\n    //     .required(\"Wallet address is required\"),\r\n    // goal: Yup.string()\r\n    //     .goal()\r\n    //     .required(\"Fundraising goal is required\"),\r\n\r\n    password: Yup.string()\r\n        .required(\"Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\"),\r\n    confirm_password: Yup.string()\r\n        .required(\"Confirm Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\")\r\n        .oneOf([Yup.ref(\"password\")], \"Passwords do not match\")\r\n});\r\n\r\n\r\nconst Signup = ({ formStep, nextFormStep }) => {\r\n    const { setFormValues } = useFormData();\r\n    const dispatch = useDispatch()\r\n    const { register, watch, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"all\",\r\n        resolver: yupResolver(formSchema)\r\n    });\r\n\r\n    // const [role, setRole] = useState()\r\n    // console.log('role', role)\r\n    const OnSubmit = (data) => {\r\n        // dispatch(Register(data))\r\n        setFormValues({ ...data });\r\n        // if (role == 3) {\r\n\r\n        nextFormStep();\r\n        // }\r\n        // if (role == 2) {\r\n        //     const formData = new FormData()\r\n        //     formData.append('email', data.email)\r\n        //     // formData.append('goal', data.goal)\r\n        //     formData.append('password', data.password)\r\n        //     formData.append('confirm_password', data.confirm_password)\r\n        //     // formData.append('wallet_id', data.wallet_id)\r\n        //     // formData.append('role', role)\r\n        //     dispatch(Register(formData))\r\n        // }\r\n    }\r\n\r\n    const { user } = useSelector(state => state.user)\r\n\r\n\r\n    const { errMessage } = useSelector(state => {\r\n        return state?.errmessage?.message\r\n    })\r\n\r\n    return (\r\n        < section className=\"author-area\" >\r\n            <div className=\"container\">\r\n\r\n                <>\r\n                    <div>\r\n                        {errMessage && <p>{errMessage}</p>}\r\n\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 co  l-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span></span>\r\n                                <h3 className=\"mt-3 mb-0\"></h3>\r\n                                <p></p>\r\n                            </div>\r\n                            {/* Item Form */}\r\n                            <div className={formStep === 0 ? styles.showForm : styles.hideForm}>\r\n                                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                    <div className=\"row\">\r\n                                        <div className='steps-center'>\r\n                                            <div className='step1icon'>\r\n\r\n                                                <i className=\"fa-solid fa-circle-check\"> Step 1 </i>\r\n                                            </div>\r\n                                            <div className='stepperline'>\r\n                                                <i style={{ color: '#452868' }}>  ----------------------------- </i>\r\n\r\n                                            </div>\r\n                                            <div className='step2icon'>\r\n\r\n                                                <i className=\"fa-regular fa-circle\" > Step 2 </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Email</label>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    {...register(\"email\", { required: 'Email address is required' })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.email ? \"true\" : \"false\"} />\r\n                                                {/* {errors.errMessage} */}\r\n                                                {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                                {/* {errMessage && <p>{errMessage}</p>} */}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"password\"\r\n                                                    placeholder=\"Password\"\r\n                                                    {...register(\"password\", { required: true })}\r\n                                                    aria-invalid={errors.password ? \"true\" : \"false\"} />\r\n                                                {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Confirm Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"confirm_password\"\r\n                                                    placeholder=\"Confirm password\"\r\n                                                    {...register(\"confirm_password\",\r\n                                                        {\r\n                                                            required: true,\r\n                                                            validate: (val) => {\r\n                                                                if (watch('password') != val) {\r\n                                                                    return \"Your passwords do no match\";\r\n                                                                }\r\n                                                            },\r\n                                                        })}\r\n                                                    aria-invalid={errors.confirm_password ? \"true\" : \"false\"} />\r\n                                                {errors.confirm_password && <p style={{ color: 'red' }} role=\"alert\">{errors.confirm_password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Fundraising Goal</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"goal\"\r\n                                                    placeholder=\"Fundraising goal (MATIC)\"\r\n                                                    {...register(\"goal\",\r\n                                                        {\r\n                                                            required: true,\r\n\r\n                                                        })}\r\n                                                    aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                                {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Wallet Address</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"wallet_id\"\r\n                                                    // defaultValue='1'\r\n                                                    placeholder=\"Wallet address\"\r\n                                                    {...register(\"wallet_id\", { required: true })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                                />\r\n                                                {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"3\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                                </div>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"2\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <div className=\"form-check form-check-inline\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n                                        <div className=\"col-12\">\r\n                                            {/* {role == 2 ? ( */}\r\n                                            {/* <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Signup</button> */}\r\n                                            {/* ) : ( */}\r\n\r\n                                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                                            {/* )} */}\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <span className=\"d-block text-center mt-4\">Already have an account? <Link to=\"/login\"><b>Login</b></Link></span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        </section >\r\n\r\n    )\r\n}\r\n\r\nexport default Signup\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnnualRevenueList, CountryList, HearAboutList, Register } from '../../redux/Actions/authAction'\r\nimport { Controller, useForm } from 'react-hook-form'\r\n\r\nimport { useHistory } from 'react-router'\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\r\nimport { useState } from 'react'\r\nimport JoditEditor from 'jodit-react';;\r\n\r\n// import { Widget } from \"@uploadcare/react-widget\";\r\n// import FileUpload from \"react-material-file-upload\";\r\n// import { uploadcare } from '../lib/uploadcare.min.js';\r\nconst CreateOrganization = ({ formStep, nextFormStep, goBack }) => {\r\n\r\n    const [description, setDescription] = useState()\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const organization = useSelector(state => {\r\n        return state.user.organization\r\n    })\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n    const { annualRevenue } = useSelector(state => state.annualRevenue)\r\n\r\n    // }\r\n    const { hereAbout } = useSelector(state => state.hereAbout)\r\n    // console.log(user, 'user')\r\n\r\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    const OnSubmit = (values) => {\r\n        setFormValues(values)\r\n        // FormData.append('email', data.email)\r\n        // FormData.append('password', data.password)\r\n        // FormData.append('confirm_password', data.confirm_password)\r\n        const formData = new FormData()\r\n        formData.append('banner_image', values.banner_image[0])\r\n        formData.append('logo', values.logo[0])\r\n        formData.append('email', data.email)\r\n        formData.append('password', data.password)\r\n        formData.append('wallet_id', values.wallet_id)\r\n        // formData.append('role', data.role)\r\n        formData.append('goal', values.goal)\r\n        formData.append('confirm_password', data.confirm_password)\r\n        formData.append('organization_name', values.organization_name)\r\n        formData.append('url', values.url)\r\n        formData.append('country', values.country)\r\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\r\n        formData.append('tax_id', values.tax_id)\r\n\r\n        formData.append('social', values.social)\r\n        formData.append('social_link', values.social_link)\r\n        formData.append('description', description)\r\n        // formData.append('method_heard_detail', values.method_heard_detail)\r\n\r\n        dispatch(Register(formData, dispatch))\r\n        // if (formData) {\r\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\r\n        //     history.push('/login')\r\n        // }\r\n    }\r\n\r\n    const socialmedia = useSelector(state => {\r\n        return state?.getSocialmediaIcons?.getsocial\r\n    })\r\n    // console.log('social', socialmedia)\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n        dispatch(AnnualRevenueList())\r\n        dispatch(HearAboutList())\r\n        dispatch(GetSocialMediaIcons())\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <div className={formStep === 1 ? styles.showForm : styles.hideForm}>\r\n                            <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                {/* <button\r\n                                    // className={styles.back}\r\n                                    onClick={prevFormStep}\r\n                                    type=\"button\"\r\n                                >\r\n                                    back\r\n                                </button> */}\r\n                                <div className=\"row\">\r\n                                    <div className='col-12 d-flex justify-content-center'>\r\n                                        <div className='orgicon1'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 1</i>\r\n                                        </div>\r\n\r\n                                        <div className='orgicon1line'>\r\n                                            <span style={{ color: '#452868' }}> ----------------------------- </span>\r\n\r\n                                        </div>\r\n                                        <div className='orgicon2'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 2</i>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Fundraising Goal</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"goal\"\r\n                                                step=\"0.01\"\r\n                                                placeholder=\"Fundraising goal (MATIC)\"\r\n                                                {...register(\"goal\",\r\n                                                    {\r\n                                                        required: true,\r\n\r\n                                                    })}\r\n                                                aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                            {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Funding Wallet </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"wallet_id\"\r\n                                                // defaultValue='1'\r\n                                                placeholder=\"Funding Wallet\"\r\n                                                {...register(\"wallet_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Name</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"organization_name\"\r\n                                                placeholder=\"Organization name\"\r\n                                                {...register(\"organization_name\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.organization_name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Website</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"url\"\r\n                                                placeholder=\"Website\"\r\n                                                {...register(\"url\", {\r\n                                                    required: true,\r\n                                                    pattern: {\r\n                                                        value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                                    }\r\n                                                })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.url ? \"true\" : \"false\"}\r\n                                            />\r\n\r\n                                            {errors.url && errors.url?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                                            {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Describe your project\"\r\n\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <Controller\r\n                                                control={control}\r\n                                                name=\"description\"\r\n                                                defaultValue=\"\"\r\n\r\n                                                // {...register(\"description\", { required: true })}\r\n                                                rules={{ required: true, min: 150 }}\r\n                                                // rules={{\r\n                                                //     required: true, pattern: {\r\n\r\n                                                //         message: \"Description is required\",\r\n                                                //     },\r\n                                                // }}\r\n                                                render={({ field }) => {\r\n                                                    return <JoditEditor\r\n                                                        ref={field.ref}\r\n                                                        value={field.value}\r\n                                                        // config={config}\r\n                                                        aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                                        placeholder=\"start typing\"\r\n                                                        tabIndex={1} // tabIndex of textarea\r\n                                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                        onChange={field.onChange}\r\n                                                    />\r\n                                                }}\r\n                                            />\r\n                                            {errors?.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Country</label>\r\n\r\n                                            <select name=\"country\"\r\n                                                {...register(\"country\", { required: true })}>\r\n                                                aria-invalid={errors.country ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                                {countries.data?.data?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.name}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"annual_revenue_range\"\r\n                                                {...register(\"annual_revenue_range\", { required: true })}>\r\n                                                {annualRevenue?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key.id} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>EIN Number/Tax Id</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"tax_id\"\r\n                                                placeholder=\"EIN Number/Tax Id(optional)\"\r\n                                                {...register(\"tax_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (required)</label>\r\n                                            <select name=\"social\"\r\n                                                {...register(\"social\", { required: true })}>\r\n                                                aria-invalid={errors.social ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\r\n                                                {socialmedia?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.title}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (secondary)</label>\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"social_link\"\r\n                                                    placeholder=\"social link(optional) \"\r\n                                                    {...register(\"social_link\")}\r\n                                                // {...register(\"email\")}\r\n                                                // aria-invalid={errors.social_link ? \"true\" : \"false\"}\r\n                                                />\r\n                                            </div>\r\n                                            {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"project\"\r\n                                                {...register(\"hear_about\", { required: true })}>\r\n                                                {hereAbout?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Banner</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n\r\n                                                name=\"banner_image\"\r\n                                                placeholder=\"Select file\"\r\n                                                disp\r\n                                                {...register(\"banner_image\", { required: true })}\r\n                                                aria-invalid={errors.banner_image ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\r\n\r\n                                            {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Logo</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n                                                name=\"logo\"\r\n                                                placeholder=\"Select file\"\r\n                                                {...register(\"logo\", { required: true })}\r\n                                                aria-invalid={errors.logo ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <div className='logo_one'>\r\n\r\n                                                <span className='logo-dis'>maximum height should be 250 pixels</span>\r\n                                            </div>\r\n                                            {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\r\n                                    </div>\r\n                                    {/* <div className=\"col-3\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => goBack()}>Previous</button>\r\n                                    </div> */}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CreateOrganization","import { useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Signup from './Signup'\r\nimport CreateOrganization from './createOrganization';\r\nimport FormProvider from \"./Context/context\";\r\n\r\n\r\nconst SignupIndex = () => {\r\n  const [formStep, setFormStep] = useState(0);\r\n\r\n  const nextFormStep = () => setFormStep((currentStep) => currentStep + 1);\r\n\r\n  const prevFormStep = () => setFormStep((currentStep) => currentStep - 1);\r\n\r\n  return (\r\n    <FormProvider>\r\n\r\n      <FormCard currentStep={formStep} prevFormStep={prevFormStep}>\r\n        {formStep === 0 && (\r\n          <Signup formStep={formStep} nextFormStep={nextFormStep} />\r\n        )}\r\n        {formStep === 1 && <CreateOrganization goBack={prevFormStep} />\r\n        }\r\n      </FormCard>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default SignupIndex;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport SignupSection from '../components/Signup';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Signup = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <SignupSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contact',\r\n\r\n    initialState: {\r\n        contact: [],\r\n\r\n\r\n    },\r\n    reducers: {\r\n\r\n        postContact: (state, action) => {\r\n            state.contact = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const contactReducer = contactSlice.reducer\r\n\r\nexport const {\r\n    postContact\r\n} = contactSlice.actions;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ContactAction } from '../../redux/Actions/contactAction';\r\nimport Loader from '../Loader/loader';\r\nconst Contact = () => {\r\n    const [loading, setLoading] = useState()\r\n    const dispatch = useDispatch()\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        setLoading(true)\r\n        const formData = new FormData()\r\n        formData.append('name', data.name)\r\n        formData.append('subject', data.subject)\r\n        formData.append('email', data.email)\r\n        formData.append('description', data.description)\r\n        dispatch(ContactAction(formData, setLoading))\r\n    }\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>Contact</span>\r\n                            <h3 className=\"mt-3 mb-0\">Get In Touch</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form id=\"contact-form\" className=\"item-form card no-hover\" onSubmit={handleSubmit(OnSubmit)} >\r\n                            {loading ? (\r\n                                <Loader />\r\n                            ) : (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name\"  {...register(\"name\", { required: true })}\r\n                                                aria-invalid={errors.name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Name is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" {...register(\"email\", { required: true })}\r\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.email?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Email is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"subject\" placeholder=\"Subject\"  {...register(\"subject\", { required: true })}\r\n                                                aria-invalid={errors.subject ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.subject?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Subject is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <textarea className=\"form-control\" name=\"message\" placeholder=\"Message\" cols={30} rows={3} defaultValue={\"\"}  {...register(\"description\", { required: true })}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Message is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\"><i className=\"icon-paper-plane mr-2\" />Send Message</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </form>\r\n                        <p className=\"form-message\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default Contact;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { postContact } from \"../Slices/contactSlice\";\r\nimport { LogsAction } from \"./logsAction\";\r\nexport const ContactAction = (params, setLoading) => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/contact-us/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(postContact(res));\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", res.data.message, 'success')\r\n                .then(function () {\r\n                    window.location = \"/\";\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport ContactSection from '../components/Contact/Contact';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst Contact = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ContactSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Contact;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ForgotPasswordAction, LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { forgotpassword, message, statusCode } = useSelector(state => {\r\n        // \r\n        return state.forgotpassword\r\n    })\r\n\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        dispatch(ForgotPasswordAction(data)).then(() => {\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors?.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div>{errors.username && errors.username.message}</div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Send Reset Link</button>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                    <hr />\r\n                                    <div className=\"other-option\">\r\n                                        Social Icons\r\n                                        <div className=\"social-icons d-flex justify-content-center\">\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <a key={`lsd_${idx}`} className={item.link} href=\"#\">\r\n                                                        <i className={item.icon} />\r\n                                                        <i className={item.icon} />\r\n                                                    </a>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport ForgotPassword from '../components/ForgotPassword/forgotPassword';\r\n\r\nconst Forgot = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ForgotPassword />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forgot\r\n","export const TOKEN_KEY = localStorage.getItem('authToken')\r\n\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"authToken\");\r\n}\r\n\r\nexport const isLogin = () => {\r\n  return TOKEN_KEY ? true : false\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from './utils';\r\n\r\nconst PrivateRoute = ({ component: Component, restricted, ...rest }) => {\r\n    // const isLog = isLogin()\r\n    // \r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Redirect to=\"/\" />\r\n                : <Component {...props} />\r\n\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Geonames from \"geonames.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nconst geonames = new Geonames({\r\n    username: \"fullstackdeveloper91\",\r\n    lan: \"en\",\r\n    encoding: \"JSON\"\r\n});\r\nexport default function GeoLocation(props) {\r\n    const { locationTitle, geoId, onChange, isCountry } = props;\r\n    const [options, setOptions] = useState([]);\r\n    const [currentItem, setCurrentItem] = useState(\"\");\r\n    const [labelWidth, setLabelWidth] = useState(0);\r\n    useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n        {\r\n            !currentItem && (\r\n                setCurrentItem(props?.selected)\r\n            )\r\n        }\r\n    }, [props]);\r\n    useEffect(() => {\r\n        try {\r\n            const data = async () => {\r\n                (await isCountry)\r\n                    ? axios?.get(`https://secure.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en`)?.then(res => {\r\n                        // \r\n                        setOptions(res);\r\n                        console.log(res, \"countries\")\r\n                    })\r\n                    : axios?.get(`https://secure.geonames.org/childrenJSON?username=fullstackdeveloper91&lang=en&geonameId=${geoId}`)?.then(res => {\r\n                        setOptions(res);\r\n                        console.log(res, \"cities\")\r\n                    });\r\n            };\r\n            data();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }, [geoId, isCountry]);\r\n    const inputLabel = useRef(null);\r\n    const handleChange = e => {\r\n        setCurrentItem(e.target.value);\r\n        onChange(e.target.value);\r\n    };\r\n    return (\r\n        <form >\r\n            <label ref={inputLabel} id=\"demo-simple-select-outlined-label\" style={{ display: 'none' }}>\r\n                {locationTitle}\r\n            </label>\r\n            <select\r\n                label=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={currentItem}\r\n                onChange={handleChange}\r\n                labelWidth={labelWidth}\r\n            >\r\n                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select </option>\r\n                {options?.data?.geonames?.map((v, index) => (\r\n                    <option key={index} value={v?.geonameId}>\r\n                        {isCountry ? v?.countryName : v?.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </form>\r\n    );\r\n}\r\nGeoLocation.propTypes = {\r\n    locationTitle: PropTypes.string,\r\n    geoId: PropTypes.node,\r\n    isCountry: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\nGeoLocation.defaultProps = {\r\n    onChange: undefined\r\n};","// import { getValue } from '@mui/system';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { CategoriesAction, ProjectDetail, UpdateProject } from '../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\nimport GeoLocation from '../components/Create/geoLocation';\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../redux/Actions/authAction';\r\n\r\nconst EditProject = () => {\r\n    const editor = useRef(null);\r\n    const [country, setCountry] = useState();\r\n    console.log(country)\r\n    const [state, setState] = useState();\r\n    const [city, setCity] = useState();\r\n    const [description, setDescription] = useState();\r\n    // const [descriptionup, setDescriptionup] = useState();\r\n    // console.log(descriptionup, 'discup')\r\n    const [type, setType] = useState();\r\n    const { id } = useParams();\r\n    // console.log(id, \"idd\")\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    const dis = projdetail.description\r\n    // setDescriptionup(dis)\r\n    // console.log(dis, 'dis')\r\n    // console.log(projdetail, \"gfgfhghgghhgh\")\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n\r\n    }, [id])\r\n    const config = {\r\n        placeholderText: 'Edit Your Content Here!',\r\n        charCounterCount: false\r\n    }\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(first)\r\n\r\n    // console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            // const formData = new FormData()\r\n            // // formData.append('country_id', event?.currentTarget?.value)\r\n            // formData.append('country_id', projdetail.country)\r\n            // dispatch(StateList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n\r\n        dispatch(UpdateProject(id, formData))\r\n    }\r\n\r\n\r\n\r\n        const disablePastDate = () => {\r\n            const today = new Date();\r\n            const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n            const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n            const yyyy = today.getFullYear();\r\n            return yyyy + \"-\" + mm + \"-\" + dd;\r\n        };\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    // console.log(cat, 'cat')\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n    const handleChangeCountry = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n        const formData = new FormData()\r\n        // formData.append('country_id', event?.currentTarget?.value)\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    return (\r\n        // <Modal\r\n        //     {...props}\r\n        //     size=\"lg\"\r\n        //     aria-labelledby=\"contained-modal\"\r\n        //     centered\r\n        // >\r\n        //     <Modal.Header closeButton>\r\n        //         <Modal.Title id=\"contained-modal\">\r\n        //             Collection\r\n        //         </Modal.Title>\r\n        //     </Modal.Header>\r\n        //     <Modal.Body>\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n                    <div className=\"col-12 col-md-7\">\r\n                        <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Get Started</span>\r\n                                <h3 className=\"mt-3 mb-0\">Update Project</h3>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"2\" onChange={(e) => setType(e.target.value)} {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                        </div>\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"1\" onChange={(e) => setType(e.target.value)}  {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {/* {type == 1 && ( */}\r\n\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Project name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"title\"\r\n                                            placeholder=\"Project name\"\r\n                                            {...register(\"title\", { required: true })}\r\n                                            aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                                    </div>\r\n                                    {/* )} */}\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Web address</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"address\"\r\n                                            placeholder=\"Web Address\"\r\n                                            {...register(\"address\", { required: true })}\r\n                                            aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <label>Description</label>\r\n                                    <div className=\"form-group\">\r\n                                        {/* <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"textarea\"\r\n                                            // data-provide=\"markdown-editable\" rows=\"10\"\r\n                                            placeholder=\"Description\"\r\n                                            cols={30}\r\n                                            {...register(\"description\", { required: true })}\r\n                                            aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        /> */}\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n                                            render={({ field: { value, onChange } }) => {\r\n                                                return <JoditEditor\r\n                                                    ref={editor}\r\n                                                    value={value}\r\n                                                    // config={config}\r\n\r\n                                                    placeholder=\"start typing\"\r\n                                                    tabIndex={1} // tabIndex of textarea\r\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                    onChange={newContent => { }}\r\n                                                />\r\n                                            }}\r\n                                        />\r\n                                        {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                        {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"country\"\r\n                                                    {...register(\"country\", { required: true })}\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeCountry()\r\n                                                    }>\r\n\r\n                                                    aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                        Select your country</option>\r\n                                                    {countries?.data?.data?.map((option, key) => (\r\n                                                        <>\r\n                                                            <option key={key.id} value={option.id} >\r\n\r\n                                                                {option.name}\r\n\r\n                                                            </option>\r\n                                                        </>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"state\"\r\n\r\n                                                    {...register(\"state\", { required: true })}\r\n                                                    //  onChange={handleChangeState}\r\n\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeState\r\n                                                    } >\r\n                                                    aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state</option>\r\n                                                    {states?.data?.data?.map((option, key) => (\r\n\r\n                                                        <><option key={key.id} value={option.id}  >\r\n                                                            {option.name}\r\n                                                        </option></>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>City or Region</label>\r\n\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}>\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        {type == 2 ? (\r\n\r\n                                            <label>Price</label>\r\n                                        ) : (\r\n\r\n                                            <label>Price per NFT</label>\r\n                                        )}\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"price\"\r\n                                            placeholder=\"Price\"\r\n                                            {...register(\"price\", { required: true })}\r\n                                            aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Number of NFTs</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"number_of_nft\"\r\n                                            defaultValue={1}\r\n                                            disabled={type == 1}\r\n                                            placeholder=\"Select your number of NFTs (1-10)\"\r\n                                            min={1}\r\n                                            max={10}\r\n                                            {...register(\"number_of_nft\", { required: true })}\r\n                                            aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                        {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {type == 2 && (\r\n\r\n                                    <><div className=\"col-12 col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Campaign Start date</label>\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control\"\r\n                                                name=\"start_date\"\r\n                                                min={disablePastDate()}\r\n                                                // placeholder=\"Start date\"\r\n                                                {...register(\"start_date\", { required: true })}\r\n                                                aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                            {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                        </div>\r\n                                    </div><div className=\"col-12 col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Campaign End Date</label>\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"end_date\"\r\n                                                    min={disablePastDate()}\r\n                                                    // placeholder=\"End date\"\r\n                                                    {...register(\"end_date\", { required: true })}\r\n                                                    aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                                {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                            </div>\r\n                                        </div></>\r\n                                )}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category</label>\r\n                                        <select name=\"annual_revenue_range\"\r\n                                            // defaultValue={}\r\n                                            {...register(\"category_id\")}>\r\n                                            {cat?.map((option, key) => (\r\n\r\n                                                <option key={key.id} value={option.id}  >\r\n                                                    {option.title}\r\n\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        //     </Modal.Body>\r\n        // </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default EditProject;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport EditProject from '../Edit/editProject';\r\n\r\nconst ProjectUpdate = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <EditProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjectUpdate;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst TermsConditions = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter(dispatch))\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{footer?.footer?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: footer?.footer?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default TermsConditions","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport TermsConditions from '../components/Footer/t&c';\r\n\r\n\r\nconst TermsCond = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <TermsConditions />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TermsCond\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  CategoriesAction,\r\n  getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\nimport { Pagination } from \"antd\";\r\n\r\nconst projectTypesMap = {\r\n  LatestProjects: 2,\r\n  RecentCampaigns: 1,\r\n};\r\n\r\nconst ExploreAll = () => {\r\n  const { type } = useParams();\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const liveProjects = useSelector((state) => {\r\n    return state?.projectdetails?.liveProjects[type];\r\n  });\r\n  const liveProjectspag = useSelector((state) => {\r\n    return state?.projectdetails?.liveProjectsPag;\r\n  });\r\n  console.log(liveProjectspag, \"live\");\r\n\r\n  let PageSize = liveProjectspag.page_per_data;\r\n  useEffect(() => {\r\n\r\n\r\n    dispatch(\r\n      getPublicLiveProjects({\r\n        cursor: 1,\r\n        type: projectTypesMap[type],\r\n        projectType: type,\r\n      })\r\n    );\r\n  }, [dispatch, type]);\r\n\r\n  return (\r\n    <section className=\"explore-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-8 col-lg-7\">\r\n            <div className=\"intro text-center mb-4\">\r\n              <h3 className=\"mt-3 mb-0\">\r\n                {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}\r\n              </h3>\r\n              <p>\r\n                Invest in NFTs that are based on real-life projects or events\r\n                related to important causes\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row items explore-items h-auto\">\r\n          {liveProjects && liveProjects.length ? (\r\n            [\r\n              ...new Map(\r\n                liveProjects?.map((item) => [item[\"title\"], item])\r\n              ).values(),\r\n            ].map((item, idx) => {\r\n              return (\r\n                <Link\r\n                  key={`edth_${idx}`}\r\n                  className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                >\r\n                  <div>\r\n                    <Link to={`/projects/${item.slug}`}>\r\n                      <div className=\"card\">\r\n                        <div className=\"image-over\">\r\n                          <Link to={`/projects/${item.slug}`}>\r\n                            <img\r\n                              className=\"card-img-top\"\r\n                              src={item.image}\r\n                              alt=\"\"\r\n                            />\r\n                          </Link>\r\n                          {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                        </div>\r\n\r\n                        <div className=\"card-caption col-12 p-0\">\r\n                          {/* Card Body */}\r\n                          <div className=\"card-body\">\r\n                            {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                            {/* <a > */}\r\n                            <h5 className=\"mb-0\">\r\n                              {item.title.slice(0, 15)}\r\n                            </h5>\r\n                            {/* </a> */}\r\n                            <div\r\n                              className=\"seller d-flex align-items-center my-3\"\r\n\r\n                            >\r\n                              <span>Owned By</span>\r\n                              {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                              {/* <a > */}\r\n                              <h6 className=\"ml-2 mb-0\">\r\n                                {item.user_data.username.slice(0, 12)}\r\n                              </h6>\r\n                              {/* </a> */}\r\n\r\n                              {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                            </div>\r\n                            <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                              <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                              {item?.number_of_nft == 1 ? (\r\n                                <span>{item.number_of_nft} NFT</span>\r\n                              ) : (\r\n                                <span>{item.number_of_nft} NFTs</span>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                              <Link to={`/projects/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                <i className=\"icon-handbag\" />\r\n                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                              </Link>\r\n                              <Link to={`/projects/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"col-12 col-sm-12 col-lg-12\">\r\n              <h2 className=\"allproj2\">No latest project found</h2>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* <Pagination\r\n          className=\"pagination-bar\"\r\n          currentPage={currentPage}\r\n          totalCount={liveProjects?.data_count}\r\n          pageSize={PageSize}\r\n          onPageChange={page => setCurrentPage(page)}\r\n        /> */}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default ExploreAll;\r\n","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreAll from '../components/Explore/viewAllLatest';\r\n\r\nconst All = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ExploreAll type=\"Latest Projects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default All;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nconst AllCollections = () => {\r\n    const dispatch = useDispatch()\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state.collection.collection\r\n    })\r\n    // console.log(coll, \"coll\")\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionAction())\r\n    }, [dispatch])\r\n    return (\r\n        <>\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center mb-4\">\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center text-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* Explore Menu */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items explore-items h-auto\">\r\n                        {coll && coll.length ?\r\n                            [...new Map(coll?.map(item =>\r\n                                [item[\"title\"], item])).values()]?.map((item, idx) => {\r\n                                    return (\r\n                                        <Link key={`edth_${idx}`} to={`/popularcollection/details/${item.slug}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\" >\r\n                                            <div>\r\n                                                <div className=\"card position-relative \">\r\n                                                    <div className=\"image-over \">\r\n                                                        <img className=\"card-img-top\" src={item.image} />\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <a>\r\n                                                                <h5 className=\"mb-0 mt-3\">{item.title.slice(0, 15)}...</h5>\r\n                                                            </a>\r\n                                                            <div class=\"\"><p>{item.description.slice(0, 50)}...</p></div>\r\n                                                            <div class=\"mb-2 align-items-center justify-content-between\">\r\n                                                                <div class=\"mt-2 mb-2 d-flex justify-content-between text-align-center fundraiser_sale\">\r\n                                                                    {item?.nft_data.length == 1 ? (\r\n                                                                        <span>{item.nft_data.length} NFT</span>\r\n                                                                    ) : (\r\n                                                                        <span>{item.nft_data.length} NFTs</span>\r\n                                                                    )\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                            <div className=\"col-12 col-sm-12 col-lg-12 no-data\">\r\n                                <h2>\r\n                                    No Popular Collections\r\n                                </h2>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\nexport default AllCollections; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AllCollections from '../components/Collections/exploreCollection';\r\n\r\nconst ColExplore = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AllCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ColExplore;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AboutUsAction, getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst AboutUs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const about = useSelector(state => {\r\n        return state.footer.aboutus\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(AboutUsAction())\r\n    }, [])\r\n    // console.log(about, 'footerabout')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{about?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: about?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AboutUs","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AboutUs from '../components/Footer/about';\r\n\r\nconst Aboutus = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AboutUs />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Aboutus;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ReferalPopup(props) {\r\n    const location = useLocation();\r\n    const [copy, setCopy] = useState(false)\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n    const url = window.location.href + `?refid=${props.userRef}`\r\n    const userprojurl = `https://app.karmatica.io/projects/${props.id}` + `?refid=${props.userRef}`\r\n    console.log(userprojurl)\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header className=' align-items-start'>\r\n                {window.ethereum?.selectedAddress ? (\r\n\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Refer your friends\r\n                        <p>Earn Royalties When You Share: <br />30% of NFTs for first level and 5% for secondary referrals.</p>\r\n\r\n\r\n                    </Modal.Title>\r\n                ) : (\r\n                    <Modal.Title id=\"contained-modal-title-vcenter \">\r\n\r\n                        <p>Earn When You Share: <br />30% of NFT sales for first level referral </p>\r\n                        <p style={{ color: \"red\" }}>Connect your wallet to earn referral income in MATIC when you share projects</p>\r\n\r\n\r\n                    </Modal.Title>\r\n                )}\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className='refer-frnd'>\r\n                <form className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-10 p-0\">\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                {/* <label>Display name</label> */}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"display_name\"\r\n                                    value={location.pathname === `/projnftdetails/${props.id}` ? userprojurl : url}\r\n                                    disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}\r\n                                // required\r\n                                // placeholder=\"Enter collection name\"\r\n                                // {...register('title')}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n\r\n                            </div>\r\n                            {/* <FacebookShareCount url={\"shareUrl\"}>\r\n                            {shareCount => <span className=\"myShareCountWrapper\">{shareCount}</span>}\r\n                        </FacebookShareCount> */}\r\n\r\n\r\n                            <hr />\r\n                            <div className=\"refer-icons\">\r\n                                {location.pathname === `/projnftdetails/${props.id}` ? (\r\n                                    <>  <TwitterShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                        <FacebookShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                        <WhatsappShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                        <TelegramShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                        <InstapaperShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" >  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                        <LinkedinShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                        <EmailShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><EmailIcon size={32} round={true} /></EmailShareButton></>\r\n                                ) : (\r\n\r\n                                    <><TwitterShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                        <FacebookShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                        <WhatsappShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                        <TelegramShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                        <InstapaperShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\">  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                        <LinkedinShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                        <EmailShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><EmailIcon size={32} round={true} /></EmailShareButton></>\r\n                                )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 p-0 text-right\">\r\n                            {location.pathname === `/projnftdetails/${props.id}` ? (\r\n                                <CopyToClipboard text={userprojurl} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                            ) : (\r\n\r\n                                <CopyToClipboard text={url} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                            )}\r\n                            {copy == true &&\r\n                                <span className='copytext'>Copied!</span>\r\n\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ReferalPopup","import { Button, Form, Input, } from 'antd';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\nconst EditNft = (props) => {\r\n    // debugger\r\n    const editor = useRef(null);\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n    const [form] = Form.useForm()\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id, props.id))\r\n    }, [props.nft_id, props.id])\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    const handleUpload = (e) => {\r\n        const filetype = e.target.files[0].type;\r\n        var fr = new FileReader();\r\n        fr.onload = function () {\r\n            var img = new Image();\r\n            img.onload = function () {\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n                    setNFtFileType(\"modal\");\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n        }\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n        })\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n    }, [form, nftdetail])\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n            if (source) {\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n                const formData = new FormData()\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n                formData.append('collection_id', nft_collection_id)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"main-create\" >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div>\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n                                                    <Fragment>\r\n                                                        <div className=\"row relative\">\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  name',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  description',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={'nft_description'}\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                            onChange={newContent => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className='col-12'>\r\n                                                                <label className='mt-2 mb-3'>Choose Collection</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <div className=\"card choose_div\" style={{\r\n                                                                        background: \"black\",\r\n                                                                        marginBottom: \"8px\",\r\n                                                                    }}>\r\n                                                                        <div className=\"card-body \">\r\n                                                                            <Button variant=\"primary\" className='collection_btn' onClick={() => setModalShowcoll(true)}>\r\n                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n                                                                            </Button>\r\n                                                                            <CollPopup\r\n                                                                                show={modalShowcoll}\r\n                                                                                onHide={() => setModalShowcoll(false)} />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {col?.map((item, idx) => (\r\n                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-6 col-lg-3 col-12 choose_div\">\r\n                                                                    <div id={item.id} onClick={() => setNft_collection_id(item.id)} className=\"card\"\r\n                                                                        style={{\r\n                                                                            background: \"black\",\r\n                                                                            marginBottom: \"8px\",\r\n                                                                            border: nft_collection_id == item.id ? \"1px solid #fff\" : null\r\n                                                                        }}>\r\n                                                                        <div className=\"card-body\">\r\n                                                                            <div>\r\n                                                                                {item.title}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                    <div\r\n                                                                        className=\"position-relative upload_nft\"\r\n                                                                        style={{\r\n                                                                            backgroundImage: \"url('')\",\r\n                                                                            backgroundSize: \"contain\",\r\n                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <div\r\n                                                                            className={\r\n                                                                                nftFileType === \"Player\" || nftFileType === \"modal\"\r\n                                                                                    ? \" inputdragVedio\"\r\n                                                                                    : \"inputtdrag\"\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <input\r\n                                                                                type=\"file\"\r\n                                                                                onChange={handleUpload}\r\n                                                                                maxCount={1}\r\n                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                            />\r\n                                                                            {(nftFileType === \"Image\") &&\r\n                                                                                <div>\r\n                                                                                    {source ? (\r\n                                                                                        <img\r\n                                                                                            src={source}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <img\r\n                                                                                            src={image}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                            {nftFileType === \"Player\" &&\r\n                                                                                <div>\r\n                                                                                    {source ? (\r\n                                                                                        <video\r\n                                                                                            width=\"100%\"\r\n                                                                                            controls\r\n                                                                                            src={source}\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <video\r\n                                                                                            width=\"100%\"\r\n                                                                                            controls\r\n                                                                                            src={image}\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p>\r\n                                                                                            Because you’ve included\r\n                                                                                            multimedia, you’ll need to provide\r\n                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                            the card display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft}\r\n                                                                                                />\r\n                                                                                            ) : (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview}\r\n                                                                                                />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                            {nftFileType === \"modal\" &&\r\n                                                                                <div>\r\n                                                                                    {!source ? (\r\n                                                                                        <DModal\r\n                                                                                            vdo={image}\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <DModal\r\n                                                                                            vdo={source}\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p className=\"\">\r\n                                                                                            Because you’ve included multimedia,\r\n                                                                                            you’ll need to provide an image\r\n                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                            display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft} />\r\n                                                                                            ) : (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview} />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Fragment>\r\n                                                ))}\r\n                                            </></>\r\n                                    )}\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const slug = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    useEffect(() => {\r\n        dispatch(NftList(props.slug?.id))\r\n        // dispatch(ProjectDetail(slug))\r\n    }, [props.slug?.id])\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n                        <thead>\r\n                            {/* {latprojnftdetail?.map((items) => { \r\n                         return (  */}\r\n\r\n                            <><tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr><tr className='contract-address'>\r\n                                    <th >Contract</th>\r\n                                    <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${nftdetail?.collectionData?.contract_id}`} >{nftdetail.collectionData?.contract_id?.slice(0, 5)}.....{nftdetail.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                </tr><tr>\r\n                                    <th>Token ID</th>\r\n                                    <td>{nftdetail.token_id}</td>\r\n                                </tr><tr>\r\n                                    <th>Token Stranded</th>\r\n                                    <td>ERC721</td>\r\n                                </tr></>\r\n\r\n                            {/* )})} */}\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* {projdetail.nft_data?.map((items) => { */}\r\n                            {/* // return ( */}\r\n                            <tr>\r\n\r\n                                <td>\r\n                                    {/* {items.collectionData?.contract_id} */}\r\n                                </td>\r\n                                <td>\r\n                                    {/* {items.token_id} */}\r\n                                </td>\r\n                                {/* <td>ERC721</td> */}\r\n                                {/* <td>Polygon (Matic)</td> */}\r\n                            </tr>\r\n                            {/* // ) */}\r\n                            {/* })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n                {/* <div className='nothing'>\r\n                No matching records found\r\n                        </div> */}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftdataTable","import axios from \"axios\";\r\n\r\nexport const GetMatic = async (setMatic) => {\r\n\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\r\n            config\r\n        )\r\n        setMatic(res?.data)\r\n        console.log('res', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, LatestProjectDetail, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport { BuyNft } from '../Wallet/interact';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport MyVerticallyCenteredModal from './refralPopup';\r\nimport swal from 'sweetalert';\r\nimport Banner from '../Create/editBanner';\r\nimport EditNft from '../Create/editNft';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport latNftdataTable from './../Explore/latProjNftdata';\r\nimport LatNftdataTable from './../Explore/latProjNftdata';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReferalPopup from './refralPopup';\r\nimport ReadMore from '../../readMore';\r\nimport { GetMatic } from './GetMAtic';\r\nimport FormItem from 'antd/es/form/FormItem';\r\nimport { useLocation } from \"react-router-dom\";\r\nconst ProjDetails = () => {\r\n\r\n\r\n    const { slug } = useParams();\r\n    const search = useLocation().search;\r\n    const refid = new URLSearchParams(search).get('refid');\r\n    console.log(refid, 'refid')\r\n    const [tok, setTok] = useState('')\r\n    // console.log('tok', tok)\r\n    const dispatch = useDispatch()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    // const [matic, setmatic] = useState('')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(\"latround\", Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad)))\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    console.log('latproj', latprojdetail?.nft_data)\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n\r\n\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(LatestProjectDetail(slug))\r\n        dispatch(GetUserAction())\r\n\r\n    }, [slug])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className='col-12'>\r\n                        <span className=\"p-0 title_main\">{latprojdetail.title}</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <><div>\r\n                                    {latprojdetail?.user_data?.user_id === userdet?.user_id && localStorage.getItem('authToken') &&\r\n                                        <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() => setModalShow(true)}></i>\r\n\r\n\r\n                                    }\r\n                                    <Banner\r\n                                        id={slug}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div><img src={latprojdetail?.image} alt=\"first nft\" /></>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"fundraiser mt-4 \">\r\n                            <div className='lorem_done'>\r\n                                <img width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" src={latprojdetail?.user_data?.organization_detail?.logo} />\r\n                                {/* <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg> */}\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 col-12 mt-4 mt-lg-0\">\r\n                        <div className='proj-left user_icon'>\r\n                            <div className=\"progress_nft \">\r\n                                <div className='progress_main '><span>\r\n                                    {/* ({Number(latprojdetail.project_count) * Number(matic['matic-network']?.cad)} of {Number(latprojdetail.price) * Number(Math.round(matic['matic-network']?.cad))} MATIC ) */}\r\n                                    <span className='nft_price'>${Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad))} raised of ${Math.round(Number(latprojdetail.price)) * Number(Math.round(matic['matic-network']?.cad))} Cdn Goal</span>\r\n                                    <div>\r\n\r\n                                        {/* ${Math.round(latprojdetail.project_count)} raised of ${Math.round(latprojdetail.price)} Cdn Goal */}\r\n                                        <span className='nft_price'>({Math.round(latprojdetail.project_count)} of {Math.round(latprojdetail.price)} MATIC) </span>\r\n                                    </div>\r\n                                    {/* <span className='nft_price'>{latprojdetail.project_count} raised of {latprojdetail.price} Cdn goal (150 of 758 MATIC)</span><small>  </small> */}\r\n                                    <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                    </div>\r\n                                    <p className='donation-count'> ${latprojdetail.project_count} RAISED</p>\r\n                                </span>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex flex-wrap gap-5 justify-content-start\">\r\n\r\n\r\n                                    <>\r\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Invest\r\n                                        </Button>\r\n\r\n\r\n\r\n                                        </a>\r\n                                        <Button className=\"btn sm:ml-2 btn-bordered-white m-0\" variant=\"primary\" onClick={() => setModalShowrefer(true)}>\r\n\r\n\r\n                                            Share\r\n                                        </Button><ReferalPopup\r\n                                            id={slug}\r\n                                            userRef={userDetail}\r\n                                            show={modalShowrefer}\r\n                                            onHide={() => setModalShowrefer(false)} /></>\r\n\r\n\r\n                                </div>\r\n                                {latprojdetail?.user_invest && latprojdetail?.user_invest?.length ?\r\n                                    [...new Map(latprojdetail?.user_invest?.slice(0, 3)?.map(item =>\r\n                                        [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                            const date1 = new Date(item.updated_at)\r\n                                            const date2 = new Date()\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            console.log('days', days_difference)\r\n                                            return (\r\n                                                <ul className=\"m-0 custom_lis pl-0 \">\r\n                                                    <li>\r\n                                                        <div className='lorem_done p-0'>\r\n                                                            <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                            </svg>\r\n                                                            </span>\r\n\r\n                                                            <span><div className=\"progress_name\">{item.username} </div> <div> ${item.price} Cdn / {Math.round(Number(latprojdetail.price) * Number(matic['matic-network']?.cad))} MATIC ({days_difference} days ago)</div></span>\r\n                                                        </div>\r\n                                                    </li>\r\n\r\n\r\n                                                </ul>\r\n                                            )\r\n                                        }) :\r\n                                    <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\r\n\r\n                                        <span className='allproj2 w-100'>\r\n                                            No user has invested yet\r\n                                        </span>\r\n\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n\t\t\t\t\t\t<i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={latprojdetail.description} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-4'>\r\n\r\n\r\n                        <div className='table-main-detail position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-12'>\r\n                        <div className='mt-4'>\r\n                            <div className='table-detail'>\r\n                                <LatNftdataTable />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\" col-12 mt-4\">\r\n                        <div id=\"invest\" className=\"items mt-0 explore-items p-0\">\r\n                            <ProjNFTS\r\n                                refid={refid}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ProjDetails from '../components/ItemDetails/viewProdetails';\r\n\r\n\r\nconst latprojDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ProjDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default latprojDetails;","import React, { useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { GetCollectionsAction } from '../../redux/Actions/projectAction'\r\nconst ShowCollections = () => {\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n    }, [])\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <span>Explore</span>\r\n                            <h3 className=\"mt-3 mb-0\">My Collections</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items explore-items h-auto\">\r\n                    <Link to={`/collection/${''}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                        <div>\r\n                            <div className=\"card\">\r\n                                <div className=\"image-over\">\r\n                                    {/* <Link to={`/collection/${''}`}> */}\r\n                                    <img className=\"card-img-top\" src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                                    {/* </Link> */}\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 p-0\">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-0\">{col.name}</h5>\r\n                                        </a>\r\n                                        <div className=\"seller d-flex align-items-center my-3\">\r\n                                            <span style={{ color: '#8E8E8E' }}>{col?.nfts?.[0]?.name}</span>\r\n                                            <a href=\"/author\">\r\n                                                <h6 className=\"ml-2 mb-0\"> </h6>\r\n                                            </a>\r\n                                        </div>\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                            <span> {col.price}</span>\r\n                                            <span> {col.number_of_nft}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                    {/* ) */}\r\n                    {/* })} */}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default ShowCollections","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ShowCollections from '../components/Create/showCollections';\r\n\r\nconst Showcollections = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ShowCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Showcollections;","import React, { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\r\nconst CollItem = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch()\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    {/* Explore Menu */}\r\n                    <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row items explore-items\">\r\n                {Object.keys(projdetail).map((item, idx) => {\r\n                    // {projdetail?.map((item, idx) => {\r\n                    return (\r\n                        <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" >\r\n                            <div className=\"card no-hover text-center\">\r\n                                <div className=\"image-over\">\r\n                                    <a href=\"/item-details\">\r\n                                        {/* <img className=\"card-img-top\" src={item.img} alt=\"\" /> */}\r\n                                    </a>\r\n                                    {/* Author */}\r\n                                    <a className=\"author\" href=\"/authors\">\r\n                                        <div className=\"author-thumb avatar-lg\">\r\n                                            <img className=\"rounded-circle\" src={item?.nft_data?.title} alt=\"\" />\r\n                                        </div>\r\n                                    </a>\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 \">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body mt-4\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-2\">{item?.nft_data?.title}</h5>\r\n                                        </a>\r\n                                        {/* <span>{item.content}</span> */}\r\n                                        <hr />\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default CollItem;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetCollectionDetails, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { Button } from 'react-bootstrap';\r\nimport CollItem from './bread-crumb';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst CollectionDetails = () => {\r\n\r\n    const initData = {\r\n        itemImg: \"/img/avtar1.png\",\r\n        date: \"2022-03-30\",\r\n        tab_1: \"Bids\",\r\n        tab_2: \"History\",\r\n        tab_3: \"Details\",\r\n        ownerImg: \"/img/avtar1.png\",\r\n        itemOwner: \"Themeland\",\r\n        created: \"15 Jul 2021\",\r\n        title: \"Walking On Air\",\r\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n        price_1: \"1.5 ETH\",\r\n        price_2: \"$500.89\",\r\n        count: \"1 of 5\",\r\n        size: \"14000 x 14000 px\",\r\n        volume: \"64.1\",\r\n        highest_bid: \"2.9 BNB\",\r\n        bid_count: \"1 of 5\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n    const tabData_1 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"14 ETH\",\r\n            time: \"4 hours ago\",\r\n            author: \"@arham\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"10 ETH\",\r\n            time: \"8 hours ago\",\r\n            author: \"@junaid\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"12 ETH\",\r\n            time: \"3 hours ago\",\r\n            author: \"@yasmin\"\r\n        }\r\n    ]\r\n\r\n    const tabData_2 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"32 ETH\",\r\n            time: \"10 hours ago\",\r\n            author: \"@hasan\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"24 ETH\",\r\n            time: \"6 hours ago\",\r\n            author: \"@artnox\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"29 ETH\",\r\n            time: \"12 hours ago\",\r\n            author: \"@meez\"\r\n        }\r\n    ]\r\n\r\n    const sellerData = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            seller: \"@ArtNoxStudio\",\r\n            post: \"Creator\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            seller: \"Virtual Worlds\",\r\n            post: \"Collection\"\r\n        }\r\n    ]\r\n\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coldetail = useSelector(state => {\r\n        return state?.projectdetails?.getcollectiondetails\r\n    })\r\n    // console.log(coldetail, 'coldetail')\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionDetails(id))\r\n    }, [id])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n                                <img src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                            </div>\r\n\r\n\r\n                            </>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            <div className='d-flex  align-items-center justify-content-between'>\r\n                                <h3 className=\"m-0\">{coldetail.title}</h3>\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center '>\r\n                                    <Button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" variant=\"primary\" onClick={() => setModalShow(true)} style={{ color: '#FFF' }}>\r\n                                        Add item\r\n                                    </Button>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <ReadMore data={coldetail?.description} />\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <CollItem />\r\n                </div>\r\n            </div >\r\n\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default CollectionDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Create/collectionDetail';\r\n\r\n\r\nconst CollectionDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <CollectionDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CollectionDetail;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\n\r\nimport JoditEditor from 'jodit-react';\r\nimport { useParams } from 'react-router';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction DesPopup(props) {\r\n    const editor = useRef(null);\r\n\r\n    const [country, setCountry] = useState()\r\n    const [type, setType] = useState()\r\n    const dispatch = useDispatch()\r\n    const slug = useParams()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            setDescription(projdetail.description)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n        dispatch(UpdateProject(props, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12\">\r\n                            <label>Description</label>\r\n                            <div className=\"form-group\">\r\n\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"description\"\r\n                                    defaultValue=\"\"\r\n                                    render={({ field: { value, onChange } }) => {\r\n                                        return <JoditEditor\r\n                                            ref={editor}\r\n                                            value={value}\r\n                                            // config={config}\r\n\r\n                                            placeholder=\"start typing\"\r\n                                            tabIndex={1} // tabIndex of textarea\r\n                                            onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                            onChange={newContent => { }}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                                {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default DesPopup","import React, { useEffect, useState } from 'react';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport Banner from './editBanner';\r\nimport DesPopup from './desPopup';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReadMore from '../../readMore';\r\nimport { GetMatic } from '../ItemDetails/GetMAtic';\r\nimport ReferalPopup from '../ItemDetails/refralPopup';\r\nimport Swal from 'sweetalert2';\r\n// import ProgressBar from 'react-bootstrap';\r\nconst ProjNftDetails = () => {\r\n    const { slug } = useParams()\r\n    // console.log(id, 'idd')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [matic, setmatic] = useState('')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [nftId, setNftID] = useState();\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    const dispatch = useDispatch()\r\n    const [modalShowDes, setModalShowDes] = React.useState(false);\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    useEffect((event) => {\r\n        (GetMatic(setmatic))\r\n        dispatch(ProjectDetail(slug))\r\n    }, [slug])\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n    const bannerHandler = () => {\r\n    }\r\n    return (\r\n        <section className=\"item-details-area project-nft-si main-proj-detail \">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <span className=\"my-2 p-0 title_main\">{projdetail.title}</span>\r\n                    </div>\r\n                    <div className='col-12 col-lg-8'>\r\n                        <div className=\"item-info\" >\r\n                            <div className=\"item-thumb text-center\">\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() =>\r\n                                        setModalShow(true)}></i>\r\n                                    <Banner\r\n                                        id={slug}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div>\r\n                                <img src={projdetail?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"fundraiser mt-4 p-0\">\r\n                            <div className='lorem_done'>\r\n                                <img src={latprojdetail?.user_data?.organization_detail?.logo} width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" />\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 col-lg-4 mt-3 mt-lg-0'>\r\n                        <div className='progress_nft_main'>\r\n                            <div >\r\n                                <div className=\"progress_nft mb-3\">\r\n                                    <div className='progress_main'><span>\r\n                                        <span className='nft_price'>${Number(projdetail.project_count) * Number(matic['matic-network']?.cad)} raised of ${Number(projdetail.price) * Number(Math.round(matic['matic-network']?.cad))} Cdn </span>\r\n                                        <div>\r\n                                            <span className='nft_price'>({projdetail.project_count} of {projdetail.price} MATIC )</span>\r\n                                        </div>\r\n                                        <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" now={projdetail.project_percentage} />\r\n                                        </div>\r\n                                        <p className='donation-count'>${projdetail.project_count} Cdn RAISED</p>\r\n                                    </span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-start\">\r\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Invest\r\n                                        </Button>\r\n                                        </a>\r\n                                        {projdetail?.nft_data && projdetail?.nft_data && projdetail?.nft_data.length > 0 && projdetail?.nft_data[0]?.is_mint == 0 ? (\r\n                                            <Button className=\" btn  btn-bordered-white m-0 ml-2\" variant=\"primary\" onClick={() => Swal.fire(\r\n                                                'Please mint your NFTs',\r\n                                            )}>\r\n                                                Share\r\n                                            </Button>\r\n                                        ) : (\r\n                                            <>\r\n                                                <Button className=\" btn  btn-bordered-white m-0 mr-2\" onClick={() => setModalShowrefer(true)} variant=\"primary\">\r\n                                                    Share\r\n                                                </Button>\r\n                                                <ReferalPopup\r\n                                                    id={slug}\r\n                                                    userRef={userDetail}\r\n                                                    show={modalShowrefer}\r\n                                                    onHide={() => setModalShowrefer(false)} />\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                    {projdetail?.user_invest && projdetail?.user_invest?.length ?\r\n                                        [...new Map(projdetail?.user_invest?.slice(0, 3)?.map(item =>\r\n                                            [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                                // {projdetail.user_invest?.slice(0, 3)?.map((items) => {\r\n                                                const date1 = new Date(item.updated_at)\r\n                                                const date2 = new Date()\r\n                                                const time_difference = date2.getTime() - date1.getTime();\r\n                                                const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                console.log('days', days_difference)\r\n                                                return (\r\n                                                    <ul className=\"m-0 custom_lis pl-0\">\r\n                                                        <li>\r\n                                                            <div className='lorem_done p-0'>\r\n                                                                <span>\r\n                                                                    <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                    </svg>\r\n                                                                </span>\r\n                                                                <span><div className=\"progress_name\">{item.username} </div> <div>${item.price} Cdn / 40 MATIC ({days_difference} days ago)</div></span>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                )\r\n                                            }) :\r\n                                        <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\r\n                                            <span className='allproj2  w-100'>\r\n                                                No user has invested yet\r\n                                            </span>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 col-lg-8 mt-4'>\r\n                        <div class=\"user-description\">\r\n                            <h5 className='user_title justify-content-between'>\r\n                                <div className='d-flex align-items-center gap-5'> <div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div></div>\r\n                                <div >\r\n                                    <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                        setModalShowDes(true)}></i>\r\n                                    <DesPopup\r\n                                        id={slug}\r\n                                        show={modalShowDes}\r\n                                        onHide={() => setModalShowDes(false)} />\r\n                                </div>\r\n                            </h5>\r\n                            <ReadMore data={projdetail.description} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 col-lg-4 mt-4'>\r\n                        <div className='container table-main-detail position-relative'>\r\n                            <ProjdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-12 mt-4'>\r\n                    <div className='container table-detail'>\r\n                        <LatNftdataTable\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mt-4\">\r\n                    <div className='nfts_main' id='invest'>\r\n                        <div className='intro row m-0 p-0'>\r\n                            <div className=\"intro-content\">\r\n                                <span >NFTs</span>\r\n                                <h3 className=\"w-full mb-0 pt-4\">NFTs</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row items mt-0 explore-items px-0\">\r\n                            {projdetail.number_of_nft != projdetail?.nft_data?.length && (\r\n                                <div className='col-12 col-sm-6 col-lg-3 item explore-item'>\r\n                                    <div className='card no-hover m-0 add-nft '>\r\n                                        <div class=\"image-over relative\">\r\n                                            <Link to={`/addnft/${projdetail.slug}?projectid=${projdetail.id}`}>\r\n                                                + Add NFT </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            {projdetail?.nft_data?.map((x, idx) => {\r\n                                return (\r\n                                    <div key={`eds_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item \">\r\n                                        <div className=\"card no-hover m-0\">\r\n                                            <div className=\"image-over relative\">\r\n                                                {x.user_id == projdetail.user_id ? (\r\n                                                    <>\r\n                                                        <Link to={`/nft/details/${x.slug}?project=${slug}`}>\r\n                                                            {x.extention === 'Player' || x.extention === 'modal' ? (\r\n                                                                <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\r\n                                                            ) : (\r\n                                                                <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                            )}\r\n                                                        </Link>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Link to={`/nft/details/${x.slug}?project=${slug}`}>\r\n                                                        {x.extention === 'Player' || x.extention === 'modal' ? (\r\n                                                            <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\r\n                                                        ) : (\r\n                                                            <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                        )}\r\n                                                    </Link>\r\n                                                )}\r\n                                                <div className='token'>\r\n                                                    <span>#{x?.token_id}</span>\r\n                                                    <span className='cards-icons'>\r\n                                                        {x.is_mint == 0 &&\r\n                                                            <Link to={`/nft/details/${x.slug}?project=${slug}`} ><i className=\"fa-solid fa-pen\" /></Link>\r\n                                                        }\r\n                                                    </span>\r\n                                                </div>\r\n                                                {/* Author */}\r\n                                            </div>\r\n                                            {/* Card Caption */}\r\n                                            <div className=\"card-caption px-0 col-12 \">\r\n                                                {/* Card Body */}\r\n                                                <div className=\"card-body\">\r\n                                                    <a href=\"#\" className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <h5 className=\"m-0 pb-2 p-0 text-capitalize\">{x.title.slice(0, 16)}...</h5>\r\n                                                    </a>\r\n                                                    <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\r\n                                                        <span className='align-self-start' dangerouslySetInnerHTML={{ __html: x.description.slice(0, 52) }} />\r\n                                                    </div>\r\n                                                    <div className='mint d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price' >\r\n                                                        {x.is_mint == 0 ? (\r\n                                                            <button className='btn py-2 ml-lg-auto btn-bordered-white'>\r\n                                                                <Link to={`/nft/details/${x.slug}`}>Sell</Link>\r\n                                                            </button>\r\n                                                        ) : (\r\n                                                            <>\r\n                                                                {x.user_id !== projdetail.user_id ? (\r\n                                                                    <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>\r\n                                                                        <a >SOLD OUT</a>\r\n                                                                    </button>\r\n                                                                ) : (\r\n                                                                    <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>\r\n                                                                        <a >Minted</a>\r\n                                                                    </button>\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                        <a> <img className=\"mr-1\" src='../img/image14.png' />{x.amount}</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\nexport default ProjNftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport ProjNftDetails from '../components/Create/projdetails';\r\n\r\nconst ProjNft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ProjNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjNft;","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Collapse } from 'antd';\r\nimport { getBid, NftList, ProjectDetail, ProjectList, UpdateBId } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst NftAuctiondataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { slug } = useParams()\r\n    const [bidstatus, setBidStatus] = useState(\" \")\r\n    console.log('biddst', bidstatus)\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(NftList(props.slug.id))\r\n\r\n    }, [props.slug.id])\r\n\r\n    const acceptHandler = (id) => {\r\n        console.log(\"accept\", id)\r\n        getBid(props)\r\n        dispatch(UpdateBId({ id, status: \"2\" }))\r\n    }\r\n    const rejectHandler = (id) => {\r\n        console.log(\"reject\", id)\r\n        getBid(props)\r\n        dispatch(UpdateBId({ id, status: \"3\" }))\r\n    }\r\n    return (\r\n        <div className='position-relative'>\r\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Latest Bids\" key=\"1\" >\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>User</th>\r\n                                <th>Bid Price</th>\r\n                                <th>Wallet</th>\r\n                                {/* <th>To</th> */}\r\n                                {/* <th>Transaction</th> */}\r\n                                <th>Action</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody className='img_table'>\r\n                            {nftdetail.bids?.map((item) => {\r\n\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>{item.username}</td>\r\n                                        <td>{item.amount}</td>\r\n                                        <td>{item.pay_from?.slice(0, 4)}...{item.pay_from?.slice(35, 44)}</td>\r\n                                        {/* <td>{item.pay_to?.slice(0, 4)}...{item.pay_to?.slice(35, 44)}</td> */}\r\n                                        {/* <td>{item.txd_id?.slice(0, 4)}...{item.txd_id?.slice(35, 44)}</td> */}\r\n                                        <td>\r\n                                            {item.status == 1 ? (\r\n\r\n                                                <><Button type=\"submit\" onClick={() => acceptHandler(item.id)}>Accept</Button>\r\n                                                    <Button type=\"submit\" onClick={() => rejectHandler(item.id)}>Reject</Button></>\r\n                                            ) : (\r\n                                                <a>Confirmed</a>\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                        {/* <div className='nothing col-spam-5' colspan=\"5\">\r\n                            No matching records found\r\n                        </div> */}\r\n                    </Table>\r\n                    {nftdetail?.bids?.length == 0 &&\r\n                        <div className='nothing'>\r\n\r\n                            No matching records found\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftAuctiondataTable","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { set, useForm } from 'react-hook-form';\r\nimport 'antd/dist/antd.css';\r\nimport { Steps } from 'antd';\r\nimport { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined, CheckOutlined } from '@ant-design/icons'\r\nimport { useParams } from 'react-router';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n\r\nfunction NftPopup(props) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const { id } = useParams();\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n\r\n    const description = 'This is a description.';\r\n    function gettxhashAddress() {\r\n        // \r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n    // function getconfirmAddress() {\r\n    //     // \r\n    //     return web3.eth.getTransactionReceipt;\r\n    // }\r\n    // useEffect(() => {\r\n    // setTxhash(gettxhashAddress())\r\n    // setConfirm(getconfirmAddress())\r\n    // if (txhas) {\r\n    // setCurrent(1)\r\n    // setCurrent(2)\r\n    // setCurrent(3)\r\n    // }\r\n    // }, [])\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n    })\r\n    // console.log('latprojdetailpop', nftdetail)\r\n    // const mint = () => {\r\n    //     CreateMetaDataAndMint({\r\n    //         _name: nftdetail.title,\r\n    //         _des: nftdetail.description,\r\n    //         _imgBuffer: nftdetail.image\r\n    //     })\r\n    // }\r\n\r\n    const { Step } = Steps;\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Follow steps\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Steps current={props.current} direction='vertical'>\r\n                        <Step title=\"Deploying contract\" description='Uploading of all media assets and metadata to IPFS' />\r\n                        <Step icon={props.current == 0 && <LoadingOutlined type=\"loading\" />} title=\"Mint\" description='Send transaction to create your NFT' />\r\n                        <Step icon={props.current !== 2 ? <LoadingOutlined type=\"loading\" /> : props.current == 2 && <CheckOutlined type=\"finish\" />} title=\"Approve\" description='This transaction is conducted only once per collection' />\r\n\r\n                    </Steps>\r\n\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NftPopup","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, ResellNft, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport JoditEditor from 'jodit-react';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport Web3 from 'web3';\r\nimport React from 'react';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { CreateMetaDataAndMint, UpdateStatus } from '../Wallet/interact';\r\nimport NftPopup from './nftPopup';\r\nimport { useFormData } from '../Create/Context/context';\r\nimport { LogsAction } from '../../redux/Actions/logsAction';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nfunction SellPopup(props) {\r\n    const history = useHistory()\r\n    const [current, setCurrent] = React.useState(0)\r\n    const dispatch = useDispatch()\r\n    const slug = useParams()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const [auctiontype, setAuctionType] = useState(\"\")\r\n    // console.log(\"auction type\", auctiontype)\r\n    const autionTypeChange = (event) => {\r\n\r\n        setAuctionType(event.target.value);\r\n\r\n    }\r\n    const [auctiondata, setAuctiondata] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [startdate, setStartdate] = useState(\"\")\r\n    const [enddate, setEnddate] = useState(\"\")\r\n    const location = useLocation();\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    console.log('nftdetail', nftdetail)\r\n\r\n    const mint = (contractAddress, type, start_date, end_date, price) => {\r\n\r\n        // auctiondata.map((item) => {\r\n        //     setPrice(item.price)\r\n        // })\r\n        CreateMetaDataAndMint({\r\n\r\n            _name: nftdetail.title,\r\n            _des: nftdetail.description,\r\n            _imgBuffer: nftdetail.image,\r\n            contractAddress,\r\n            setCurrent,\r\n            collid: nftdetail?.collection_id,\r\n            nft_file_content: nftdetail?.nft_file_content,\r\n            slug,\r\n            dispatch,\r\n            setModalShow,\r\n\r\n            // auctiondata\r\n            type,\r\n            price,\r\n            start_date,\r\n            end_date,\r\n\r\n        })\r\n    }\r\n\r\n    const deployContract = async (type, start_date, end_date, price) => {\r\n        try {\r\n            if (nftdetail?.collectionData?.contract_id == null) {\r\n\r\n                await window.ethereum.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: web3.utils.toHex('80001') }],\r\n                })\r\n\r\n                // const { address } = await ConnectWallet()\r\n                const address = window?.ethereum?.selectedAddress\r\n                const MyNFTContract = new web3.eth.Contract(NFTContract.abi)\r\n                const gas = await web3.eth.getGasPrice();\r\n                // const gas = 500000\r\n\r\n                MyNFTContract.deploy({\r\n                    data: NFTContract.bytecode,\r\n                    arguments: [nftdetail?.collectionData?.title, nftdetail?.collectionData?.symbol],\r\n                }).send({\r\n                    from: address,\r\n                })\r\n                    .on('error', (error) => {\r\n                        // console.log(error)\r\n                    })\r\n                    .on('transactionHash', (transactionHash) => {\r\n                        // console.log(transactionHash, \"transactionHash\")\r\n                    })\r\n                    .on('receipt', (receipt) => {\r\n                        // receipt will contain deployed contract address\r\n                        // console.log(receipt, \"reciept\")\r\n                    })\r\n                    .on('confirmation', (confNumber, receipt) => {\r\n                        // console.log(receipt.contractAddress, \"confirmRecipet\")\r\n                        if (confNumber == 1) {\r\n                            mint(receipt?.contractAddress)\r\n                            // setContractAdd(receipt?.contractAddress)\r\n                            // UpdateContract(id)\r\n                        }\r\n\r\n                    })\r\n            } else {\r\n                mint(nftdetail?.collectionData?.contract_id, type, start_date, end_date, price)\r\n            }\r\n            return {\r\n                success: true,\r\n                // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n                status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n            }\r\n        } catch (error) {\r\n            // \r\n            dispatch(LogsAction(error))\r\n            alert(\"error\", \"contract not deployed please try again\", \"error\")\r\n            setModalShow(false)\r\n            return {\r\n                success: false,\r\n                status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    console.log('mint', props.ismint)\r\n    const OnSubmit = async (data) => {\r\n\r\n        setModalShow(true)\r\n        const formData = new FormData()\r\n        formData.append(\"nft_id\", props.nftid)\r\n        formData.append(\"type\", data.auctiontype)\r\n        formData.append(\"end_date\", data.end_date)\r\n        formData.append(\"start_date\", data.start_date)\r\n        formData.append(\"price\", data.price)\r\n        {\r\n            props.ismint == 1 ? (\r\n\r\n                dispatch(ResellNft(formData, props))\r\n            ) : (\r\n                await deployContract({ type: data.auctiontype, end_date: data.end_date, start_date: data.start_date, price: data.price })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate());\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div className='d-flex justify-content-between w-full'>\r\n                    <label className='modal-title h4 '>List for sale</label> <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover form-sell\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12 \">\r\n                            <div className=\"form-group\">\r\n                                <div className='mb-3'>Choose a type of sale</div>\r\n\r\n                                <div className=\"form-check form-check-inline mr-2\">\r\n                                    {/* {data.usertype == 2 ? ( */}\r\n                                    <>\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            name=\"radiobutton\"\r\n                                            id=\"1\"\r\n                                            onChange={autionTypeChange}\r\n                                            defaultChecked\r\n                                            value=\"1\"\r\n                                            {...register(\"auctiontype\", { required: true })}\r\n                                            aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\r\n\r\n                                        />\r\n                                        <label className=\"form-check-label mr-2\" htmlFor=\"buy\">Fixed Price</label>\r\n                                    </>\r\n\r\n\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"2\"\r\n\r\n                                        onChange={autionTypeChange}\r\n                                        value=\"2\"\r\n                                        {...register(\"auctiontype\", { required: true })}\r\n\r\n                                        aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\r\n\r\n                                    />\r\n                                        <label className=\"form-check-label\" htmlFor=\"auction\">English Auction</label></>\r\n                                    {/* )} */}\r\n                                </div>\r\n\r\n                                {errors.auctiontype?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Type is required</p>}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                <label>Set Price in MATIC</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>} */}\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">price is required</p>}\r\n\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <>\r\n                            <label className='col-12 my-3'>Set Duration </label>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        // placeholder='dd-mm-yy'\r\n                                        // hidden={data.type == 1}\r\n                                        defaultValue={defaultValue}\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // value={defaultValue}\r\n                                        min={disablePastDate()}\r\n\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                    // aria-invalid={errors.start_date ? \"true\" : \"false\"} \r\n                                    />\r\n                                    {/* {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        min={disablePastDate()}\r\n                                        defaultValue={defaultValue1}\r\n                                        // value={defaultValue1}\r\n                                        {...register(\"end_date\")}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    <div >\r\n\r\n                                    </div>\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div>\r\n                            {auctiontype == 1 ? (\r\n\r\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days after which the listing may expire and be removed</span>\r\n                            ) : (\r\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days</span>\r\n                            )}\r\n                        </>\r\n                        <div className='w-full text-center'>\r\n                            {props.ismint == 1 ? (\r\n                                <button type=\"submit\" className=\" mb-0 btn btn-bordered-white\" style={{ color: '#FFF' }}\r\n                                >Sell</button>\r\n                            ) : (\r\n                                <>\r\n\r\n                                    <button type=\"submit\" className=\" mb-0 btn btn-bordered-white\" style={{ color: '#FFF' }}\r\n                                        id=\"nftdetail.id\">Mint</button><NftPopup\r\n                                        show={modalShow}\r\n                                        current={current}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </>\r\n\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default SellPopup","import { Button, Form, Input, } from 'antd';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\n\r\nimport swal from 'sweetalert';\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\nconst EditNftName = (props) => {\r\n    // debugger\r\n    const editor = useRef(null);\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n    const [form] = Form.useForm()\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props?.nft_id?.id))\r\n    }, [props?.nft_id?.id])\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    const handleUpload = (e) => {\r\n        const filetype = e.target.files[0].type;\r\n        var fr = new FileReader();\r\n        fr.onload = function () {\r\n            var img = new Image();\r\n            img.onload = function () {\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n                    setNFtFileType(\"modal\");\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n        }\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n        })\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n    }, [form, nftdetail])\r\n    const onFinish = async (values) => {\r\n        // debugger\r\n        try {\r\n            setLoading(true)\r\n            if (source) {\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n                const formData = new FormData()\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n                formData.append('collection_id', nft_collection_id)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"main-create\" >\r\n            {/* {loading ? (\r\n                <Loader />\r\n            ) : ( */}\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            // centered\r\n            >\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Update NFT\r\n                    </Modal.Title>\r\n                    <div>\r\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='col-12 item-form card no-hover'>\r\n                        <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                            nfts: nfts, defaultValues\r\n                        }}\r\n                            onFinish={(event) => onFinish(event)}\r\n                            autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                            <Form.List name=\"nfts\">\r\n                                {(fields, { add, remove }) => (\r\n                                    <>\r\n                                        <>\r\n                                            {fields.map(({ key, name, ...restField }, index) => (\r\n                                                <Fragment>\r\n                                                    <div className=\"row relative\">\r\n                                                        <div className=\"col-12\">\r\n                                                            <label>Name</label>\r\n                                                            <div>\r\n                                                                <Form.Item\r\n                                                                    {...restField}\r\n                                                                    name={[name, \"nft_name\"]}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Missing  name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    {/* <label>Name</label> */}\r\n                                                                    <Input placeholder=\"Name\" />\r\n                                                                </Form.Item>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Fragment>\r\n                                            ))}\r\n                                        </></>\r\n                                )}\r\n                            </Form.List>\r\n                            <Form.Item>\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                </div>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            {/* )} */}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftName;","import { Button, Form, Input, } from 'antd';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport swal from 'sweetalert';\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\nconst EditNftDesc = (props) => {\r\n    // debugger\r\n    const editor = useRef(null);\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n    const [form] = Form.useForm()\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id?.id))\r\n    }, [props.nft_id?.id])\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    const handleUpload = (e) => {\r\n        const filetype = e.target.files[0].type;\r\n        var fr = new FileReader();\r\n        fr.onload = function () {\r\n            var img = new Image();\r\n            img.onload = function () {\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n                    setNFtFileType(\"modal\");\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n        }\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n        })\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n    }, [form, nftdetail])\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n            if (source) {\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n                const formData = new FormData()\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n                formData.append('collection_id', nft_collection_id)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"main-create\" >\r\n            {/* {loading ? (\r\n                <Loader />\r\n            ) : ( */}\r\n            <Modal className=\"edit_nft_popup\"\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n            // centered\r\n            >\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter \">\r\n                        Update NFT\r\n                    </Modal.Title>\r\n                    <div>\r\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='col-12'>\r\n                        <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                            nfts: nfts, defaultValues\r\n                        }}\r\n                            onFinish={(event) => onFinish(event)}\r\n                            autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                            <Form.List name=\"nfts\">\r\n                                {(fields, { add, remove }) => (\r\n                                    <>\r\n                                        <>\r\n                                            {fields.map(({ key, name, ...restField }, index) => (\r\n                                                <Fragment>\r\n                                                    <div className=\"row relative\">\r\n                                                        <div className=\"col-12\">\r\n                                                            <label>Name</label>\r\n                                                            <label>Description</label>\r\n                                                            <div>\r\n                                                                <Form.Item\r\n                                                                    {...restField}\r\n                                                                    name={[name, \"nft_description\"]}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Missing  description',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <JoditEditor\r\n                                                                        ref={editor}\r\n                                                                        value={'nft_description'}\r\n                                                                        placeholder=\"start typing\"\r\n                                                                        tabIndex={1} // tabIndex of textarea\r\n                                                                        onChange={newContent => { }}\r\n                                                                    />\r\n                                                                    {/* }} */}\r\n                                                                    {/* /> */}\r\n                                                                </Form.Item>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Fragment>\r\n                                            ))}\r\n                                        </></>\r\n                                )}\r\n                            </Form.List>\r\n                            <Form.Item>\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                </div>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            {/* )} */}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftDesc;","import { Button, Form, Input, } from 'antd';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\nconst EditNftImage = (props) => {\r\n    const editor = useRef(null);\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n    const [nft, setNft] = useState([])\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [size, setSize] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    const [form] = Form.useForm()\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id?.id))\r\n    }, [props.nft_id?.id])\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    const handleUpload = (e) => {\r\n        const filetype = e.target.files[0].type;\r\n        var fr = new FileReader();\r\n        fr.onload = function () {\r\n            var img = new Image();\r\n            img.onload = function () {\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(prevState => {\r\n                return [\r\n                    e?.target?.files[0]\r\n                ]\r\n            }\r\n            );;\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n                    setNFtFileType(\"modal\");\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n        }\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n        })\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n    }, [form, nftdetail])\r\n    const onFinish = async (values) => {\r\n        // debugger\r\n        try {\r\n            setLoading(true)\r\n            if (source) {\r\n                // const nftImagepromises = uploadNFT(nft)\r\n                const imagesRes = await uploadNFT(nft, dispatch)\r\n                const addedImage = imagesRes?.data?.data.map(x => ipfsBaseUrl + x?.image_hash)\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n                // debugger\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n                    // setLoading(false)\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n                // debugger\r\n                const formData = new FormData()\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n                formData.append('collection_id', nft_collection_id)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            swal(\"error\", error, 'error')\r\n            setLoading(false)\r\n        }\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"main-create\">\r\n            <Modal className=\"edit_nft_popup\"\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n            // centered\r\n            >\r\n                <><Modal.Header>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter h-auto\">\r\n                        Update NFT\r\n                    </Modal.Title>\r\n                    <div>\r\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                    </div>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"col-12\">\r\n                            {loading ? (\r\n                                <Loader />\r\n                            ) : (\r\n                                <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                    nfts: nfts, defaultValues\r\n                                }}\r\n                                    onFinish={(event) => onFinish(event)}\r\n                                    autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                    <Form.List name=\"nfts\">\r\n                                        {(fields, { add, remove }) => (\r\n                                            <>\r\n                                                <>\r\n                                                    {fields.map(({ key, name, ...restField }, index) => (\r\n                                                        <Fragment>\r\n                                                            <div className=\"row relative \">\r\n                                                                <div className=\"col-12\">\r\n                                                                    <div className=\"col-lg-12 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                        <label className=\"mt-3\">Upload NFT</label>\r\n                                                                        <div\r\n                                                                            className=\"position-relative upload_nft\"\r\n                                                                            style={{\r\n                                                                                backgroundImage: \"url('')\",\r\n                                                                                backgroundSize: \"contain\",\r\n                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                margin: \"0 auto\",\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <div\r\n                                                                                className={nftFileType === \"Player\" || nftFileType === \"modal\"\r\n                                                                                    ? \" inputdragVedio\"\r\n                                                                                    : \"inputtdrag\"}\r\n                                                                            >\r\n                                                                                <input\r\n                                                                                    type=\"file\"\r\n                                                                                    onChange={handleUpload}\r\n                                                                                    maxCount={1}\r\n                                                                                    accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\" />\r\n                                                                                {(nftFileType === \"Image\") &&\r\n                                                                                    <div>\r\n                                                                                        {source ?\r\n                                                                                            nftHeight >= 500 && nftwidth >= 500 ?\r\n                                                                                                (\r\n                                                                                                    <img\r\n                                                                                                        src={source}\r\n                                                                                                        className=\"nft-image\" />\r\n                                                                                                ) : (\r\n                                                                                                    <>\r\n                                                                                                        <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                            Minimum size should be 500x500\r\n                                                                                                        </p>\r\n                                                                                                        <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                            Image size should be max 1mb\r\n                                                                                                        </p>\r\n                                                                                                    </>\r\n                                                                                                ) : (\r\n                                                                                                <img\r\n                                                                                                    src={image}\r\n                                                                                                    className=\"nft-image\" />\r\n                                                                                            )}\r\n                                                                                    </div>}\r\n                                                                                {nftFileType === \"Player\" &&\r\n                                                                                    <div>\r\n                                                                                        {source ? (\r\n                                                                                            <video\r\n                                                                                                width=\"100%\"\r\n                                                                                                controls\r\n                                                                                                src={source} />\r\n                                                                                        ) : (\r\n                                                                                            <video\r\n                                                                                                width=\"100%\"\r\n                                                                                                controls\r\n                                                                                                src={image} />\r\n                                                                                        )}\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p>\r\n                                                                                                Because you’ve included\r\n                                                                                                multimedia, you’ll need to provide\r\n                                                                                                an image (PNG, JPG, or GIF) for\r\n                                                                                                the card display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage: \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={previewChange} />\r\n                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                {!preview ? (\r\n                                                                                                    <img\r\n                                                                                                        className=\"preview_image\"\r\n                                                                                                        src={previewnft} />\r\n                                                                                                ) : (\r\n                                                                                                    <img\r\n                                                                                                        className=\"preview_image\"\r\n                                                                                                        src={preview} />\r\n                                                                                                )}\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>}\r\n                                                                                {nftFileType === \"modal\" &&\r\n                                                                                    <div>\r\n                                                                                        {!source ? (\r\n                                                                                            <DModal\r\n                                                                                                vdo={image} />\r\n                                                                                        ) : (\r\n                                                                                            <DModal\r\n                                                                                                vdo={source} />\r\n                                                                                        )}\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p className=\"\">\r\n                                                                                                Because you’ve included multimedia,\r\n                                                                                                you’ll need to provide an image\r\n                                                                                                (PNG, JPG, or GIF) for the card\r\n                                                                                                display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage: \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={previewChange} />\r\n                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                {!preview ? (\r\n                                                                                                    <img\r\n                                                                                                        className=\"preview_image\"\r\n                                                                                                        src={previewnft} />\r\n                                                                                                ) : (\r\n                                                                                                    <img\r\n                                                                                                        className=\"preview_image\"\r\n                                                                                                        src={preview} />\r\n                                                                                                )}\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                    ))}\r\n                                                </></>\r\n                                        )}\r\n                                    </Form.List>\r\n                                    <Form.Item>\r\n                                        <div className=\"col-12\">\r\n                                            <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                        </div>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            )}\r\n                        </div>\r\n                    </Modal.Body>\r\n                </>\r\n            </Modal>\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftImage;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport { NftList, ProjectDetail, } from '../../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\nimport Web3 from 'web3';\r\n\r\nimport DModal from '../Create/3dModal';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport NftAuctiondataTable from './nftAuctiontable';\r\nimport SellPopup from './sellPopup';\r\nimport EditNftName from '../Create/editNftNamepopup';\r\nimport EditNftDesc from '../Create/editDescPopup';\r\nimport EditNftImage from '../Create/nftImageeditPopup';\r\nimport { GetMatic } from './GetMAtic';\r\nimport Loader from '../Loader/loader';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst NftDetails = (props) => {\r\n    const history = useHistory()\r\n    const [nftId, setNftID] = useState();\r\n    const search = useLocation().search;\r\n    const projslug = new URLSearchParams(search).get('project');\r\n    const [sellmodalShow, setSellModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [modalShoweditdes, setModalShoweditdes] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [modalShoweditimg, setModalShoweditimg] = React.useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const slug = useParams();\r\n    const projdetail = useSelector(state => {\r\n\r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'projdataaaa')\r\n    const dispatch = useDispatch()\r\n\r\n    const nftdetail = useSelector(state => {\r\n\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(NftList(slug.id, setLoading))\r\n        dispatch(ProjectDetail(slug.id))\r\n    }, [slug, dispatch])\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <div className=\"item-info\">\r\n                            {nftdetail.is_mint == 0 &&\r\n                                <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                                    <div >\r\n                                        <div className='position-absolute nft-edit-icon'><i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditimg(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        </div>\r\n                                        <div className='loader-img'>\r\n\r\n                                            {modalShoweditimg &&\r\n\r\n                                                <EditNftImage\r\n                                                    id={projslug}\r\n                                                    nft_id={nftId}\r\n                                                    show={modalShoweditimg}\r\n                                                    onHide={() => setModalShoweditimg(false)}\r\n\r\n                                                />\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            }\r\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n                                {loading ? (\r\n                                    <Loader />\r\n                                ) : (\r\n                                    <>\r\n                                        {nftdetail.extention === \"Player\" &&\r\n\r\n                                            <video\r\n                                                width=\"100%\"\r\n                                                controls\r\n                                                src={nftdetail.image}\r\n                                            />\r\n                                        }\r\n                                        {nftdetail.extention === \"modal\" &&\r\n                                            <DModal\r\n                                                vdo={nftdetail.image}\r\n                                            />\r\n                                        }\r\n                                        {nftdetail.extention === \"Image\" &&\r\n\r\n                                            <img src={nftdetail.image} alt=\"\" />\r\n                                        }\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-sm-0\">\r\n                        <div className=' card no-hover py-0 mt-2 mb-2 mt-lg-0 mb-lg-0 '>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{nftdetail?.title} </span>\r\n                            {nftdetail.is_mint == 0 &&\r\n                                <div className='nft-edit-icon position-absolute mt-2'>\r\n                                    <i className=\"fa-solid fa-pen \" onClick={(e) => {\r\n                                        setNftID(slug)\r\n                                        e.preventDefault();\r\n                                        setModalShowedit(true)\r\n                                    }\r\n                                    } ></i>\r\n                                    {modalShowedit &&\r\n\r\n                                        <EditNftName\r\n                                            id={projslug}\r\n                                            nft_id={nftId}\r\n                                            show={modalShowedit}\r\n                                            onHide={() => setModalShowedit(false)} />\r\n                                    }\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div className=\"content sm:mt-3 mt-lg-2\">\r\n                            <div className=\"card no-hover position-relative\">\r\n\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{nftdetail?.user_data?.username}</span>\r\n\r\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {nftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{nftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                {nftdetail.is_mint == 0 ? (\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            onClick={() => setSellModalShow(true)}>  Sell</button>\r\n                                            <SellPopup\r\n                                                show={sellmodalShow}\r\n\r\n                                                onHide={() => setSellModalShow(false)} />\r\n                                        </>\r\n\r\n                                    </div>\r\n                                ) : (\r\n                                    <>\r\n                                        {nftdetail.sold_nft == 1 ? (\r\n\r\n                                            <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                    disabled>SOLD OUT</span>\r\n\r\n                                                </>\r\n\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                    disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                                </>\r\n\r\n                                            </div>\r\n                                        )}\r\n                                    </>\r\n\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 md:col-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                                {nftdetail?.is_mint == 0 &&\r\n                                    <div className='nft-edit-icon position-absolute mt-2'>\r\n                                        <i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditdes(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        {modalShoweditdes &&\r\n\r\n                                            <EditNftDesc\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditdes}\r\n                                                onHide={() => setModalShoweditdes(false)} />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft \" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4'>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <img src='../../img/image14.png' />\r\n                                    <span><small>{nftdetail.amount}  / ${nftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-8 col-12'>\r\n                        <div className=\"profile_detail mt-4\">\r\n\r\n                            <NftdataTable\r\n                                slug={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='container table-detail'>\r\n\r\n                            <NftAuctiondataTable\r\n                                slug={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div >\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\nexport default NftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport NftDetails from '../components/ItemDetails/nftDetails';\r\n\r\nconst Nft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <NftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nft;","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { Table } from 'react-bootstrap';\r\nconst FunddataTable = (props) => {\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [expandIconPosition] = useState('end');\r\n\r\n    // const { id } = useParams()\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\"/><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\"/></svg>    */}\r\n\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive>\r\n                        <tbody class=\"nfts_details\">\r\n                            <tr>\r\n                                <td><span>Organization Name </span> <span>{funddetail?.organization_detail?.organization_name}</span></td>\r\n                                <td><span>Country</span>  <span>{funddetail?.organization_detail?.country}</span></td>\r\n                                <td><span>Tax Number </span> <span>{funddetail?.organization_detail?.tax_number}</span></td>\r\n                                <td><span>Web URL</span>  <span>{funddetail?.organization_detail?.web_url}</span></td>\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default FunddataTable","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from './fundraiserdetail';\r\nimport FundTransdataTable from './fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\nimport { Button } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst FundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const id = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n    console.log('userdettt', userDetail)\r\n    const log = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(fundprojdetail.user_data, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    const investHandler = () => {\r\n\r\n        if (!window.ethereum?.selectedAddress) {\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html:\r\n                    'Connect Wallet to Invest',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <section className=\"item-details-area fundraise-main\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src=\"/img/ph.jpg\" /> */}\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done mt-3'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n                            {/* <img src={funddetail?.user_data?.avatar} width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" /> */}\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n\r\n                        <div className=\"progress_nft mobile_nft mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                            </div>\r\n\r\n\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length ?\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        }) :\r\n                                    <div className=\"col-12 col-sm-12 col-lg-12\">\r\n\r\n                                        <span className='allproj2'>\r\n                                            No Projects\r\n                                        </span>\r\n\r\n                                    </div>\r\n                                }\r\n                            </ul>\r\n                            <Link className=\"\" to=\"/all/LatestProjects\"><p className='see_all'>See all</p></Link>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className='custam_col mt-3 mt-lg-0'>\r\n                            <h5 class=\"user_title \">\r\n\r\n                                <div className='d-flex align-item-center gap-5'>\r\n                                    <svg className='' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg>\r\n\r\n                                    <div>Description</div>\r\n\r\n                                </div>\r\n                            </h5>\r\n\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='funddeatil mt-3 '>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-4 desktop_nft\">\r\n                        <div className=\"progress_nft  mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"100%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                                {/* <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" />\r\n                                            <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                        </div> */}\r\n\r\n                                {/* <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                    </div> */}\r\n\r\n                            </div>\r\n\r\n                            <div className=\"d-flex gap-5 flex-wrap justify-content-start\">\r\n\r\n                                <div>\r\n\r\n                                    <Button variant=\"primary\" onClick={() => investHandler()} className=\" btn  btn-bordered-white m-0 mr-2\">\r\n                                        Invest\r\n                                    </Button>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length &&\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        })}\r\n                            </ul>\r\n                            <Link className=\"\" to={`/all/fundraise/projects/${user_id}`}><p className='see_all'>See all</p></Link>\r\n                        </div>\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            {/* <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        \r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div> */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=''>\r\n                    {/* <div className='col-7'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div> */}\r\n                    <div className='col-12 mt-3 mb-3'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default FundraiserDetail;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport FundraiserDetail from '../components/TopSeller/fundraiserDetails';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\n\r\nconst FundDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main main-fund-detail\">\r\n\r\n            <Header />\r\n            <FundraiserDetail />\r\n            <Fundraiser />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default FundDetail;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getnftwoldetails\r\n    })\r\n    console.log('lattt', latprojnftdetail.nft_history)\r\n    useEffect(() => {\r\n        dispatch(GetNftwol(props.id))\r\n    }, [props.id])\r\n    const location = useLocation()\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n                            <tr >\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {latprojnftdetail?.nft_history?.map((items) => {\r\n                                return (\r\n                                    <tr className='contract-address'>\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/tx/${items?.txd_id}`} >{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</a></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    <div className='nothing'>\r\n                        {latprojnftdetail?.nft_history?.length == 0 &&\r\n                            <span> No matching records found</span>\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default NftTransdataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nconst { CONTRACT_ADDRESS_URL } = process.env;\r\nconst LatNftDataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     debugger\r\n    //     dispatch(NftList(id))\r\n    // }, [id])\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getnftwoldetails\r\n    })\r\n    console.log(latprojnftdetail, 'laptnft')\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n\r\n                        <thead>\r\n\r\n                            <tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr>\r\n                            <tr className='contract-address'>\r\n                                <th>Contract ID</th>\r\n                                <td> <a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${latprojnftdetail?.collectionData?.contract_id}`} >{latprojnftdetail?.collectionData?.contract_id?.slice(0, 5)}.....{latprojnftdetail?.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                {/* <td>{latprojnftdetail?.collectionData?.contract_id}</td> */}\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Token ID</th>\r\n                                <td>{latprojnftdetail?.token_id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Token Stranded</th>\r\n                                <td>ERC721</td>\r\n                            </tr>\r\n\r\n                            {/* <tr>\r\n\r\n                                <th>Contract Address</th>\r\n                                <th>Token ID</th>\r\n                                <th>Token Stranded</th>\r\n                                <th>Blockchain</th>\r\n                            </tr> */}\r\n\r\n\r\n                        </thead>\r\n\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftDataTable","import Modal from 'react-bootstrap/Modal';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BidNft } from '../Wallet/interact';\r\nfunction BidPopup(props) {\r\n    // debugger\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const onSubmit = () => {\r\n        // debugger\r\n        BidNft(props.id, props.projid, props.from, props.onHide)\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div>\r\n                    <div className='modal-title h4 '>Place a bid</div>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 pb-2\">\r\n                            <label>You are about to place a bid for {props.projtitle?.toUpperCase()} from {props.projcoll?.toUpperCase()}.</label>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <label>Wallet address:</label>\r\n                            <div class=\"bidinput\">{window.ethereum?.selectedAddress}</div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Your bid</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    placeholder='Enter bid'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Place Your Bid </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\nexport default BidPopup","\r\nimport React, { useEffect } from \"react\";\r\nconst Timer = (props) => {\r\n    const [days, setDays] = React.useState(0);\r\n    const [hours, setHours] = React.useState(0);\r\n    const [minutes, setMinutes] = React.useState(0);\r\n    const [seconds, setSeconds] = React.useState(0);\r\n\r\n    const deadline = \"2023-03-05 00:00:00\"\r\n    const getTime = () => {\r\n        const time = Date.parse(`${props.time}`) - Date.now();\r\n        setDays(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n        setHours(Math.floor((time / (1000 * 60 * 60)) % 24));\r\n        setMinutes(Math.floor((time / 1000 / 60) % 60));\r\n        setSeconds(Math.floor((time / 1000) % 60));\r\n    };\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => getTime(`${props.time}`), 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {days == 0 &&\r\n                <div className=\"timer\" role=\"timer\">\r\n                    {`${minutes}`.includes('-') ? (\r\n                        <div className=\"col-12\">\r\n                            <div className=\"box main-box_count\">\r\n                                <span className=\"box-count\">Sale Ended</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"col-12\">\r\n                            <div className=\"box main-box_count\">\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"day\">{`${days}`}</span>\r\n                                    <span className=\"text\">DAYS</span>\r\n                                </span>\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"hour\">{`${hours}`}</span>\r\n                                    <span className=\"text\">HRS</span>\r\n                                </span>\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"minute\">{`${minutes}`}</span>\r\n                                    <span className=\"text\">MINS</span>\r\n                                </span>\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"second\">{`${seconds}`}</span>\r\n                                    <span className=\"text\">SECS</span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default Timer","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport Loader from '../Loader/loader';\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction BuyPopup(props) {\r\n    const location = useLocation();\r\n    const [copy, setCopy] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            className=\"loading\"\r\n        >\r\n            {props.loading &&\r\n                <><Loader />\r\n                    <div className=\"form-group m-0\">\r\n                        <span>Processing...</span>\r\n                    </div>\r\n                </>\r\n            }\r\n        </Modal>\r\n    );\r\n}\r\nexport default BuyPopup","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { GetNftwol, GetSettings } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft } from '../Wallet/interact';\r\nimport { updateReffid } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport NftTransdataTable from './nftTRansTable';\r\nimport LatNftDataTable from '../Explore/latnftTable';\r\nimport BidPopup from './bidPopup';\r\nimport DModal from '../Create/3dModal';\r\nimport Timer from './timer';\r\nimport BuyPopup from './buyPopup';\r\nimport { GetMatic } from './../ItemDetails/GetMAtic';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport { Spin } from 'antd';\r\nimport swal from 'sweetalert';\r\nimport { Loader } from '@react-three/drei';\r\n\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst LatprojNftDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const search = useLocation().search;\r\n    const refid = new URLSearchParams(search).get('refid');\r\n    const [matic, setMatic] = useState('')\r\n    const [bidmodalShow, setBidModalShow] = React.useState(false);\r\n    const [buymodalShow, setBuyModalShow] = React.useState(false);\r\n\r\n    const id = useParams();\r\n\r\n    const latprojnftdetail = useSelector(state => {\r\n        return state.projectdetails.getnftwoldetails\r\n    })\r\n\r\n    const getSett = useSelector(state => {\r\n        return state.projectdetails.settings\r\n    })\r\n\r\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetUserAction())\r\n        dispatch(GetNftwol(id))\r\n        dispatch(GetSettings())\r\n    }, [id])\r\n\r\n\r\n    const buyHandler = () => {\r\n\r\n        BuyNft({\r\n            contractAddress: latprojnftdetail?.collectionData?.contract_id,\r\n            tokenId: latprojnftdetail.token_id,\r\n            payFrom: latprojnftdetail.pay_from,\r\n            values: latprojnftdetail?.type == 2 ? latprojnftdetail?.bids[0]?.amount : setValue?.value,\r\n            sellingCount: latprojnftdetail.selling_count,\r\n            platformFee: ([latprojnftdetail.payment_flow?.karmatica_fee]),\r\n            ownerFee: ([latprojnftdetail.payment_flow?.project_data?.fees]),\r\n            ownerWallet: ([latprojnftdetail.payment_flow?.project_data?.wallets]),\r\n            flow: ([latprojnftdetail.payment_flow]),\r\n            refid: refid,\r\n            proj_id: latprojnftdetail.project_id,\r\n            nft_id: latprojnftdetail.id,\r\n            loadingg: setLoading,\r\n            modal: setBuyModalShow,\r\n            dispatch\r\n        })\r\n    }\r\n    const reffHandler = async () => {\r\n        await updateReffid({ tokenId: latprojnftdetail.token_id, refid, nft_id: latprojnftdetail.id, dispatch })\r\n        await buyHandler()\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <Spin spinning={loading}>\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row justify-content-between content_project px-0\">\r\n                        <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}  </span>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-4\">\r\n\r\n                            <div className=\"item-info\">\r\n\r\n                                <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n                                    {loading ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <>\r\n                                            {latprojnftdetail.extention === \"Player\" &&\r\n                                                <>\r\n                                                    <video\r\n                                                        width=\"100%\"\r\n                                                        controls\r\n                                                        src={latprojnftdetail.image}\r\n                                                    />\r\n                                                </>\r\n                                            }\r\n                                            {latprojnftdetail.extention === \"modal\" &&\r\n                                                <>\r\n                                                    <DModal\r\n                                                        vdo={latprojnftdetail.image}\r\n\r\n                                                    />\r\n                                                </>\r\n                                            }\r\n                                            {latprojnftdetail.extention === 'Image' &&\r\n                                                <>\r\n\r\n                                                    <img src={latprojnftdetail.image} alt=\"\" />\r\n                                                </>\r\n                                            }\r\n\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n\r\n                                </>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\r\n\r\n                            <div className=\"content \">\r\n                                <div className=\"card no-hover position-relative\">\r\n\r\n                                    <div className=\"owner align-items-start\">\r\n                                        <span className='boldertext w-100'>Owned By : </span>\r\n                                        <span>{latprojnftdetail.owned_by}</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className='boldertext w-100'>Collection Name : </span>\r\n                                        <span> {latprojnftdetail?.collectionData?.title}</span>\r\n                                    </div>\r\n                                    <div className=\"item-info-list\">\r\n                                        <ul className=\"list-unstyled mb-0\">\r\n                                            <span class='boldertext'>Token :</span>\r\n                                            <span> #{latprojnftdetail.token_id}</span>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className='boldertext w-100'>Affiliate first sale royalties : </span>\r\n                                        <span> 30%</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className='boldertext w-100'>NFT creator royalties : </span>\r\n                                        <span> 10%</span>\r\n                                    </div>\r\n                                    <div className='eddlbtton d-flex gap- align-items-center mt-2 justify-content-between'>\r\n\r\n\r\n                                        <div className='eddlbtton flex-wrap d-flex gap-10  align-items-center mt-2'>\r\n                                            {latprojnftdetail.sold_nft == 1 ? (\r\n                                                <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" disabled>SOLD OUT</button>\r\n                                            ) : (\r\n                                                <>\r\n                                                    {latprojnftdetail.user_id === userdet.user_id ? (\r\n                                                        <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n                                                            <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                                disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                                            </>\r\n\r\n                                                        </div>\r\n\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            {latprojnftdetail.type == 1 ? (\r\n                                                                <>\r\n                                                                    {userdet.role == 3 ? (\r\n                                                                        <>\r\n                                                                            <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                                                onClick={() => {\r\n                                                                                    swal(\"warning\", \"To buy this nft you need to change your creator account to buyer \", \"warning\")\r\n                                                                                }}>Buy Now</button>\r\n\r\n                                                                        </>\r\n\r\n                                                                    ) : (\r\n                                                                        <><button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                                            id=\"nftdetail.id\" onClick={() => { reffHandler(); setBuyModalShow(true); setLoading(true); }}>Buy Now</button><BuyPopup\r\n                                                                                show={buymodalShow}\r\n                                                                                loading={loading}\r\n\r\n\r\n                                                                                onHide={() => setBuyModalShow(false)} /></>\r\n                                                                    )}\r\n                                                                </>\r\n                                                            ) : (\r\n                                                                <>\r\n                                                                    {latprojnftdetail?.bid_approved_id === userdet?.user_id ? (\r\n\r\n                                                                        <><button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                                            onClick={() => { buyHandler(); setBuyModalShow(true); setLoading(true) }}>Make Payment</button><BuyPopup\r\n                                                                                show={buymodalShow}\r\n                                                                                loading={loading}\r\n\r\n\r\n                                                                                onHide={() => setBuyModalShow(false)} /></>\r\n                                                                    ) : (\r\n                                                                        <>\r\n                                                                            {userdet.role == 3 ? (\r\n                                                                                <>\r\n                                                                                    <button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                                                        onClick={() => swal(\"warning\", \"To make a bid for this nft you need to change your creator account to buyer \", \"warning\")}>Place Bid</button>\r\n                                                                                </>\r\n                                                                            ) : (\r\n                                                                                <>\r\n                                                                                    <button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                                                        onClick={() => setBidModalShow(true)}>Place Bid</button><BidPopup\r\n\r\n                                                                                        id={latprojnftdetail.id}\r\n                                                                                        projid={latprojnftdetail.project_id}\r\n                                                                                        projtitle={latprojnftdetail.title}\r\n                                                                                        projcoll={latprojnftdetail?.collectionData?.title}\r\n                                                                                        from={userdet.wallet_id}\r\n                                                                                        show={bidmodalShow}\r\n                                                                                        onHide={() => setBidModalShow(false)} /></>\r\n                                                                            )}\r\n                                                                        </>\r\n\r\n                                                                    )}\r\n\r\n                                                                </>\r\n                                                            )}\r\n                                                        </>\r\n                                                    )}\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                        <Timer\r\n                                            time={latprojnftdetail.end_date}\r\n                                        />\r\n                                        <div className='eddlbtton bitbtn d-flex  align-items-center mt-2'>\r\n\r\n                                            <div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-8 mt-4\">\r\n                            <div class=\"user-description \">\r\n                                <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                                </h5>\r\n                                <p dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='col-lg-4 col-12 mt-4 '>\r\n                            <div className='price_nft'>\r\n                                <h5 className='user_title gap-5'>\r\n                                    <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                    <div>Current price</div>\r\n                                </h5>\r\n                                <div className='price_nft_detail'>\r\n                                    <div className='nft-price'>\r\n                                        <img src='../img/image14.png' />\r\n                                        <span><small>{latprojnftdetail.amount}  / ${latprojnftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <div className=\"profile_detail mt-4\">\r\n\r\n                                    <LatNftDataTable\r\n                                    // id={id}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 mt-4'>\r\n                            <div className='funddeatil table-detail '>\r\n                                <NftTransdataTable\r\n                                    id={id}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div >\r\n            </Spin>\r\n\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\nexport default LatprojNftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport LatprojNftDetails from '../components/Auctions/nftBuy';\r\n\r\nconst latnftprojDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LatprojNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default latnftprojDetails;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\nexport default ScrollToTop","import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Upload } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddNftAction, CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport swal from 'sweetalert';\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport DModal from './3dModal';\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\nconst AddNft = ({ current, prev }) => {\r\n    const editor = useRef(null);\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    const [count, setCount] = useState(0);\r\n\r\n    const [nft, setNft] = useState()\r\n    const [size, setSize] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"1\" });\r\n    const [NFtFileExtension, setNFtExtension] = useState()\r\n    const [source, setSource] = useState([])\r\n    const [preview, setPreview] = useState([])\r\n    const [nft_description, setNft_description] = useState([])\r\n    const [sourceType, setSourceType] = useState()\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    const [loading, setLoading] = useState(false)\r\n    const search = useLocation().search;\r\n    const projid = new URLSearchParams(search).get('projectid');\r\n    const handleIncrement = () => {\r\n        setCount(prevCount => prevCount + 1);\r\n    };\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    function onHandleClick(index, item) {\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n    const slug = useParams()\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n        defaultValues\r\n    });\r\n    useEffect(() => {\r\n        register(\"nft_description\");\r\n    }, [register]);\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        return state?.projectdetails?.nftres\r\n    })\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n        setPreview(prevState => {\r\n            prevState[index] = e?.target?.files[0]\r\n            return [...prevState]\r\n        })\r\n    };\r\n    const handleUpload = (e, index) => {\r\n        const filetype = e.target.files[0].type\r\n        setNFtExtension(filetype)\r\n        // debugger\r\n        setNft(e.target.files[0])\r\n        var fr = new FileReader;\r\n        fr.onload = function () { // file is loaded\r\n            var img = new Image;\r\n            img.onload = function () {\r\n                setSize(e.target.files[0].size);\r\n                setNftwidth(img.width)\r\n                setNftheight(img.height)\r\n            };\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        let type = \"Image\"\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert('Filesize must 100mb or below');\r\n        } else {\r\n            switch (filetype) {\r\n                case 'image/png':\r\n                case 'image/jpg':\r\n                case 'image/gif':\r\n                case 'image/svg':\r\n                    type = \"Image\"\r\n                    break;\r\n                case 'audio/mpeg':\r\n                case 'audio/ogg':\r\n                case 'video/mp4':\r\n                case 'video/webm':\r\n                    type = 'Player'\r\n                    break;\r\n                case '':\r\n                    // if (nft?.name?.str.includes(\".glb\")) {\r\n                    type = 'modal'\r\n                    // }\r\n                    break;\r\n                default:\r\n                    type = 'Image'\r\n            }\r\n            // setNFtFileType(type)\r\n            setSource(prevState => {\r\n                // debugger\r\n                prevState[index] = { file: e.target.files[0], type: type }\r\n                setSourceType(type)\r\n                return [...prevState]\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n    // console.log('col', col)\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n    }, []);\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n            const nftImagepromises = values?.nfts?.map(x => uploadNFT(nft))\r\n            const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n            // \r\n            const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n            // \r\n            var str = addedImage;\r\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n            const formData = new FormData()\r\n            if (check === false) {\r\n                formData.append('image', addedImage)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                formData.append('collection_id', coll_id)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                formData.append('preview_imag', Pimage)\r\n                formData.append('extention', sourceType)\r\n                dispatch(AddNftAction(formData, projid, slug, setLoading))\r\n            } else {\r\n                console.log('fail')\r\n                setLoading(false)\r\n                swal('error!', 'Nft not uploaded', 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error, 'error')\r\n        }\r\n    };\r\n    const handleCancel = () => setPreviewOpen(false);\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n        beforeUpload: () => {\r\n            return false;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    const [form] = Form.useForm()\r\n\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n    ];\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n                                <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n                                <div>\r\n                                    {loading ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                                            <Form\r\n                                                form={form}\r\n                                                name=\"dynamic_form_nest_item\"\r\n                                                initialValues={{\r\n                                                    nfts: nfts,\r\n                                                }}\r\n                                                // onSubmit={(event) => handleSubmit(event)}\r\n                                                onFinish={(event) => onFinish(event)}\r\n                                                autoComplete=\"off\"\r\n                                                className=\"item-form card no-hover\"\r\n                                            >\r\n                                                <Form.List name=\"nfts\">\r\n                                                    {(fields, { add, remove }) => (\r\n                                                        <>\r\n                                                            <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                                                <svg\r\n                                                                    width=\"16px\"\r\n                                                                    height=\"16px\"\r\n                                                                    viewBox=\"0 0 24 24\"\r\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                                >\r\n                                                                    <path\r\n                                                                        fill=\"none\"\r\n                                                                        stroke=\"#fff\"\r\n                                                                        stroke-width=\"2\"\r\n                                                                        d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\r\n                                                                        transform=\"matrix(-1 0 0 1 24 0)\"\r\n                                                                    />\r\n                                                                </svg>\r\n                                                                Previous\r\n                                                            </Button>\r\n                                                            <>\r\n                                                                {fields.map(({ key, name, ...restField }, index) => (\r\n                                                                    <Fragment>\r\n                                                                        {/* <div>Artwork {index}</div> */}\r\n                                                                        <div className=\"row relative\">\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label>Name</label>\r\n                                                                                <div>\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_name\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: \"Name is required\",\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <label>Name</label> */}\r\n                                                                                        <Input placeholder=\"Name\" />\r\n                                                                                    </Form.Item>\r\n                                                                                </div>\r\n                                                                                <label>Description</label>\r\n                                                                                <div>\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_description\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: \"Missing  description\",\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n\r\n                                                                                        <JoditEditor\r\n                                                                                            ref={editor}\r\n                                                                                            value={nft_description}\r\n                                                                                            // config={config}\r\n                                                                                            placeholder=\"start typing\"\r\n                                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                                            onBlur={(newContent) =>\r\n                                                                                                setNft_description(newContent)\r\n                                                                                            } // preferred to use only this option to update the content for performance reasons\r\n                                                                                            onChange={(newContent) => { }}\r\n                                                                                        />\r\n\r\n                                                                                    </Form.Item>\r\n                                                                                    {errors.nft_description?.type ===\r\n                                                                                        \"required\" && (\r\n                                                                                            <p style={{ color: \"red\" }} role=\"alert\">\r\n                                                                                                Description is required\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                    {errors.nft_description &&\r\n                                                                                        errors.nft_description.type ===\r\n                                                                                        \"minLength\" && (\r\n                                                                                            <p style={{ color: \"red\" }}>\r\n                                                                                                min length of words is 300\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                                <MinusCircleOutlined\r\n                                                                                    onClick={(e) => {\r\n                                                                                        remove(name);\r\n                                                                                        handleDecrement(e);\r\n                                                                                    }}\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                            {/* </div> */}\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label className=\"mt-2 mb-3\">\r\n                                                                                    Choose Collection\r\n                                                                                </label>\r\n                                                                            </div>\r\n                                                                            {col?.map((item, idx) => (\r\n                                                                                <div\r\n                                                                                    key={`auc_${idx}`}\r\n                                                                                    id={item.id}\r\n                                                                                    className=\"col-md-6 col-lg-3 col-12 choose_div\"\r\n                                                                                >\r\n                                                                                    <div\r\n                                                                                        id={item.id}\r\n                                                                                        onClick={() =>\r\n                                                                                            onHandleClick(index, item.id)\r\n                                                                                        }\r\n                                                                                        className=\"card\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                            border:\r\n                                                                                                nft_collection_id[index] == item.id\r\n                                                                                                    ? \"1px solid #fff\"\r\n                                                                                                    : null,\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <div className=\"card-body\">\r\n                                                                                            <div>{item.title}</div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    {/* </Form.Item> */}\r\n                                                                                </div>\r\n                                                                                // </div>\r\n                                                                            ))}\r\n                                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                                {/* <div className=\"col-24\"> */}\r\n                                                                                <div className=\"form-group\">\r\n                                                                                    <div\r\n                                                                                        className=\"card choose_div\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <div className=\"card-body \">\r\n                                                                                            <Button\r\n                                                                                                variant=\"primary\"\r\n                                                                                                className=\"collection_btn\"\r\n                                                                                                onClick={() => setModalShow(true)}\r\n                                                                                            >\r\n                                                                                                <i className=\"f1a-regular fa-plus\"></i>{\" \"}\r\n                                                                                                Create Collection\r\n                                                                                            </Button>\r\n                                                                                            <MyVerticallyCenteredModal\r\n                                                                                                show={modalShow}\r\n                                                                                                onHide={() => setModalShow(false)}\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                                    <div\r\n                                                                                        className=\"position-relative upload_nft\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage: \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                        }}\r\n                                                                                    >\r\n\r\n                                                                                        <div\r\n                                                                                            className={\r\n                                                                                                source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\r\n                                                                                                    ? \" inputdragVedio\"\r\n                                                                                                    : \"inputtdrag\"\r\n                                                                                            }\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                // onChange={handleUpload}\r\n                                                                                                maxCount={1}\r\n                                                                                                onChange={e => handleUpload(e, index)}\r\n                                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                                            />\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\r\n                                                                                                <div>\r\n                                                                                                    {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\r\n                                                                                                    {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? (\r\n                                                                                                        <img\r\n                                                                                                            src={URL.createObjectURL(source[index].file)}\r\n                                                                                                            className=\"nft-image\"\r\n                                                                                                        />\r\n                                                                                                    ) : (\r\n                                                                                                        <>\r\n                                                                                                            <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                                Minimum size should be 500x500\r\n                                                                                                            </p>\r\n                                                                                                            <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                                Image size should be max 1mb\r\n                                                                                                            </p>\r\n                                                                                                        </>\r\n                                                                                                    )}\r\n\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\r\n                                                                                                <div>\r\n                                                                                                    <video\r\n                                                                                                        // className=\"VideoInput_video\"\r\n                                                                                                        width=\"100%\"\r\n                                                                                                        // height={height}\r\n                                                                                                        controls\r\n                                                                                                        src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                                    // onChange={setSource}\r\n                                                                                                    />\r\n                                                                                                    {/* )} */}\r\n                                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                                        <label>Preview Image</label>\r\n                                                                                                        <p>\r\n                                                                                                            Because you’ve included\r\n                                                                                                            multimedia, you’ll need to provide\r\n                                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                                            the card display of your item\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                    <div\r\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                                        style={{\r\n                                                                                                            backgroundImage:\r\n                                                                                                                \"url('')\",\r\n                                                                                                            backgroundSize: \"contain\",\r\n                                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                                            backgroundPosition: \"center\",\r\n                                                                                                        }}\r\n                                                                                                    >\r\n                                                                                                        <input\r\n                                                                                                            type=\"file\"\r\n                                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                                        // onChange={previewChange}\r\n                                                                                                        />\r\n                                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                                    <img\r\n                                                                                                                        className=\"preview_image\"\r\n                                                                                                                        src={URL.createObjectURL(preview[index])}\r\n                                                                                                                    // onChange={setPimage}\r\n                                                                                                                    />\r\n                                                                                                                )}\r\n                                                                                                            </div>\r\n                                                                                                        }\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\r\n                                                                                                <div>\r\n                                                                                                    <DModal\r\n                                                                                                        vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                                    // mdl={setModal}\r\n                                                                                                    />\r\n                                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                                        <label>Preview Image</label>\r\n                                                                                                        <p className=\"\">\r\n                                                                                                            Because you’ve included multimedia,\r\n                                                                                                            you’ll need to provide an image\r\n                                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                                            display of your item\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                    <div\r\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                                        style={{\r\n                                                                                                            backgroundImage:\r\n                                                                                                                \"url('')\",\r\n                                                                                                            backgroundSize: \"contain\",\r\n                                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                                            backgroundPosition: \"center\",\r\n                                                                                                        }}\r\n                                                                                                    >\r\n                                                                                                        <input\r\n                                                                                                            type=\"file\"\r\n                                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                                        />\r\n                                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                                    <img\r\n                                                                                                                        className=\"preview_image\"\r\n                                                                                                                        src={URL.createObjectURL(preview[index])} />\r\n                                                                                                                )}\r\n                                                                                                            </div>\r\n                                                                                                        }\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            )}\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n                                                                ))}\r\n                                                            </>\r\n                                                        </>\r\n                                                    )}\r\n                                                </Form.List>\r\n                                                <Form.Item>\r\n                                                    <div className=\"col-12\">\r\n                                                        <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\r\n                                                            Add\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </Form.Item>\r\n                                            </Form>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\nexport default AddNft;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\n\r\nimport AddNft from '../components/Create/addNft';\r\n\r\nconst AddNFT = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AddNft />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddNFT;","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ReadMore from '../../readMore';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport FundDetail from '../../themes/fund-detail';\r\nimport latprojDetails from '../../themes/latproj-details';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllFundraise = () => {\r\n\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    <h3 className=\"mt-3 mb-0\">All Fundraiser's</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {/* {fund && fund.length ?\r\n                                [...new Map(fund.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\r\n                            {fund?.map((item, idx) => {\r\n\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} to={`/fundraiser/detail/${item.user_id}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <div className=\"card project_cards position-relative \">\r\n                                                {/* matic */}\r\n                                                {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span className='matics'>{item.amount} MATIC</span>\r\n                                                  \r\n                                                </div> */}\r\n                                                <div className=\"image-over position-relative \">\r\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                    <img className=\"card-img-top\" src={item?.organization_detail?.banner_image} />\r\n                                                </div>\r\n                                                <div className='token'>\r\n                                                    <span></span>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\r\n                                                        <a>\r\n                                                            <h5 className=\"mb-0 mt-3\">{item?.organization_detail?.organization_name} </h5>\r\n                                                        </a>\r\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                    <span>Owned By</span>\r\n                                                                    <a href=\"/author\">\r\n                                                                        <h6 className=\"ml-2 mb-0\">You</h6>\r\n                                                                    </a>\r\n                                                                </div> */}\r\n                                                        <div className=''>\r\n                                                            <p dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 50) }} />\r\n                                                            {/* <p> It is a long established fact that a reader</p> */}\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className='mb-2 d-flex align-items-center justify-content-between'>\r\n                                                            <div className='mt-2 mb-2 d-flex text-align-center fundraiser_sale'>\r\n                                                                <div>\r\n                                                                    <span>Created</span>\r\n                                                                    <div>148</div>\r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    <span>Sale</span>\r\n                                                                    <div>100</div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                                            </svg></span>\r\n                                                        </div>\r\n\r\n                                                        {/* <div className='donate-btn'>\r\n                                                                <button className='btn ml-lg-auto btn-bordered-white'>Donate Now</button>\r\n                                                            </div> */}\r\n                                                        \r\n\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                            {/* }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    <h2 className='allproj2'>\r\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                    </h2>\r\n                                </div>\r\n                            } */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllFundraise; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport GetAllFundraise from '../components/Explore/fundraiserProjects';\r\n\r\nconst AllFundraiser = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllFundraise />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllFundraiser;","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { GetfundraiserProject, ProjectList } from '../../redux/Actions/projectAction';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllFundraiseProjects = (props) => {\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n    const { user_id } = useParams()\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    console.log(fundprojdetail, 'fundprojdetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetfundraiserProject(user_id))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    <h3 className=\"mt-3 mb-0\">Fundraiser Projects</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {/* {fund && fund.length ?\r\n                                [...new Map(fund.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\r\n                            {fundprojdetail?.map((item, idx) => {\r\n\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} to={`/projects/${item.slug}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <div className=\"card project_cards\">\r\n                                                <div className=\"image-over relative \">\r\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                    <img className=\"card-img-top\" src={item?.nft_data[0]?.image} alt={item.nft_data.description} />\r\n                                                </div>\r\n                                                <div className='token'>\r\n                                                    <span></span>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <a>\r\n                                                            <h5 className=\"mb-0\">{item.title.slice(0, 20)}</h5>\r\n                                                        </a>\r\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                            <span>Owned By</span>\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\"></h6>\r\n                                                            </a>\r\n                                                        </div> */}\r\n                                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                            <span>{item.price} MATIC</span>\r\n                                                            <span>{item.nft_data.length} NFTS </span>\r\n                                                            <span> + {item.number_of_nft} NFTS </span>\r\n                                                        </div>\r\n\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                            {/* }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    <h2 className='allproj2'>\r\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                    </h2>\r\n                                </div>\r\n                            } */}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllFundraiseProjects; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport GetAllFundraiseProjects from '../components/Explore/fundProj';\r\n\r\nconst AllFundraiserProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllFundraiseProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllFundraiserProjects;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { Button } from 'bootstrap';\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from '../TopSeller/fundraiserdetail';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst MyFundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    // console.log(fundprojdetail, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div class=\"row py-0\">\r\n                    <div className='col-12 p-0'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-between px-0\">\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div className='custam_col'>\r\n                            <h5 class=\"user_title\"><div>Description</div></h5>\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n                                    <div className=\"card no-hover detail_single_nfts\">\r\n\r\n                                        <li className='nft_price'>\r\n                                            ${funddetail?.total_fundraised} raised from all projects\r\n\r\n                                        </li>\r\n\r\n\r\n                                        {/* <li className=\"price d-flex justify-content-between\">\r\n                                                <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"> 71% </span>\r\n    \r\n                                            </li> */}\r\n\r\n                                    </div>\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        {/* <li className='card-inner-heading'>\r\n                                            <span style={{}}>Projects</span>\r\n                                        </li> */}\r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    // console.log('todat', date2)\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    // const totaldays = days_difference.slice(0,1)\r\n                                                    // console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                    {/* {(item.created_at).diff(new Date, 'day', true)} */}\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-12'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default MyFundraiserDetail;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport MyFundraiserDetail from '../components/Explore/my_fundraise';\r\n\r\nconst FundraiserProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <MyFundraiserDetail />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FundraiserProjects;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst Rewards = () => {\r\n\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>How Creator and Referral MATIC Rewards Work</h3>\r\n                        <span className='termsandconditions'><li>Affiliates get 30% on first level NFT referred sales at Karmatica.io only.</li>\r\n                            <li>Creators get 10% of secondary NFT sales for the lifetime of the project.</li>\r\n                            <br />\r\n                            <h5>NFT sale to BUYER 1 </h5>\r\n                            69% goes to Creator <br />\r\n                            30% goes to Affiliate<br />\r\n                            1% to Karmatica<br />\r\n                            <br />\r\n                            <h5>NFT resold from BUYER 1 to BUYER 2 via Affiliate</h5>\r\n                            84% goes to BUYER 1<br />\r\n                            10% goes to NFT Creator<br />\r\n                            5% goes to Affiliate <br />\r\n                            1% to Karmatica<br />\r\n                        </span>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default Rewards","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport Rewards from '../components/Footer/reward';\r\n\r\nconst NftReward = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <Rewards />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NftReward;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AllNoti, GetUserAction, NotiDelete } from '../../redux/Actions/authAction'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\nimport moment from \"moment\";\r\nconst AllNotifications = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const nooti = useSelector(state => {\r\n\r\n        return state?.user?.noti\r\n    })\r\n    useEffect(() => {\r\n        dispatch(AllNoti())\r\n        dispatch(GetUserAction())\r\n    }, [])\r\n    const deleteHandler = (id) => {\r\n        dispatch(NotiDelete(id))\r\n    }\r\n    console.log(nooti, 'noti')\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-7\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <ul className='termsandconditions' >\r\n                            {nooti.map((item) => {\r\n                                return (\r\n                                    <><li>{item.title}</li>\r\n                                        <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\r\n                                            <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n\r\n                        {/* <h3>{footer?.footer?.title}</h3> */}\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AllNotifications","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport AllNotifications from './../components/Header/Allnotifications';\r\n\r\nconst Notifi = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AllNotifications />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Notifi;","import React, { Component, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { GetUserAction } from \"../../redux/Actions/authAction\";\r\nimport {\r\n    CategoriesAction,\r\n    getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\n\r\n\r\nconst ExploreBuyedNfts = () => {\r\n    const { type } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <h3 className=\"mt-3 mb-0\">\r\n                                My NFTs\r\n                                {/* {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")} */}\r\n                            </h3>\r\n                            <p>\r\n                                Invest in NFTs that are based on real-life projects or events\r\n                                related to important causes\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {userdet?.purchase_nft && userdet?.purchase_nft?.length ? (\r\n                        [\r\n                            ...new Map(\r\n                                userdet?.purchase_nft?.map((item) => [item[\"title\"], item])\r\n                            ).values(),\r\n                        ].map((item, idx) => {\r\n                            return (\r\n                                <Link\r\n                                    key={`edth_${idx}`}\r\n                                    className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                                >\r\n                                    <div>\r\n                                        <Link to={`/my/nfts-detail/${item.slug}`}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"image-over\">\r\n                                                    <Link to={`/my/nfts-detail/${item.slug}`}>\r\n                                                        <img\r\n                                                            className=\"card-img-top\"\r\n                                                            src={item.image}\r\n                                                            alt=\"\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                    {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                                                </div>\r\n\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                                                        <a >\r\n                                                            <h5 className=\"mb-0\">\r\n                                                                {item.title.slice(0, 15)}\r\n                                                            </h5>\r\n                                                        </a>\r\n                                                        <div\r\n                                                            className=\"seller d-flex align-items-center my-3\"\r\n\r\n                                                        >\r\n                                                            <span>Owned By</span>\r\n                                                            {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\">\r\n                                                                    {/* {item.user_data.username.slice(0, 12)} */}\r\n                                                                    You\r\n                                                                </h6>\r\n                                                            </a>\r\n\r\n                                                            {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                                        </div>\r\n                                                        <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                                                            <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                            {/* {item?.number_of_nft == 1 ? (\r\n                                                                <span>{item.number_of_nft} NFT</span>\r\n                                                            ) : (\r\n                                                                <span>{item.number_of_nft} NFTs</span>\r\n                                                            )} */}\r\n                                                        </div>\r\n                                                        <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                                                            <Link to={`/my/nfts-detail/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                                                <i className=\"icon-handbag\" />\r\n                                                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                                                            </Link>\r\n                                                            <Link to={`/my/nfts-detail/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                            <h2 className=\"allproj2\">No latest project found</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default ExploreBuyedNfts;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreBuyedNfts from '../components/Explore/BuyedNfts';\r\n\r\nconst BuyedNft = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ExploreBuyedNfts />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default BuyedNft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetbuyedNftDetails, NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftBuydataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const slug = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails?.getBuyedNftdetails\r\n\r\n    })\r\n    useEffect(() => {\r\n        dispatch(GetbuyedNftDetails(props.slug))\r\n        // dispatch(ProjectDetail(slug))\r\n    }, [props.slug])\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n                        <thead>\r\n                            {/* {latprojnftdetail?.map((items) => { \r\n                         return (  */}\r\n\r\n                            <><tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr><tr className='contract-address'>\r\n                                    <th >Contract</th>\r\n                                    <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${nftdetail?.collectionData?.contract_id}`} >{nftdetail.collectionData?.contract_id?.slice(0, 5)}.....{nftdetail.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                </tr><tr>\r\n                                    <th>Token ID</th>\r\n                                    <td>{nftdetail.token_id}</td>\r\n                                </tr><tr>\r\n                                    <th>Token Stranded</th>\r\n                                    <td>ERC721</td>\r\n                                </tr></>\r\n\r\n                            {/* )})} */}\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* {projdetail.nft_data?.map((items) => { */}\r\n                            {/* // return ( */}\r\n                            <tr>\r\n\r\n                                <td>\r\n                                    {/* {items.collectionData?.contract_id} */}\r\n                                </td>\r\n                                <td>\r\n                                    {/* {items.token_id} */}\r\n                                </td>\r\n                                {/* <td>ERC721</td> */}\r\n                                {/* <td>Polygon (Matic)</td> */}\r\n                            </tr>\r\n                            {/* // ) */}\r\n                            {/* })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n                {/* <div className='nothing'>\r\n                No matching records found\r\n                        </div> */}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftBuydataTable","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetbuyedNftDetails, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport Web3 from 'web3';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport EditCollection from '../ItemDetails/updateCollection';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport { CreateMetaDataAndMint } from './../Wallet/interact';\r\nimport NftPopup from '../ItemDetails/nftPopup';\r\nimport axios from 'axios';\r\nimport { redirect } from 'next/dist/server/api-utils';\r\nimport LatprojNftDetails from '../Auctions/nftBuy';\r\nimport DModal from '../Create/3dModal';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport NftAuctiondataTable from '../ItemDetails/nftAuctiontable';\r\nimport SellPopup from '../ItemDetails/sellPopup';\r\nimport EditNftName from '../Create/editNftNamepopup';\r\nimport EditNftDesc from '../Create/editDescPopup';\r\nimport EditNftImage from '../Create/nftImageeditPopup';\r\nimport NftBuydataTable from './NftBuyData';\r\nimport { GetMatic } from '../ItemDetails/GetMAtic';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\n\r\nconst BuyedNftDetails = (props) => {\r\n    const history = useHistory()\r\n    const [nftId, setNftID] = useState();\r\n    // const search = useLocation().search;\r\n    // const projslug = new URLSearchParams(search).get('project');\r\n    // console.log(projslug, 'projslug')\r\n    // const latprojnftdetail = useSelector(state => {\r\n    //     // \r\n    //     return state.projectdetails.getnftwoldetails\r\n    // })\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [sellmodalShow, setSellModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [modalShoweditdes, setModalShoweditdes] = React.useState(false);\r\n    const [modalShoweditimg, setModalShoweditimg] = React.useState(false);\r\n    // const [mintmodalShow, setMintModalShow] = React.useState(false);\r\n\r\n    const [current, setCurrent] = React.useState(0)\r\n    const [contractAdd, setContractAdd] = useState('')\r\n\r\n    const slug = useParams();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getBuyedNftdetails\r\n\r\n    })\r\n    // console.log(\"nftmint\", nftdetail.is_mint)\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetbuyedNftDetails(slug))\r\n        // dispatch(GetSettings())\r\n    }, [slug])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n                            {/* {nftdetail.is_mint == 0 &&\r\n\r\n                                <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n\r\n                                    <div >\r\n                                        <div className='position-absolute nft-edit-icon'><i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditimg(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        </div>\r\n                                        <div className='loader-img'>{modalShoweditimg &&\r\n\r\n                                            <EditNftImage\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditimg}\r\n                                                onHide={() => setModalShoweditimg(false)} />\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            } */}\r\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n                                {nftdetail.extention === \"Player\" &&\r\n\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={nftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={nftdetail.image}\r\n                                    // mdl={setModal}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"Image\" &&\r\n\r\n                                    <img src={nftdetail.image} alt=\"\" />\r\n                                }\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-sm-0\">\r\n                        <div className=' card no-hover py-0 mt-2 mb-2 mt-lg-0 mb-lg-0 '>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{nftdetail?.title} </span>\r\n                            {/* {nftdetail.is_mint == 0 &&\r\n                                <div className='nft-edit-icon position-absolute mt-2'>\r\n                                    <i className=\"fa-solid fa-pen \" onClick={(e) => {\r\n                                        setNftID(slug)\r\n                                        e.preventDefault();\r\n                                        setModalShowedit(true)\r\n                                    }\r\n                                    } ></i>\r\n                                    {modalShowedit &&\r\n\r\n                                        <EditNftName\r\n                                            // debugger\r\n                                            id={projslug}\r\n                                            nft_id={nftId}\r\n                                            show={modalShowedit}\r\n                                            onHide={() => setModalShowedit(false)} />\r\n                                    }\r\n                                </div>\r\n                            } */}\r\n\r\n                        </div>\r\n                        <div className=\"content sm:mt-3 mt-lg-2\">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    {/* <span>{nftdetail?.user_data?.username}</span> */}\r\n                                    <span>You</span>\r\n\r\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {nftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{nftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                {nftdetail.nft_type === \"1\" ? (\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                            disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                        </>\r\n\r\n                                    </div>\r\n\r\n\r\n                                ) : (\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            onClick={() => setSellModalShow(true)}>  Sell</button>\r\n                                            <SellPopup\r\n\r\n                                                show={sellmodalShow}\r\n                                                slug={slug}\r\n\r\n                                                onHide={() => setSellModalShow(false)}\r\n                                                nftid={nftdetail.id}\r\n                                                ismint={nftdetail.is_mint}\r\n                                            />\r\n\r\n                                        </>\r\n\r\n                                    </div>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-12 md:col-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            {/* <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                                {nftdetail?.is_mint == 0 &&\r\n                                    <div className='nft-edit-icon position-absolute mt-2'>\r\n                                        <i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditdes(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        {modalShoweditdes &&\r\n\r\n                                            <EditNftDesc\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditdes}\r\n                                                onHide={() => setModalShoweditdes(false)} />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div> */}\r\n                            <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft \" />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4'>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    {/* <img src='../../img/image14.png' /> */}\r\n                                    {/* <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg> */}\r\n                                    {/* <span>{latprojnftdetail.amount}</span> */}\r\n                                    <img src='../../img/image14.png' />\r\n                                    <span><small>{nftdetail.amount} / ${nftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn</small> </span>\r\n                                    {/* <span><small>${nftdetail.amount}</small></span> */}\r\n                                </div>\r\n\r\n                                <div className='sales'>\r\n                                    <span>\r\n                                        Creator royalties on secondary sales:\r\n                                    </span>\r\n                                    <span>5%</span>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-8 col-12'>\r\n                        <div className=\"profile_detail mt-4\">\r\n\r\n                            <NftBuydataTable\r\n                                slug={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className='col-12 mt-4'>\r\n                        <div className='container table-detail'>\r\n\r\n                            <NftAuctiondataTable\r\n                                slug={slug}\r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* <div className='col-12 description'>\r\n                    <h3 > Description</h3>\r\n                    <div className=\"card no-hover countdown-times my-4\">\r\n            \r\n                        <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft\" />\r\n                    </div>\r\n                     </div> */}\r\n                </div >\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default BuyedNftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport BuyedNftDetails from '../components/Explore/NftBuyedDetails';\r\nconst BuyNftDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main main-fund-detail\">\r\n\r\n            <Header />\r\n            <BuyedNftDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default BuyNftDetail;","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnnualRevenueList, CountryList, CreateOrganizationAfterRoleChange, HearAboutList, Register } from '../../redux/Actions/authAction'\r\nimport { Controller, useForm } from 'react-hook-form'\r\n\r\nimport { useHistory } from 'react-router'\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\r\nimport { useState } from 'react'\r\nimport JoditEditor from 'jodit-react';;\r\n\r\n// import { Widget } from \"@uploadcare/react-widget\";\r\n// import FileUpload from \"react-material-file-upload\";\r\n// import { uploadcare } from '../lib/uploadcare.min.js';\r\nconst RoleChangeOrganizationdetails = () => {\r\n\r\n    const [description, setDescription] = useState()\r\n\r\n    const editor = useRef(null);\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n\r\n    const OnSubmit = (values) => {\r\n        // debugger\r\n        // FormData.append('email', data.email)\r\n        // FormData.append('password', data.password)\r\n        // FormData.append('confirm_password', data.confirm_password)\r\n        const formData = new FormData()\r\n        formData.append('banner_image', values.banner_image[0])\r\n        formData.append('logo', values.logo[0])\r\n        formData.append('wallet_id', values.wallet_id)\r\n        // formData.append('role', data.role)\r\n        formData.append('goal', values.goal)\r\n        formData.append('organization_name', values.organization_name)\r\n        formData.append('url', values.url)\r\n        formData.append('country', values.country)\r\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\r\n        formData.append('tax_id', values.tax_id)\r\n\r\n        formData.append('social', values.social)\r\n        formData.append('social_link', values.social_link)\r\n        formData.append('description', description)\r\n        // formData.append('method_heard_detail', values.method_heard_detail)\r\n\r\n        dispatch(CreateOrganizationAfterRoleChange(formData, dispatch))\r\n        // if (formData) {\r\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\r\n        //     history.push('/login')\r\n        // }\r\n    }\r\n\r\n    const socialmedia = useSelector(state => {\r\n        return state?.getSocialmediaIcons?.getsocial\r\n    })\r\n    // console.log('social', socialmedia)\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n        dispatch(AnnualRevenueList())\r\n        dispatch(HearAboutList())\r\n        dispatch(GetSocialMediaIcons())\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        {/* <div className={formStep === 1 ? styles.showForm : styles.hideForm}> */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            {/* <button\r\n                                    // className={styles.back}\r\n                                    onClick={prevFormStep}\r\n                                    type=\"button\"\r\n                                >\r\n                                    back\r\n                                </button> */}\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Fundraising Goal</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"goal\"\r\n                                            step=\"0.01\"\r\n                                            placeholder=\"Fundraising goal (MATIC)\"\r\n                                            {...register(\"goal\",\r\n                                                {\r\n                                                    required: true,\r\n\r\n                                                })}\r\n                                            aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                        {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Funding Wallet </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"wallet_id\"\r\n                                            // defaultValue='1'\r\n                                            placeholder=\"Funding Wallet\"\r\n                                            {...register(\"wallet_id\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"organization_name\"\r\n                                            placeholder=\"Organization name\"\r\n                                            {...register(\"organization_name\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.organization_name ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Website</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"url\"\r\n                                            placeholder=\"Website\"\r\n                                            {...register(\"url\", {\r\n                                                required: true,\r\n                                                pattern: {\r\n                                                    value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                                }\r\n                                            })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.url ? \"true\" : \"false\"}\r\n                                        />\r\n\r\n                                        {errors.url && errors.url?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                                        {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Describe your project\"\r\n\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form- group mt-3\">\r\n                                        <label>Description</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n\r\n                                            // {...register(\"description\", { required: true })}\r\n                                            rules={{ required: true, min: 150 }}\r\n                                            // rules={{\r\n                                            //     required: true, pattern: {\r\n\r\n                                            //         message: \"Description is required\",\r\n                                            //     },\r\n                                            // }}\r\n                                            render={({ field }) => {\r\n                                                return <JoditEditor\r\n                                                    ref={field.ref}\r\n                                                    value={field.value}\r\n                                                    // config={config}\r\n                                                    aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                                    placeholder=\"start typing\"\r\n                                                    tabIndex={1} // tabIndex of textarea\r\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                    onChange={field.onChange}\r\n                                                />\r\n                                            }}\r\n                                        />\r\n                                        {errors?.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Country</label>\r\n\r\n                                        <select name=\"country\"\r\n                                            {...register(\"country\", { required: true })}>\r\n                                            aria-invalid={errors.country ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                            {countries.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"annual_revenue_range\"\r\n                                                {...register(\"annual_revenue_range\", { required: true })}>\r\n                                                {annualRevenue?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key.id} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>EIN Number/Tax Id</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"tax_id\"\r\n                                            placeholder=\"EIN Number/Tax Id(optional)\"\r\n                                            {...register(\"tax_id\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Social Media (required)</label>\r\n                                        <select name=\"social\"\r\n                                            {...register(\"social\", { required: true })}>\r\n                                            aria-invalid={errors.social ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\r\n                                            {socialmedia?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.title}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Social Media (secondary)</label>\r\n                                        <div className=\"input-group-prepend\">\r\n\r\n                                            <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"social_link\"\r\n                                                placeholder=\"social link(optional) \"\r\n                                                {...register(\"social_link\")}\r\n                                            // {...register(\"email\")}\r\n                                            // aria-invalid={errors.social_link ? \"true\" : \"false\"}\r\n                                            />\r\n                                        </div>\r\n                                        {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"project\"\r\n                                                {...register(\"hear_about\", { required: true })}>\r\n                                                {hereAbout?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Banner</label>\r\n                                        <input\r\n                                            className=\"form-control p-2\"\r\n                                            type=\"file\"\r\n\r\n                                            name=\"banner_image\"\r\n                                            placeholder=\"Select file\"\r\n                                            disp\r\n                                            {...register(\"banner_image\", { required: true })}\r\n                                            aria-invalid={errors.banner_image ? \"true\" : \"false\"}\r\n                                        />\r\n                                        <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\r\n\r\n                                        {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Logo</label>\r\n                                        <input\r\n                                            className=\"form-control p-2\"\r\n                                            type=\"file\"\r\n                                            name=\"logo\"\r\n                                            placeholder=\"Select file\"\r\n                                            {...register(\"logo\", { required: true })}\r\n                                            aria-invalid={errors.logo ? \"true\" : \"false\"}\r\n                                        />\r\n                                        <div className='logo_one'>\r\n\r\n                                            <span className='logo-dis'>maximum height should be 250 pixels</span>\r\n                                        </div>\r\n                                        {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\r\n                                </div>\r\n                                {/* <div className=\"col-3\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => goBack()}>Previous</button>\r\n                                    </div> */}\r\n                            </div>\r\n                        </form>\r\n                        {/* </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default RoleChangeOrganizationdetails","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport RoleChangeOrganizationdetails from '../components/Signup/roleChangeOrginazationdetails';\r\n\r\nexport const createOrganizationafterRoleChange = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <RoleChangeOrganizationdetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { GetSettings, } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\nimport { BuyNft, } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport NftTransdataTable from './nftTRansTable';\r\nimport LatNftDataTable from '../Explore/latnftTable';\r\nimport DModal from '../Create/3dModal';\r\nimport BuyPopup from './buyPopup';\r\nimport { GetMatic } from './../ItemDetails/GetMAtic';\r\nimport { ResellActionDetails } from '../../redux/Actions/resellNftAction';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\nconst ResellNftDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const [matic, setMatic] = useState('')\r\n    const [buymodalShow, setBuyModalShow] = React.useState(false);\r\n    const slug = useParams();\r\n    const resellnftdetail = useSelector(state => {\r\n        return state.resell?.reselldetails\r\n    })\r\n    const getSett = useSelector(state => {\r\n        return state.projectdetails.settings\r\n    })\r\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetUserAction())\r\n        dispatch(ResellActionDetails(slug))\r\n        dispatch(GetSettings())\r\n    }, [slug])\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const buyHandler = () => {\r\n        BuyNft({\r\n            contractAddress: resellnftdetail?.collectionData?.contract_id,\r\n            tokenId: resellnftdetail.token_id,\r\n            payFrom: resellnftdetail.pay_from,\r\n            values: setValue.value,\r\n            sellingCount: resellnftdetail.selling_count,\r\n            platformFee: ([resellnftdetail.payment_flow?.karmatica_fee]),\r\n            ownerFee: ([resellnftdetail.payment_flow?.project_data?.fees]),\r\n            ownerWallet: ([resellnftdetail.payment_flow?.project_data?.wallets]),\r\n            flow: ([resellnftdetail.payment_flow]),\r\n            proj_id: resellnftdetail.project_id,\r\n            nft_id: resellnftdetail.id,\r\n            loadingg: setLoading,\r\n            modal: setBuyModalShow,\r\n        })\r\n    }\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                        <span Class=\"title_main \" style={{ color: '#fff' }}>{resellnftdetail.title}  </span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"item-info\">\r\n                            <><div className=\"item-thumb text-center\">\r\n                                {resellnftdetail.extention === \"PLayer\" &&\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={resellnftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n                                {resellnftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={resellnftdetail.image}\r\n                                    />\r\n                                }\r\n                                {resellnftdetail.extention === 'Image' &&\r\n                                    <img src={resellnftdetail.image} alt=\"\" />\r\n                                }\r\n                                {/* ) */}\r\n                                {/* })} */}\r\n                            </div>\r\n                            </>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\r\n                        <div className=\"content \">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{resellnftdetail.owned_by}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {resellnftdetail?.collectionData?.title}</span>\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled mb-0\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{resellnftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Affiliate first sale royalties : </span>\r\n                                    <span> 30%</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className='boldertext w-100'>NFT creator royalties : </span>\r\n                                    <span> 10%</span>\r\n                                </div>\r\n                                <div className='eddlbtton d-flex gap- align-items-center mt-2 justify-content-between'>\r\n                                    <div className='eddlbtton flex-wrap d-flex gap-10  align-items-center mt-2'>\r\n                                        {resellnftdetail.sold_nft == 1 ? (\r\n                                            <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" disabled>SOLD OUT</button>\r\n                                        ) : (\r\n                                            <>\r\n                                                {resellnftdetail.user_id === userdet.user_id ? (\r\n                                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n                                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                            disabled>Your NFT is now ready to purchase</span>\r\n                                                        </>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <><button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                        id=\"nftdetail.id\" onClick={() => { buyHandler(); setBuyModalShow(true); setLoading(true); }}>Buy Now</button><BuyPopup\r\n                                                            show={buymodalShow}\r\n                                                            loading={loading}\r\n                                                            onHide={() => setBuyModalShow(false)} /></>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className='eddlbtton bitbtn d-flex  align-items-center mt-2'>\r\n                                        <div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <p dangerouslySetInnerHTML={{ __html: resellnftdetail.description }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-lg-4 col-12 mt-4 '>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <img src='../../../../img/image14.png' />\r\n                                    <span><small>{resellnftdetail.amount}  / ${resellnftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=''>\r\n                            <div className=\"profile_detail mt-4\">\r\n                                <LatNftDataTable\r\n                                // id={id}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <NftTransdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </section >\r\n    );\r\n}\r\nexport default ResellNftDetails;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ResellNftDetails from '../components/Auctions/resellNftBuy';\r\n\r\nconst ResellDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ResellNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ResellDetail;","import React, { Component, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n    CategoriesAction,\r\n    getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\nimport { ResellAction } from \"../../redux/Actions/resellNftAction\";\r\n\r\n\r\n\r\nconst ExploreAllResell = () => {\r\n    const slug = useParams();\r\n    const dispatch = useDispatch();\r\n    const nfts = useSelector((state) => {\r\n        return state?.resell?.resell;\r\n    });\r\n    console.log(nfts, \"resellnfts\");\r\n    useEffect(() => {\r\n        dispatch(ResellAction())\r\n\r\n    }, [dispatch]);\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <h3 className=\"mt-3 mb-0\">\r\n                                All Reselled NFTs\r\n                            </h3>\r\n                            <p>\r\n                                Invest in NFTs that are based on real-life projects or events\r\n                                related to important causes\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {nfts && nfts.length ? (\r\n                        [\r\n                            ...new Map(\r\n                                nfts?.map((item) => [item[\"title\"], item])\r\n                            ).values(),\r\n                        ].map((item, idx) => {\r\n                            return (\r\n                                <Link\r\n                                    key={`edth_${idx}`}\r\n                                    className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                                >\r\n                                    <div>\r\n                                        <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"image-over\">\r\n                                                    <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                                        <img\r\n                                                            className=\"card-img-top\"\r\n                                                            src={item.image}\r\n                                                            alt=\"\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                    {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                                                </div>\r\n\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                                                        <a >\r\n                                                            <h5 className=\"mb-0\">\r\n                                                                {item.title.slice(0, 15)}\r\n                                                            </h5>\r\n                                                        </a>\r\n                                                        <div\r\n                                                            className=\"seller d-flex align-items-center my-3\"\r\n\r\n                                                        >\r\n                                                            <span>Owned By</span>\r\n                                                            {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\">\r\n                                                                    {item.user_data.username.slice(0, 12)}\r\n                                                                </h6>\r\n                                                            </a>\r\n\r\n                                                            {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                                        </div>\r\n                                                        <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                                                            <span><img className=\"mr-1\" src='../../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                            {/* {item?.number_of_nft == 1 ? ( */}\r\n                                                            <span>1 NFT</span>\r\n                                                            {/* ) : ( */}\r\n                                                            {/* <span>{item.number_of_nft} NFTs</span> */}\r\n                                                            {/* )} */}\r\n                                                        </div>\r\n                                                        <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                                                            <Link to={`/nft/resell/details/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                                                <i className=\"icon-handbag\" />\r\n                                                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                                                            </Link>\r\n                                                            <Link to={`/nft/resell/details/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                            <h2 className=\"allproj2\">No NFTs found</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default ExploreAllResell;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreAllResell from '../components/Explore/viewallResell';\r\n\r\nconst AllResellNft = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ExploreAllResell />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AllResellNft;","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport { Link } from 'react-router-dom';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nconst RefralTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n    }, [props.id])\r\n    const location = useLocation()\r\n    return (\r\n        <footer className=\"item-details-area referal-detail\">\r\n            {/* Footer Top */}\r\n            <div >\r\n                <div className=\"container\">\r\n                    <Tabs>\r\n                        <TabList>\r\n                            <Tab>How To Earn</Tab>\r\n                            <Tab>My Referrals</Tab>\r\n                        </TabList>\r\n                        <TabPanel>\r\n                            <div className=\"pb-5\"> <h3>How Creator and Referral MATIC Rewards Work</h3>\r\n                                <div className='main-heading'>\r\n                                    <div>Affiliates get 30% on first level NFT referred sales at Karmatica.io only.</div>\r\n                                    <div>Creators get 10% of secondary NFT sales for the lifetime of the project.</div>\r\n                                </div>\r\n                                <div className='referal-main'>\r\n                                    <h5>NFT sale to BUYER 1 </h5>\r\n                                    <ul>\r\n                                        <li><span>69%</span> goes to Creator </li>\r\n                                        <li><span>30%</span> goes to Affiliate</li>\r\n                                        <li><span>1% </span>to Karmatica</li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className='referal-main'>\r\n                                    <h5>NFT resold from BUYER 1 to BUYER 2 via Affiliate</h5>\r\n                                    <ul>\r\n                                        <li> <span>84%</span> goes to BUYER 1</li>\r\n                                        <li> <span>10%</span> goes to NFT Creator</li>\r\n                                        <li> <span>5% </span>goes to Affiliate </li>\r\n                                        <li> <span>1% </span>to Karmatica</li>\r\n                                    </ul>\r\n                                </div></div>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <div className='position-relative'>\r\n                                <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                                    <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                        <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                        <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    </svg>\r\n                                    <Panel header=\"Referral Activity\" key=\"1\">\r\n                                        <Table responsive className='m-0' >\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Item</th>\r\n                                                    <th>Token</th>\r\n                                                    <th>NFT Price</th>\r\n                                                    <th>Referral Amount</th>\r\n                                                    <th>Collection</th>\r\n                                                    <th>From</th>\r\n                                                    <th>To</th>\r\n                                                    <th>Transaction</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {userdet?.referral_history?.map((items) => {\r\n                                                    return (\r\n                                                        <><tr className='contract-address'>\r\n                                                            <td ><Link to={`/nftprojdetails/${items.slug}`} >{items.title?.slice(0, 20)}</Link>...</td>\r\n                                                            <td>#{items.token_id}</td>\r\n                                                            <td>{items.price}</td>\r\n                                                            {/* <td>{items.referral_amount} </td> */}\r\n                                                            <td className='referal'>{items.referral_amount} <img src='../../img/image14.png' /></td>\r\n                                                            <td><Link to={`/popularcollection/details/${items.collection_slug}`}>{items.collection_name}</Link></td>\r\n                                                            <td>{items.pay_from?.slice(0, 4)}...{items.pay_from?.slice(35, 44)}</td>\r\n                                                            <td>{items.pay_to?.slice(0, 4)}...{items.pay_to?.slice(35, 44)}</td>\r\n                                                            <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/tx/${items?.transaction_hash}`} >{items.transaction_hash?.slice(0, 4)}...{items.transaction_hash?.slice(35, 44)}</a></td>\r\n                                                        </tr>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                        <div className='nothing'>\r\n                                            {userdet?.referral_history?.length == 0 &&\r\n                                                <span> No matching records found</span>\r\n                                            }\r\n                                        </div>\r\n                                    </Panel>\r\n                                </Collapse>\r\n                            </div>\r\n                        </TabPanel>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n\r\n    )\r\n}\r\nexport default RefralTransdataTable","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport RefralTransdataTable from '../components/Explore/viewReferals';\r\n\r\nconst AllReraltrans = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <RefralTransdataTable />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AllReraltrans;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n// importing all the themes\r\nimport ThemeOne from \"../themes/theme-one\";\r\nimport ExploreOne from \"../themes/explore-one\";\r\nimport ExploreTwo from \"../themes/project-list\";\r\nimport ExploreFour from \"../themes/latestProjects\";\r\nimport Auctions from \"../themes/auctions\";\r\nimport ItemDetails from \"../themes/item-details\";\r\nimport HelpCenter from \"../themes/help-center\";\r\nimport Author from \"../themes/author\";\r\nimport WalletConnect from \"../themes/wallet-connect\";\r\nimport Create from \"../themes/create\";\r\nimport Login from \"../themes/login\";\r\nimport Signup from \"../themes/signup\";\r\nimport Contact from \"../themes/contact\";\r\nimport Forgot from \"../themes/forgotpassword\";\r\nimport PrivateRoute from \"./privateRoutes\";\r\nimport ProjectUpdate from \"../themes/update\";\r\nimport TermsCond from \"../themes/term&cond\";\r\nimport All from \"../themes/viewalllatest\";\r\nimport ColExplore from \"../themes/exploreCollections\";\r\nimport Aboutus from \"../themes/Aboutus\";\r\nimport latprojDetails from \"../themes/latproj-details\";\r\nimport Showcollections from \"../themes/showcollections\";\r\nimport CollectionDetail from \"../themes/collectn-details\";\r\nimport ProjNft from \"../themes/projnft-details\";\r\nimport Nft from './../themes/nft-list';\r\nimport FundDetail from \"../themes/fund-detail\";\r\nimport latnftprojDetails from \"../themes/Latnft\";\r\nimport ScrollToTop from \"../ScrollToTop\";\r\nimport EditNft from \"../components/Create/editNft\";\r\nimport AddNFT from \"../themes/addnftTheme\";\r\nimport AllFundraiser from \"../themes/allFundproj\";\r\nimport AllFundraiserProjects from \"../themes/fund-projects\";\r\nimport FundraiserProjects from \"../themes/fundraise\";\r\nimport NftReward from \"../themes/rwrd\";\r\nimport Notifi from \"../themes/allnot\";\r\nimport BuyedNft from \"../themes/buyed-nft\";\r\nimport BuyNftDetail from \"../themes/buyNft-details\";\r\nimport { createOrganizationafterRoleChange } from \"../themes/rolechange-organization\";\r\nimport ResellDetail from \"../themes/resell-details\";\r\nimport AllResellNft from \"../themes/allresellNfts\";\r\nimport AllReraltrans from \"../themes/all-refrals\";\r\n\r\n\r\nconst MyRouts = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <ScrollToTop />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ThemeOne} />\r\n          <Route exact path=\"/explore-1\" component={ExploreOne} />\r\n          <Route exact path=\"/projectlist\" component={ExploreTwo} />\r\n          <Route exact path=\"/create/organization\" component={createOrganizationafterRoleChange} />\r\n          <Route exact path=\"/allnotifications\" component={Notifi} />\r\n          <Route exact path=\"/updateproject/:id\" component={ProjectUpdate} />\r\n          <Route exact path=\"/explore-4\" component={ExploreFour} />\r\n          <Route exact path=\"/nft/resell/details/:slug\" component={ResellDetail} />\r\n          <Route exact path=\"/my/nfts\" component={BuyedNft} />\r\n          <Route exact path=\"/my/nfts-detail/:slug\" component={BuyNftDetail} />\r\n          <Route exact path=\"/rewards\" component={NftReward} />\r\n          <Route exact path=\"/auctions\" component={Auctions} />\r\n          <Route exact path=\"/popularcollection/details/:slug\" component={ItemDetails} />\r\n          <Route exact path=\"/projects/:slug\" component={latprojDetails} />\r\n          <Route exact path=\"/referals-detail\" component={AllReraltrans} />\r\n          <Route exact path=\"/nftprojdetails/:slug\" component={latnftprojDetails} />\r\n          <Route exact path=\"/fundraiser/detail/:user_id\" component={FundDetail} />\r\n          <Route exact path=\"/myfundraiser/detail/:user_id\" component={FundraiserProjects} />\r\n          <Route exact path=\"/projnftdetails/:slug\" component={ProjNft} />\r\n          <Route exact path=\"/allfundraise\" component={AllFundraiser} />\r\n          <Route exact path=\"/all/fundraise/projects/:user_id\" component={AllFundraiserProjects} />\r\n          <Route exact path=\"/nft/details/:id\" component={Nft} />\r\n          <Route exact path=\"/nftedit/:id/:id\" component={EditNft} />\r\n          <Route exact path=\"/addnft/:id\" component={AddNFT} />\r\n          <Route exact path=\"/help-center\" component={HelpCenter} />\r\n          <Route exact path=\"/profile\" component={Author} />\r\n          <Route exact path=\"/terms&conditions\" component={TermsCond} />\r\n          <Route exact path=\"/all/:type\" component={All} />\r\n          <Route exact path=\"/all/resll/nfts\" component={AllResellNft} />\r\n          <Route exact path=\"/aboutus\" component={Aboutus} />\r\n          <Route exact path=\"/allcollections\" component={ColExplore} />\r\n          <Route exact path=\"/wallet-connect\" component={WalletConnect} />\r\n          <Route exact path=\"/my-collections\" component={Showcollections} />\r\n          <Route exact path=\"/collection/:id\" component={CollectionDetail} />\r\n          <Route exact path=\"/create\" component={Create} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          <PrivateRoute exact path=\"/forgotpassword\" component={Forgot} />\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\nexport default MyRouts\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport MyRouts from './routers/routes'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n\r\n      <MyRouts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport { authReducer } from '../redux/Slices/authSlice'\r\nimport { combineReducers } from '@reduxjs/toolkit'\r\nimport { projectReducer } from './Slices/projectSlice'\r\nimport { footerReducer } from './Slices/footerSlice'\r\nimport { fundraiserReducer } from './Slices/fundraiserSlice'\r\nimport { collectionReducer } from './Slices/popularCollectionSlice'\r\nimport { contactReducer } from './Slices/contactSlice';\r\nimport { resellReducer } from './Slices/resellNftSlice'\r\n\r\nconst reducer = combineReducers({\r\n    user: authReducer,\r\n    countries: authReducer,\r\n    annualRevenue: authReducer,\r\n    hereAbout: authReducer,\r\n    login: authReducer,\r\n    forgotpassword: authReducer,\r\n    errmessage: authReducer,\r\n    createproject: projectReducer,\r\n    // getproject: projectReducer,\r\n    projectdetails: projectReducer,\r\n    latestprojects: projectReducer,\r\n    fundraiser: fundraiserReducer,\r\n    footer: footerReducer,\r\n    collection: collectionReducer,\r\n    getcollections: collectionReducer,\r\n    getcollectiondetails: collectionReducer,\r\n    getSocialmediaIcons: projectReducer,\r\n    contact: contactReducer,\r\n    resell: resellReducer\r\n    // userDetail: authReducer,\r\n\r\n    // Nftlist: projectReducer\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer,\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css'\r\nimport App from './App';\r\nimport store from '../src/redux/store';\r\nimport { Provider } from 'react-redux'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__DKvey\",\"formCard\":\"styles_formCard__Vehpw\",\"formRow\":\"styles_formRow__13Stn\",\"back\":\"styles_back__3AVbA\",\"input-error\":\"styles_input-error__3FssS\",\"error\":\"styles_error__1A4Gx\",\"disabledBtn\":\"styles_disabledBtn__qMaBa\",\"steps\":\"styles_steps__2TgQb\",\"errorText\":\"styles_errorText__9D9Jp\",\"hideForm\":\"styles_hideForm__19FPq\",\"showForm\":\"styles_showForm__2S4hD\"};"],"sourceRoot":""}