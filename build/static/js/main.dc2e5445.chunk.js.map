{"version":3,"sources":["components/Signup/styles/styles.module.scss","redux/Slices/authSlice.js","redux/Slices/projectSlice.js","redux/Actions/projectAction.js","components/Wallet/interact.js","redux/Actions/authAction.js","components/Header/Header.js","components/Hero/Hero.js","components/Auctions/AuctionsOne.js","redux/Slices/popularCollectionSlice.js","redux/Actions/popularAction.js","components/Collections/Collections.js","components/Work/Work.js","redux/Slices/footerSlice.js","redux/Actions/footerAction.js","components/Footer/Footer.js","components/Modal/ModalSearch.js","components/Modal/ModalMenu.js","components/Scrollup/Scrollup.js","redux/Slices/fundraiserSlice.js","redux/Actions/fundraiserAction.js","components/TopSeller/topfundraiser.js","redux/Slices/resellNftSlice.js","redux/Actions/resellNftAction.js","components/Auctions/resellNft.js","themes/theme-one.js","components/Breadcrumb/Breadcrumb.js","components/Explore/ExploreTwo.js","themes/explore-one.js","components/Loader/loader.js","components/Explore/ProjectList.js","themes/project-list.js","themes/latestProjects.js","components/Explore/LatestProjects.js","themes/auctions.js","readMore.js","components/TopSeller/fundPaymenttable.js","components/AuthorProfile/userDetails.js","components/Create/projectDetailpopup.js","components/AuthorProfile/userTransTable.js","components/Explore/projDetailtable.js","components/Explore/latProjNftdata.js","components/Auctions/projectnfts.js","components/Collections/collectionNfts.js","components/Explore/popularDetails.js","themes/item-details.js","components/Activity/Activity.js","themes/activity.js","components/HelpCenter/HelpCenter.js","components/Faq/Faq.js","themes/help-center.js","components/Authors/Authors.js","components/TopSeller/TopSellerTwo.js","themes/authors.js","shared/Upload.js","utils/blobfromurl.js","components/Create/editBanner.js","components/AuthorProfile/avatarUpload.js","components/AuthorProfile/bannerUpload.js","components/AuthorProfile/AuthorProfile.js","components/Explore/ExploreSix.js","components/Author/Author.js","themes/author.js","components/Wallet/Wallet.js","themes/wallet-connect.js","components/Create/Context/context.js","components/Create/Create.js","components/Create/createCollection.js","components/Create/3dModal.js","components/Create/uploadNft.js","components/Create/index.js","themes/create.js","components/Login/Login.js","themes/login.js","components/Signup/FormCard.js","components/Signup/Context/context.js","components/Signup/Signup.js","components/Signup/createOrganization.js","components/Signup/index.js","themes/signup.js","redux/Slices/contactSlice.js","components/Contact/Contact.js","redux/Actions/contactAction.js","themes/contact.js","components/ForgotPassword/forgotPassword.js","themes/forgotpassword.js","routers/utils.js","routers/privateRoutes.js","components/Create/geoLocation.js","Edit/editProject.js","themes/update.js","components/Footer/t&c.js","themes/term&cond.js","components/Explore/viewAllLatest.js","themes/viewalllatest.js","components/Collections/exploreCollection.js","themes/exploreCollections.js","components/Footer/about.js","themes/Aboutus.js","components/ItemDetails/refralPopup.js","components/Create/editNft.js","components/Explore/nftdataTable.js","components/ItemDetails/GetMAtic.js","components/ItemDetails/viewProdetails.js","themes/latproj-details.js","components/Create/showCollections.js","themes/showcollections.js","components/Create/bread-crumb.js","components/Create/collectionDetail.js","themes/collectn-details.js","components/Create/desPopup.js","components/Create/projdetails.js","themes/projnft-details.js","components/ItemDetails/nftPopup.js","components/Auctions/nftTRansTable.js","components/Explore/latnftTable.js","components/Auctions/buyPopup.js","components/Auctions/nftBuy.js","components/ItemDetails/nftAuctiontable.js","components/ItemDetails/sellPopup.js","components/Create/editNftNamepopup.js","components/Create/editDescPopup.js","components/Create/nftImageeditPopup.js","components/ItemDetails/nftDetails.js","themes/nft-list.js","components/TopSeller/fundraiserdetail.js","components/TopSeller/fundraiserDetails.js","themes/fund-detail.js","themes/Latnft.js","ScrollToTop.js","components/Create/addNft.js","themes/addnftTheme.js","components/Explore/fundraiserProjects.js","themes/allFundproj.js","components/Explore/fundProj.js","themes/fund-projects.js","components/Explore/my_fundraise.js","themes/fundraise.js","components/Footer/reward.js","themes/rwrd.js","components/Header/Allnotifications.js","themes/allnot.js","components/Explore/BuyedNfts.js","themes/buyed-nft.js","components/Explore/NftBuyData.js","components/Explore/NftBuyedDetails.js","themes/buyNft-details.js","components/Signup/roleChangeOrginazationdetails.js","themes/rolechange-organization.js","components/Auctions/resellNftBuy.js","themes/resell-details.js","components/Explore/viewallResell.js","themes/allresellNfts.js","components/Explore/viewReferals.js","themes/all-refrals.js","routers/routes.js","App.js","redux/store.js","index.js","components/Create/styles/styles.module.scss"],"names":["module","exports","userToken","localStorage","getItem","authSlice","createSlice","name","initialState","user","userdetail","role","logout","message","countries","states","city","noti","annualRevenue","hereAbout","updpro","wallesign","organization","reducers","registerSuccess","state","action","payload","data","auth_token","setItem","registerFail","response","allnotification","updateprofile","userDetail","loginSuccess","logoutSuccess","removeItem","forgotpasswordSuccess","createOrganizationSuccess","wallsignin","getCountryList","getStateList","getCityList","getAnnualRevenueList","getHearAboutList","authReducer","reducer","actions","projectSlice","project","projects","nftlist","projectdetails","latestprojectdetails","categories","collections","getcollections","getcollectiondetails","collectiondetails","getSocialmediaIcons","getfundProjDetails","getmostProjActivity","getBuyedNftdetails","getnftwoldetails","settings","nftadd","nftres","nftupdate","updbanner","matic","liveProjects","LatestProjects","RecentCampaigns","createProjectSuccess","createCollectionSuccess","getCollections","getsocial","getCollectionDetails","getNftwolDetails","nftUpd","nftAdd","getfundprojdetails","getmostprojactivity","getbuyednftdetails","getProjectList","getMatic","getCategoriesList","getSettings","getLatestProjectList","createFail","getProjectDetail","getCollectionDetail","Nftres","getNftList","getLatestProjectDetail","updatebanner","publicLiveProjects","type","res","deleteProject","id","filter","item","projectReducer","CreateProjectAction","params","setLoading","history","dispatch","token","config","headers","Authorization","transformRequest","formData","axios","post","process","status","swal","title","text","icon","buttons","timer","then","push","ProjectDetail","slug","get","LatestProjectDetail","ProjectList","NftList","uploadNFT","FormData","append","success","catch","error","getPublicLiveProjects","createAsyncThunk","thunkAPI","projectType","latitude","longitude","UpdateProject","props","window","location","CategoriesAction","GetCollectionsAction","GetSocialMediaIcons","GetSettings","GetNftwol","GetfundraiserProject","UpdateNft","nft_id","AddNftAction","projid","GetbuyedNftDetails","ResellNft","onHide","createAlchemyWeb3","require","contractABI","isMetaMaskInstalled","Boolean","ethereum","web3","Roles","creatorWalletUpdate","selectedAddress","UpdateWalletAddress","ConnectWallet","chainId","networkVersion","request","method","utils","toHex","code","chainName","nativeCurrency","decimals","symbol","rpcUrls","addressArray","obj","address","target","rel","href","getCurrentWalletConnected","length","UpdateStatus","token_id","transaction_hash","pay_from","pay_to","price","start_date","end_date","UpdateContract","collid","contractAddress","CreateMetaDataAndMint","_imgBuffer","_des","_name","setCurrent","nft_file_content","eth","Contract","abi","contract","sendTransaction","to","from","methods","mint","encodeABI","on","hash","receipt","confNumber","tokid","hexToNumber","logs","topics","transactionHash","alert","UpdateBuyHistory","proj_id","refid","txd_id","payFrom","tokenId","values","updateReffid","referral_fees","fees","BuyNft","platformFee","sellingCount","ownerFee","flow","ownerWallet","loadingg","modal","wallets","fee","buyer_data","map","x","karmatica_fees","project_data","console","log","nftContract","memory_clients","wal","memory_amounts","amt","amountToSend","toWei","transferowner","buyNft","JSON","stringify","Register","GetUserAction","CreateOrganizationAfterRoleChange","CountryList","StateList","CityList","AnnualRevenueList","HearAboutList","UpdateProfileAction","Swal","fire","html","showCloseButton","showConfirmButton","focusConfirm","AllNoti","NotiDelete","delete","Header","useLocation","useHistory","useDispatch","useState","setAddress","add1","slice","toUpperCase","add2","userRole","useSelector","getSelectedAddress","useEffect","accounts","userdet","notiHandler","activeOption","setActiveOption","roleHandler","ChangeUserRole","WalletHandler","is_new_user","continue","skip","value","className","src","alt","exact","activeClassName","onClick","confirmButtonText","confirmButtonAriaLabel","handleCreate","pathname","notification_count","notification","moment","created_at","format","style","color","backgroundColor","email","class","display","user_id","projectTypesMap","Hero","options","enableHighAccuracy","timeout","maximumAge","pos","crd","coords","errors","err","warn","mostactivityProjects","cursor","navigator","geolocation","permissions","query","result","getCurrentPosition","onchange","image","user_data","username","xmlns","viewBox","version","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fill","fillRule","points","dur","repeatCount","attributeName","AuctionsOne","match","join","idx","Math","round","number_of_nft","collectionSlice","collection","collectiondetail","getPopularCollection","getPopularCollectiondetails","collectionReducer","PopularCollectionAction","PopularCollectionActionDetails","Collections","coll","avatar","width","height","nft_data","preHeading","heading","workData","Work","footerSlice","footer","aboutus","getfooter","getabout","footerReducer","getFooter","AboutUsAction","Footer","Date","getFullYear","ModalSearch","placeholder","ModalMenu","Scrollup","fundraiserSlice","fundraiser","fundraiserdetail","getTopFundraiser","getTopFundraiserDetail","fundraiserReducer","TopFundraiserAction","TopFundraiserDetail","Fundraiser","fund","organization_detail","banner_image","organization_name","amount","resellSlice","resell","reselldetails","getResell","getReselldetails","resellReducer","ResellAction","Resell","nfts","Home","Breadcrumb","this","subpage","page","Component","ExploreTwo","exploreData","setState","btnText","img","owner","ExploreOne","Loader","Spinner","animation","margin","GetAllProjects","loading","showDeleteHandler","dangerMode","willDelete","DeleteProject","Map","is_nft_mintted","description","LatestProject","Auctions","ReadMore","isReadMore","setIsReadMore","dangerouslySetInnerHTML","__html","FundTransdataTable","Panel","Collapse","expandIconPosition","funddetail","country","defaultActiveKey","onChange","key","opacity","d","cx","cy","r","header","Table","responsive","payment_history","items","project_id","UserTransdataTable","useParams","ProjDetailPopup","useRef","useForm","register","handleSubmit","formState","setValue","control","watch","setDescription","setType","setCountry","setCity","handleChangeCountry","event","preventDefault","currentTarget","handleChangeState","handleChangeCity","cities","projdetail","cat","Object","keys","category_id","Modal","size","centered","Body","onSubmit","required","render","field","onBlur","ref","disabled","selected","option","defaultValue","min","max","today","dd","String","getDate","padStart","mm","getMonth","disablePastDate","UserdataTable","React","wallet_id","referrers","referral_amount","total_fundraised","ProjdataTable","modalShowproj","setModalShowproj","latprojdetail","date1","updated_at","time_difference","getTime","days_difference","ceil","show","dayjs","country_name","state_name","city_name","category","LatNftdataTable","project_activity","nft_title","ProjNFTS","marginLeft","sold_nft","CollectionNFTS","collNft","CollectionDetails","Web3","providers","HttpProvider","ItemDetails","Activity","tabData_1","tabData_2","tabData_3","filterData","tabTitle_1","tabTitle_2","tabTitle_3","time","seller","widgetTitle","initData","pre_heading","content","HelpCenter","btnClass","quote","contentId","contentClass","Faq","Authors","authorData","author","TopSeller","sellerData","UploadImage","initalImag","setImageSrc","imageSrc","initialImage","borderRadius","language","objectFit","compressInitial","hideDownloadBtn","imageSrcProp","imageChanged","newDataUri","dataURLtoBlob","dataurl","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","Banner","Title","Upload","Button","UpdateBanner","AvatarUpload","BannerUpload","AuthorProfile","modalSho","setModalSho","modalShowavatar","setModalShowavatar","textTransform","filter_1","filter_2","filter_3","filter_4","filter_5","group","likes","Author","Wallet","handleConnect","walletData","WalletConnect","FormContext","createContext","FormProvider","children","setData","Provider","setFormValues","prevValues","useFormData","useContext","Create","current","next","prev","setPrice","setImage","usertype","setUserType","nonft","setNonft","mode","imageUri","date","setDate","toISOString","substr","defaultValue1","styles","showForm","hideForm","imageBanner","defaultChecked","e","htmlFor","pattern","rules","minLength","tabIndex","newContent","maxLength","step","entries","MyVerticallyCenteredModal","dat","short_url","CreateCollectionAction","DModal","vdo","refContainer","renderer","setRenderer","source","file","container","scW","clientWidth","scH","clientHeight","THREE","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","outputEncoding","appendChild","domElement","scene","scale","camera","initialCameraPosition","sin","PI","cos","ambientLight","add","controls","OrbitControls","autoRotate","enableZoom","minDistance","minZoom","GLTFLoader","load","gltf","traverse","child","isMesh","m","receiveShadow","castShadow","isLight","l","shadow","bias","mapSize","xhr","animate","loaded","total","req","frame","requestAnimationFrame","p","rotSpeed","sqrt","pow","position","y","z","lookAt","update","cancelAnimationFrame","dispose","left","top","UploadNft","editor","count","setCount","nft_description","setNft_description","modalShow","setModalShow","nft_collection_id","setNft_collection_id","nft","setNft","nftwidth","setNftwidth","nftHeight","setNftheight","Pimage","setPimage","coll_id","setSource","sourceType","setSourceType","setNFtExtension","preview","setPreview","convertToBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","previewChange","index","pimage","files","base64","prevState","defaultValues","col","lat","onFinish","nftImagepromises","all","imagesRes","addedImage","image_hash","extension","check","includes","nft_name","Form","form","initialValues","autoComplete","List","fields","remove","transform","restField","Item","MinusCircleOutlined","prevCount","previ","onHandleClick","background","marginBottom","border","variant","backgroundImage","backgroundSize","backgroundRepeat","maxCount","filetype","fr","Image","handleUpload","accept","URL","createObjectURL","backgroundPosition","block","PlusOutlined","steps","UploadNftIndex","Login","login","password","FormCard","currentStep","prevFormStep","formSchema","Yup","shape","confirm_password","oneOf","Signup","formStep","nextFormStep","resolver","yupResolver","errMessage","errmessage","validate","val","CreateOrganization","goBack","socialmedia","logo","goal","url","tax_id","social","social_link","disp","SignupIndex","setFormStep","contactSlice","contact","postContact","contactReducer","Contact","subject","ContactAction","cols","rows","ForgotPassword","forgotpassword","statusCode","Forgot","TOKEN_KEY","PrivateRoute","component","rest","restricted","Geonames","lan","encoding","EditProject","ProjectUpdate","TermsConditions","TermsCond","ExploreAll","All","AllCollections","ColExplore","AboutUs","about","Aboutus","ReferalPopup","copy","setCopy","userRef","userprojurl","TwitterShareButton","TwitterIcon","FacebookShareButton","FacebookIcon","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","EmailIcon","onMouseLeave","EditNft","nftFileType","setNFtFileType","previewnft","setPreviewnft","modalShowcoll","setModalShowcoll","nftdetail","setFieldsValue","collection_id","nft_image","preview_imag","extention","NftdataTable","collectionData","contract_id","GetMatic","setMatic","ProjDetails","search","URLSearchParams","modalShowrefer","setModalShowrefer","Number","project_count","cad","referrer_id","ProgressBar","varient","now","project_percentage","user_invest","latprojDetails","ShowCollections","Showcollections","CollItem","coldetail","GetCollectionDetails","CollectionDetail","DesPopup","ProjNftDetails","setmatic","nftId","modalShowDes","setModalShowDes","is_mint","ProjNft","NftPopup","Step","Steps","closeButton","direction","LoadingOutlined","CheckOutlined","NftTransdataTable","latprojnftdetail","nft_history","LatNftDataTable","CONTRACT_ADDRESS_URL","BuyPopup","LatprojNftDetails","ownwallet","buymodalShow","setBuyModalShow","getSett","find","buyHandler","selling_count","payment_flow","karmatica_fee","reffHandler","Class","owned_by","NftAuctiondataTable","bidstatus","setBidStatus","acceptHandler","UpdateBId","bids","SellPopup","auctiontype","setAuctionType","autionTypeChange","deployContract","MyNFTContract","NFTContract","getGasPrice","deploy","bytecode","arguments","send","ismint","OnSubmit","nftid","EditNftName","EditNftDesc","EditNftImage","NftDetails","setNftID","projslug","sellmodalShow","setSellModalShow","modalShowedit","setModalShowedit","modalShoweditdes","setModalShoweditdes","modalShoweditimg","setModalShoweditimg","Nft","FunddataTable","tax_number","web_url","FundraiserDetail","fundprojdetail","investHandler","FundDetail","latnftprojDetails","ScrollToTop","scrollTo","AddNft","AddNFT","GetAllFundraise","AllFundraiser","GetAllFundraiseProjects","AllFundraiserProjects","MyFundraiserDetail","FundraiserProjects","Rewards","NftReward","AllNotifications","nooti","Notifi","ExploreBuyedNfts","purchase_nft","BuyedNft","NftBuydataTable","BuyedNftDetails","nft_type","BuyNftDetail","RoleChangeOrganizationdetails","createOrganizationafterRoleChange","ResellNftDetails","resellnftdetail","ResellActionDetails","ResellDetail","ExploreAllResell","AllResellNft","RefralTransdataTable","referral_history","collection_slug","collection_name","AllReraltrans","MyRouts","path","ThemeOne","ExploreFour","App","combineReducers","createproject","latestprojects","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc2e5445.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3EpRl\",\"formCard\":\"styles_formCard__128GU\",\"formRow\":\"styles_formRow__31I_A\",\"back\":\"styles_back__2acxp\",\"input-error\":\"styles_input-error__1SwWq\",\"error\":\"styles_error__10-bT\",\"disabledBtn\":\"styles_disabledBtn__3b7hK\",\"steps\":\"styles_steps__29JeH\",\"errorText\":\"styles_errorText__Ha8IR\",\"hideForm\":\"styles_hideForm__3in2Q\",\"showForm\":\"styles_showForm__105xC\"};","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\nconst userToken = localStorage.getItem('authToken')\r\n    // ? JSON.parse(localStorage.getItem('user'))\r\n    ? localStorage.getItem('authToken')\r\n    : null\r\n\r\nconst authSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: {},\r\n        userdetail: [],\r\n        userToken,\r\n        role: null,\r\n        // wallToken,\r\n        logout: {},\r\n        message: {},\r\n        countries: [],\r\n        states: [],\r\n        city: [],\r\n        noti: [],\r\n        annualRevenue: [],\r\n        hereAbout: [],\r\n        updpro: [],\r\n        wallesign: [],\r\n        organization: false\r\n    },\r\n    reducers: {\r\n        registerSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.userToken = action.payload.data.data.auth_token;\r\n            state.role = action.payload.data.data.role;\r\n            localStorage.setItem('authToken', action.payload.data.data.auth_token)\r\n        },\r\n        registerFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        allnotification: (state, action) => {\r\n\r\n            state.noti = action.payload.data.data\r\n        },\r\n        updateprofile: (state, action) => {\r\n            // \r\n            state.updpro = action?.payload?.data?.data;\r\n        },\r\n        userDetail: (state, action) => {\r\n            // \r\n            state.userdetail = action.payload.data.data\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.role = action.payload?.data?.data?.role;\r\n            state.message = action.payload?.data?.message\r\n            state.userToken = action.payload?.data?.data?.auth_token;\r\n            localStorage.setItem('authToken', action.payload?.data?.data?.auth_token)\r\n        },\r\n        logoutSuccess: (state) => {\r\n            localStorage.removeItem('authToken')\r\n            state.user.role = null\r\n            state.userToken = null\r\n        },\r\n        forgotpasswordSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.message = action.payload.data.message\r\n\r\n        },\r\n        createOrganizationSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.organization = true\r\n        },\r\n        wallsignin: (state, action) => {\r\n            state.wallesign = action.payload?.data?.data;\r\n        },\r\n        getCountryList: (state, action) => {\r\n            state.countries = action.payload;\r\n        },\r\n        getStateList: (state, action) => {\r\n            state.states = action.payload;\r\n        },\r\n        getCityList: (state, action) => {\r\n            state.city = action.payload;\r\n        },\r\n\r\n        getAnnualRevenueList: (state, action) => {\r\n            state.annualRevenue = action.payload;\r\n        },\r\n\r\n        getHearAboutList: (state, action) => {\r\n            state.hereAbout = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer\r\n\r\nexport const {\r\n    allnotification,\r\n    registerSuccess,\r\n    createOrganizationSuccess,\r\n    getCountryList,\r\n    getStateList,\r\n    getCityList,\r\n    getAnnualRevenueList,\r\n    getHearAboutList,\r\n    loginSuccess,\r\n    forgotpasswordSuccess,\r\n    logoutSuccess,\r\n    registerFail,\r\n    userDetail,\r\n    wallsignin,\r\n    updateprofile\r\n} = authSlice.actions;","import { createSlice } from '@reduxjs/toolkit'\r\n// // Slice\r\n// const userToken = localStorage.getItem('authToken')\r\n//     // ? JSON.parse(localStorage.getItem('user'))\r\n//     ? localStorage.getItem('authToken')\r\n//     : null\r\nconst projectSlice = createSlice({\r\n    name: 'project',\r\n\r\n    initialState: {\r\n        project: [],\r\n        projects: [],\r\n        nftlist: [],\r\n        projectdetails: [],\r\n        latestprojectdetails: [],\r\n        categories: [],\r\n        collections: [],\r\n        getcollections: [],\r\n        getcollectiondetails: [],\r\n        collectiondetails: [],\r\n        getSocialmediaIcons: [],\r\n        getfundProjDetails: [],\r\n        getmostProjActivity: [],\r\n        getBuyedNftdetails: [],\r\n        getnftwoldetails: [],\r\n        settings: [],\r\n        nftadd: [],\r\n        nftres: [],\r\n        nftupdate: [],\r\n        updbanner: [],\r\n        matic: [],\r\n        // liveProjects: [],\r\n        liveProjects: {\r\n            LatestProjects: [],\r\n            RecentCampaigns: []\r\n        },\r\n        message: {},\r\n    },\r\n    reducers: {\r\n        createProjectSuccess: (state, action) => {\r\n            state.project = action.payload;\r\n        },\r\n        createCollectionSuccess: (state, action) => {\r\n            state.collections = action.payload;\r\n        },\r\n        getCollections: (state, action) => {\r\n            // \r\n            state.getcollections = action?.payload?.data?.data;\r\n        },\r\n        getSocialmediaIcons: (state, action) => {\r\n            // \r\n            state.getsocial = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetails: (state, action) => {\r\n            // \r\n            state.getcollectiondetails = action?.payload?.data?.data;\r\n        },\r\n        getNftwolDetails: (state, action) => {\r\n            // \r\n            state.getnftwoldetails = action?.payload?.data?.data;\r\n        },\r\n        nftUpd: (state, action) => {\r\n            // \r\n            state.nftupdate = action?.payload?.data?.data;\r\n        },\r\n        nftAdd: (state, action) => {\r\n            // \r\n            state.nftadd = action?.payload?.data?.data;\r\n        },\r\n        getfundprojdetails: (state, action) => {\r\n            // \r\n            state.getfundProjDetails = action?.payload?.data?.data;\r\n        },\r\n        getmostprojactivity: (state, action) => {\r\n            state.getmostProjActivity = action?.payload?.data?.data;\r\n        },\r\n        getbuyednftdetails: (state, action) => {\r\n            state.getBuyedNftdetails = action?.payload?.data?.data;\r\n        },\r\n        getProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        getMatic: (state, action) => {\r\n            state.matic = action.payload?.data?.data\r\n        },\r\n        getCategoriesList: (state, action) => {\r\n            state.categories = action?.payload?.data?.data;\r\n        },\r\n        getSettings: (state, action) => {\r\n            state.settings = action?.payload?.data?.data;\r\n        },\r\n\r\n        getLatestProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        createFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        getProjectDetail: (state, action) => {\r\n            // \r\n            state.projectdetails = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetail: (state, action) => {\r\n            // \r\n            state.collectiondetails = action?.payload?.data?.data;\r\n        },\r\n        Nftres: (state, action) => {\r\n            // \r\n            state.nftres = action?.payload?.data?.data;\r\n        },\r\n        getNftList: (state, action) => {\r\n            // \r\n            state.nftlist = action?.payload?.data?.data;\r\n        },\r\n        getLatestProjectDetail: (state, action) => {\r\n            // \r\n            state.latestprojectdetails = action?.payload?.data?.data;\r\n        },\r\n        updatebanner: (state, action) => {\r\n            // \r\n            state.updbanner = action?.payload?.data?.data;\r\n        },\r\n        publicLiveProjects: (state, action) => {\r\n            state.liveProjects[action.payload.type] = action.payload.res.data.data.data\r\n            // state.liveProjects = action.payload.data.data.data\r\n            // state.liveProjects['R'] = action.payload.data.data.data\r\n        },\r\n        deleteProject: (state, action) => {\r\n            const { id } = action.payload?.data?.data;\r\n            state.projects = state.projects.filter(item => item.id !== id)\r\n        }\r\n    },\r\n});\r\n\r\nexport const projectReducer = projectSlice.reducer\r\n\r\nexport const {\r\n    createProjectSuccess,\r\n    getProjectList,\r\n    getProjectDetail,\r\n    getLatestProjectDetail,\r\n    publicLiveProjects,\r\n    createCollectionSuccess,\r\n    deleteProject,\r\n    createFail,\r\n    getLatestProjectList,\r\n    getCategoriesList,\r\n    getCollections,\r\n    getbuyednftdetails,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getCollectionDetail,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    Nftres,\r\n    updatebanner,\r\n    getmostprojactivity,\r\n    nftUpd,\r\n    nftAdd,\r\n    getMatic\r\n} = projectSlice.actions;","import axios from \"axios\";\r\nimport {\r\n    createProjectSuccess,\r\n    getProjectDetail,\r\n    getProjectList,\r\n    createFail,\r\n    publicLiveProjects,\r\n    deleteProject,\r\n    getLatestProjectDetail,\r\n    getCategoriesList,\r\n    createCollectionSuccess,\r\n    getCollections,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    updatebanner,\r\n    nftUpd,\r\n    nftAdd,\r\n    getMatic,\r\n    getmostprojactivity,\r\n    getbuyednftdetails\r\n} from \"../Slices/projectSlice\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport swal from \"sweetalert\";\r\n\r\nexport const CreateProjectAction = (params, setLoading, history) => async dispatch => {\r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        // \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(createProjectSuccess(res));\r\n\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal({ title: \"success\", text: res.data.message, icon: 'success', buttons: false, timer: 1500 })\r\n                .then(() => {\r\n                    history.push(\"/projectlist\");\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectDetail = (slug) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/details/${slug}`,\r\n            config)\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        // console.log('details', res)\r\n        dispatch(getProjectDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const LatestProjectDetail = (slug) => async dispatch => {\r\n    // debugger\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjectDetails/${slug}`,\r\n            config)\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getLatestProjectDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectList = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    // setLoading(true)\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/list`,\r\n            config)\r\n\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        await dispatch(getProjectList(res.data?.data));\r\n        // setLoading(false)\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            // setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const NftList = (slug) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdx/${slug}`,\r\n            config)\r\n\r\n        // console.log(res, 'proj')\r\n        await dispatch(getNftList(res));\r\n\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const uploadNFT = async (params) => {\r\n    // debugger\r\n    // const [loading, setLoading] = useState()\r\n    // setLoading(true)\r\n    const token = localStorage.getItem('authToken')\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        // transformRequest: formData.append('image', params)\r\n    }\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", params);\r\n    return axios\r\n        .post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n            formData, config)\r\n        .then(function (response) {\r\n            // setLoading(false)\r\n            // console.log(response, 'resss')\r\n            return {\r\n                success: true,\r\n                data: response.data,\r\n            };\r\n        })\r\n        .catch(function (error) {\r\n            // swal('error!', 'NFT not uploaded', 'error')\r\n            // uploadNFT(setLoading(false))\r\n        });\r\n    // formData.append('image',params)\r\n\r\n    // const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n    //     params, config)\r\n    // \r\n    // console.log('rasasses', res)\r\n    // return res\r\n    // await dispatch(Nftres(res))\r\n\r\n}\r\n\r\n\r\nexport const getPublicLiveProjects = createAsyncThunk(\r\n    \"auth/liveProjects\",\r\n\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const { projectType } = params\r\n            const latitude = localStorage.getItem('latitude')\r\n            const longitude = localStorage.getItem('longitude')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjects?page=&latitude=${latitude}&longitude=${longitude}&search_keyword=&category_id=&type`, config)\r\n            // console.log(res, 'projres')\r\n            thunkAPI.dispatch(publicLiveProjects({\r\n                res: res,\r\n                type: projectType,\r\n            }));\r\n            // thunkAPI.dispatch(publicLiveProjects(res));\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n\r\nexport const UpdateProject = (props, params) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/update/${props}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'proj')\r\n        await dispatch(getProjectDetail(res));\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = `/projnftdetails/${props}`;\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const DeleteProject = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/projects/destroy/${id}`,\r\n            config)\r\n        // \r\n        // console.log(res.status, 'proj')\r\n        await dispatch(deleteProject(res));\r\n        if (res.status === 200) {\r\n            dispatch(ProjectList())\r\n            // swal(\"success\", res.data.message, 'success').then(function () {\r\n            //     window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CategoriesAction = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCategories`, config)\r\n        // console.log(res, 'catres')\r\n        dispatch(getCategoriesList(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const GetCollectionsAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollection`,\r\n            config)\r\n        // console.log('colres', res)\r\n        await dispatch(getCollections(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CreateCollectionAction = ({ dat, imageBanner, props }) => async dispatch => {\r\n    try {\r\n        const formData = new FormData()\r\n        formData.append('title', dat.title)\r\n        formData.append('description', dat.description)\r\n        formData.append('short_url', dat.short_url)\r\n        formData.append('symbol', dat.symbol)\r\n        formData.append('image', imageBanner)\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createCollection`, formData,\r\n            config)\r\n        // dispatch(GetCollectionsAction)\r\n        await dispatch(createCollectionSuccess(res));\r\n        if (res?.status === 200) {\r\n\r\n            await dispatch(GetCollectionsAction());\r\n            props.onHide(false)\r\n            // swal(\"success\", 'Collection Created', 'success')\r\n            // .then(function () {\r\n            //     onClick={() => props.onHide()}\r\n            // });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\nexport const GetCollectionDetails = (id) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollectionById/${id}`,\r\n            config)\r\n\r\n        await dispatch(getCollectionDetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSocialMediaIcons = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSocialMediaIcon`,\r\n            config)\r\n        // console.log('social', res)\r\n        await dispatch(getSocialmediaIcons(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateCollection = (id, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${id}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(getLatestProjectDetail(res));\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSettings = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSettings`,\r\n            config)\r\n        // \r\n        // console.log(res, 'sett rres')\r\n        await dispatch(getSettings(res));\r\n\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetNftwol = ({ slug }) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdxWithoutLogin/${slug}`,\r\n            config)\r\n\r\n        await dispatch(getNftwolDetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetfundraiserProject = (slug) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getProjectByfundraiserIdx/${slug}`,\r\n            config)\r\n\r\n        await dispatch(getfundprojdetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateBanner = (formData, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/image_update/${params}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(updatebanner(res));\r\n\r\n        if (res.status === 200) {\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                dispatch(ProjectDetail(params))\r\n                dispatch(LatestProjectDetail(params))\r\n                // window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const UpdateNft = (formData, props, setLoading) => async dispatch => {\r\n    // debugger\r\n\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/update/${props.id}/${props.nft_id?.id}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftUpd(res));\r\n\r\n        if (res.status === 200) {\r\n            swal(\"success\", \"updated\", 'success')\r\n            setLoading(false)\r\n            dispatch(NftList(props.nft_id?.id))\r\n            dispatch(ProjectDetail(props.id))\r\n            // .then(function () {\r\n            //     window.location = `/nft/details/${props.nft_id?.id}?project=${props.id}`;\r\n\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const AddNftAction = (formData, projid, slug, setLoading) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/create/${projid}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftAdd(res));\r\n\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                // dispatch(ProjectDetail(props.id))\r\n                // dispatch(LatestProjectDetail(params))\r\n                window.location = `/projnftdetails/${slug.id}`;\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetMatic = () => async dispatch => {\r\n\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n\r\n        }\r\n        // \r\n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\r\n            config\r\n        )\r\n        await dispatch(getMatic(res))\r\n        console.log('res', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};\r\nexport const getBid = (id) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getBidsDetailByIdx/${id}}`,\r\n            config)\r\n        await dispatch(res)\r\n        console.log('res bid', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};\r\nexport const UpdateBId = ({ id, status }) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/change_bids_status/${id}}`,\r\n            { status: status }, config)\r\n        await dispatch(res)\r\n        console.log('res bid', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};\r\n\r\nexport const GetMostactivityProject = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getMostActivityProject`,\r\n            config)\r\n\r\n        await dispatch(getmostprojactivity(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetbuyedNftDetails = (slug) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPurchaseNftDetailByIdx/${slug?.slug}`,\r\n            config)\r\n\r\n        await dispatch(getbuyednftdetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ResellNft = (params, props) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/create_resale_nft`,\r\n            params, config)\r\n        await dispatch(res())\r\n        if (res?.status === 200) {\r\n            await dispatch(GetbuyedNftDetails(props.slug?.slug))\r\n            props.onHide(false)\r\n        }\r\n    } catch (e) {\r\n        // console.log(\"error\");\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n};","\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport { NftList } from '../../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\n\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n\r\nconst contractABI = require('../../backend/contracts/artWork.sol/NFTContract.json')\r\n\r\n\r\nfunction isMetaMaskInstalled() {\r\n  return Boolean(window.ethereum);\r\n}\r\n\r\n// const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\n\r\nexport const Roles = {\r\n  \"ADMIN\": 1,\r\n  \"BUYER\": 2,\r\n  \"CREATOR\": 3\r\n}\r\n\r\nexport const creatorWalletUpdate = async (auth_token) => {\r\n  try {\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/wallet/connect`,\r\n      formData, config\r\n    )\r\n\r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n}\r\n\r\nexport const UpdateWalletAddress = async (role, auth_token = null) => {\r\n  try {\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    formData.append('role', Roles[role])\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/sign_in`,\r\n      formData, config\r\n    )\r\n\r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n};\r\n\r\nexport const ConnectWallet = async (role) => {\r\n\r\n  const chainId = 80001// Polygon Mainnet\r\n\r\n  if (window?.ethereum?.networkVersion !== chainId) {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: web3.utils.toHex(chainId) }]\r\n      });\r\n\r\n    } catch (err) {\r\n      // This error code indicates that the chain has not been added to MetaMask\r\n      if (err.code === 4902) {\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainName: 'Mumbai Testnet',\r\n              chainId: web3.utils.toHex(chainId),\r\n              nativeCurrency: { name: 'MATIC', decimals: 18, symbol: 'MATIC' },\r\n              rpcUrls: ['https://rpc-mumbai.maticvigil.com/']\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  }\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n\r\n    if (window.ethereum) {\r\n      try {\r\n        const addressArray = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: web3.utils.toHex('80001') }],\r\n        })\r\n\r\n        const obj = {\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n          address: addressArray[0],\r\n        };\r\n\r\n        const res = await UpdateWalletAddress(role)\r\n        return {\r\n          ...obj,\r\n          res\r\n        }\r\n\r\n      } catch (err) {\r\n        return {\r\n          address: \"\",\r\n          status: \"😥 \" + err.message,\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        address: \"\",\r\n        status: (\r\n          <span>\r\n            <p>\r\n              {\" \"}\r\n              🦊{\" \"}\r\n              <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n                You must install Metamask, a virtual Ethereum wallet, in your\r\n                browser.\r\n              </a>\r\n            </p>\r\n          </span>\r\n        ),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      // \r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      // console.log(addressArray, 'address')\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n          status: \"🦊 Connect to Metamask using the top right button.\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const UpdateStatus = async ({ slug, token_id, transaction_hash, pay_from, pay_to, type }) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('is_mint', '1');\r\n    formData.append('token_id', token_id);\r\n    formData.append('transaction_hash', transaction_hash);\r\n    formData.append('pay_from', pay_from);\r\n    formData.append('pay_to', pay_to);\r\n    formData.append('type', type.type)\r\n    formData.append('price', type.price)\r\n    formData.append('start_date', type.start_date)\r\n    formData.append('end_date', type.end_date)\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/NftUpdate/${slug}`,\r\n      formData, config\r\n\r\n    )\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nconst UpdateContract = async (collid, contractAddress) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('contract_id', contractAddress);\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${collid}`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const sendFileToIPFS = async (fileImg) => {\r\n  if (fileImg) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", fileImg);\r\n\r\n      const resFile = await axios({\r\n        method: \"post\",\r\n        url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\r\n        data: formData,\r\n        headers: {\r\n          'pinata_api_key': `${process.env.REACT_APP_PINATA_API_KEY}`,\r\n          'pinata_secret_api_key': `${process.env.REACT_APP_PINATA_API_SECRET}`,\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        },\r\n      });\r\n\r\n      const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n\r\n      return ImgHash\r\n\r\n    } catch (error) {\r\n      // console.log(\"Error sending File to IPFS: \")\r\n      // console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const CreateMetaDataAndMint = async ({ dispatch, slug, _imgBuffer, _des, _name, setCurrent, contractAddress, collid, nft_file_content, type, price, start_date, end_date }) => {\r\n\r\n  const contract = await new web3.eth.Contract(contractABI.abi, contractAddress);//loadContract();\r\n  // new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\");//loadContract();\r\n\r\n  try {\r\n    let txHash = null\r\n\r\n    // const web3 = new Web3(window.ethereum);\r\n\r\n    await web3.eth.sendTransaction({\r\n      to: contractAddress, // Required except during contract publications.\r\n      // to: \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\", // Required except during contract publications.\r\n      from: window.ethereum.selectedAddress,\r\n      data: contract.methods.mint(nft_file_content).encodeABI() //make call to NFT smart contract\r\n    })\r\n      .on('transactionHash', function (hash) {\r\n        txHash = hash\r\n\r\n        // console.log('txhash11', txHash)\r\n\r\n        setCurrent(1)\r\n      })\r\n      .on('receipt', function (receipt) {\r\n        // console.log(receipt, 'recipt')\r\n        // console.log(receipt.logs[0].topics[3])\r\n        setCurrent(1)\r\n      })\r\n      .on('confirmation', async (confNumber, receipt) => {\r\n        if (confNumber == 1) {\r\n\r\n          if (collid != 1) {\r\n\r\n            await UpdateContract(collid, contractAddress)\r\n          }\r\n\r\n\r\n          // await UpdateContract(collid, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n          const tokid = web3.utils.hexToNumber(receipt.logs[0].topics[3])\r\n\r\n          // console.log(startdate)\r\n          await UpdateStatus({ slug: slug.id, token_id: tokid, transaction_hash: receipt.transactionHash, pay_from: receipt.from, pay_to: receipt.to, type, price, start_date, end_date })\r\n          setCurrent(2)\r\n          await dispatch(NftList(slug.id))\r\n\r\n          // history.push(`nft/details/${slug.id}`)\r\n          // return redirect(`nft/details/${id}`)\r\n          // console.log('tokid', tokid)\r\n        }\r\n      })\r\n      .on('error', function (error) {\r\n\r\n      })\r\n\r\n    // \r\n    // console.log('txHash', txHash)\r\n    return {\r\n      success: true,\r\n      // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n      status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n    }\r\n  } catch (error) {\r\n    // \r\n    alert(\"went wrong\")\r\n    return {\r\n      success: false,\r\n      status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n    }\r\n  }\r\n}\r\n\r\nconst UpdateBuyHistory = async (nft_id, proj_id, refid, txd_id, payFrom, pay_to, tokenId, values) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('price', nft_id.values);\r\n    formData.append('txd_id', nft_id.txd_id);\r\n    formData.append('project_id', nft_id.proj_id);\r\n    formData.append('nft_id', nft_id.nft_id);\r\n    formData.append('pay_from', nft_id.payFrom);\r\n    formData.append('pay_to', nft_id.pay_to);\r\n    formData.append('token_id', nft_id.tokenId);\r\n    formData.append('ref_id', nft_id.refid);\r\n    formData.append('status', '1');\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/transaction/store`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const updateReffid = async ({ tokenId, refid, nft_id, }) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('token_id', tokenId);\r\n    formData.append('ref_id', refid);\r\n    formData.append('nft_id', nft_id);\r\n\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getUserPercentage`,\r\n      formData, config\r\n    )\r\n    // await dispatch(res())\r\n    // const reffee = localStorage.setItem('refamount', res?.data?.data?.referral_fees[0]?.fees)\r\n    if (res?.status === 200) {\r\n      await localStorage.setItem('refamount', res?.data?.data?.referral_fees[0]?.fees)\r\n    }\r\n\r\n    // if (res.status === 200) {\r\n    // setRefamount(res?.data?.data)\r\n    // }\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\nexport const BuyNft = async ({ contractAddress, tokenId, payFrom, values, platformFee, sellingCount, ownerFee, flow, ownerWallet, refid, proj_id, nft_id, loadingg, modal }) => {\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n\r\n    try {\r\n      // if (refid == null) {\r\n      //   setReferalid(\"\")\r\n\r\n      // }\r\n\r\n      let wallets = []\r\n      let fee = []\r\n\r\n\r\n      wallets = refid === \"null\" ? [...wallets, ...flow[0]?.buyer_data?.map(x => x.wallets), flow[0]?.karmatica_fees[0]?.wallets, flow[0]?.project_data[0]?.wallets] : [...wallets, ...flow[0]?.buyer_data?.map(x => x.wallets), flow[0]?.karmatica_fees[0]?.wallets, flow[0]?.project_data[0]?.wallets, refid]\r\n      fee = refid === \"null\" ? [...fee, ...flow[0]?.buyer_data?.map(x => x.fees), flow[0]?.karmatica_fees[0]?.fees, flow[0]?.project_data[0]?.fees] : [...fee, ...flow[0]?.buyer_data?.map(x => x.fees), flow[0]?.karmatica_fees[0]?.fees, flow[0]?.project_data[0]?.fees, localStorage.getItem('refamount')]\r\n      console.log(fee)\r\n      console.log(wallets)\r\n\r\n\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      const obj = {\r\n        status: \"👆🏽 Write a message in the text-field above.\",\r\n        address: addressArray[0],\r\n      };\r\n\r\n      const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n      // const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n\r\n      // const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n\r\n      const memory_clients = wallets.map(wal => {\r\n\r\n        return (`${wal}`)\r\n      })\r\n\r\n\r\n\r\n      const memory_amounts = fee.map(amt => {\r\n        const amountToSend = ((amt / 100) * 0.03)\r\n        return web3.utils.toWei(`${amountToSend}`, \"ether\")\r\n      })\r\n\r\n      const transferowner = {\r\n        'from': window.ethereum?.selectedAddress,\r\n        'to': contractAddress,\r\n        // 'to': \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\",\r\n        // 'value': web3.utils.toWei(`${values}`),\r\n        'value': web3.utils.toWei('0.03', 'ether'),\r\n        // 'input': nftContract.methods.buyNft(contractAddress, tokenId).encodeABI()\r\n        'input': nftContract.methods.buyNft(contractAddress, tokenId, memory_clients, memory_amounts).encodeABI()\r\n      };\r\n\r\n      // const txHash = await web3.eth.sendTransaction(tx)\r\n\r\n      // console.log('txhash', txHash)\r\n      await web3.eth.sendTransaction(transferowner)\r\n        .on('transactionHash', function (hash) {\r\n          let txHash = hash\r\n          // console.log('tx', txHash)\r\n\r\n\r\n        })\r\n        .on('receipt', function (receipt) {\r\n          // console.log(receipt, 'recipt')\r\n        })\r\n        .on('confirmation', async (confNumber, receipt) => {\r\n          if (confNumber == 1) {\r\n            console.log(confNumber, 'counttrans')\r\n            console.log(receipt, 'conf')\r\n            // localStorage.setItem('txd_id', receipt.transactionHash)\r\n            // localStorage.setItem('pay_to', receipt.receipt.to)\r\n            UpdateBuyHistory({ nft_id, proj_id, refid, txd_id: receipt.transactionHash, payFrom, pay_to: window.ethereum?.selectedAddress, tokenId, values })\r\n            loadingg(false)\r\n            swal(\"success\", \"Confirmed\", 'success').then(function () {\r\n              window.location = `/my/nfts`;\r\n            });\r\n          }\r\n          // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n          // setModeShow(false)\r\n\r\n          // modalShow(false)\r\n        })\r\n        .on('error', function (error) {\r\n          // console.log(error.message, \"error\")\r\n          swal('error', JSON.stringify(error.message, 'error'))\r\n          // alert(JSON.stringify(error.message))\r\n          modal(false)\r\n          loadingg(false)\r\n        })\r\n        .then(function (receipt) {\r\n          // will be fired once the receipt is mined\r\n        })\r\n    } catch (error) {\r\n      console.log(JSON.stringify(error.message))\r\n      // alert(JSON.stringify(error.message))\r\n\r\n    }\r\n  }\r\n}\r\n\r\nconst UpdateBid = async ({ amount, project_id, nft_id, pay_to, pay_from }) => {\r\n  // debugger\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('amount', amount);\r\n    formData.append('project_id', project_id);\r\n    formData.append('nft_id', nft_id);\r\n    formData.append('pay_from', pay_from);\r\n    formData.append('pay_to', pay_to);\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/project/bids`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const BidNft = async (id, projid) => {\r\n\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n    try {\r\n\r\n\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      const obj = {\r\n        status: \"👆🏽 Write a message in the text-field above.\",\r\n        address: addressArray[0],\r\n      };\r\n\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n      // const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n      // const amountToSendPlatform = ((`${platformFee[0]?.fees}` / 100) * 0.03)\r\n      // const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n      // // const amountToSend = (amountToSendPlatform - amount, \"either\")\r\n      // const amountToSend = (0.0005)\r\n      // const amountToSend = ; // Convert to wei value\r\n      // const memory_clients = [platformFee[0].wallets, ownerWallet[0]]\r\n      // const memory_amounts = [web3.utils.toWei(`${amountToSendPlatform}`, \"ether\"), web3.utils.toWei(`${amountToSendowner}`, \"ether\")]\r\n\r\n      web3.eth.sendTransaction(\r\n        {\r\n          from: window.ethereum?.selectedAddress,\r\n          to: \"0xB79722911A09502fb54De1f7769F6624C301810a\",\r\n          value: web3.utils.toWei(\"0.01\"),\r\n          data: \"0xdf\"\r\n        }, function (err, transactionHash) {\r\n          if (!err)\r\n            console.log(transactionHash + \" success\");\r\n          UpdateBid({ amount: \"0.03\", project_id: projid, nft_id: id, pay_to: \"0xB79722911A09502fb54De1f7769F6624C301810a\", pay_from: window.ethereum?.selectedAddress })\r\n        });\r\n      // await web3.eth.sendTransaction(transferbid)\r\n      //   .on('transactionHash', function (hash) {\r\n      //     let txHash = hash\r\n      //     // console.log('tx', txHash)\r\n\r\n\r\n      //   })\r\n      //   .on('receipt', function (receipt) {\r\n      //     // console.log(receipt, 'recipt')\r\n      //   })\r\n      //   .on('confirmation', async (confNumber, receipt) => {\r\n      //     // \r\n      //     console.log(receipt, 'conf')\r\n      //     // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n      //     // setModeShow(false)\r\n\r\n      //     // modalShow(false)\r\n      //   })\r\n      //   .on('error', function (error) {\r\n\r\n      //   })\r\n      //   .then(function (receipt) {\r\n      //     // will be fired once the receipt is mined\r\n      //   })\r\n    } catch (error) {\r\n      // \r\n      alert(error)\r\n\r\n    }\r\n  }\r\n}","import axios from \"axios\";\r\nimport { allnotification, createOrganizationSuccess, getAnnualRevenueList, getCityList, getCountryList, getHearAboutList, getStateList, loginSuccess, updateprofile, userDetail } from \"../Slices/authSlice\";\r\nimport swal from \"sweetalert\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { creatorWalletUpdate } from \"../../components/Wallet/interact\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const Register = createAsyncThunk(\r\n    \"auth/register\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const token = localStorage.getItem('authToken')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                transformRequest: formData => formData\r\n            }\r\n\r\n            //create oraginization creator login\r\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/signup`,\r\n                params, config)\r\n\r\n            await creatorWalletUpdate(res?.data?.data?.auth_token)\r\n\r\n            thunkAPI.dispatch(loginSuccess(res));\r\n\r\n            if (res.status === 200) {\r\n                swal(\"success\", res.data.message, 'success').then(function () {\r\n                    window.location = \"/create\";\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data) {\r\n                if (e?.response?.data.message) {\r\n\r\n                    swal('error', e?.response?.data?.message, 'error')\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\nexport const LoginAction = (params, history) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/organization_signin`,\r\n            params, config)\r\n\r\n        dispatch(loginSuccess(res));\r\n\r\n    } catch (e) {\r\n\r\n        if (e?.response?.data.message) {\r\n\r\n            swal('error', e?.response?.data?.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ForgotPasswordAction = (params) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/forgot_pssword`,\r\n            params, config)\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = \"/login\";\r\n            });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetUserAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getUserDetails`,\r\n            config)\r\n        // console.log('userres', res)\r\n        dispatch(userDetail(res));\r\n\r\n\r\n    } catch (e) {\r\n        // \r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CreateOrganizationAction = (params) => async dispatch => {\r\n    // \r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\r\n            params, config)\r\n\r\n        dispatch(createOrganizationSuccess(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error').then(function () {\r\n                // dispatch(ProjectDetail(params))\r\n                window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    }\r\n}\r\nexport const CreateOrganizationAfterRoleChange = createAsyncThunk(\r\n    \"auth/register\",\r\n    async (params, thunkAPI) => {\r\n        // debugger\r\n        try {\r\n            const token = localStorage.getItem('authToken')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                transformRequest: formData => formData\r\n            }\r\n\r\n            //create oraginization creator login\r\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\r\n                params, config)\r\n\r\n            // await creatorWalletUpdate(res?.data?.data?.auth_token)\r\n\r\n            // thunkAPI.dispatch(loginSuccess(res));\r\n\r\n            if (res.status === 200) {\r\n                thunkAPI.dispatch(GetUserAction())\r\n                swal(\"success\", res.data.message, 'success').then(function () {\r\n                    window.location = \"/create\";\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data) {\r\n                if (e?.response?.data.message) {\r\n\r\n                    swal('error', e?.response?.data?.message, 'error')\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\nexport const CountryList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCountryList`,\r\n            config)\r\n        dispatch(getCountryList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const StateList = (formData) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getStateById`,\r\n            formData, config)\r\n        // debugger\r\n        dispatch(getStateList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CityList = (formData) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getCityById`,\r\n            formData, config)\r\n        dispatch(getCityList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AnnualRevenueList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAnnualRevenueList`,\r\n            config)\r\n        dispatch(getAnnualRevenueList(res));\r\n    } catch (e) {\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const HearAboutList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getHearAboutList`,\r\n            config)\r\n        dispatch(getHearAboutList(res));\r\n    } catch (e) {\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const UpdateProfileAction = (formData, props) => async dispatch => {\r\n\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/profileUpdate`,\r\n            formData, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        await dispatch(updateprofile(res));\r\n\r\n        if (res.status === 200) {\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                html:\r\n                    'User information saved',\r\n                showCloseButton: false,\r\n                showConfirmButton: false,\r\n                focusConfirm: false,\r\n                timer: 1000\r\n            })\r\n            dispatch(GetUserAction())\r\n            props.onHide(false)\r\n            // swal(\"success\", \"updated\", 'success')\r\n            // .then(function () {\r\n            // dispatch(ProjectDetail(params))\r\n            // window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CountSet = () => async dispatch => {\r\n    // debugger\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/notification/update`,\r\n            {}, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AllNoti = () => async dispatch => {\r\n\r\n\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAllNotification`,\r\n            config)\r\n        // \r\n        console.log(res, 'allnoti rres')\r\n        await dispatch(allnotification(res));\r\n\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const NotiDelete = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/notification/delete/${id}`,\r\n            config)\r\n        // \r\n        console.log(res, 'delete rres')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n            await dispatch(AllNoti())\r\n\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const ChangeUserRole = (history) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/change_user_roles`, \"\",\r\n            config)\r\n        // \r\n        console.log(res, 'user role')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n            if (res?.data?.data?.organization === false) {\r\n                history.push('/create/organization')\r\n            } else {\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { ChangeUserRole, CountSet, GetUserAction, NotiDelete } from '../../redux/Actions/authAction';\r\nimport swal from 'sweetalert';\r\nimport { loginSuccess, logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\nimport { isCancel } from 'axios';\r\nimport moment from \"moment\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Space, Switch, Tooltip } from 'antd';\r\n\r\nconst Header = () => {\r\n    const location = useLocation();\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [address, setAddress] = useState(null)\r\n    const [active, setActive] = useState(null)\r\n    const add1 = address?.slice(0, 4).toUpperCase()\r\n    const add2 = address?.slice(35, 44).toUpperCase()\r\n\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n        setAddress(null)\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n    // console.log(userRole)\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n        getCurrentWalletConnected()\r\n        setAddress(getSelectedAddress)\r\n\r\n        if (window.ethereum) {\r\n            window.ethereum.on('accountsChanged', function (accounts) {\r\n                if (!accounts.length) {\r\n                    setAddress(null)\r\n                    //  setIsLoggedIn(false)\r\n                    localStorage.removeItem('auth_token')\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [dispatch, address])\r\n\r\n    function getSelectedAddress() {\r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    // const names = Object?.keys(userdet?.notification?.status);\r\n    // console.log(names)\r\n    const notiHandler = () => {\r\n        // debugger\r\n        dispatch(CountSet())\r\n    }\r\n    const deleteHandler = (id) => {\r\n        dispatch(NotiDelete(id))\r\n    }\r\n    const SwitchOptions = [{\r\n        OPTION1: \"Buyer\",\r\n        OPTION2: \"Creator\"\r\n    }]\r\n    const [activeOption, setActiveOption] = useState(false);\r\n\r\n\r\n    const roleHandler = () => {\r\n        dispatch(ChangeUserRole(history))\r\n        setActiveOption(!activeOption)\r\n    }\r\n    const WalletHandler = async () => {\r\n        const response = await ConnectWallet(\"BUYER\")\r\n        const { res } = response\r\n\r\n        // debugger\r\n        if (!res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            history.push('/all/LatestProjects')\r\n        }\r\n        else if (res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            // history.push('/create')\r\n\r\n            swal({\r\n                title: \"Welcome to Karmatica!!!\",\r\n                text: \"Karmatica would like to know more about yourself. Update your profile\",\r\n                icon: \"success\",\r\n                buttons: {\r\n                    continue: '',\r\n                    skip: '',\r\n                }\r\n            }).then((value) => {\r\n                switch (value) {\r\n                    case \"continue\":\r\n                        window.location = '/profile'\r\n                        break;\r\n\r\n                    case \"skip\":\r\n                        window.location = '/all/LatestProjects'\r\n                        break;\r\n\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n        else if (!res?.data?.data?.is_new_user && Roles[\"CREATOR\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        else if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n        else if (!window.ethereum?.selectedAddress) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n    console.log(activeOption, \"active\")\r\n    return (\r\n        <header id=\"header\">\r\n            {/* Navbar */}\r\n            <nav data-aos=\"zoom-out\" data-aos-delay={800} className=\"navbar navbar-expand\">\r\n                <div className=\"container header\">\r\n                    {/* Navbar Brand*/}\r\n                    {/* <div className=\"your-required-wrapper\" style={{ width: 100, height: 30 }}> */}\r\n\r\n                    {/* </div> */}\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        <img className=\"navbar-brand-sticky desktop_logo\" src=\"/img/karmatica.png\" alt=\"karmatica\" />\r\n                        <img className=\"mobile-logo\" src=\"/img/logo.png\" alt=\"\" />\r\n                    </Link>\r\n                    <div className=\"ml-auto\" />\r\n\r\n\r\n                    {/* Navbar */}\r\n                    <ul className=\"navbar-nav items mx-auto\">\r\n                        <li className=\"nav-item dropdown\">\r\n                            <NavLink exact activeClassName=\"navbar__link--active\" className=\"nav-link\" to=\"/\">Explore</NavLink>\r\n                        </li>\r\n                        {/* {log !== null && ( */}\r\n                        <li className=\"nav-item\" >\r\n                            <a onClick={() => handleCreate()} className={location.pathname === `/create` && \"nav-link-active\"} activeClassName={location.pathname === `/create` && \"navbar__link--active\"} >Create</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact activeClassName=\"navbar__link--active\" to={`/all/${\"LatestProjects\"}`} className=\"nav-link\">Latest</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a target=\"_blank\" href=\"https://changelly.com/?from=btc&to=matic&amount=0.1&ref_id=_-GPCBjccW7TMMjO\" className=\"nav-link\">Swap</a>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    {/* Navbar Toggler */}\r\n                    {window.ethereum?.selectedAddress &&\r\n                        <div className=\"dropdown notification relative\">\r\n                            <i className=\"btn btn-secondary dropdown-toggle fa-sharp fa-solid fa-bell  text-white w-auto m-0 \" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" onClick={() => notiHandler()} ></i>\r\n                            {userdet?.notification_count > 0 &&\r\n\r\n                                <small className='dropdown-notification'>{userdet?.notification_count}</small>\r\n                            }\r\n\r\n                            <ul className=\"creator-dropdown dropdown-menu notification-menu dropdown-scrollbar\" aria-labelledby=\"dropdownMenuButton1\">\r\n\r\n                                {userdet?.notification?.map((item) => {\r\n                                    return (\r\n\r\n                                        <><li>{item.title}</li>\r\n                                            <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\r\n                                                <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\r\n                                    )\r\n                                })}\r\n                                {userdet?.notification?.length > 0 &&\r\n                                    <span><button type='submit' className='noty_all'><Link to='/allnotifications'>See all</Link></button></span>\r\n                                }\r\n                                {userdet?.notification?.length == 0 &&\r\n                                    <li>No new notifications</li>\r\n                                }\r\n                            </ul>\r\n\r\n                        </div>\r\n                    }\r\n                    <ul className=\"navbar-nav toggle\">\r\n                        <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#menu\">\r\n                                <i className=\"fas fa-bars toggle-icon m-0\" />\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Navbar Action Button */}\r\n                    {/* Navbar Action Button */}\r\n                    <ul className=\"navbar-nav action\">\r\n                        {window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? (\r\n\r\n                            <>\r\n\r\n                                <li className=\"nav-item mr-2\">\r\n                                    <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />{add1}...{add2}</a>\r\n                                </li>\r\n                            </>\r\n                        ) : (\r\n\r\n\r\n                            <li className=\"nav-item ml-3\">\r\n                                <Tooltip title='You will be signed in as a buyer' color='#4528dc'> <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />Connect Wallet</a></Tooltip>\r\n                            </li>\r\n\r\n                        )}\r\n\r\n                    </ul>\r\n                    {window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? (\r\n                        <>\r\n\r\n                            <div className=\"dropdown dropdown_login\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <i className=\"fa fa-solid fa-user\"></i>\r\n                                </button>\r\n                                <ul className=\"creator-dropdown dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                    {/* <li>{userdet?.username}</li> */}\r\n                                    <div className=\"background\">\r\n                                        <div className=\"SwitchContainer\">\r\n                                            <div\r\n                                                className=\"ToggleItem\"\r\n                                                style={{\r\n                                                    backgroundColor:\r\n                                                        userRole == 2 ? \"#4528DC\" : \"transparent\"\r\n                                                }}\r\n                                                onClick={() => roleHandler(SwitchOptions.OPTION1)}\r\n                                            >\r\n                                                <div className={\"Text\"}>Buyer</div>\r\n                                            </div>\r\n                                            <div\r\n                                                className=\"ToggleItem\"\r\n                                                style={{\r\n                                                    backgroundColor:\r\n                                                        userRole == 3 ? \"#4528DC\" : \"transparent\"\r\n                                                }}\r\n                                                onClick={() => roleHandler(SwitchOptions.OPTION2)}\r\n                                            >\r\n                                                <div className={\"Text\"}>Creator</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <li>\r\n                                        \r\n                                        <Space direction=\"vertical\">\r\n                                           \r\n\r\n                                            <Switch\r\n                                                className='switch_custom'\r\n                                                checkedChildren={<div onClick={() => roleHandler()}> {userRole == 2 ? 'switch to creator' : 'switch to buyer'}</div>}\r\n                                                unCheckedChildren={<div onClick={() => roleHandler()}>{userRole == 2 ? 'switch to creator' : 'switch to buyer'}</div>}\r\n\r\n                                            />\r\n                                          \r\n                                        </Space>\r\n                                    </li> */}\r\n                                    <li> {userdet?.email}</li>\r\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/profile'><i class=\"fa-regular fa-user\"></i> My Profile</Link></button></li>\r\n                                    {userRole == 2 && (\r\n                                        <li><button type='button' class=\"dropdown-item\"><Link to='/my/nfts'><i class=\"fa-regular fa-file-image\" style={{ color: 'white', display: \"table-cell\" }} /> My NFTs</Link></button></li>\r\n                                    )}\r\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/referals-detail'><i class=\"fa-solid fa-coins\" style={{ color: 'white', display: \"table-cell\" }}></i> My Referrals</Link></button></li>\r\n                                    {userRole == 3 && (\r\n                                        <><li><button type='button' class=\"dropdown-item\"><Link to='/projectlist'><i class=\"fa-regular fa-file\" style={{ color: 'white', display: \"table-cell\" }}></i> My Projects</Link></button></li>\r\n\r\n                                            <li><button type='button' class=\"dropdown-item\"><Link to={`/fundraiser/detail/${userdet.user_id}`}><i class=\"fa-solid fa-hand-holding-heart\" style={{ display: \"table-cell\", color: \"white\" }}></i> Fundraise</Link></button></li></>\r\n                                    )}\r\n                                    {/* {userRole == 2 ? ( */}\r\n\r\n\r\n                                    {/* <li><button type='button' class=\"dropdown-item\" onClick={() => roleHandler()}>Switch to Creator</button></li></> */}\r\n                                    {/* ) : (\r\n                                        <li><button type='button' class=\"dropdown-item\" onClick={() => roleHandler()}>Switch to Buyer</button></li>\r\n                                    )} */}\r\n                                    <li><button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'><i class=\"fa-solid fa-right-from-bracket\" style={{ display: \"table-cell\", color: \"white\" }}></i> Logout</a></button></li>\r\n                                </ul>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <ul className=\"navbar-nav action\">\r\n                            <li className=\"nav-item ml-3\">\r\n                                <Tooltip title='You will be signed in as a creator' color='#4528dc'>  <a className=\"creator-button btn ml-md-auto btn-bordered-white\"\r\n                                    onClick={() => history.push('/wallet-connect')} style={{ color: '#f8f9fa' }}><i className=\"fa fa-user\" />\r\n                                    <div>Creator</div></a></Tooltip>\r\n                                {/* <Link to=\"/login\" className=\"creator-button btn ml-md-auto btn-bordered-white\">\r\n                                    <i className=\"fa fa-user\" />\r\n                                    <div>CREATOR</div>\r\n                                </Link> */}\r\n                            </li>\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </nav >\r\n        </header >\r\n\r\n    )\r\n}\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { Roles } from '../Wallet/interact';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { GetMostactivityProject, getPublicLiveProjects } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst projectTypesMap = {\r\n    \"LatestProjects\": 2,\r\n    \"RecentCampaigns\": 1\r\n}\r\nconst Hero = ({ type }) => {\r\n    const history = useHistory()\r\n\r\n    var options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0,\r\n    };\r\n\r\n    function success(pos) {\r\n        var crd = pos.coords;\r\n\r\n        // console.log(\"Your current position is:\");\r\n        // console.log(`Latitude : ${crd.latitude}`);\r\n        // console.log(`Longitude: ${crd.longitude}`);\r\n        // console.log(`More or less ${crd.accuracy} meters.`);\r\n        localStorage.setItem('latitude', `${crd.latitude}`);\r\n        localStorage.setItem('longitude', `${crd.longitude}`);\r\n        // setLatitude(`${crd.latitude}`)\r\n        // setLongitude(`${crd.longitude}`)\r\n    }\r\n\r\n    function errors(err) {\r\n        console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n    const dispatch = useDispatch()\r\n\r\n    const mostactivityProjects = useSelector(state => {\r\n        return state?.projectdetails?.getmostProjActivity\r\n    })\r\n    console.log(mostactivityProjects, 'mostactivityProjects')\r\n    useEffect(() => {\r\n        dispatch(getPublicLiveProjects({\r\n            cursor: 1,\r\n            type: projectTypesMap[type],\r\n            projectType: type,\r\n        }))\r\n        dispatch(GetMostactivityProject())\r\n    }, [dispatch])\r\n    const currentLocation = () => {\r\n        // \r\n        if (navigator.geolocation) {\r\n            navigator.permissions\r\n                .query({ name: \"geolocation\" })\r\n                .then(function (result) {\r\n                    if (result.state === \"granted\") {\r\n                        // console.log(result.state);\r\n                        //If granted then you can directly call your function here\r\n                        navigator.geolocation.getCurrentPosition(success);\r\n                    } else if (result.state === \"prompt\") {\r\n                        navigator.geolocation.getCurrentPosition(success, errors, options);\r\n                    } else if (result.state === \"denied\") {\r\n                        //If denied then you have to show instructions to enable location\r\n                    }\r\n                    result.onchange = function () {\r\n                        // console.log(result.state);\r\n                    };\r\n                });\r\n        } else {\r\n            alert(\"Sorry Not available!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        currentLocation()\r\n    }, [])\r\n\r\n    const handleCreate = () => {\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                // showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n        else if (!userToken && !localStorage.getItem('authToken')) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                // showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section className=\"hero-section\">\r\n            <div className=\"container\">\r\n                <div className=\"row \">\r\n                    <div className=\"col-12 col-md-6 col-lg-7\">\r\n\r\n                        <h1 className=\"mt-4\">Create NFTs to fund real-life projects. Earn up to 30% by sharing with friends.</h1>\r\n                        {/* <p>Earn rewards by referring your friends.</p> */}\r\n                        {/* Buttons */}\r\n                        <div className=\"button-group\">\r\n                            <Link className=\"btn btn-bordered-white\" to={`/all/${\"LatestProjects\"}`}><i className=\"icon-rocket mr-2\" />Explore</Link>\r\n                            <a className=\"btn btn-bordered-white\" onClick={handleCreate}><i className=\"icon-note mr-2\" />Create </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-md-6 col-lg-4 auction-slider auctions-slides'>\r\n                        {/* {mostactivityProjects[0]?.map((item, idx) => { */}\r\n                        {/* return ( */}\r\n\r\n                        <div key={`auc_${mostactivityProjects[0]?.id}`} className=\"item card\">\r\n\r\n\r\n\r\n                            <div className=\"image-over\">\r\n                                <Link to={`/projects/${mostactivityProjects[0]?.slug}`}>\r\n\r\n                                    <img class=\"card-img-top\" src={mostactivityProjects[0]?.image} alt=\"\"></img>\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"card-caption col-12 p-0\">\r\n\r\n                                <div className=\"card-body pt-0\">\r\n\r\n\r\n                                    {/* ) */}\r\n                                    {/* })} */}\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                                            {/* <a > */}\r\n                                            <h5 className=\"mb-0\">{mostactivityProjects[0]?.title?.slice(0, 16)}</h5>\r\n                                            {/* </a> */}\r\n\r\n                                            <div\r\n                                                className=\"seller d-flex align-items-center my-2\"\r\n\r\n                                            >\r\n                                                <span>Owned By</span>\r\n                                                {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                                                {/* <a > */}\r\n                                                <h6 className=\"ml-2 mb-0\">\r\n                                                    {mostactivityProjects[0]?.user_data.username?.slice(0, 12)}\r\n                                                </h6>\r\n                                                {/* </a> */}\r\n\r\n                                                {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                            </div>\r\n                                            {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                              <span>{Math.round(item.price)} MATIC</span>\r\n                              {item?.number_of_nft == 1 ? (\r\n                                <span>{item.number_of_nft} NFT</span>\r\n                              ) : (\r\n                                <span>{item.number_of_nft} NFTs</span>\r\n                              )}\r\n                            </div> */}\r\n\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Shape */}\r\n            <div className=\"shape\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                    <defs>\r\n                        <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                            <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                            <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                        <polygon points fill=\"url(#linearGradient-1)\">\r\n                            <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                        </polygon>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Hero;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getPublicLiveProjects } from \"../../redux/Actions/projectAction\";\r\nconst projectTypesMap = {\r\n  LatestProjects: 2,\r\n  RecentCampaigns: 1,\r\n};\r\nconst AuctionsOne = ({ type }) => {\r\n  const dispatch = useDispatch();\r\n  const liveProjects = useSelector((state) => {\r\n    return state?.projectdetails?.liveProjects[type];\r\n  });\r\n  console.log(liveProjects, \"liveeproj\");\r\n  useEffect(() => {\r\n    dispatch(\r\n      getPublicLiveProjects({\r\n        cursor: 1,\r\n        type: projectTypesMap[type],\r\n        projectType: type,\r\n      })\r\n    );\r\n  }, [dispatch]);\r\n  return (\r\n    <section className=\"live-auctions-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            {/* Intro */}\r\n            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n              <div className=\"intro-content\">\r\n                <span>Project</span>\r\n                <h3 className=\"mt-3 mb-0\">\r\n                  {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}\r\n                </h3>\r\n              </div>\r\n              <div className=\"intro-btn\">\r\n                {liveProjects?.length > 4 && (\r\n                  <Link to={`/all/${type}`} style={{ color: \"white\" }}>\r\n                    <a className=\"btn content-btn\">View All</a>\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"auctions-slides \">\r\n          <div className=\"swiper-container slider-mid items \">\r\n            <div className=\"swiper-wrapper  \">\r\n              {/* Single Slide */}\r\n              {liveProjects?.map((item, idx) => {\r\n                return (\r\n                  <div\r\n                    key={`auc_${item.id}`}\r\n                    className=\"swiper-slide item card position-relative auctions-slides-card\"\r\n                  >\r\n\r\n                    <div className=\"image-over\">\r\n                      <Link to={`/projects/${item.slug}`}>\r\n                        <img\r\n                          className=\"card-img-top\"\r\n                          src={item?.image}\r\n                          alt=\"\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"card-caption col-12 p-0\">\r\n                      <div className=\"card-body\">\r\n\r\n                        {/* <a> */}\r\n                        <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                        {/* </a> */}\r\n                        <div\r\n                          className=\"seller d-flex align-items-center my-3\"\r\n                        >\r\n                          <span>Owned By</span>\r\n                          {/* <a> */}\r\n                          <h6 className=\"ml-2 mb-0\">\r\n                            {item.user_data.username.slice(0, 12)}\r\n                          </h6>\r\n                          {/* </a> */}\r\n                        </div>\r\n                        <div className=\"card-bottom d-flex justify-content-between nft-price\" >\r\n                          <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                          {item?.number_of_nft == 1 ? (\r\n                            <span>{item.number_of_nft} NFT</span>\r\n                          ) : (\r\n                            <span>{item.number_of_nft} NFTs</span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between edit-buttons nft-price \">\r\n                          <Link to={`/projects/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                            <i className=\"icon-handbag\" />\r\n                          </Link>\r\n                          <Link to={`/projects/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                            <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"swiper-pagination\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default AuctionsOne;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst collectionSlice = createSlice({\r\n    name: 'collection',\r\n\r\n    initialState: {\r\n        collection: [],\r\n        collectiondetail: [],\r\n    },\r\n    reducers: {\r\n        getPopularCollection: (state, action) => {\r\n            // \r\n            state.collection = action.payload;\r\n        },\r\n        getPopularCollectiondetails: (state, action) => {\r\n            // \r\n            state.collectiondetail = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const collectionReducer = collectionSlice.reducer\r\n\r\nexport const {\r\n    getPopularCollection,\r\n    getPopularCollectiondetails\r\n} = collectionSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getPopularCollection, getPopularCollectiondetails } from \"../Slices/popularCollectionSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const PopularCollectionAction = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnection`, config)\r\n            console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollection(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const PopularCollectionActionDetails = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ slug }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnectionByIdx/${slug}`, config)\r\n            // console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollectiondetails(res));\r\n\r\n        } catch (e) {\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { Link } from 'react-router-dom';\r\nconst Collections = () => {\r\n    const dispatch = useDispatch()\r\n    const coll = useSelector(state => {\r\n        //\r\n        return state?.collection?.collection\r\n    })\r\n    console.log(coll, \"coll detail\")\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionAction({}))\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"popular-collections-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>POPULAR</span>\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {coll?.length > 8 &&\r\n\r\n                                    <Link className=\"btn content-btn text-left\" to=\"/allcollections\">Explore More</Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {coll?.slice(0, 8)?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`cd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/popularcollection/details/${item?.slug}`}>\r\n                                            <img className=\"card-img-top\" src={item?.image} alt=\"\" />\r\n                                        </Link>\r\n                                        {/* Seller */}\r\n                                        <div className=\"seller\" >\r\n                                            <div className=\"seller-thumb avatar-lg\">\r\n\r\n                                                <img className='rounded-circle' src={item?.user_data?.avatar} alt='logo' width={50} height={50} />\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            {/* <a> */}\r\n                                            <h5 className=\"\">{item.title.slice(0, 12)} </h5>\r\n                                            {/* </a> */}\r\n                                            <div class=\"align-items-center\">\r\n                                                <div class=\"d-flex justify-content-center text-align-center gap-5\">\r\n                                                    {/* <h5 className=\"mb-0 \">{item.title.slice(0, 12)} </h5> */}\r\n\r\n                                                    <div class=\" align-items-center\">\r\n                                                        <div class=\"d-flex justify-content-center text-align-center gap-5\">\r\n                                                            {item?.nft_data.length == 1 ? (\r\n\r\n                                                                <span>Total NFT :</span>\r\n                                                            ) : (\r\n                                                                <span>Total NFTs :</span>\r\n                                                            )\r\n\r\n                                                            }\r\n                                                            <span>{item?.nft_data?.length}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                        {/* <div>\r\n                                    <div className=\"card position-relative \">\r\n                                        <div className=\"image-over \">\r\n                                            <Link to={`/popularcollection/details/${item?.slug}`}>\r\n                                                <img className=\"card-img-top\" src={item?.image} alt=\"\" />\r\n                                            </Link>\r\n                                        </div> */}\r\n                                        {/* Card Caption */}\r\n                                        {/* <div className=\"card-caption col-12 p-0\">\r\n                                            <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} /> */}\r\n                                        {/* Card Body */}\r\n                                        {/* <div className=\"card-body\">\r\n\r\n                                {/* <div className=\"card-caption col-12 p-0\">\r\n                                            <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} /> */}\r\n\r\n                                        {/* <div className=\"card-caption col-12 p-0\">\r\n                                    <img className='logo' src={item?.organization_detail?.logo} alt='logo' width={50} height={50} /> */}\r\n\r\n                                        {/* Card Body */}\r\n                                        {/* <div className=\"card-body\">\r\n                                                <a>\r\n                                                    <h5 className=\"mb-0 \">{item.title.slice(0, 15)}...</h5>\r\n                                                </a>\r\n                                                <div class=\"\"><p> {item.description.slice(0, 52)}...</p></div>\r\n                                                <div class=\"mb-2 align-items-center\">\r\n                                                    <div class=\"mt-2 mb-2 d-flex justify-content-between text-align-center fundraiser_sale\">\r\n                                                        {item?.nft_data.length == 1 ? (\r\n\r\n                                                            <span>{item?.nft_data.length} NFT</span>\r\n                                                        ) : (\r\n                                                            <span>{item?.nft_data.length} NFTs</span>\r\n                                                        )\r\n\r\n                                                        }\r\n                                                    </div>\r\n                                                </div> */}\r\n                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                    {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span style={{ color: '#8E8E8E' }}>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\">{item?.user_data?.username}</h6>\r\n                                                                </a>\r\n                                                            </div> */}\r\n                                        {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div> */}\r\n                                        {/* <div>\r\n                                    {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div> */}\r\n                                        {/* <div>\r\n                                                                {item.status == '1' ?\r\n                                                                    <Button>Donation</Button>\r\n                                                                    :\r\n                                                                    <Button>Product Sale</Button>\r\n                                                                }\r\n                                                            </div> */}\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                        {/* </div> */}\r\n                                        {/* </div> */}\r\n                                        {/* </div> */}\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                        {/* </div> */}\r\n                                        {/* </div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div >\r\n            </div >\r\n        </section >\r\n    );\r\n}\r\nexport default Collections;","import { React } from 'react';\r\n\r\nconst data = {\r\n    preHeading: \"How It Works\",\r\n    heading: \"Create and sell your NFTs\",\r\n    workData: [\r\n        {\r\n            \"id\": 1,\r\n            \"icon\": \"icons icon-wallet text-effect\",\r\n            \"title\": \"Setup your wallet\",\r\n            \"text\": \"Click Connect Wallet in the top right corner to login and get started.\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"icon\": \"icons icon-grid text-effect\",\r\n            \"title\": \"Create your collection\",\r\n            \"text\": \"Click Creator and set up your organization profile, description, fundraising goal and more.\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"icon\": \"icons icon-drawer text-effect\",\r\n            \"title\": \"Add your NFTs\",\r\n            \"text\": \"Upload your project art or images and description.\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"icon\": \"icons icon-bag text-effect\",\r\n            \"title\": \"List them for sale\",\r\n            \"text\": \"Choose how you want to price and sell your NFTs!\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst Work = () => {\r\n\r\n\r\n    return (\r\n        <section className=\"work-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro mb-4\">\r\n                            <div className=\"intro-content\">\r\n                                <span>{data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {data?.workData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Work */}\r\n                                <div className=\"single-work\">\r\n                                    <i className={item.icon} />\r\n                                    <h4>{item.title}</h4>\r\n                                    <p>{item.text}</p>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Work;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst footerSlice = createSlice({\r\n    name: 'footer',\r\n\r\n    initialState: {\r\n        footer: [],\r\n        aboutus: []\r\n\r\n    },\r\n    reducers: {\r\n\r\n        getfooter: (state, action) => {\r\n            state.footer = action.payload;\r\n        },\r\n        getabout: (state, action) => {\r\n            state.aboutus = action.payload;\r\n        },\r\n\r\n    },\r\n});\r\n\r\nexport const footerReducer = footerSlice.reducer\r\n\r\nexport const {\r\n    getfooter,\r\n    getabout,\r\n} = footerSlice.actions;","import axios from \"axios\";\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getabout, getfooter } from \"../Slices/footerSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const getFooter = createAsyncThunk(\r\n    \"auth/footer\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/term-condition`, config)\r\n            thunkAPI.dispatch(getfooter(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const AboutUsAction = createAsyncThunk(\r\n    \"auth/about\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAbouts`, config)\r\n            thunkAPI.dispatch(getabout(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getFooter } from '../../redux/Actions/footerAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Footer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter())\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n    // console.log(userRole)\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const history = useHistory()\r\n    const handleCreate = () => {\r\n\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        else if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n        else if (!userToken) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Sign up as a Creator to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    function getYear() {\r\n        return new Date().getFullYear();\r\n    }\r\n    return (\r\n\r\n\r\n        <footer className=\"footer-area\">\r\n            {/* Footer Top */}\r\n            <div className=\"footer-top\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Logo */}\r\n                                <a className=\"navbar-brand\" href=\"/\">\r\n                                    <img src=\"/img/logo.png\" alt=\"\" />\r\n                                </a>\r\n                                <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                                {/* Social Icons */}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Useful Links</h4>\r\n                                <ul>\r\n                                    <li className=\"nav-item\">\r\n                                        <a onClick={() => handleCreate()} className=\"\">Create Project</a>\r\n                                    </li>\r\n                                    {/* <li><Link to=\"/create\" onClick={handleCreate}>Create Project</Link></li> */}\r\n                                    <li><Link to={`/all/${\"LatestProjects\"}`}>Explore NFTs</Link></li>\r\n                                    <li><Link to=\"/terms&conditions\">Terms of Service</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Community</h4>\r\n                                <ul>\r\n                                    <li><a target=\"_blank\" href=\"https://www.canopycrypto.io/our-team/\">About Us</a></li>\r\n                                    {/* <li><Link to='/https://www.canopycrypto.io/our-team/'>About Us</Link></li> */}\r\n                                    <li><Link to='/contact'>Get Support</Link></li>\r\n                                    <li><Link to='/rewards'>Rewards</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Footer Bottom */}\r\n            <div className=\"footer-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Copyright Area */}\r\n                            <div className=\"copyright-area d-flex flex-wrap justify-content-center justify-content-sm-between text-center py-4\">\r\n                                {/* Copyright Left */}\r\n\r\n                                <div className=\"copyright-left\">© {getYear()} Copyright Karmatica.</div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ModalSearch = () => {\r\n    const dispatch = useDispatch()\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n    }\r\n    return (\r\n        <div id=\"search\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        {/* {this.state.data.menuName} <i className={this.state.data.menuIcon} /> */}\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form className=\"row\">\r\n                            <div className=\"col-12 align-self-center\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 pb-3\">\r\n                                        <Link to='/author'>Profile</Link>\r\n                                        <Link to='/projectlist'>My Projects</Link>\r\n                                        {/* <button type='button' class=\"dropdown-item\"><a href='/author'>Profile</a></button>\r\n                <button type='button' class=\"dropdown-item\"><a href='/projectlist'>My Projects</a></button> */}\r\n                                        <button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'>Logout</a></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group mt-4\">\r\n                                        <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group align-self-center\">\r\n                                        {/* <button className=\"btn btn-bordered-white mt-3\">{this.state.data.btnText}</button> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ModalSearch;","import React from 'react';\r\n\r\nconst ModalMenu = () => {\r\n    return (\r\n        <div id=\"menu\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        Menu <i className=\"far fa-times-circle icon-close\" />\r\n                    </div>\r\n                    <div className=\"menu modal-body\">\r\n                        <div className=\"row w-100\">\r\n                            <div className=\"items p-0 col-12 text-center\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalMenu;","import React from 'react';\r\n\r\nconst Scrollup = () => {\r\n    return (\r\n        <div id=\"scroll-to-top\" className=\"scroll-to-top\">\r\n            <a href=\"#header\" className=\"smooth-anchor\">\r\n                <i className=\"fas fa-arrow-up\" />\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scrollup;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst fundraiserSlice = createSlice({\r\n    name: 'fundraiser',\r\n\r\n    initialState: {\r\n        fundraiser: [],\r\n        fundraiserdetail: [],\r\n    },\r\n    reducers: {\r\n        getTopFundraiser: (state, action) => {\r\n            // \r\n            state.fundraiser = action.payload;\r\n\r\n        },\r\n        getTopFundraiserDetail: (state, action) => {\r\n            // \r\n            state.fundraiserdetail = action?.payload?.data?.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const fundraiserReducer = fundraiserSlice.reducer\r\n\r\nexport const {\r\n    getTopFundraiser,\r\n    getTopFundraiserDetail\r\n} = fundraiserSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getTopFundraiser, getTopFundraiserDetail } from \"../Slices/fundraiserSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const TopFundraiserAction = createAsyncThunk(\r\n    \"auth/topfundraiser\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // \r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers`, config)\r\n            // console.log(res, 'fund res')\r\n            thunkAPI.dispatch(getTopFundraiser(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n// export const TopFundraiserDetail = createAsyncThunk(\r\n//     \"auth/topfundraiserdetail\",\r\n//     async (id, thunkAPI) => {\r\n//         // \r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//             }\r\n//             const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${id}`, config)\r\n\r\n//             thunkAPI.dispatch(getTopFundraiserDetail(res?.data?.data));\r\n\r\n//         } catch (e) {\r\n//             if (e?.response?.data.message) {\r\n//                 swal('error', e.response.data.message, 'error')\r\n//             }\r\n//         }\r\n//     })\r\nexport const TopFundraiserDetail = (user_id) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${user_id}`,\r\n            config)\r\n\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getTopFundraiserDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Fundraiser = () => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <section className=\"top-seller-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Fundraisers</span>\r\n                                <h3 className=\"mt-3 mb-0\">Top Fundraisers</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {fund?.length > 5 &&\r\n\r\n                                    <Link className=\"btn content-btn\" to='/allfundraise'>View All</Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {fund?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Seller */}\r\n                                <Link to={`/fundraiser/detail/${item.user_id}`}>\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n\r\n                                            <img className=\"avatar-md rounded-circle\" src={item?.organization_detail?.banner_image} alt=\"\" />\r\n\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3\">\r\n                                                <a className=\"seller mb-2 text-capitalize\">{item?.organization_detail?.organization_name}</a>\r\n                                                {/* <span dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 15) }} /> */}\r\n                                                <span>${item.amount} Raised</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Fundraiser;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst resellSlice = createSlice({\r\n    name: 'resell',\r\n\r\n    initialState: {\r\n        resell: [],\r\n        reselldetails: [],\r\n    },\r\n    reducers: {\r\n        getResell: (state, action) => {\r\n            state.resell = action.payload?.data?.data;\r\n        },\r\n        getReselldetails: (state, action) => {\r\n            state.reselldetails = action.payload?.data?.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const resellReducer = resellSlice.reducer\r\nexport const {\r\n    getResell,\r\n    getReselldetails\r\n} = resellSlice.actions;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { getResell, getReselldetails } from \"../Slices/resellNftSlice\";\r\n\r\nexport const ResellAction = () => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getResaleNft`,\r\n            \"\", config)\r\n        console.log(\"resproj\", res)\r\n        dispatch(getResell(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const ResellActionDetails = (slug) => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getResaleNftByIdx/${slug.slug}`,\r\n            slug, config)\r\n        console.log(\"resproj\", res)\r\n        dispatch(getReselldetails(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getPublicLiveProjects } from \"../../redux/Actions/projectAction\";\r\nimport { ResellAction } from \"../../redux/Actions/resellNftAction\";\r\n\r\nconst Resell = ({ type }) => {\r\n    const dispatch = useDispatch();\r\n    const nfts = useSelector((state) => {\r\n        return state?.resell?.resell;\r\n    });\r\n    console.log(nfts[0]?.image, \"resellnfts\");\r\n    useEffect(() => {\r\n        dispatch(ResellAction())\r\n\r\n    }, [dispatch]);\r\n    return (\r\n        <section className=\"live-auctions-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>NFTs</span>\r\n\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {nfts?.length > 4 && (\r\n                                    <Link to='/all/resll/nfts' style={{ color: \"white\" }}>\r\n                                        <a className=\"btn content-btn\">View All</a>\r\n                                    </Link>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auctions-slides \">\r\n                    <div className=\"swiper-container slider-mid items \">\r\n                        <div className=\"swiper-wrapper  \">\r\n                            {/* Single Slide */}\r\n                            {nfts?.map((item, idx) => {\r\n                                return (\r\n                                    <div\r\n                                        key={`auc_${item.id}`}\r\n                                        className=\"swiper-slide item card position-relative auctions-slides-card\"\r\n                                    >\r\n\r\n                                        <div className=\"image-over\">\r\n                                            <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                                <img\r\n                                                    className=\"card-img-top\"\r\n                                                    src={item?.image}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            <div className=\"card-body\">\r\n\r\n                                                {/* <a> */}\r\n                                                <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                                                {/* </a> */}\r\n                                                <div\r\n                                                    className=\"seller d-flex align-items-center my-3\"\r\n                                                >\r\n                                                    <span>Owned By</span>\r\n                                                    {/* <a> */}\r\n                                                    <h6 className=\"ml-2 mb-0\">\r\n                                                        {item.user_data.username.slice(0, 12)}\r\n                                                    </h6>\r\n                                                    {/* </a> */}\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between nft-price\" >\r\n                                                    <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                    {/* {item?.number_of_nft == 1 ? ( */}\r\n                                                    <span>1 NFT</span>\r\n                                                    {/* ) : ( */}\r\n                                                    {/* <span>{item.number_of_nft} NFTs</span> */}\r\n                                                    {/* )} */}\r\n                                                </div>\r\n                                                <div className=\"d-flex justify-content-between edit-buttons nft-price \">\r\n                                                    <Link to={`/nft/details/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                                        <i className=\"icon-handbag\" />\r\n                                                    </Link>\r\n                                                    <Link to={`/nft/details/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                                        <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"swiper-pagination\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default Resell;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Hero from '../components/Hero/Hero';\r\nimport Auctions from '../components/Auctions/AuctionsOne';\r\nimport Collections from '../components/Collections/Collections';\r\nimport Work from '../components/Work/Work';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\nimport Resell from '../components/Auctions/resellNft';\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Hero />\r\n            <Auctions key=\"latestProjects\" type={\"LatestProjects\"} />\r\n            <Resell />\r\n\r\n            <Fundraiser />\r\n            <Collections />\r\n            <Work />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Breadcrumb extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"breadcrumb-area overlay-dark d-flex align-items-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Breamcrumb Content */}\r\n                            <div className=\"breadcrumb-content text-center\">\r\n                                <h2 className=\"m-0\">{this.props.title}</h2>\r\n                                <ol className=\"breadcrumb d-flex justify-content-center\">\r\n                                    <li className=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\r\n                                    <li className=\"breadcrumb-item\"><a href=\"#\">{this.props.subpage}</a></li>\r\n                                    <li className=\"breadcrumb-item active\">{this.props.page}</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/explore\";\r\n\r\nclass ExploreTwo extends Component {\r\n    state = {\r\n        data: {},\r\n        exploreData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    exploreData: res.data.exploreData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/explore-1\">{this.state.data.btnText}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.exploreData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`edt_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/item-details\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                </a>\r\n                                                <div className=\"seller d-flex align-items-center my-3\">\r\n                                                    <span>Owned By</span>\r\n                                                    <a href=\"/author\">\r\n                                                        <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span>{item.price}</span>\r\n                                                    {/* <span>{item.count}</span> */}\r\n                                                </div>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreTwo;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass ExploreOne extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 1\" />\r\n                <Explore />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreOne;","/**\r\n * Loader Spinner\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n\r\n\r\n\r\n    return (\r\n        // <div style={{position: 'absolute', backgroundColor: '#0002', width: '100%', height: '100%'}}>\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                height: \"100px\",\r\n                width: \"100px\",\r\n                margin: \"auto\",\r\n                display: \"block\",\r\n                // position: 'absolute',\r\n                // left: 'calc(50% - 50px)',\r\n                // top: 'calc(50% - 50px)'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\nimport swal from 'sweetalert';\r\n\r\nconst GetAllProjects = () => {\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const projects = useSelector(state => {\r\n        return state.projectdetails.projects\r\n    })\r\n\r\n    console.log(projects, 'projects')\r\n\r\n    useEffect(() => {\r\n        dispatch(ProjectList())\r\n    }, [dispatch])\r\n\r\n    const showDeleteHandler = (id) => {\r\n        // debugger\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this project!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    dispatch(DeleteProject(id))\r\n                    swal(\"Poof! Your project has been deleted!\", {\r\n                        icon: \"success\",\r\n                    });\r\n                } else {\r\n                    swal(\"Your project is safe!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    {window.ethereum?.selectedAddress && (\r\n\r\n                                        <h3 className=\"mt-3 mb-0\">My Projects</h3>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {projects && projects.length ?\r\n                                [...new Map(projects.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                        return (\r\n                                            // <Link key={`edth_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                            <div className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                                {/* <button onClick={() => showDeleteHandler()}>delete</button> */}\r\n                                                <div className=\"card project_cards\">\r\n                                                    <div className=\"image-over relative \">\r\n                                                        {item.is_nft_mintted !== 1 &&\r\n\r\n                                                            <i class=\"fa-sharp fa-solid fa-trash\" onClick={() => showDeleteHandler(item.id)}></i>\r\n                                                        }\r\n                                                        <Link to={`/projnftdetails/${item.slug}`}>\r\n                                                            {/* <i class=\"fa-solid fa-pen\" ></i> */}\r\n                                                            <img className=\"card-img-top\" src={item?.image} alt={item.nft_data.description} />\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className='token'>\r\n                                                        <span></span>\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            {/* <a> */}\r\n                                                            <h5 className=\"mb-0 pb-0 break-all\">{item.title.slice(0, 16)}</h5>\r\n                                                            {/* </a> */}\r\n                                                            <div className=\"seller d-flex align-items-center my-2\">\r\n                                                                <span>Owned By</span>\r\n\r\n                                                                <h6 className=\"ml-2 mb-0\">You</h6>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                {item?.number_of_nft == 1 ? (\r\n\r\n                                                                    <span>{item?.number_of_nft} NFT </span>\r\n                                                                ) : (\r\n                                                                    // <><span>{item.nft_data.length} NFTs </span>\r\n                                                                    <span> +{item.number_of_nft} NFTs </span>\r\n                                                                )}\r\n                                                            </div>\r\n\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            // </Link>\r\n                                        )\r\n                                    }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    {window.ethereum?.selectedAddress ? (\r\n                                        <h2 className='allproj2'>\r\n                                            You have no projects yet, <Link to=\"/create\">create one now</Link>\r\n                                        </h2>\r\n\r\n                                    ) : (\r\n                                        <h2 className='allproj2'>\r\n                                            Please connect you wallet to continue, <Link to=\"/wallet-connect\">Connect</Link>\r\n                                        </h2>\r\n                                    )}\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllProjects; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport GetAllProjects from '../components/Explore/ProjectList';\r\n\r\nconst ExploreTwo = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExploreTwo;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\n\r\nconst LatestProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AuctionsOne type=\"LatestProjects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LatestProjects;","import React, { Component } from 'react';\r\nimport AuctionsOne from '../Auctions/AuctionsOne';\r\n\r\n\r\n\r\nconst LatestProject = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <AuctionsOne />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default LatestProject;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\n\r\nconst Auctions = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LatestProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Auctions;","\r\nimport React, { useState } from \"react\";\r\n\r\nconst ReadMore = ({ data }) => {\r\n\r\n    const [isReadMore, setIsReadMore] = useState(true);\r\n    console.log(data)\r\n    const toggleReadMore = () => {\r\n        setIsReadMore(!isReadMore);\r\n    };\r\n\r\n    return (\r\n        <p className=\"text\">\r\n            <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: isReadMore ? data?.slice(0, 1000) : data }} />\r\n            {data?.length > 1000 &&\r\n\r\n                <span onClick={toggleReadMore} className=\"read-or-hide\">\r\n                    {isReadMore ? \"...read more\" : \" show less\"}\r\n                </span>\r\n            }\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default ReadMore","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst FundTransdataTable = () => {\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [expandIconPosition] = useState('end');\r\n\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n\r\n\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg class=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></circle><path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {funddetail?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                    {funddetail?.payment_history?.length == 0 &&\r\n                        <div className='nothing'>\r\n                            No matching records found\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FundTransdataTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst UserTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    // const latprojnftdetail = useSelector(state => {\r\n    //     // \r\n    //     return state?.projectdetails?.getnftwoldetails\r\n    // })\r\n    // console.log('lattt', latprojnftdetail.nft_history)\r\n    // useEffect(() => {\r\n    //     dispatch(GetNftwol(props.id))\r\n    // }, [props.id])\r\n    const location = useLocation()\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <tbody>\r\n                            {userdet?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n\r\n\r\n\r\n\r\n                    </Table>\r\n\r\n                </Panel>\r\n                {userdet?.payment_history?.length == 0 &&\r\n                    <div className='nothing'>\r\n                        No matching records found\r\n                    </div>\r\n                }\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserTransdataTable","// import Button from 'react-bootstrap/Button';\r\n// import Modal from 'react-bootstrap/Modal';\r\n// import { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useEffect, useRef, useState } from 'react';\r\n// import { Controller, useForm } from 'react-hook-form';\r\n// import { CopyToClipboard } from 'react-copy-to-clipboard'\r\n// import {\r\n//     EmailShareButton,\r\n//     FacebookIcon,\r\n//     FacebookShareButton,\r\n//     InstapaperShareButton,\r\n//     InstapaperIcon,\r\n//     LineShareButton,\r\n//     LinkedinShareButton,\r\n//     PinterestShareButton,\r\n//     RedditShareButton,\r\n//     TelegramIcon,\r\n//     TelegramShareButton,\r\n//     TwitterIcon,\r\n//     TwitterShareButton,\r\n//     WhatsappIcon,\r\n//     WhatsappShareButton,\r\n//     LinkedinIcon,\r\n//     EmailIcon,\r\n// } from \"react-share\";\r\n// import {\r\n//     FacebookShareCount,\r\n//     HatenaShareCount,\r\n//     OKShareCount,\r\n//     PinterestShareCount,\r\n//     RedditShareCount,\r\n//     TumblrShareCount,\r\n//     VKShareCount\r\n// } from \"react-share\";\r\n// import JoditEditor from 'jodit-react';\r\n// import { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\n// import { useParams } from 'react-router';\r\n// // import 'bootstrap/dist/css/bootstrap.min.css';\r\n// function ProjDetailPopup(props) {\r\n//     const editor = useRef(null);\r\n//     // const [title, setTitle] = useState(\"\");\r\n//     // const [description, setDescription] = useState(\"\");\r\n//     // const [short_url, setShortUrl] = useState(\"\");\r\n//     // const [symbol, setSymbol] = useState(\"\");\r\n//     const dispatch = useDispatch()\r\n//     const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n//     const [description, setDescription] = useState();\r\n//     const id = useParams()\r\n//     const [type, setType] = useState()\r\n//     // const url = window.location.href + '/' + props.userRef\r\n//     // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n//     const { countries } = useSelector(state => state.countries)\r\n//     const [country, setCountry] = useState('')\r\n//     console.log('country', country)\r\n//     const [state, setState] = useState('')\r\n//     const [city, setCity] = useState('')\r\n//     console.log(countries?.data?.data, 'cntry')\r\n//     const states = useSelector(state => {\r\n//         // debugger\r\n//         return state.countries.states\r\n//     })\r\n//     // console.log(countries?.data?.data)\r\n//     useEffect(() => {\r\n//         dispatch(CategoriesAction())\r\n//         dispatch(CountryList())\r\n//         // dispatch(StateList('101'))\r\n\r\n//         // dispatch(StateList(projdetail.country))\r\n//     }, [])\r\n\r\n//     const handleChangeCountry = (event) => {\r\n//         debugger\r\n//         event?.preventDefault()\r\n//         // 👇 Get input value from \"event\"\r\n//         setCountry(event?.currentTarget?.value);\r\n\r\n//         const formData = new FormData()\r\n//         formData.append('country_id', event?.currentTarget?.value)\r\n//         dispatch(StateList(formData))\r\n\r\n//         // if (country) {\r\n\r\n//         //     debugger\r\n//         // }\r\n//     };\r\n//     const handleChangeState = (event) => {\r\n//         // debugger\r\n//         event.preventDefault()\r\n//         // 👇 Get input value from \"event\"\r\n//         setState(event.currentTarget.value);\r\n//         const formData = new FormData()\r\n//         formData.append('country_id', country)\r\n//         formData.append('state_id', event?.currentTarget?.value)\r\n//         dispatch(CityList(formData))\r\n\r\n\r\n//         //     debugger\r\n//         // }\r\n//     };\r\n//     const handleChangeCity = (event) => {\r\n//         // debugger\r\n//         // 👇 Get input value from \"event\"\r\n//         setCity(event?.currentTarget?.value);\r\n\r\n//     };\r\n\r\n//     const cities = useSelector(state => {\r\n//         // debugger\r\n//         return state.countries.city\r\n//     })\r\n\r\n\r\n//     const projdetail = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.projectdetails\r\n//     })\r\n//     console.log(projdetail.nft_data, 'projdatanft')\r\n//     const cat = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.categories\r\n//     })\r\n//     const disablePastDate = () => {\r\n//         const today = new Date();\r\n//         const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n//         const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n//         const yyyy = today.getFullYear();\r\n//         return yyyy + \"-\" + mm + \"-\" + dd;\r\n//     };\r\n//     useEffect(() => {\r\n//         if (projdetail && Object.keys(projdetail).length) {\r\n\r\n//             setValue(\"title\", projdetail.title)\r\n//             setValue(\"address\", projdetail.address)\r\n//             setValue(\"description\", projdetail.description)\r\n//             setValue('state', projdetail.state)\r\n//             setValue('country', projdetail.country)\r\n//             setValue('city', projdetail.city)\r\n//             setValue(\"price\", projdetail.price)\r\n//             setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n//             setValue(\"start_date\", projdetail.start_date)\r\n//             setValue(\"end_date\", projdetail.end_date)\r\n//             setValue(\"type\", projdetail.type)\r\n//             setValue('category_id', projdetail.category_id)\r\n\r\n//             setType(projdetail.type)\r\n//             setCountry(projdetail.country)\r\n//             setDescription(projdetail.description)\r\n//             // setState(projdetail.state)\r\n//             // setCity(projdetail.city)\r\n//             console.log(projdetail.state, 'edit state')\r\n//             console.log(projdetail.city, 'edit city')\r\n//             setValue(\"image\", projdetail.image)\r\n//             const formData = new FormData()\r\n//             // formData.append('country_id', event?.currentTarget?.value)\r\n//             formData.append('country_id', projdetail.country)\r\n//             formData.append('state_id', projdetail.state)\r\n//             dispatch(StateList(formData))\r\n//             dispatch(CityList(formData))\r\n\r\n//         }\r\n//     }, [projdetail]);\r\n\r\n//     const OnSubmit = (data) => {\r\n//         const formData = new FormData()\r\n\r\n//         // formData.append('image', data.image[0])\r\n//         formData.append('title', data.title)\r\n//         formData.append('description', description)\r\n//         formData.append('state', data.state)\r\n//         formData.append('country', data.country)\r\n//         formData.append('city', data.city)\r\n//         formData.append('address', data.address)\r\n//         formData.append('price', data.price)\r\n//         formData.append('number_of_nft', data.number_of_nft)\r\n//         if (data?.type == 1) {\r\n\r\n//             formData.append('start_date', '')\r\n//             formData.append('end_date', '')\r\n//         } else {\r\n\r\n//             formData.append('start_date', data.start_date)\r\n//             formData.append('end_date', data.end_date)\r\n//         }\r\n//         formData.append('type', data.type)\r\n//         formData.append('category_id', data.category_id)\r\n//         debugger\r\n\r\n//         dispatch(UpdateProject(props.id, formData))\r\n//     }\r\n\r\n//     return (\r\n//         <Modal\r\n//             {...props}\r\n//             size=\"lg\"\r\n//             aria-labelledby=\"contained-modal-title-vcenter\"\r\n//             centered\r\n//         >\r\n//             <Modal.Header >\r\n\r\n//                 <div>\r\n//                     <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n//                 </div>\r\n//             </Modal.Header>\r\n//             <Modal.Body>\r\n//                 <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n//                     <div className=\"row\">\r\n\r\n//                         <div className=\"col-6\">\r\n//                             {/* {type == 1 && ( */}\r\n\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Project name</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"title\"\r\n//                                     placeholder=\"Project name\"\r\n//                                     {...register(\"title\", { required: true })}\r\n//                                     aria-invalid={errors.title ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n//                             </div>\r\n//                             {/* )} */}\r\n//                         </div>\r\n//                         <div className=\"col-6\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Web address</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"address\"\r\n//                                     placeholder=\"Web Address\"\r\n//                                     {...register(\"address\", { required: true })}\r\n//                                     aria-invalid={errors.address ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n//                             </div>\r\n//                         </div>\r\n\r\n\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Country</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"country\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"country\"\r\n//                                             {...register(\"country\", { required: true })}\r\n//                                             // value={value}\r\n//                                             // defaultValue={value}\r\n\r\n//                                             onChange={handleChangeCountry}\r\n\r\n//                                         >\r\n\r\n//                                             aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n//                                                 Select your country</option>\r\n//                                             {countries?.data?.data?.map((option, key) => (\r\n//                                                 <>\r\n//                                                     <option key={key.id} value={option.id}  >\r\n\r\n//                                                         {option.name}\r\n\r\n//                                                     </option>\r\n//                                                 </>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>State or Province</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"state\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"state\"\r\n\r\n//                                             {...register(\"state\", { required: true })}\r\n//                                             // defaultValue={value}\r\n//                                             // value={value}\r\n//                                             onChange={handleChangeState} >\r\n//                                             aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n//                                             {states?.data?.data?.map((option, key) => (\r\n\r\n//                                                 <><option key={key.id} value={option.id} >\r\n//                                                     {option.name}\r\n//                                                 </option></>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>City or Region</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"city\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"city\"\r\n//                                             {...register(\"city\", { required: true })}\r\n//                                             // value={value}\r\n//                                             onChange={handleChangeCity}\r\n//                                         >\r\n//                                             aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n//                                             {cities?.data?.data?.map((option, key) => (\r\n//                                                 <><option key={key.id} value={option.id}>\r\n//                                                     {option.name}\r\n//                                                 </option></>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         {/* <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>Country</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"country\"\r\n//                                             // selected={country}\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                                 // onChange={onChange}\r\n\r\n//                                                 <GeoLocation\r\n//                                                     // locationTitle=\"Country\"\r\n//                                                     isCountry\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n//                                                     onChange={setCountry}\r\n//                                                     required={true}\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>State or Province</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"state\"\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n//                                                 <GeoLocation\r\n\r\n//                                                     onChange={setState}\r\n//                                                     geoId={country}\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n\r\n\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>City or Region</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"city\"\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n//                                                 <GeoLocation\r\n\r\n//                                                     onChange={setCity}\r\n//                                                     geoId={state}\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div> */}\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 {projdetail.type == 2 ? (\r\n\r\n//                                     <label>Price</label>\r\n//                                 ) : (\r\n\r\n//                                     <label>Price per NFT</label>\r\n//                                 )}\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"price\"\r\n//                                     placeholder=\"Price\"\r\n//                                     {...register(\"price\", { required: true })}\r\n//                                     aria-invalid={errors.price ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 <label>Number of NFTs</label>\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"number_of_nft\"\r\n//                                     defaultValue={1}\r\n//                                     // disabled={type == 1}\r\n//                                     placeholder=\"Select your number of NFTs (1-10)\"\r\n//                                     min={1}\r\n//                                     max={10}\r\n//                                     {...register(\"number_of_nft\", { required: true })}\r\n//                                     aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n//                                 {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         {projdetail.type == 2 && (\r\n\r\n//                             <><div className=\"col-12 col-md-6\">\r\n//                                 <div className=\"form-group\">\r\n//                                     <label>Campaign Start date</label>\r\n//                                     <input\r\n//                                         type=\"date\"\r\n//                                         className=\"form-control\"\r\n//                                         name=\"start_date\"\r\n//                                         // min={disablePastDate()}\r\n//                                         // placeholder=\"Start date\"\r\n//                                         {...register(\"start_date\", { required: true })}\r\n//                                         aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n//                                     {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n//                                 </div>\r\n//                             </div><div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>Campaign End Date</label>\r\n//                                         <input\r\n//                                             type=\"date\"\r\n//                                             className=\"form-control\"\r\n//                                             name=\"end_date\"\r\n//                                             min={disablePastDate()}\r\n//                                             // placeholder=\"End date\"\r\n//                                             {...register(\"end_date\", { required: true })}\r\n//                                             aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n//                                         {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n//                                     </div>\r\n//                                 </div></>\r\n//                         )}\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 <label>Category</label>\r\n//                                 <select name=\"annual_revenue_range\"\r\n//                                     // defaultValue={}\r\n//                                     {...register(\"category_id\")}>\r\n//                                     {cat?.map((option, key) => (\r\n\r\n//                                         <option key={key.id} value={option.id}>\r\n//                                             {option.title}\r\n\r\n//                                         </option>\r\n//                                     ))}\r\n//                                 </select>\r\n//                             </div>\r\n//                         </div>\r\n\r\n\r\n//                         <div className=\"col-12\">\r\n//                             <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n//                         </div>\r\n//                     </div>\r\n\r\n\r\n\r\n//                 </form>\r\n//             </Modal.Body>\r\n//             {/* <Modal.Footer>\r\n//                 <Button onClick={props.onHide}>Close</Button>\r\n//             </Modal.Footer> */}\r\n//         </Modal >\r\n//     );\r\n// }\r\n\r\n// export default ProjDetailPopup\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\nimport { useParams } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ProjDetailPopup(props) {\r\n    const editor = useRef(null);\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n    const id = useParams()\r\n    const [type, setType] = useState()\r\n    // const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    const { countries } = useSelector(state => state.countries)\r\n    const [country, setCountry] = useState('')\r\n    console.log('country', country)\r\n    const [state, setState] = useState('')\r\n    const [city, setCity] = useState('')\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(countries?.data?.data)\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList('101'))\r\n\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n\r\n    const handleChangeCountry = (event) => {\r\n        event?.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n\r\n        const formData = new FormData()\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // debugger\r\n        event.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeCity = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCity(event?.currentTarget?.value);\r\n\r\n    };\r\n\r\n    const cities = useSelector(state => {\r\n        // debugger\r\n        return state.countries.city\r\n    })\r\n\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            setDescription(projdetail.description)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n        dispatch(UpdateProject(props.id, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-6 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Project name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Project name\"\r\n                                    {...register(\"title\", { required: true })}\r\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <div className=\"col-6 col-12\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    placeholder=\"Web Address\"\r\n                                    {...register(\"address\", { required: true })}\r\n                                    aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Country</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"country\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"country\"\r\n                                            {...register(\"country\", { required: true })}\r\n                                            // value={value}\r\n                                            // defaultValue={value}\r\n\r\n                                            onChange={handleChangeCountry}\r\n\r\n                                        >\r\n\r\n                                            aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                Select your country</option>\r\n                                            {countries?.data?.data?.map((option, key) => (\r\n                                                <>\r\n                                                    <option key={key.id} value={option.id}  >\r\n\r\n                                                        {option.name}\r\n\r\n                                                    </option>\r\n                                                </>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>State or Province</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"state\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"state\"\r\n\r\n                                            {...register(\"state\", { required: true })}\r\n                                            // defaultValue={value}\r\n                                            // value={value}\r\n                                            onChange={handleChangeState} >\r\n                                            aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n                                            {states?.data?.data?.map((option, key) => (\r\n\r\n                                                <><option key={key.id} value={option.id} >\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>City or Region</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"city\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}\r\n                                            // value={value}\r\n                                            onChange={handleChangeCity}\r\n                                        >\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                {projdetail.type == 2 ? (\r\n\r\n                                    <label>Price</label>\r\n                                ) : (\r\n\r\n                                    <label>Price per NFT</label>\r\n                                )}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    placeholder=\"Price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    defaultValue={1}\r\n                                    // disabled={type == 1}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    min={1}\r\n                                    max={10}\r\n                                    {...register(\"number_of_nft\", { required: true })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {projdetail.type == 2 && (\r\n\r\n                            <><div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // min={disablePastDate()}\r\n                                        // placeholder=\"Start date\"\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                        aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                    {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                </div>\r\n                            </div><div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Campaign End Date</label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n                                            name=\"end_date\"\r\n                                            min={disablePastDate()}\r\n                                            // placeholder=\"End date\"\r\n                                            {...register(\"end_date\", { required: true })}\r\n                                            aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                        {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                    </div>\r\n                                </div></>\r\n                        )}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"annual_revenue_range\"\r\n                                    // defaultValue={}\r\n                                    {...register(\"category_id\")}>\r\n                                    {cat?.map((option, key) => (\r\n\r\n                                        <option key={key.id} value={option.id}>\r\n                                            {option.title}\r\n\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default ProjDetailPopup","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nconst UserdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    // const { id } = useParams()\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details' >\r\n\r\n                        <tbody >\r\n\r\n                            <tr>\r\n\r\n                                <td><span>Name </span> <span>{userdet.username}</span></td>\r\n                                <td><span>Wallet ID</span>  <span>{userdet.wallet_id}</span></td>\r\n                                <td><span>Number of Referrals </span> <span>{userdet.referrers}</span></td>\r\n                                <td><span>Referral Amount </span> <span>{userdet.referral_amount} KARMATICA token</span></td>\r\n                                <td><span>Fundraised </span> <span>{userdet.total_fundraised} MATIC</span></td>\r\n\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserdataTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { LatestProjectDetail, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { ProgressBar, Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nimport dayjs from 'dayjs';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\nconst ProjdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { slug } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'userprojdata')\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(latprojdetail, 'userprojdetaaaa')\r\n    // const [projuserID, setProjuserid] = useState()\r\n    // console.log('projjj', projuserID)\r\n    // const projuserid = projdetail?.user_data?.map((item) => {\r\n    //     return (\r\n    //         setProjuserid(item.user_id)\r\n    //     )\r\n    // })\r\n    console.log(userdet.user_id, 'uid')\r\n    useEffect(() => {\r\n        dispatch(LatestProjectDetail(slug))\r\n        dispatch(ProjectDetail(slug))\r\n        dispatch(PopularCollectionActionDetails(props.idx))\r\n    }, [slug])\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    const location = useLocation();\r\n    const date1 = new Date(coll?.updated_at)\r\n    const date2 = new Date()\r\n    const time_difference = date2.getTime() - date1.getTime();\r\n    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n    console.log('days', days_difference)\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details'>\r\n                        {projdetail?.user_data?.user_id === userdet?.user_id && localStorage.getItem('authToken') &&\r\n\r\n                            <div >\r\n                                <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                    setModalShowproj(true)}></i>\r\n                                <ProjDetailPopup\r\n                                    // debugger\r\n                                    id={props.id}\r\n                                    show={modalShowproj}\r\n                                    onHide={() => setModalShowproj(false)} />\r\n                                {/* <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a> */}\r\n\r\n                                {/* <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                {/* </a> */}\r\n                            </div>\r\n                        }\r\n                        <tbody className=''>\r\n                            {/* {projdetail.nft_data?.map((items) => {\r\n                                return ( */}\r\n                            <tr>\r\n\r\n                                {/* {projdetail?.country_name?.map((item) => {\r\n                                    return (\r\n\r\n                                        <tr>Country : {item.name}</tr>\r\n                                    )\r\n                                })} */}\r\n                                {location.pathname === `/projects/${slug}` ? (\r\n\r\n                                    <>\r\n                                        {/* <td><span>Owned By:</span> <span>{latprojdetail?.user_data?.username}</span> </td> */}\r\n                                        {/* <td><span>Total NFT's:</span> <span>{latprojdetail?.number_of_nft}</span></td> */}\r\n                                        <td><span>Chain: </span> <span>Polygon (Matic)</span></td>\r\n                                        <td><span>Created : </span> <span> {dayjs(latprojdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\r\n                                        <td><span>Country </span> <span>{latprojdetail?.country_name?.name}</span></td>\r\n                                        <td><span>State</span>  <span>{latprojdetail?.state_name?.name}</span> </td>\r\n                                        <td><span>City</span>  <span>{latprojdetail?.city_name?.name}</span> </td>\r\n                                        <td><span>Number of NFTs</span>  <span>{latprojdetail?.number_of_nft}</span> </td>\r\n                                        {latprojdetail.type == 2 &&\r\n\r\n                                            <><td><span>Start Date</span>  <span>{latprojdetail?.start_date}</span> </td>\r\n                                                <td><span>End Date </span> <span>{latprojdetail?.end_date}</span> </td></>\r\n                                        }\r\n                                        <td><span>Price </span> <span> {latprojdetail?.price} </span> </td></>\r\n                                ) : (\r\n                                    <>\r\n                                        {location.pathname === `/popularcollection/details/${slug}` ? (\r\n                                            <>\r\n\r\n                                                <td><span>Number of NFTs </span><span> {coll?.nft_data?.length}</span></td>\r\n                                                <td><span>Chain </span> <span>Polygon (Matic)</span></td>\r\n                                                <td><span>Created at</span>  <span>{days_difference} days ago</span> </td>\r\n                                                <td><span>Category</span>  <span>{coll?.category}</span> </td>\r\n                                            </>\r\n                                        ) : (\r\n\r\n                                            <>\r\n                                                <td><span>Chain: </span> <span>Polygon (Matic)</span></td>\r\n                                                <td><span>Created : </span> <span> {dayjs(projdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\r\n                                                <td><span>Country </span> <span>{projdetail.country_name?.name}</span></td>\r\n                                                <td><span>State</span>  <span>{projdetail.state_name?.name}</span> </td>\r\n                                                <td><span>City</span>  <span>{projdetail.city_name?.name}</span> </td>\r\n                                                <td><span>Number of NFTs</span>  <span>{projdetail.number_of_nft}</span> </td>\r\n                                                {projdetail.type == 2 &&\r\n\r\n                                                    <><td><span>Start Date</span>  <span>{projdetail.start_date}</span> </td>\r\n                                                        <td><span>End Date </span> <span>{projdetail.end_date}</span> </td></>\r\n                                                }\r\n                                                <td><span>Price </span> <span> {projdetail.price} </span> </td>\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjdataTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst LatNftdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { slug } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(ProjectDetail(slug))\r\n    }, [slug])\r\n\r\n    return (\r\n        <div className='position-relative'>\r\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\" >\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>Item</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody className='img_table'>\r\n                            {projdetail?.project_activity && projdetail?.project_activity?.length ?\r\n                                [...new Map(projdetail?.project_activity.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                        return (\r\n                                            <tr>\r\n\r\n                                                <td><img\r\n                                                    src={item.image}\r\n                                                    className=\"rounded-circle mr-2\"\r\n                                                    alt=\"Avatar\"\r\n                                                />{item.nft_title.slice(0, 13)}...</td>\r\n                                                <td>{item.price}</td>\r\n                                                <td>{item.pay_from.slice(0, 4)}...{item.pay_from.slice(35, 44)}</td>\r\n                                                <td>{item.pay_to.slice(0, 4)}...{item.pay_to.slice(35, 44)}</td>\r\n                                                <td>{item.txd_id.slice(0, 4)}...{item.txd_id.slice(35, 44)}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) :\r\n                                // <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                <>\r\n\r\n                                </>\r\n                            }\r\n                        </tbody>\r\n                        {/* <div className='nothing col-spam-5' colspan=\"5\">\r\n                            No matching records found\r\n                        </div> */}\r\n                    </Table>\r\n                    <div className='nothing'>\r\n                        {projdetail?.project_activity == 0 &&\r\n                            <span> No matching records found</span>\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftdataTable","\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects, LatestProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\nconst ProjNFTS = (props) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams();\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    useEffect(() => {\r\n        // \r\n        dispatch(LatestProjectDetail(slug))\r\n\r\n    }, [slug])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container\">\r\n                <div className='intro row m-0'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row items\">\r\n\r\n                    {latprojdetail?.nft_data?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* <div className=\"intro text-center\">\r\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                                </div> */}\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.slug}?refid=${props.refid}`}>\r\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0 nfts-detail\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n\r\n\r\n\r\n                                            <h5 className=\"mb-0\">{item.title.slice(0, 16)} ...</h5>\r\n\r\n                                            <div className=\"card-bottom mt-1\">\r\n                                                <p dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                                            </div>\r\n\r\n\r\n                                            <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\r\n                                                {item.sold_nft == 1 ? (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>SOLD OUT</button></a>\r\n                                                ) : (\r\n\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={`/nftprojdetails/${item.slug}?refid=${props.refid}`} style={{ color: \"white\" }}>Invest</Link></button></a>\r\n                                                )}\r\n                                                <a> <img className=\"mr-1\" src='../img/image14.png' />{item.price}</a>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default ProjNFTS;","// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { Link, useParams } from 'react-router-dom';\r\n// import { getPublicLiveProjects, LatestProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\n// const ProjNFTS = () => {\r\n\r\n\r\n//     const dispatch = useDispatch()\r\n//     const { id } = useParams();\r\n//     const latprojdetail = useSelector(state => {\r\n//         // \r\n//         return state.projectdetails.latestprojectdetails\r\n//     })\r\n\r\n//     useEffect(() => {\r\n//         // \r\n//         dispatch(LatestProjectDetail(id))\r\n\r\n//     }, [id])\r\n//     return (\r\n//         <section className=\"live-auctions-area single_project-detail\">\r\n//             <div className=\"container\">\r\n//                 <div className='intro row m-0'>\r\n//                     <div className=\"intro-content\">\r\n//                         <span style={{ marginLeft: \"15px\" }}>NFTs</span>\r\n//                         <h3 className=\"w-full mb-0\">NFTs</h3>\r\n//                     </div>\r\n//                 </div>\r\n\r\n\r\n//                 <div className=\"row items\">\r\n\r\n//                     {latprojdetail?.nft_data?.map((item, idx) => {\r\n//                         return (\r\n//                             <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n//                                 {/* <div className=\"intro text-center\">\r\n//                                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n//                                 </div> */}\r\n//                                 <div className=\"card\">\r\n\r\n//                                     <div className=\"image-over\">\r\n//                                         <Link to={`/nftprojdetails/${item.id}`}>\r\n//                                             <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n//                                         </Link>\r\n//                                     </div>\r\n//                                     {/* Card Caption */}\r\n//                                     <div className=\"card-caption col-12 p-0\">\r\n//                                         {/* Card Body */}\r\n//                                         <div className=\"card-body\">\r\n//                                             <div className=\"countdown-times mb-3\">\r\n//                                                 <div className=\"countdown d-flex\" data-date={item.end_date} />\r\n//                                             </div>\r\n//                                             <a href=\"/item-details\">\r\n//                                                 <h5 className=\"mb-0\">{item.title.toUpperCase()} {item.token_id}</h5>\r\n//                                             </a>\r\n//                                             {/* <a className=\"seller d-flex align-items-center my-3\">\r\n//                                                 <img className=\"avatar-sm rounded-circle\"\r\n//                                                     src='https://images.unsplash.com/photo-1547555999-14e818e09e33?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1032&q=80' alt=\"\" />\r\n//                                                 <span className=\"ml-2\">{item.from}</span>\r\n//                                             </a> */}\r\n//                                             <div className=\"card-bottom d-flex\">\r\n//                                                 <span dangerouslySetInnerHTML={{ __html: item.description.slice(0, 28).toUpperCase() }} /><span></span>\r\n//                                             </div>\r\n\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         );\r\n//                     })}\r\n//                 </div>\r\n//                 {/* {\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col-12 text-center\">\r\n//                         <a className=\"btn btn-bordered-white mt-5\">Load More</a>\r\n//                     </div>\r\n//                 </div>\r\n//                } */}\r\n//             </div>\r\n//         </section >\r\n//     );\r\n\r\n// }\r\n\r\n// export default ProjNFTS;\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects, LatestProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getPopularCollectiondetails } from '../../redux/Slices/popularCollectionSlice';\r\n\r\nconst CollectionNFTS = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams();\r\n    const collNft = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    console.log(collNft, \"collNft\")\r\n    useEffect(() => {\r\n\r\n        dispatch(getPopularCollectiondetails())\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container p-0\">\r\n                <div className='intro row m-0'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row items\">\r\n\r\n                    {collNft?.nft_data?.map((item, idx) => {\r\n                        return (\r\n                            // <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                            //     {/* <div className=\"intro text-center\">\r\n                            //         <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                            //     </div> */}\r\n                            //     <div className=\"card\">\r\n\r\n                            //         <div className=\"image-over\">\r\n                            //             <Link to={`/nftprojdetails/${item.slug}`}>\r\n                            //                 <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                            //             </Link>\r\n                            //         </div>\r\n                            //         {/* Card Caption */}\r\n                            //         <div className=\"card-caption col-12 p-0\">\r\n                            //             {/* Card Body */}\r\n                            //             <div className=\"card-body\">\r\n                            //                 {/* <div className=\"countdown-times mb-3\">\r\n                            //                     <div className=\"countdown d-flex\" data-date={item.end_date} />\r\n                            //                 </div> */}\r\n                            //                 <a href=\"/item-details\">\r\n                            //                     <h5 className=\"mb-0\">{item.title.slice(0,20)}...</h5>\r\n                            //                 </a>\r\n                            //                 {/* <a className=\"seller d-flex align-items-center my-3\">\r\n                            //                     <img className=\"avatar-sm rounded-circle\"\r\n                            //                         src='https://images.unsplash.com/photo-1547555999-14e818e09e33?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1032&q=80' alt=\"\" />\r\n                            //                     <span className=\"ml-2\">{item.from}</span>\r\n                            //                 </a> */}\r\n                            //                 <div className=\"card-bottom d-flex\">\r\n                            //                     <span dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                            //                 </div>\r\n\r\n                            //             </div>\r\n                            //         </div>\r\n                            //     </div>\r\n                            // </div>\r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* <div className=\"intro text-center\">\r\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                                </div> */}\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.slug}`}>\r\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0 nfts-detail\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n\r\n\r\n\r\n                                            <h5 className=\"mb-0\">{item.title.slice(0, 16)} ...</h5>\r\n\r\n                                            <div className=\"card-bottom mt-1\">\r\n                                                <p dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                                            </div>\r\n\r\n\r\n                                            <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\r\n                                                {item.sold_nft == 1 ? (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled><i className=\"icon-handbag mr-1\" />SOLD OUT</button></a>\r\n                                                ) : (\r\n\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={`/nftprojdetails/${item.slug}`} style={{ color: \"white\" }}>Invest</Link></button></a>\r\n                                                )}\r\n                                                <a> <img className=\"mr-1\" src='../../img/image14.png' />{item.price}</a>\r\n                                            </div>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n\r\n\r\n                </div>\r\n                {/* {\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <a className=\"btn btn-bordered-white mt-5\">Load More</a>\r\n                    </div>\r\n                </div>\r\n               } */}\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default CollectionNFTS;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Nftprice, Nftdeatil } from './nftprice'\r\nimport { useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport ReadMore from '../../readMore';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport UserdataTable from '../AuthorProfile/userTransTable';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport ProjdataTable from './projDetailtable';\r\nimport LatNftdataTable from './latProjNftdata';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { getPopularCollection } from '../../redux/Slices/popularCollectionSlice';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\nimport CollectionNFTS from '../Collections/collectionNfts';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst CollectionDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const slug = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionActionDetails(slug))\r\n\r\n\r\n    }, [slug])\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    console.log(coll, 'coll')\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail collection_detail\">\r\n            <div className=\"container\">\r\n                <div className='col-12 col-lg-12 '>\r\n                    <span className=\"p-0 title_main \">{coll?.title}</span>\r\n                </div>\r\n                <div className=\"row\">\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n\r\n                                <img src={coll?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12 col-lg-4 '>\r\n                        <div class=\"user-description mt-4 mt-sm-0\">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={coll?.description?.slice(0, 505)} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: coll.description }} /> */}\r\n                        </div>\r\n\r\n                        {/* <div className='content content_project'>\r\n                        <div className='card no-hover position-relative'>\r\n                        <div><span className='boldertext'>Number of NFTs :</span><span> {coll?.nft_data?.length}</span></div>\r\n                        <div><span className='boldertext'>Chain :</span> <span>Polygon (Matic)</span></div>\r\n                        <div><span className='boldertext'>Created at:</span>  <span> {days_difference}12  days ago</span></div>\r\n                        <div><span className='boldertext'>Category:</span>  <span>{coll?.category}</span></div>\r\n                        </div>\r\n\r\n                    </div> */}\r\n                        {/* \r\n                        <div className='table-main-detail mt-3 mt-lg-0 position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                                idx={slug}\r\n                            />\r\n                        </div> */}\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {/* <div className=\"col-lg-4 col-12 mt-3 mt-lg-0\">\r\n                        <div>\r\n                            <div className=\" mb-3\">\r\n\r\n\r\n\r\n\r\n\r\n                                {coll?.user_invest?.slice(0, 3)?.map((items) => {\r\n                                    const date1 = new Date(items.updated_at)\r\n                                    const date2 = new Date()\r\n                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                    console.log('days', days_difference)\r\n                                    return (\r\n\r\n                                        <ul className=\"m-0 custom_lis pl-0\">\r\n                                            <li>\r\n                                                <div className='lorem_done p-0'>\r\n                                                    <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    </svg>\r\n                                                    </span>\r\n\r\n                                                   \r\n                                                </div>\r\n                                            </li>\r\n\r\n\r\n                                        </ul>\r\n\r\n                                    )\r\n                                })}\r\n\r\n\r\n                                <p className='see_all'>See all</p>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-12 col-lg-12 mt-3\">\r\n                        {/* <div className='row'>\r\n                            <div className='filter'>\r\n                                <div className='filter-main-name'>\r\n                                    <div>Short</div>\r\n                                    <div>\r\n                                        <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"0\" fill=\"none\" width=\"24\" height=\"24\"/><g><path d=\"M7 10l5 5 5-5\" fill=\"#fff\"/></g></svg>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='filter-main'>\r\n                                    <ul>\r\n                                        <li>Latest</li>\r\n                                        <li>Oldest</li>\r\n                                        <li>Price:Low to Heigh</li>\r\n                                        <li>Price:Heigh to Low </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n\r\n\r\n\r\n                        {/* <div>\r\n\r\n                        <ProjdataTable\r\n                            idx={id}\r\n                        //  id={id}\r\n                        />\r\n                    </div> */}\r\n\r\n                        {/* </div> */}\r\n\r\n                        {/* <div className='col-12'>\r\n                        <div className='mt-3'>\r\n                            <div className='table-detail'>\r\n                                <LatNftdataTable />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div> */}\r\n\r\n                        <div className=\" col-12 mt-3 p-0\">\r\n                            <div className=\"items mt-0 explore-items p-0\">\r\n                                <CollectionNFTS />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                    </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default CollectionDetails;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Explore/popularDetails';\r\n\r\nconst ItemDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <CollectionDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ItemDetails;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/activity\";\r\n\r\nclass Activity extends Component {\r\n    state = {\r\n        data: {},\r\n        tabData_1: [],\r\n        tabData_2: [],\r\n        tabData_3: [],\r\n        filterData: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    tabData_1: res.data.tabData_1,\r\n                    tabData_2: res.data.tabData_2,\r\n                    tabData_3: res.data.tabData_3,\r\n                    filterData: res.data.filterData \r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"activity-area load-more\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro mb-4\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        <div className=\"col-12 col-md-6 col-lg-8\">\r\n                            {/* Netstorm Tab */}\r\n                            <ul className=\"netstorm-tab nav nav-tabs\" id=\"nav-tab\">\r\n                                <li>\r\n                                    <a className=\"active\" id=\"nav-home-tab\" data-toggle=\"pill\" href=\"#nav-home\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_1}</h5>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a id=\"nav-profile-tab\" data-toggle=\"pill\" href=\"#nav-profile\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_2}</h5>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a id=\"nav-contact-tab\" data-toggle=\"pill\" href=\"#nav-contact\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_3}</h5>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                            {/* Tab Content */}\r\n                            <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                                <div className=\"tab-pane fade show active\" id=\"nav-home\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_1.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`ato_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"nav-profile\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_2.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`att_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"nav-contact\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_3.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`atth_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            {/* Activity Content */}\r\n                            <div className=\"activity-content mt-5 mt-lg-0\">\r\n                                {/* Single Widget */}\r\n                                <div className=\"single-widget\">\r\n                                    {/* Search Widget */}\r\n                                    <div className=\"widget-content search-widget\">\r\n                                        <form action=\"#\">\r\n                                            <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Single Widget */}\r\n                                <div className=\"single-widget\">\r\n                                    {/* Filter Widget */}\r\n                                    <div className=\"widget filter-widget\">\r\n                                        <h4 className=\"title\">{this.state.data.widgetTitle}</h4>\r\n                                        {/* Filter Widget Content */}\r\n                                        <div className=\"widget-content\">\r\n                                            {/* Tags Widget Items */}\r\n                                            <div className=\"widget-content filter-widget-items mt-3\">\r\n                                                {this.state.filterData.map((item, idx) => {\r\n                                                    return (\r\n                                                        <a key={`fd_${idx}`} href=\"#\" className=\"badge tag\">{item.title}</a>\r\n                                                    );\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Activities from '../components/Activity/Activity';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Activity extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Activity\" subpage=\"Pages\" page=\"Activity\" />\r\n                <Activities />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Help Center\",\r\n    heading: \"How can we help you?\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        icon: \"icon icon-plane text-effect\",\r\n        title: \"Getting Started\",\r\n        content: \"Learn how to create an account, set up your wallet, and what you can do on NetStorm\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        icon: \"icon icon-note text-effect\",\r\n        title: \"Creating\",\r\n        content: \"Learn how to create your very first NFT and how to create your NFT collections so you can begin selling and sharing\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        icon: \"icon icon-handbag text-effect\",\r\n        title: \"Buying\",\r\n        content: \"Learn how to purchase your first NFT and understand gas fees and what's gas free on NetStorm\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        icon: \"icon icon-chart text-effect\",\r\n        title: \"Selling\",\r\n        content: \"Learn how list your NFTs for sale and understand the different ways to list your NFTs\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        icon: \"icon icon-link text-effect\",\r\n        title: \"Partners\",\r\n        content: \"Learn how you can partner with us to showcase your NFT drops\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        icon: \"icon icon-flag text-effect\",\r\n        title: \"Developers\",\r\n        content: \"Learn how you can develop with NetStorm &amp; sell them on Marketplace\"\r\n    }\r\n]\r\n\r\nclass HelpCenter extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"help-center-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`hd_${idx}`} className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                    {/* Help Card */}\r\n                                    <div className=\"card help-card\">\r\n                                        <a className=\"d-block text-center\" href=\"#\">\r\n                                            <i className={item.icon} />\r\n                                            <h4>{item.title}</h4>\r\n                                            <p>{item.content}</p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"FAQ\",\r\n    heading: \"Frequently Asked Questions\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        btnClass: \"btn d-block text-left w-100 py-4\",\r\n        target: \"#collapseOne\",\r\n        quote: \"How do I create an NetStorm account?\",\r\n        contentId: \"collapseOne\",\r\n        contentClass: \"collapse show\",\r\n        content: \"The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text.\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseTwo\",\r\n        quote: \"Where can I see transaction details?\",\r\n        contentId: \"collapseTwo\",\r\n        contentClass: \"collapse\",\r\n        content: \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source.\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseThree\",\r\n        quote: \"How do royalties work on NetStorm?\",\r\n        contentId: \"collapseThree\",\r\n        contentClass: \"collapse\",\r\n        content: \"It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFour\",\r\n        quote: \"How do I list an NFT to sell?\",\r\n        contentId: \"collapseFour\",\r\n        contentClass: \"collapse\",\r\n        content: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFive\",\r\n        quote: \"How do I create an NFT?\",\r\n        contentId: \"collapseFive\",\r\n        contentClass: \"collapse\",\r\n        content: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"\r\n    }\r\n]\r\n\r\nclass Faq extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"faq-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* FAQ Content */}\r\n                            <div className=\"faq-content\">\r\n                                {/* Netstorm Accordion */}\r\n                                <div className=\"accordion\" id=\"netstorm-accordion\">\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <div className=\"col-12 col-md-10\">\r\n                                            {/* Single Accordion Item */}\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <div key={`fd_${idx}`} className=\"single-accordion-item p-3\">\r\n                                                        {/* Card Header */}\r\n                                                        <div className=\"card-header bg-inherit border-0 p-0\">\r\n                                                            <h2 className=\"m-0\">\r\n                                                                <button className={item.btnClass} type=\"button\" data-toggle=\"collapse\" data-target={item.target}>\r\n                                                                    {item.quote}\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id={item.contentId} className={item.contentClass} data-parent=\"#netstorm-accordion\">\r\n                                                            {/* Card Body */}\r\n                                                            <div className=\"card-body py-3\">\r\n                                                                {item.content}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Faq;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Help from '../components/HelpCenter/HelpCenter';\r\nimport Faq from '../components/Faq/Faq';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass HelpCenter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Help Center\" subpage=\"Community\" page=\"Help Center\" />\r\n                <Help />\r\n                <Faq />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/authors\";\r\n\r\nclass Authors extends Component {\r\n    state = {\r\n        data: {},\r\n        authorData: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    authorData: res.data.authorData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                <p>{this.state.data.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.authorData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`ad_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card no-hover text-center\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/author\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                            {/* Seller */}\r\n                                            <a className=\"seller\" href=\"/author\">\r\n                                                <div className=\"seller-thumb avatar-lg\">\r\n                                                    <img className=\"rounded-circle\" src={item.avatar} alt=\"\" />\r\n                                                </div>\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body mt-4\">\r\n                                                <a href=\"/author\">\r\n                                                    <h5 >{item.author}</h5>\r\n                                                </a>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authors;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/seller\";\r\n\r\nclass TopSeller extends Component {\r\n    state = {\r\n        data: {},\r\n        sellerData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    sellerData: res.data.sellerData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"top-seller-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/authors\">View All</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.sellerData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-4 item\">\r\n                                    {/* Single Seller */}\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n                                            <a href=\"/author\">\r\n                                                <img className=\"avatar-md rounded-circle\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3\">\r\n                                                <a className=\"seller mb-2\" href=\"/author\">{item.seller}</a>\r\n                                                <span>{item.price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopSeller;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Author from '../components/Authors/Authors';\r\nimport TopSeller from '../components/TopSeller/TopSellerTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Authors extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Authors\" subpage=\"Pages\" page=\"Authors\" />\r\n                <Author />\r\n                <TopSeller />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authors;","import { React } from 'react';\r\nimport ReactImagePickerEditor from 'react-image-picker-editor';\r\n\r\nimport 'react-image-picker-editor/dist/index.css'\r\n\r\nconst UploadImage = ({ initalImag, imageSrc, setImageSrc, show = true }) => {\r\n  const config2 = {\r\n    borderRadius: '8px',\r\n    language: 'en',\r\n    width: '330px',\r\n    height: '250px',\r\n    objectFit: 'contain',\r\n    compressInitial: null,\r\n    hideDownloadBtn: true\r\n  };\r\n\r\n  const initialImage = initalImag;\r\n\r\n  return <div className='image-container'>\r\n    < ReactImagePickerEditor\r\n      config={config2}\r\n      // initialImage={im}\r\n      imageSrcProp={initialImage}\r\n      imageChanged={(newDataUri) => { setImageSrc(newDataUri) }} />\r\n    {/* <br /> <br />\r\n    <hr />\r\n    <br /> */}\r\n    {/* <p>Image preview:</p> */}\r\n    {/* {imageSrc && <img src={imageSrc} alt=\"example\" style={{ maxHeight: '900px', maxWidth: '100%', objectFit: 'contain', background: 'black' }} />}\r\n    {!imageSrc && <h2 style={{ textAlign: 'center', color: '#FFF' }}>No image loaded yet</h2>} */}\r\n\r\n  </div>\r\n}\r\n\r\nexport default UploadImage;\r\n\r\n\r\n","export const dataURLtoBlob = (dataurl) => {\r\n    var arr = dataurl?.split(','), mime = arr[0]?.match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr?.length, u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new Blob([u8arr], { type: mime });\r\n}\r\n\r\nexport const blobToDataURl = (blob) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = _e => resolve(reader.result);\r\n        reader.onerror = _e => reject(reader.error);\r\n        reader.onabort = _e => reject(new Error(\"Read aborted\"));\r\n        reader.readAsDataURL(blob);\r\n    });\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {  UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage  from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\n\r\nfunction Banner(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const image = dataURLtoBlob(imageSrc)\r\n        formData.append('image', image)\r\n        dispatch(UpdateBanner(formData, props.id))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Project Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default Banner","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\n\r\nfunction AvatarUpload(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        // const banner_image = dataURLtoBlob(imageSrc)\r\n        const avatar = dataURLtoBlob(imageSrc)\r\n        formData.append('avatar', avatar)\r\n        formData.append('username', userdet.username)\r\n        // formData.append('banner_image', banner_image)\r\n        dispatch(UpdateProfileAction(formData, props))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    User Image\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default AvatarUpload","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\n\r\nfunction BannerUpload(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const banner_image = dataURLtoBlob(imageSrc)\r\n        // formData.append('avatar', userdet.avatar)\r\n        formData.append('username', userdet.username)\r\n        formData.append('banner_image', banner_image)\r\n        dispatch(UpdateProfileAction(formData, props))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Profile Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default BannerUpload","\r\nimport React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GetUserAction, UpdateProfileAction } from \"../../redux/Actions/authAction\";\r\nimport { useEffect } from \"react\";\r\nimport UserTransdataTable from \"./userTransTable\";\r\nimport UserdataTable from \"./userDetails\";\r\nimport Banner from \"../Create/editBanner\";\r\nimport AvatarUpload from \"./avatarUpload\";\r\nimport BannerUpload from \"./bannerUpload\";\r\nimport { Link } from \"react-router-dom\";\r\n// const BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/author\";\r\n\r\nconst AuthorProfile = () => {\r\n    const [modalSho, setModalSho] = React.useState(false);\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowavatar, setModalShowavatar] = React.useState(false);\r\n    const [loading, setLoading] = useState('')\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet, 'user')\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('username', data.username)\r\n        formData.append('email', data.email)\r\n        dispatch(UpdateProfileAction(formData))\r\n\r\n    }\r\n    useEffect(() => {\r\n        dispatch(GetUserAction());\r\n    }, []);\r\n    useEffect(() => {\r\n        if (userdet && Object.keys(userdet).length) {\r\n            setValue(\"avatar\", userdet.avatar);\r\n            setValue(\"username\", userdet.username);\r\n            setValue(\"email\", userdet.email);\r\n        }\r\n    }, [userdet]);\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"container\">\r\n                {/* <h3 class=\"p-0\">Author Name </h3> */}\r\n                <div className=\"row pt-0\">\r\n                    <div className='col-md-8'>\r\n                        <div className=\"banner item-thumb text-center\">\r\n                            <div>\r\n                                <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                    onClick={() => setModalSho(true)}\r\n                                ></i>\r\n                                <BannerUpload\r\n\r\n                                    show={modalSho}\r\n                                    onHide={() => setModalSho(false)} />\r\n\r\n                            </div>\r\n                            <img src={userdet.banner_image} alt=\"first nft\" />\r\n                        </div>\r\n                        <div className=\"table-detail mt-4\">\r\n                            <UserdataTable />\r\n\r\n                        </div>\r\n                        <div className=\"profile_detail mt-4 position-relative\">\r\n\r\n                            <UserTransdataTable />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4 mt-4 mt-lg-0\">\r\n                        <div className=\"profile_main_right card wrap_card no-hover text-center\">\r\n\r\n                            <div className=\"image-over\">\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                        onClick={() => setModalShowavatar(true)}\r\n                                    ></i>\r\n                                    <AvatarUpload\r\n\r\n                                        show={modalShowavatar}\r\n                                        onHide={() => setModalShowavatar(false)} />\r\n\r\n                                </div>\r\n                                <img className=\"card-img-top\" src={userdet.avatar} alt=\"\" />\r\n                            </div>\r\n                            {/* Card Caption */}\r\n                            <div className=\"card-caption col-12 p-0\">\r\n                                {/* Card Body */}\r\n\r\n\r\n                            </div>\r\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover p-0\">\r\n\r\n                                <div className=\"card-body\">\r\n                                    <from className=\"Edite_able\" >\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n\r\n                                                style={{ textTransform: 'none' }}\r\n                                                name=\"username\"\r\n                                                placeholder=\"username\"\r\n                                                {...register(\"username\", { required: true })}\r\n                                                aria-invalid={errors.username ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n                                            <i class=\"fa-solid fa-pen\"></i>\r\n                                        </label>\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control \"\r\n                                                name=\"email\"\r\n                                                disabled={userdet.role == 3 ? true : false}\r\n                                                // value={userdet.role == 3 && userdet.email}\r\n                                                placeholder=\"email\"\r\n                                                {...register(\"email\")}\r\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {/* {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>} */}\r\n                                            {userdet.role == 2 &&\r\n\r\n                                                <i class=\"fa-solid fa-pen\"></i>\r\n                                            }\r\n                                        </label>\r\n\r\n                                        {/* Social Icons */}\r\n                                        {/* <div className=\"social-icons d-flex justify-content-center my-3\">\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-facebook-f fa-w-10\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"facebook-f\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 320 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-twitter fa-w-16\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"twitter\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 512 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-google-plus-g fa-w-20\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"google-plus-g\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 640 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M386.061 228.496c1.834 9.692 3.143 19.384 3.143 31.956C389.204 370.205 315.599 448 204.8 448c-106.084 0-192-85.915-192-192s85.916-192 192-192c51.864 0 95.083 18.859 128.611 50.292l-52.126 50.03c-14.145-13.621-39.028-29.599-76.485-29.599-65.484 0-118.92 54.221-118.92 121.277 0 67.056 53.436 121.277 118.92 121.277 75.961 0 104.513-54.745 108.965-82.773H204.8v-66.009h181.261zm185.406 6.437V179.2h-56.001v55.733h-55.733v56.001h55.733v55.733h56.001v-55.733H627.2v-56.001h-55.733z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-vine fa-w-12\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"vine\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 384 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M384 254.7v52.1c-18.4 4.2-36.9 6.1-52.1 6.1-36.9 77.4-103 143.8-125.1 156.2-14 7.9-27.1 8.4-42.7-.8C137 452 34.2 367.7 0 102.7h74.5C93.2 261.8 139 343.4 189.3 404.5c27.9-27.9 54.8-65.1 75.6-106.9-49.8-25.3-80.1-80.9-80.1-145.6 0-65.6 37.7-115.1 102.2-115.1 114.9 0 106.2 127.9 81.6 181.5 0 0-46.4 9.2-63.5-20.5 3.4-11.3 8.2-30.8 8.2-48.5 0-31.3-11.3-46.6-28.4-46.6-18.2 0-30.8 17.1-30.8 50 .1 79.2 59.4 118.7 129.9 101.9z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                        </div> */}\r\n                                        <button className=\"btn btn-bordered-white btn-smaller\" type=\"submit\" >\r\n                                            Update\r\n                                        </button>\r\n                                        <div>\r\n                                            <br />\r\n                                            {userdet.role == 3 ? (\r\n                                                <>You are logged in as a Creator/merchant<br />\r\n                                                    <span>click here to <Link to=\"/create\">create project</Link></span></>\r\n\r\n                                            ) : (\r\n                                                <span>You are logged in as a Buyer</span>\r\n                                            )}\r\n                                        </div>\r\n                                    </from>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\" \"}\r\n            </div>\r\n            {\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthorProfile;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Explore\",\r\n    heading: \"Exclusive Digital Assets\",\r\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n    filter_1: \"All\",\r\n    filter_2: \"Art\",\r\n    filter_3: \"Music\",\r\n    filter_4: \"Collectibles\",\r\n    filter_5: \"Sports\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_1.jpg\",\r\n        author: \"/img/avatar_1.jpg\",\r\n        title: \"Virtual Worlds\",\r\n        content: \"ERC-729\",\r\n        price: \"4.37 BNB\",\r\n        likes: \"154\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        group: '[\"music\"]',\r\n        img: \"/img/auction_2.jpg\",\r\n        author: \"/img/avatar_2.jpg\",\r\n        title: \"Walking On Air\",\r\n        content: \"ERC-543\",\r\n        price: \"2.37 BNB\",\r\n        likes: \"74\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        group: '[\"music\",\"collectibles\"]',\r\n        img: \"/img/auction_3.jpg\",\r\n        author: \"/img/avatar_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        content: \"ERC-932\",\r\n        price: \"1.89 BNB\",\r\n        likes: \"\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        group: '[\"music\",\"sports\",\"art\",\"collectibles\"]',\r\n        img: \"/img/auction_4.jpg\",\r\n        author: \"/img/avatar_4.jpg\",\r\n        title: \"Sports\",\r\n        content: \"ERC-250\",\r\n        price: \"0.74 BNB\",\r\n        likes: \"184\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        group: '[\"sports\",\"art\",\"music\"]',\r\n        img: \"/img/auction_5.jpg\",\r\n        author: \"/img/avatar_5.jpg\",\r\n        title: \"Cartoon Heroes\",\r\n        content: \"ERC-167\",\r\n        price: \"4.23 BNB\",\r\n        likes: \"126\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_6.jpg\",\r\n        author: \"/img/avatar_6.jpg\",\r\n        title: \"Domain Names\",\r\n        content: \"ERC-037\",\r\n        price: \"3.41 BNB\",\r\n        likes: \"23\"\r\n    }\r\n]\r\n\r\nclass ExploreSix extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                    <div className=\"col-12\">\r\n                        {/* Explore Menu */}\r\n                        <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n                            <label className=\"btn active d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"all\" defaultChecked className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_1}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"art\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_2}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"music\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_3}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"collectibles\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_4}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_5}</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items explore-items\">\r\n                    {this.state.data.map((item, idx) => {\r\n                        return (\r\n                            <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" data-groups={item.group}>\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <a href=\"/item-details\">\r\n                                            <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                        </a>\r\n                                        {/* Author */}\r\n                                        <a className=\"author\" href=\"/authors\">\r\n                                            <div className=\"author-thumb avatar-lg\">\r\n                                                <img className=\"rounded-circle\" src={item.author} alt=\"\" />\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            <a href=\"/item-details\">\r\n                                                <h5 className=\"mb-2\">{item.title}</h5>\r\n                                            </a>\r\n                                            <span>{item.content}</span>\r\n                                            <hr />\r\n                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                <span>{item.price}</span>\r\n                                                <span><i className=\"icon-heart mr-2\" />{item.likes}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreSix;","import React, { Component } from 'react';\r\nimport AuthorProfile from '../AuthorProfile/AuthorProfile';\r\nimport Explore from '../Explore/ExploreSix';\r\n\r\nclass Author extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"author-area explore-area author-details-area  popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-12\">\r\n                            <AuthorProfile />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Author;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport AuthorProfile from '../components/Author/Author';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst Author = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AuthorProfile />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Author;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ConnectWallet } from './interact';\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginSuccess } from '../../redux/Slices/authSlice';\r\n\r\nconst data = {\r\n    \"preHeading\": \"Wallet Connect\",\r\n    \"heading\": \"Connect your Wallet\",\r\n    \"content\": \"Connect your wallet to continue browsing our website\",\r\n    \"walletData\": [\r\n        {\r\n            \"id\": 1,\r\n            \"img\": \"/img/metamask.png\",\r\n            \"title\": \"MetaMask\",\r\n            \"content\": \"A browser extension with great flexibility. The web's most popular wallet\"\r\n        },\r\n    ]\r\n}\r\n\r\nconst Wallet = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleConnect = async () => {\r\n        const res = await ConnectWallet(\"CREATOR\")\r\n\r\n        if (res?.res?.response?.status === 401) {\r\n            history.push('/signup')\r\n        }\r\n        else {\r\n            dispatch(loginSuccess(res?.res))\r\n            localStorage.setItem('authToken', res?.res?.data?.data?.auth_token)\r\n            history.push('/projectlist')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"wallet-connect-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mt-4 pt-2 mb-1\">\r\n                            {/* <span>{data.preHeading}</span> */}\r\n                            <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            <p>{data.content}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center items\">\r\n                    {data?.walletData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} onClick={handleConnect}\r\n                                className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                {/* Single Wallet */}\r\n                                <div className=\"card single-wallet\">\r\n                                    <a className=\"d-block text-center\">\r\n                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                        <h4 className=\"mb-0\">{item.title}</h4>\r\n                                        <p>{item.content}</p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Wallet;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Wallet from '../components/Wallet/Wallet';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst WalletConnect = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Wallet />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default WalletConnect;","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    console.log(data, 'dataaacreate')\r\n    // localStorage.setItem(\"data\", JSON.stringify(data))\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport React, { Component, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { CategoriesAction, CreateProjectAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\n\r\nimport 'reactjs-popup/dist/index.css';\r\nimport styles from \"./styles/styles.module.scss\"\r\nimport { useFormData } from './Context/context';\r\nimport JoditEditor from 'jodit-react'; import { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\nimport UploadImage from '../../shared/Upload';\r\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\r\n\r\n\r\nconst Create = ({ current, next, prev }) => {\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues, prevValues } = useFormData();\r\n    console.log(data.city)\r\n    const [description, setDescription] = useState()\r\n    console.log('disss', description)\r\n    const [country, setCountry] = useState(\"\");\r\n    console.log('country', country)\r\n    const [state, setState] = useState(\"\");\r\n    console.log('state', state)\r\n    const [city, setCity] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    console.log('price', price)\r\n    console.log('city', city)\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [collection_id, setCollectionId] = useState(0);\r\n    const [usertype, setUserType] = useState();\r\n    console.log(\"type\", usertype)\r\n\r\n    // const schema = yup.object().shape({\r\n    //     description: yup.string().required()\r\n    //     // password: yup.string().required(),\r\n    // });\r\n    const [nonft, setNonft] = useState('1')\r\n    function onHandleClick(event) {\r\n        setCollectionId(event.currentTarget.id);\r\n    };\r\n\r\n    console.log(data, \"_________DATA_IN_CREATE______\")\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n\r\n    console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({\r\n        mode: \"all\",\r\n    });\r\n\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    // console.log(col, 'col')\r\n    const onSubmit = (data) => {\r\n\r\n        const imageBanner = dataURLtoBlob(image)\r\n\r\n        setFormValues({ ...data, description, type: data?.usertype, image: imageBanner, imageUri: image });\r\n        // localStorage.setItem('country', JSON.stringify(country))\r\n        next()\r\n    }\r\n    // const bannerimage =\r\n    // console.log('bannerimg', bannerimage)\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        if (prev) {\r\n\r\n            setValue('title', data.title)\r\n            setValue('address', data.address)\r\n            setValue('category_id', data.category_id)\r\n            setValue('country', data.country)\r\n            setValue('state', data.state)\r\n            setValue('city', data.city)\r\n            setValue('description', data.description)\r\n            setValue('number_of_nft', data.number_of_nft)\r\n            setValue('price', data.price)\r\n            setValue('start_date', data.start_date)\r\n            setValue('type', data.usertype)\r\n            setValue('image', data.imageUri)\r\n\r\n            setUserType(data.usertype)\r\n            setCountry(data.country)\r\n            setDescription(data.description)\r\n            setImage(data.imageUri)\r\n            setState(data.state)\r\n            setCity(data.city)\r\n\r\n            setValue('end_date', data.end_date)\r\n        }\r\n\r\n    }, [data])\r\n\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n\r\n    const handleChangeCountry = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', event.currentTarget.value)\r\n        dispatch(StateList(formData)) // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setCountry(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event.currentTarget.value)\r\n        dispatch(CityList(formData))\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    function imposeMinMax(el) {\r\n        if (el?.value != \"\") {\r\n            if (parseInt(el?.value) < parseInt(el?.min)) {\r\n                el.value = el?.min;\r\n            }\r\n            if (parseInt(el?.value) > parseInt(el?.max)) {\r\n                el.value = el.max;\r\n            }\r\n        }\r\n    }\r\n\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate())\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n\r\n    const handleSubmitDraft = (data) => {\r\n        const imageBanner = dataURLtoBlob(image)\r\n        const formData = new FormData()\r\n        for (const [key, value] of Object.entries(data)) {\r\n            formData.append(key, value)\r\n        }\r\n\r\n        formData.append(\"type\", data.usertype)\r\n        formData.append(\"image\", imageBanner)\r\n        formData.append(\"status\", 3)\r\n        formData.append(\"on_which_step_left\", 0)\r\n        if (data.usertype == 1) {\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        }\r\n\r\n        dispatch(CreateProjectAction(formData, setLoading, history))\r\n    }\r\n    return (\r\n\r\n        <div className={current === 0 ? styles.showForm : styles.hideForm}>\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12 \">\r\n                        <div className=\"form-group mt-3\">\r\n                            <div className=\"form-check form-check-inline mr-2\">\r\n                                {/* {data.usertype == 2 ? ( */}\r\n                                <>\r\n                                    <input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"1\"\r\n                                        // checked={data.usertype ? false:tr}\r\n                                        value=\"1\"\r\n                                        defaultChecked={data.usertype == 1 ? true : !usertype ? true : false}\r\n                                        {...register(\"usertype\", { required: true })}\r\n                                        aria-invalid={errors.usertype ? \"true\" : \"false\"}\r\n                                        onChange={(e) => setUserType(e.target.value)}\r\n                                    // defaultChecked={data.usertype}\r\n                                    />\r\n                                    <label className=\"form-check-label mr-2\" htmlFor=\"donation\">Single</label>\r\n                                </>\r\n                                {/* ) : ( */}\r\n\r\n                                <><input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    name=\"radiobutton\"\r\n                                    id=\"2\"\r\n                                    value=\"2\"\r\n                                    {...register(\"usertype\", { required: true })}\r\n                                    defaultChecked={data.usertype == 2 ? true : false}\r\n                                    onChange={(e) => setUserType(e.target.value)}\r\n                                    aria-invalid={errors.type ? \"true\" : \"false\"}\r\n\r\n                                />\r\n                                    <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label></>\r\n                                {/* )} */}\r\n                            </div>\r\n\r\n                            {errors.usertype?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Type is required</p>}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-md-6 col-12\">\r\n                        {/* {type == 1 && ( */}\r\n\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Project name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"title\"\r\n                                placeholder=\"Project name\"\r\n                                {...register(\"title\", { required: true, pattern: { value: /[A-Za-z]/ } })}\r\n                                aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>}\r\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                        </div>\r\n                        {/* )} */}\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Web address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                // required={false}\r\n                                name=\"address\"\r\n                                placeholder=\"Web address\"\r\n                                {...register(\"address\", {\r\n                                    required: true,\r\n                                    pattern: {\r\n                                        value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                    }\r\n                                })}\r\n                                aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                            />\r\n\r\n\r\n                            {errors.address && errors.address?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                            {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <label>Description</label>\r\n                        <div className=\"form-group\">\r\n\r\n\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"description\"\r\n                                defaultValue=\"\"\r\n                                rules={{ required: true, minLength: 100 }}\r\n\r\n\r\n                                render={({ field }) => {\r\n                                    return <JoditEditor\r\n                                        ref={field.ref}\r\n                                        // value={description}\r\n                                        // {...register(\"description\", { required: true })}\r\n                                        // config={config}\r\n                                        value={field.value}\r\n\r\n                                        placeholder=\"start typing\"\r\n                                        aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        tabIndex={1} // tabIndex of textarea\r\n                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                        onChange={field.onChange}\r\n                                    />\r\n\r\n                                }}\r\n                            />\r\n                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            {errors.description && errors.description.type === \"minLength\" && (\r\n                                <p style={{ color: 'red' }}>\r\n                                    min length of words is 100\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Country</label>\r\n\r\n                            <select name=\"country\"\r\n\r\n                                {...register(\"country\", { required: true })} onChange={handleChangeCountry}>\r\n                                aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                {countries?.data?.data?.map((option, key) => (\r\n                                    <>\r\n\r\n\r\n                                        <option key={key.id} value={option.id}>\r\n\r\n                                            {option.name}\r\n\r\n                                        </option>\r\n\r\n\r\n                                    </>\r\n\r\n                                ))}\r\n                            </select>\r\n                            {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>State or province</label>\r\n\r\n                            <select name=\"state\"\r\n                                {...register(\"state\")} onChange={handleChangeState}>\r\n                                aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state/province</option>\r\n                                {states?.data?.data?.map((option, key) => (\r\n\r\n                                    <><option key={key.id} value={option.id}  >\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                            {/* {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>} */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group\">\r\n                            <label>City or Region</label>\r\n\r\n                            <select name=\"city\"\r\n                                {...register(\"city\")}>\r\n                                aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city/region</option>\r\n                                {cities?.data?.data?.map((option, key) => (\r\n                                    <><option key={key.id} value={option.id}>\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                            {/* {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>} */}\r\n                        </div>\r\n\r\n                        {!usertype || usertype == 1 ? (\r\n\r\n                            <div className=\"col-12 col-md-12 pl-0 pr-0\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Number of NFTs</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n\r\n                                        className=\"form-control\"\r\n                                        name=\"number_of_nft\"\r\n\r\n                                        value={nonft}\r\n                                        onChange={() => setNonft('1')}\r\n                                        defaultValue={nonft}\r\n                                        // defaultValue={1}\r\n                                        // disabled={true}\r\n                                        min={1}\r\n                                        max={1}\r\n\r\n                                        maxLength={1}\r\n                                        // onChange={setNonft(\"1\")}\r\n                                        // onKeyUp={imposeMinMax()}\r\n                                        placeholder=\"number of NFT (1 allowed)\"\r\n                                        {...register(\"number_of_nft\", { required: true, min: 1, max: 1 })}\r\n                                        // {...register(\"number_of_nft\", { maxLength: 12 })}\r\n                                        aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                    />\r\n                                    {/* {errors.number_of_nft && errors.number_of_nft.type === \"max\" && (\r\n            <p style={{ color: 'red' }}>\r\n                Only 1 nft allowed (select campaign for more than one NFTs)\r\n            </p>\r\n\r\n\r\n        )} */}\r\n                                    {/* {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required and limit is upto 1</p>} */}\r\n                                    {/* {errors.number_of_nft?.type === \"maxLength\" && <p style={{ color: 'red' }} role=\"alert\">Max one length </p>} */}\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"col-12 col-md-12 pl-0 pr-0\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Number of NFTs</label>\r\n                                    <input\r\n                                        // onInput={(e) => {\r\n                                        //     if (e?.target?.value?.length < e.target.maxLength)\r\n                                        //         e.target.value = e.target.value.slice(0, e.target.maxLength);\r\n                                        // }}\r\n                                        type=\"number\"\r\n                                        className=\"form-control\"\r\n                                        name=\"number_of_nft\"\r\n\r\n                                        // defaultValue={1}\r\n                                        min={1}\r\n                                        max={10}\r\n                                        maxLength={10}\r\n\r\n                                        // onKeyUp={imposeMinMax()}\r\n                                        // min=1 max=4 onkeyup=imposeMinMax(this)\r\n\r\n                                        // disabled={type == 1}\r\n                                        placeholder=\"Select your number of NFTs (1-10)\"\r\n                                        {...register(\"number_of_nft\", { required: true, min: 1, max: 10 })}\r\n\r\n                                        // {...register(\"number_of_nft\", { maxLength: 12 })}\r\n                                        aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                    />\r\n                                    {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                    {errors.number_of_nft && errors.number_of_nft.type === \"max\" && (\r\n                                        <p style={{ color: 'red' }}>\r\n                                            10 NFTs Maximum per Campaign\r\n                                        </p>\r\n                                    )}\r\n                                    {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFTs per project is required with a limit of 10</p>}\r\n                                    {/* {errors.number_of_nft?.type === \"maxLength\" && <p style={{ color: 'red' }} role=\"alert\">Max length exceeded</p>} */}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n\r\n                        <div className=\"col-12 col-md-12 pr-0 pl-0\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"category_id\"\r\n                                    {...register(\"category_id\", { required: true })}\r\n                                >\r\n                                    aria-invalid={errors.category_id ? \"true\" : \"false\"}\r\n                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select category </option>\r\n                                    {cat?.map((option, key) => (\r\n\r\n                                        <option key={key.id} value={option.id} >\r\n                                            {option.title}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {errors.category_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Category is required</p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            {usertype == 2 ? (\r\n\r\n                                <label>Price per NFT (In MATIC tokens)</label>\r\n                            ) : (\r\n                                <label>Price (In MATIC tokens)</label>\r\n\r\n                            )}\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                step=\"0.01\"\r\n                                name=\"price\"\r\n                                placeholder=\"Price\"\r\n                                {...register(\"price\", { required: true })}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                                aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <div className=\"form-group pricing-detail\">\r\n                                <p><span>Price</span> <span>{price ? price : '--'} MATIC</span></p>\r\n                                <p><span>Karmatica Fee</span><span>1%</span></p>\r\n                                <p><span>You will receive </span><span>{99 * price / 100 ? 99 * price / 100 : \"--\"} MATIC</span></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {usertype == 2 && (\r\n\r\n                        <><div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Campaign Start date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    // placeholder='dd-mm-yy'\r\n                                    // hidden={data.type == 1}\r\n                                    className=\"form-control\"\r\n                                    name=\"start_date\"\r\n                                    min={disablePastDate()}\r\n                                    defaultValue={defaultValue}\r\n\r\n                                    // placeholder=\"Start date :\"\r\n                                    {...register(\"start_date\", { required: true })}\r\n                                    aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        // hidden={data.type == 1}\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        defaultValue={defaultValue1}\r\n                                        min={disablePastDate()}\r\n\r\n                                        // placeholder=\"End date\"\r\n                                        {...register(\"end_date\", { required: true })}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    <div >\r\n\r\n                                        <span className='logo-dis'>End date should be greater then or equal to start date</span>\r\n                                    </div>\r\n                                    {/* {errors.end_date && errors?.end_date?.type === 'min' && <p style={{ color: 'red' }} role=\"alert\">End date should be greater or equal to startdate</p>} */}\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div></>\r\n                    )}\r\n                    <div className=\" col-12\">\r\n                        <div className=\"form-group\">\r\n                            <label>Banner image</label>\r\n                            <UploadImage\r\n                                imageSrc={image}\r\n                                // src={image}\r\n                                initalImag={data.imageUri}\r\n\r\n                                setImageSrc={setImage}\r\n                            />\r\n                            <div >\r\n\r\n                                <div className='logo-dis logo-dis-img'>\r\n                                    <span>Allowed types: JPG, PNG, GIF</span><span>Banner should be 800 px wide x 500 px high, 10MB max</span>\r\n                                </div>\r\n                            </div>\r\n                            {/* {errors.end_date && errors?.end_date?.type === 'min' && <p style={{ color: 'red' }} role=\"alert\">End date should be greater or equal to startdate</p>} */}\r\n                            {/* {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>} */}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-6\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={handleSubmit(handleSubmitDraft)}>\r\n                            Save as Draft\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Create;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\r\nimport UploadImage from '../../shared/Upload';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction MyVerticallyCenteredModal(props) {\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const [image, setImage] = useState()\r\n    const OnSubmit = (dat) => {\r\n        // debugger\r\n        const imageBanner = dataURLtoBlob(image)\r\n        // \r\n        // data.preventDefault()\r\n        dispatch(CreateCollectionAction({ dat, imageBanner, props }))\r\n        // console.log(data?.statusCode)\r\n\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Create Collection\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className='row'>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Display name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                    placeholder=\"Enter collection name\"\r\n                                    {...register('title', { required: true })}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n                            </div>\r\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">collection name is required</p>}\r\n                        </div>\r\n\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Symbol</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"symbol\"\r\n                                    aria-invalid={errors.symbol ? \"true\" : \"false\"}\r\n                                    placeholder=\"Enter token symbol\"\r\n                                    {...register('symbol', { required: true })}\r\n                                // value={symbol}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setSymbol(e.target.value);\r\n                                // }} \r\n                                />\r\n                                {errors.symbol?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">symbol is required</p>}\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Description</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"description\"\r\n                                    aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                    {...register('description', { required: true })}\r\n                                    // value={description}\r\n                                    // onChange={(e) => {\r\n\r\n                                    //     setDescription(e.target.value);\r\n                                    // }}\r\n                                    placeholder=\"Spread some words about your collection\"\r\n                                />\r\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">description is required</p>}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web URL</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    aria-invalid={errors.short_url ? \"true\" : \"false\"}\r\n                                    name=\"short_url\"\r\n                                    placeholder=\"Web URL\"\r\n\r\n                                    {...register('short_url', { required: true })}\r\n                                // value={short_url}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setShortUrl(e.target.value);\r\n                                // }} \r\n                                />\r\n                                {errors.short_url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Web URL is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Banner image</label>\r\n                                <UploadImage\r\n                                    imageSrc={image}\r\n                                    // initalImag={image}\r\n                                    setImageSrc={setImage}\r\n                                />\r\n\r\n                                <div >\r\n\r\n                                    <span className='logo-dis'>Allowed types: JPG, PNG, GIF<br />Banner should be 1500 px wide x 500 px high</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"modal-footer\"> */}\r\n                    <Button key=\"create-collection\" type=\"submit\" className=\"btn btn-primary\">Create</Button>\r\n                    {/* </div> */}\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default MyVerticallyCenteredModal","import { useState, useEffect, useRef } from \"react\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { Source } from \"three\";\r\n\r\nfunction loadGLTFModel(scene, glbPath, options) {\r\n    const { receiveShadow, castShadow } = options;\r\n    return new Promise((resolve, reject) => {\r\n        const loader = new GLTFLoader();\r\n        loader.load(\r\n\r\n\r\n            glbPath,\r\n            (gltf) => {\r\n                const obj = gltf.scene;\r\n                obj.name = \"dinosaur\";\r\n                obj.position.y = 0;\r\n                obj.position.x = 0;\r\n                obj.receiveShadow = receiveShadow;\r\n                obj.castShadow = castShadow;\r\n                scene.add(obj);\r\n\r\n                obj.traverse(function (child) {\r\n                    if (child.isMesh) {\r\n                        child.castShadow = castShadow;\r\n                        child.receiveShadow = receiveShadow;\r\n                    }\r\n                });\r\n\r\n                resolve(obj);\r\n            },\r\n            undefined,\r\n            function (error) {\r\n                console.log(error);\r\n                reject(error);\r\n            }\r\n        );\r\n    });\r\n}\r\n\r\nfunction easeOutCirc(x) {\r\n    return Math.sqrt(1 - Math.pow(x - 1, 4));\r\n}\r\n\r\nconst DModal = ({ vdo }) => {\r\n    // debugger\r\n    // const { vdo } = props\r\n    const refContainer = useRef();\r\n    const [loading, setLoading] = useState(true);\r\n    const [renderer, setRenderer] = useState();\r\n    const [source, setSource] = useState('')\r\n    console.log('source', source)\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        const file = vdo;\r\n        // if (file?.name?.includes(\"gltf\")) {\r\n\r\n        //     const gltfToGlb = gltfPipeline.gltfToGlb;\r\n        //     const gltf = fsExtra.readJsonSync(file);\r\n        //     gltfToGlb(gltf).then(function (results) {\r\n        //         fsExtra.writeFileSync(file, results.glb);\r\n        //     });\r\n        //     console.log('yessss')\r\n        // }\r\n        // let url = URL.createObjectURL(file);\r\n        // url = window.URL.createObjectURL(new Blob([url]));\r\n        // // const url = window.URL.createObjectURL(new Blob([Response.data]));\r\n        // // this?.loaders?.gltfLoader?.load(url, (file) => {\r\n\r\n        // // });\r\n\r\n        // setSource(url);\r\n\r\n        const { current: container } = refContainer;\r\n        if (container && !renderer) {\r\n            const scW = container.clientWidth;\r\n            const scH = container.clientHeight;\r\n            const renderer = new THREE.WebGLRenderer({\r\n                antialias: true,\r\n                alpha: true\r\n            });\r\n            renderer.setPixelRatio(window.devicePixelRatio);\r\n            renderer.setSize(scW, scH);\r\n            renderer.outputEncoding = THREE.sRGBEncoding;\r\n            container.appendChild(renderer.domElement);\r\n            setRenderer(renderer);\r\n\r\n            const scene = new THREE.Scene();\r\n            const scale = 5.6;\r\n            const camera = new THREE.OrthographicCamera(\r\n                -scale,\r\n                scale,\r\n                scale,\r\n                -scale,\r\n                0.01,\r\n                50000\r\n            );\r\n            const target = new THREE.Vector3(-0.5, 1.2, 0);\r\n            const initialCameraPosition = new THREE.Vector3(\r\n                20 * Math.sin(0.2 * Math.PI),\r\n                10,\r\n                20 * Math.cos(0.2 * Math.PI)\r\n            );\r\n            const ambientLight = new THREE.AmbientLight(0xcccccc, 1);\r\n            scene.add(ambientLight);\r\n            const controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.autoRotate = false;\r\n            controls.enableZoom = true;\r\n            controls.minDistance = 0\r\n            controls.minZoom = 0\r\n            controls.target = target;\r\n\r\n            const loader = new GLTFLoader()\r\n\r\n            loader.load(\r\n                file,\r\n                function (gltf) {\r\n                    gltf.scene.traverse(function (child) {\r\n                        if (child.isMesh) {\r\n                            const m = child\r\n                            m.receiveShadow = true\r\n                            m.castShadow = true\r\n                        }\r\n                        if (child.isLight) {\r\n                            const l = child\r\n                            l.castShadow = true\r\n                            l.shadow.bias = -0.003\r\n                            l.shadow.mapSize.width = 2048\r\n                            l.shadow.mapSize.height = 2048\r\n                        }\r\n                    })\r\n                    scene.add(gltf.scene)\r\n                },\r\n                (xhr) => {\r\n                    animate();\r\n                    setLoading(false);\r\n                    // mdl(file)\r\n                    console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\r\n                },\r\n                (error) => {\r\n                    // debugger\r\n                    console.log(error)\r\n                }\r\n            )\r\n            // loadGLTFModel(url, function (gltf) {\r\n            //     const model = gltf.scene;\r\n            //     URL.revokeObjectURL(url);\r\n            // }, function () { }, function () {\r\n            //     URL.revokeObjectURL(url);\r\n            // }).\r\n\r\n            // loadGLTFModel(scene, url, {\r\n            //     receiveShadow: false,\r\n            //     castShadow: false\r\n            // })\r\n\r\n            let req = null;\r\n            let frame = 0;\r\n            const animate = () => {\r\n                req = requestAnimationFrame(animate);\r\n                frame = frame <= 100 ? frame + 1 : frame;\r\n\r\n                if (frame <= 100) {\r\n                    const p = initialCameraPosition;\r\n                    const rotSpeed = -easeOutCirc(frame / 120) * Math.PI * 20;\r\n\r\n                    camera.position.y = 10;\r\n                    camera.position.x =\r\n                        p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed);\r\n                    camera.position.z =\r\n                        p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed);\r\n                    camera.lookAt(target);\r\n                } else {\r\n                    controls.update();\r\n                }\r\n\r\n                renderer.render(scene, camera);\r\n            };\r\n\r\n            return () => {\r\n                cancelAnimationFrame(req);\r\n                renderer.dispose();\r\n            };\r\n        }\r\n    }, [vdo]);\r\n\r\n    return (\r\n\r\n        <div\r\n            style={{ height: \"270px\", width: \"300px\", position: \"relative\" }}\r\n            ref={refContainer}\r\n        >\r\n\r\n            {loading && (\r\n                <span style={{ position: \"absolute\", left: \"50%\", top: \"50%\" }}>\r\n                    Loading...\r\n                </span>\r\n            )}\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default DModal\r\n// export default function App() {\r\n//   return (\r\n//     <div style={{ width: \"100%\", margin: \"0 auto\" }}>\r\n//       <p>Click and hold to move around</p>\r\n//       <p>\r\n//         Credits for the model: \"Dinosaur\" (https://skfb.ly/6ZBXA) by\r\n//         jeilocreativedesignworld is licensed under Creative Commons Attribution\r\n//         (http://creativecommons.org/licenses/by/4.0/).\r\n//       </p>\r\n//       <Dinosaur />\r\n//     </div>\r\n//   );\r\n// }","\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\n\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router';\r\nimport DModal from './3dModal';\r\n\r\n\r\nconst UploadNft = ({ current, prev }) => {\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n\r\n    const [count, setCount] = useState(1);\r\n    const [nft_description, setNft_description] = useState([])\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: '1' });\r\n    const [nftFileType, setNFtFileType] = useState()\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [size, setSize] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    const [source, setSource] = useState([])\r\n    const [sourceType, setSourceType] = useState()\r\n\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [modal, setModal] = useState()\r\n    const [NFtFileExtension, setNFtExtension] = useState()\r\n    const [preview, setPreview] = useState([])\r\n\r\n    console.log(nft_collection_id, \"nft collections\")\r\n\r\n\r\n    const handleIncrement = () => {\r\n        setCount(prevCount => prevCount + 1);\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n        setPreview(prevState => {\r\n            // debugger\r\n            prevState[index] = e?.target?.files[0]\r\n\r\n            return [...prevState]\r\n        })\r\n\r\n        // setPreview(pimage)\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n        defaultValues\r\n    });\r\n    useEffect(() => {\r\n\r\n        register(\"nft_description\");\r\n        // let sType = source?.map((element) => element);\r\n        // console.log('stype',sType)\r\n        // setSourceType(sType) \r\n\r\n    }, [register]);\r\n\r\n    // const ipfsClient = create('http://127.0.0.1:5001')\r\n    // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n    // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n    // console.log(imaeg, 'imgg')\r\n    // const { nodes, materials } = useGLTF(\"/img/adamHead.gltf\");\r\n    const OnSubmit = (values) => {\r\n        // e.preventDefault\r\n        // setColData(col)\r\n        // \r\n        setFormValues(values)\r\n\r\n    }\r\n    // program to get the dimensions of an image\r\n\r\n\r\n\r\n    // console.log('col', col)\r\n    const handleUpload = (e, index) => {\r\n        const filetype = e.target.files[0].type\r\n        setNFtExtension(filetype)\r\n        // debugger\r\n        setNft(e.target.files[0])\r\n\r\n\r\n\r\n        var fr = new FileReader;\r\n\r\n        fr.onload = function () { // file is loaded\r\n            var img = new Image;\r\n\r\n            img.onload = function () {\r\n                setSize(e.target.files[0].size); // image is loaded; sizes are available\r\n                setNftwidth(img.width)\r\n                setNftheight(img.height)\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n\r\n        let type = \"Image\"\r\n\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert('Filesize must 100mb or below');\r\n        } else {\r\n\r\n\r\n            switch (filetype) {\r\n                case 'image/png':\r\n                case 'image/jpg':\r\n                case 'image/gif':\r\n                case 'image/svg':\r\n                    type = \"Image\"\r\n                    break;\r\n                case 'audio/mpeg':\r\n                case 'audio/ogg':\r\n                case 'video/mp4':\r\n                case 'video/webm':\r\n                    type = 'Player'\r\n                    break;\r\n                case '':\r\n                    // if (nft?.name?.str.includes(\".glb\")) {\r\n                    type = 'modal'\r\n                    // }\r\n                    break;\r\n                default:\r\n                    type = 'Image'\r\n            }\r\n\r\n            // setNFtFileType(type)\r\n\r\n            setSource(prevState => {\r\n                // debugger\r\n                prevState[index] = { file: e.target.files[0], type: type }\r\n                setSourceType(type)\r\n\r\n                return [...prevState]\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n            // debugger\r\n            // const nftImagepromises = values?.nfts?.map(x => uploadNFT(x?.nft_image?.file))\r\n            const nftImagepromises = values?.nfts?.map(x => uploadNFT(nft))\r\n\r\n            const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n            // \r\n            // debugger\r\n            const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n            const addedImagetype = imagesRes?.map(x => x?.data?.data?.extension)\r\n            var str = addedImage;\r\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n            // console.log(check)\r\n            // console.log(addedImage.includes('undefined'), 'add')\r\n\r\n            const formData = new FormData()\r\n\r\n            // debugger\r\n            if (check === false) {\r\n                console.log('uploaded')\r\n                formData.append('title', data.title)\r\n                formData.append('description', data.description)\r\n                formData.append('address', data.address)\r\n\r\n                formData.append('country', data.country)\r\n                if (!data.state) {\r\n\r\n                    formData.append('state', '')\r\n                } else {\r\n                    formData.append('state', data.state)\r\n                }\r\n                if (!data.city) {\r\n                    formData.append('city', '')\r\n                } else {\r\n\r\n                    formData.append('city', data.city)\r\n                }\r\n                formData.append('latitude', lat)\r\n                formData.append('preview_imag', Pimage)\r\n                formData.append('logitude', log)\r\n                formData.append('price', data.price)\r\n                formData.append('number_of_nft', data.number_of_nft)\r\n                formData.append('image', data.image)\r\n                if (data.type == 1) {\r\n                    formData.append('start_date', '')\r\n                    formData.append('end_date', '')\r\n                } else {\r\n\r\n                    formData.append('start_date', data.start_date)\r\n                    formData.append('end_date', data.end_date)\r\n                }\r\n                formData.append('type', data.type)\r\n                formData.append('category_id', data.category_id)\r\n\r\n\r\n                formData.append('nft_image', addedImage)\r\n                formData.append('extention', sourceType)\r\n                formData.append('nft_name', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n\r\n                formData.append('nft_collection_id', coll_id)\r\n                formData.append('nft_description', nft_description)\r\n\r\n\r\n                dispatch(CreateProjectAction(formData, setLoading, history))\r\n            } else {\r\n\r\n                console.log('fail')\r\n                setLoading(false)\r\n                swal('error!', 'Nft not uploaded', 'error')\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error, 'error')\r\n        }\r\n\r\n    };\r\n\r\n    // // console.log('title', localStorage.getItem('title'))\r\n    // const handleCancel = () => setPreviewOpen(false);\r\n\r\n    // const handlePreview = async (file) => {\r\n    //     if (!file.url && !file.preview) {\r\n    //         file.preview = await getBase64(file.originFileObj);\r\n    //     }\r\n    //     setPreviewImage(file.url || file.preview);\r\n    //     setPreviewOpen(true);\r\n    //     setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    // };\r\n    // const validateFileType = (\r\n    //     { type, name }\r\n    //     allowedTypes?\r\n    // ) => {\r\n    //     if (!allowedTypes) {\r\n    //         return true;\r\n    //     }\r\n\r\n    //     if (type) {\r\n    //         return allowedTypes.includes(type);\r\n    //     }\r\n    // };\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n\r\n        beforeUpload: file => {\r\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n            if (!isJpgOrPng) {\r\n\r\n                alert('You can only upload JPG/PNG file!');\r\n            }\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader?.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    // const getFile = (e) => {\r\n    //     // \r\n    //     console.log('Upload event:', e);\r\n\r\n    //     if (Array.isArray(e)) {\r\n    //         return e;\r\n    //     }\r\n    //     return e && e.fileList;\r\n    // };\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n        // <section className=\"author-area\">\r\n        <div className=\"main-create \">\r\n\r\n            {loading ? (\r\n                <Loader />\r\n\r\n            ) : (\r\n                <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                    <Form\r\n                        form={form}\r\n                        name=\"dynamic_form_nest_item\"\r\n                        initialValues={{\r\n                            nfts: nfts,\r\n                        }}\r\n                        // onSubmit={(event) => handleSubmit(event)}\r\n                        onFinish={(event) => onFinish(event)}\r\n                        onSubmit={OnSubmit}\r\n                        autoComplete=\"off\"\r\n                        className=\"item-form card no-hover\"\r\n                    >\r\n                        <Form.List name=\"nfts\">\r\n                            {(fields, { add, remove }) => (\r\n                                <>\r\n                                    <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                        <svg\r\n                                            width=\"16px\"\r\n                                            height=\"16px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                            <path\r\n                                                fill=\"none\"\r\n                                                stroke=\"#fff\"\r\n                                                stroke-width=\"2\"\r\n                                                d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\r\n                                                transform=\"matrix(-1 0 0 1 24 0)\"\r\n                                            />\r\n                                        </svg>\r\n                                        Previous\r\n                                    </Button>\r\n                                    {/* <div className='steps-center'>\r\n    \r\n    \r\n                                                    <div className='orgicon1'>\r\n    \r\n                                                        <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n                                                    </div>\r\n    \r\n                                                    <div className='orgicon1line'>\r\n                                                        <span style={{}}> ----------------------------- </span>\r\n    \r\n                                                    </div>\r\n                                                    <div className='orgicon2'>\r\n    \r\n                                                        <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n                                                    </div>\r\n                                                </div> */}\r\n                                    <>\r\n                                        {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                            // setSourceType(source[index]?.file),\r\n                                            // <Space\r\n                                            //     key={key}\r\n                                            //     style={{\r\n                                            //         display: 'flex',\r\n                                            //         marginBottom: 8,\r\n                                            //     }}\r\n                                            //     align=\"baseline\"\r\n                                            // >\r\n                                            <Collapse\r\n                                                defaultActiveKey={[\"1\"]}\r\n                                                onChange={onChange}\r\n                                                expandIconPosition={expandIconPosition}\r\n                                            >\r\n                                                <Panel header=\"Details\" key=\"1\" className=\"p-0\">\r\n                                                    <Fragment>\r\n                                                        {/* <div>Artwork {index}</div> */}\r\n                                                        <div className=\"row relative\">\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: \"Name is required\",\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n                                                                    {/* <Controller\r\n                                                                            control={control}\r\n                                                                            name=\"nft_description\"\r\n                                                                            defaultValue=\"\"\r\n                                                                            rules={{ required: true, minLength: 300 }}\r\n                                                                            render={({ field }) => {\r\n                                                                                return <JoditEditor\r\n                                                                                    ref={field.ref}\r\n                                                                                    value={field.value}\r\n                                                                                    \r\n                                                                                    aria-invalid={errors.nft_description ? \"true\" : \"false\"}\r\n                                                                                    placeholder=\"start typing\"\r\n                                                                                    tabIndex={1} \r\n                                                                                    onBlur={newContent => setNft_description(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                                                    onChange={field.onChange}\r\n                                                                                />\r\n                                                                            }}\r\n    \r\n    \r\n                                                                        /> */}\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: \"Missing  description\",\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <Controller\r\n                                                                                control={control}\r\n                                                                                name=\"nft_description\"\r\n                                                                                defaultValue=\"\"\r\n                                                                                render={({ field: { value, onChange } }) => {\r\n                                                                                    return  */}\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={nft_description}\r\n                                                                            // config={config}\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                            onBlur={(newContent) =>\r\n                                                                                setNft_description(newContent)\r\n                                                                            } // preferred to use only this option to update the content for performance reasons\r\n                                                                            onChange={(newContent) => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                    {errors.nft_description?.type ===\r\n                                                                        \"required\" && (\r\n                                                                            <p style={{ color: \"red\" }} role=\"alert\">\r\n                                                                                Description is required\r\n                                                                            </p>\r\n                                                                        )}\r\n                                                                    {errors.nft_description &&\r\n                                                                        errors.nft_description.type ===\r\n                                                                        \"minLength\" && (\r\n                                                                            <p style={{ color: \"red\" }}>\r\n                                                                                min length of words is 300\r\n                                                                            </p>\r\n                                                                        )}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {/* <div className=\"col-md-5 col-12\">\r\n                                                                        <label>Nft</label>\r\n                                                                        <div>\r\n                                                                            <Form.Item\r\n                                                                                {...restField}\r\n                                                                                name={[name, \"nft_image\"]}\r\n                                                                                // getValueFromEvent={getFile}\r\n                                                                                rules={[\r\n                                                                                    {\r\n                                                                                        required: true,\r\n                                                                                        message: 'Please select a image',\r\n                                                                                    },\r\n                                                                                ]}\r\n    \r\n                                                                            >\r\n    \r\n                                                                                <Upload\r\n                                                                                    {...fileProps}\r\n                                                                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                                    listType=\"picture-card\"\r\n                                                                                    // fileList={fileList}\r\n                                                                                    // onChange={onChange}\r\n                                                                                    onPreview={handlePreview}\r\n                                                                                    maxCount={1}\r\n    \r\n                                                                                >\r\n                                                                                    + Upload\r\n                                                                                </Upload>\r\n    \r\n    \r\n                                                                            </Form.Item>\r\n                                                                            <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                                <img\r\n                                                                                    alt=\"example\"\r\n                                                                                    style={{\r\n                                                                                        width: '100%',\r\n                                                                                    }}\r\n                                                                                    src={previewImage} />\r\n                                                                            </Modal>\r\n                                                                        </div>\r\n                                                                    </div> */}\r\n\r\n                                                            <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                <MinusCircleOutlined\r\n                                                                    onClick={(e) => {\r\n                                                                        remove(name);\r\n                                                                        handleDecrement(e);\r\n                                                                    }}\r\n                                                                />\r\n                                                            </div>\r\n                                                            {/* </div> */}\r\n                                                            <div className=\"col-12\">\r\n                                                                <label className=\"mt-2 mb-3\">\r\n                                                                    Choose Collection\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div className='d-flex flex-wrap gap-10 col-12'>\r\n\r\n\r\n\r\n                                                                {col?.map((item, idx) => (\r\n                                                                    <div\r\n                                                                        key={`auc_${idx}`}\r\n                                                                        id={item.id}\r\n                                                                        className=\"choose_div\"\r\n                                                                    >\r\n                                                                        <div\r\n                                                                            id={item.id}\r\n                                                                            onClick={() =>\r\n                                                                                onHandleClick(index, item.id)\r\n                                                                            }\r\n                                                                            className=\"\"\r\n                                                                            style={{\r\n                                                                                background: \"black\",\r\n                                                                                marginBottom: \"8px\",\r\n                                                                                border:\r\n                                                                                    nft_collection_id[index] == item.id\r\n                                                                                        ? \"1px solid #fff\"\r\n                                                                                        : null,\r\n                                                                            }}\r\n                                                                        >\r\n\r\n                                                                            <div>{item.title}</div>\r\n\r\n                                                                        </div>\r\n                                                                        {/* </Form.Item> */}\r\n                                                                    </div>\r\n\r\n\r\n\r\n                                                                ))}\r\n                                                                <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                    {/* <div className=\"col-24\"> */}\r\n\r\n                                                                    <div className=\"form-group\">\r\n                                                                        <div\r\n                                                                            className=\"card choose_div\"\r\n                                                                            style={{\r\n                                                                                background: \"black\",\r\n                                                                                marginBottom: \"8px\",\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <div className=\"card-body \">\r\n                                                                                <Button\r\n                                                                                    variant=\"primary\"\r\n                                                                                    className=\"collection_btn\"\r\n                                                                                    onClick={() => setModalShow(true)}\r\n                                                                                >\r\n                                                                                    <i className=\"f1a-regular fa-plus\"></i>{\" \"}\r\n                                                                                    Create Collection\r\n                                                                                </Button>\r\n\r\n\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                        <label className=\"mt-3\">Upload NFT</label>\r\n                                                                        <div\r\n                                                                            className=\"position-relative upload_nft\"\r\n                                                                            style={{\r\n                                                                                backgroundImage: \"url('')\",\r\n                                                                                backgroundSize: \"contain\",\r\n                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a image',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        > */}\r\n                                                                            {/* <div className='uploadnftpopup-input Icon_cam' > */}\r\n                                                                            <div\r\n                                                                                className={\r\n                                                                                    source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\r\n                                                                                        ? \" inputdragVedio\"\r\n                                                                                        : \"inputtdrag\"\r\n                                                                                }\r\n                                                                            >\r\n                                                                                <input\r\n                                                                                    type=\"file\"\r\n                                                                                    // onChange={handleUpload}\r\n                                                                                    maxCount={1}\r\n                                                                                    onChange={e => handleUpload(e, index)}\r\n                                                                                    accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                                />\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\r\n                                                                                    <div>\r\n                                                                                        {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\r\n                                                                                        {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? (\r\n\r\n\r\n                                                                                            <img\r\n                                                                                                src={URL.createObjectURL(source[index].file)}\r\n                                                                                                className=\"nft-image\"\r\n                                                                                            />\r\n                                                                                        ) : (\r\n                                                                                            <>\r\n                                                                                                <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                    Image width & height should be 500x500\r\n                                                                                                </p>\r\n                                                                                                <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                    Image size should be max 1mb\r\n                                                                                                </p>\r\n                                                                                            </>\r\n                                                                                        )\r\n\r\n                                                                                        }\r\n                                                                                    </div>\r\n                                                                                }\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\r\n                                                                                    <div>\r\n                                                                                        {/* { source?.length && source?.[index] && source[index]?.type === \"Player\" && ( */}\r\n                                                                                        <video\r\n                                                                                            // className=\"VideoInput_video\"\r\n                                                                                            width=\"100%\"\r\n                                                                                            // height={height}\r\n                                                                                            controls\r\n                                                                                            src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                        // onChange={setSource}\r\n                                                                                        />\r\n                                                                                        {/* )} */}\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p>\r\n                                                                                                Because you’ve included\r\n                                                                                                multimedia, you’ll need to provide\r\n                                                                                                an image (PNG, JPG, or GIF) for\r\n                                                                                                the card display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage:\r\n                                                                                                    \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={e => previewChange(e, index)}\r\n                                                                                            // onChange={previewChange}\r\n                                                                                            />\r\n                                                                                            {preview?.length && preview?.[index] &&\r\n                                                                                                <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                    {preview?.length && preview?.[index] && (\r\n                                                                                                        <img\r\n                                                                                                            className=\"preview_image\"\r\n                                                                                                            src={URL.createObjectURL(preview[index])}\r\n\r\n\r\n                                                                                                        // onChange={setPimage}\r\n                                                                                                        />\r\n                                                                                                    )}\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n                                                                                }\r\n\r\n                                                                                {/* )} */}\r\n                                                                                {/* <div className=\"VideoInput_footer\">{vdo || \"Nothing selectd\"}</div> */}\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\r\n                                                                                    <div>\r\n                                                                                        <DModal\r\n                                                                                            vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                        // mdl={setModal}\r\n                                                                                        />\r\n\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p className=\"\">\r\n                                                                                                Because you’ve included multimedia,\r\n                                                                                                you’ll need to provide an image\r\n                                                                                                (PNG, JPG, or GIF) for the card\r\n                                                                                                display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage:\r\n                                                                                                    \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={e => previewChange(e, index)}\r\n                                                                                            />\r\n                                                                                            {preview?.length && preview?.[index] &&\r\n                                                                                                <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                    {preview?.length && preview?.[index] && (\r\n                                                                                                        <img\r\n                                                                                                            className=\"preview_image\"\r\n                                                                                                            src={URL.createObjectURL(preview[index])} />\r\n                                                                                                    )}\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                            </div>\r\n                                                                            {/* </Form.Item> */}\r\n                                                                            {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a MP4 File',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        >\r\n    \r\n                                                                            <VideoInput width={400} height={300} />\r\n    \r\n    \r\n                                                                        </Form.Item> */}\r\n\r\n                                                                            {/* <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>MP4 & MP3 </label>\r\n                                                                                <VideoInput width={400} height={300} />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>3D Modal </label>\r\n                                                                                <Dinosaur />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                               \r\n    \r\n                                                                            </div>\r\n                                                                        </div> */}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Fragment>\r\n                                                </Panel>\r\n                                            </Collapse>\r\n                                        ))}\r\n\r\n                                        {/* {!((data?.number_of_nft === count)) ? */}\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                type=\"dashed\"\r\n                                                onClick={(e) => {\r\n                                                    add(e);\r\n                                                    handleIncrement(e);\r\n\r\n\r\n                                                }}\r\n                                                block\r\n                                                icon={<PlusOutlined />}\r\n                                                disabled={data?.number_of_nft == count}\r\n                                            >\r\n                                                Add NFT\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                        {/* : null} */}\r\n                                    </>\r\n                                </>\r\n                            )}\r\n                        </Form.List>\r\n                        <Form.Item>\r\n                            <div className=\"col-12\">\r\n                                <button key=\"create-project\" className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\r\n                                    Create\r\n                                </button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <MyVerticallyCenteredModal\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default UploadNft","import { useEffect, useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Create from \"./Create\";\r\nimport UploadNft from \"./uploadNft\";\r\nimport FormProvider, { useFormData } from \"./Context/context\";\r\n\r\nimport { Button, message, Steps } from 'antd';\r\nimport { set, useForm } from \"react-hook-form\";\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Create Project',\r\n    content: <Create />\r\n  },\r\n  {\r\n    title: 'Upload NFT',\r\n    content: <UploadNft />,\r\n  },\r\n];\r\nconst UploadNftIndex = () => {\r\n\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const { setValue } = useForm();\r\n\r\n  const prev = () => {\r\n    // \r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const items = steps.map((item) => ({ key: item.title, title: item.title }));\r\n  return (\r\n    <section className=\"author-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n\r\n\r\n          <div className=\"col-14 col-md-9\">\r\n            {/* Intro */}\r\n            <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n              <div className=\"intro-content\">\r\n                <span>Get Started</span>\r\n                {current === 0 ? (\r\n\r\n                  <h3 className=\"mt-3 mb-0\">Create Project</h3>\r\n                ) : (\r\n\r\n                  <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <FormProvider>\r\n\r\n              {/* <FormCard currentStep={formStep} prevFormStep={prevFormStep}> */}\r\n              <div className=\"steps-content\">\r\n                <Steps current={current} items={items} />\r\n                {current === 0 && (\r\n\r\n                  <Create current={current} next={next} prev={prev} />\r\n                )}\r\n\r\n                {current === 1 && <><UploadNft prev={prev} />\r\n                  {/* <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                    Previous\r\n                  </Button> */}\r\n                </>\r\n                }\r\n                {/* <div className=\"steps-action\">\r\n          {current < steps.length - 1 && (\r\n            <Button type=\"primary\" onClick={() => next()}>\r\n              Next\r\n            </Button>\r\n          )}\r\n\r\n          {current > 0 && (\r\n            <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n              Previous\r\n            </Button>\r\n          )}\r\n        </div> */}\r\n              </div>\r\n              {/* </FormCard> */}\r\n            </FormProvider>\r\n          </div>\r\n        </div >\r\n      </div >\r\n    </section >\r\n  );\r\n};\r\n\r\nexport default UploadNftIndex;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nimport UploadNftIndex from '../components/Create';\r\n\r\nconst Create = () => {\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n      <UploadNftIndex />\r\n      <Footer />\r\n      <ModalSearch />\r\n      <ModalMenu />\r\n      <Scrollup />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => {\r\n        // \r\n        // console.log(login.authToken, 'login')\r\n        return state.login\r\n    })\r\n    // console.log(user, 'user')\r\n\r\n    if (user?.status === 200) {\r\n        history.push('/')\r\n    }\r\n\r\n    const mesg = useSelector(state => {\r\n        // \r\n        return state.user.message\r\n    })\r\n    // if (login?.userToken) {\r\n    //     console.log('hello')\r\n    // }\r\n    // console.log(login?.status)\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        // \r\n        dispatch(LoginAction(data))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"Enter your Password\"\r\n                                            {...register(\"password\", { required: \"Password is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" defaultChecked />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Log In</button>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\"><Link to=\"/forgotpassword\">Forgot Password</Link></span>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\">If not registered? <Link to=\"/signup\"><b>Sign Up</b></Link></span>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport LoginSection from '../components/Login/Login';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LoginSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","export default function FormCard({ children, currentStep, prevFormStep }) {\r\n    return (\r\n        <div >\r\n            {currentStep < 1 && (\r\n                <>\r\n                    {currentStep > 0 && (\r\n                        <button\r\n                            onClick={prevFormStep}\r\n                            type=\"button\"\r\n                        >\r\n                            back\r\n                        </button>\r\n                    )}\r\n\r\n                </>\r\n\r\n            )}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    // console.log(data, 'dataaa')\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport { React } from 'react'\r\nimport { useDispatch, useSelector, } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as Yup from 'yup'\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required(\"Email is required\"),\r\n    // wallet_id: Yup.string()\r\n    //     .wallet_id()\r\n    //     .required(\"Wallet address is required\"),\r\n    // goal: Yup.string()\r\n    //     .goal()\r\n    //     .required(\"Fundraising goal is required\"),\r\n\r\n    password: Yup.string()\r\n        .required(\"Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\"),\r\n    confirm_password: Yup.string()\r\n        .required(\"Confirm Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\")\r\n        .oneOf([Yup.ref(\"password\")], \"Passwords do not match\")\r\n});\r\n\r\n\r\nconst Signup = ({ formStep, nextFormStep }) => {\r\n    const { setFormValues } = useFormData();\r\n    const dispatch = useDispatch()\r\n    const { register, watch, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"all\",\r\n        resolver: yupResolver(formSchema)\r\n    });\r\n\r\n    // const [role, setRole] = useState()\r\n    // console.log('role', role)\r\n    const OnSubmit = (data) => {\r\n        // dispatch(Register(data))\r\n        setFormValues({ ...data });\r\n        // if (role == 3) {\r\n\r\n        nextFormStep();\r\n        // }\r\n        // if (role == 2) {\r\n        //     const formData = new FormData()\r\n        //     formData.append('email', data.email)\r\n        //     // formData.append('goal', data.goal)\r\n        //     formData.append('password', data.password)\r\n        //     formData.append('confirm_password', data.confirm_password)\r\n        //     // formData.append('wallet_id', data.wallet_id)\r\n        //     // formData.append('role', role)\r\n        //     dispatch(Register(formData))\r\n        // }\r\n    }\r\n\r\n    const { user } = useSelector(state => state.user)\r\n\r\n\r\n    const { errMessage } = useSelector(state => {\r\n        return state?.errmessage?.message\r\n    })\r\n\r\n    return (\r\n        < section className=\"author-area\" >\r\n            <div className=\"container\">\r\n\r\n                <>\r\n                    <div>\r\n                        {errMessage && <p>{errMessage}</p>}\r\n\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 co  l-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span></span>\r\n                                <h3 className=\"mt-3 mb-0\"></h3>\r\n                                <p></p>\r\n                            </div>\r\n                            {/* Item Form */}\r\n                            <div className={formStep === 0 ? styles.showForm : styles.hideForm}>\r\n                                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                    <div className=\"row\">\r\n                                        <div className='steps-center'>\r\n                                            <div className='step1icon'>\r\n\r\n                                                <i className=\"fa-solid fa-circle-check\"> Step 1 </i>\r\n                                            </div>\r\n                                            <div className='stepperline'>\r\n                                                <i style={{ color: '#452868' }}>  ----------------------------- </i>\r\n\r\n                                            </div>\r\n                                            <div className='step2icon'>\r\n\r\n                                                <i className=\"fa-regular fa-circle\" > Step 2 </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Email</label>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    {...register(\"email\", { required: 'Email address is required' })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.email ? \"true\" : \"false\"} />\r\n                                                {/* {errors.errMessage} */}\r\n                                                {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                                {/* {errMessage && <p>{errMessage}</p>} */}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"password\"\r\n                                                    placeholder=\"Password\"\r\n                                                    {...register(\"password\", { required: true })}\r\n                                                    aria-invalid={errors.password ? \"true\" : \"false\"} />\r\n                                                {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Confirm Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"confirm_password\"\r\n                                                    placeholder=\"Confirm password\"\r\n                                                    {...register(\"confirm_password\",\r\n                                                        {\r\n                                                            required: true,\r\n                                                            validate: (val) => {\r\n                                                                if (watch('password') != val) {\r\n                                                                    return \"Your passwords do no match\";\r\n                                                                }\r\n                                                            },\r\n                                                        })}\r\n                                                    aria-invalid={errors.confirm_password ? \"true\" : \"false\"} />\r\n                                                {errors.confirm_password && <p style={{ color: 'red' }} role=\"alert\">{errors.confirm_password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Fundraising Goal</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"goal\"\r\n                                                    placeholder=\"Fundraising goal (MATIC)\"\r\n                                                    {...register(\"goal\",\r\n                                                        {\r\n                                                            required: true,\r\n\r\n                                                        })}\r\n                                                    aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                                {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Wallet Address</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"wallet_id\"\r\n                                                    // defaultValue='1'\r\n                                                    placeholder=\"Wallet address\"\r\n                                                    {...register(\"wallet_id\", { required: true })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                                />\r\n                                                {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"3\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                                </div>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"2\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <div className=\"form-check form-check-inline\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n                                        <div className=\"col-12\">\r\n                                            {/* {role == 2 ? ( */}\r\n                                            {/* <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Signup</button> */}\r\n                                            {/* ) : ( */}\r\n\r\n                                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                                            {/* )} */}\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <span className=\"d-block text-center mt-4\">Already have an account? <Link to=\"/login\"><b>Login</b></Link></span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        </section >\r\n\r\n    )\r\n}\r\n\r\nexport default Signup\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnnualRevenueList, CountryList, HearAboutList, Register } from '../../redux/Actions/authAction'\r\nimport { Controller, useForm } from 'react-hook-form'\r\n\r\nimport { useHistory } from 'react-router'\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\r\nimport { useState } from 'react'\r\nimport JoditEditor from 'jodit-react';;\r\n\r\n// import { Widget } from \"@uploadcare/react-widget\";\r\n// import FileUpload from \"react-material-file-upload\";\r\n// import { uploadcare } from '../lib/uploadcare.min.js';\r\nconst CreateOrganization = ({ formStep, nextFormStep, goBack }) => {\r\n\r\n    const [description, setDescription] = useState()\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const organization = useSelector(state => {\r\n        return state.user.organization\r\n    })\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n    const { annualRevenue } = useSelector(state => state.annualRevenue)\r\n\r\n    // }\r\n    const { hereAbout } = useSelector(state => state.hereAbout)\r\n    // console.log(user, 'user')\r\n\r\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    const OnSubmit = (values) => {\r\n        setFormValues(values)\r\n        // FormData.append('email', data.email)\r\n        // FormData.append('password', data.password)\r\n        // FormData.append('confirm_password', data.confirm_password)\r\n        const formData = new FormData()\r\n        formData.append('banner_image', values.banner_image[0])\r\n        formData.append('logo', values.logo[0])\r\n        formData.append('email', data.email)\r\n        formData.append('password', data.password)\r\n        formData.append('wallet_id', values.wallet_id)\r\n        // formData.append('role', data.role)\r\n        formData.append('goal', values.goal)\r\n        formData.append('confirm_password', data.confirm_password)\r\n        formData.append('organization_name', values.organization_name)\r\n        formData.append('url', values.url)\r\n        formData.append('country', values.country)\r\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\r\n        formData.append('tax_id', values.tax_id)\r\n\r\n        formData.append('social', values.social)\r\n        formData.append('social_link', values.social_link)\r\n        formData.append('description', description)\r\n        // formData.append('method_heard_detail', values.method_heard_detail)\r\n\r\n        dispatch(Register(formData))\r\n        // if (formData) {\r\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\r\n        //     history.push('/login')\r\n        // }\r\n    }\r\n\r\n    const socialmedia = useSelector(state => {\r\n        return state?.getSocialmediaIcons?.getsocial\r\n    })\r\n    // console.log('social', socialmedia)\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n        dispatch(AnnualRevenueList())\r\n        dispatch(HearAboutList())\r\n        dispatch(GetSocialMediaIcons())\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <div className={formStep === 1 ? styles.showForm : styles.hideForm}>\r\n                            <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                {/* <button\r\n                                    // className={styles.back}\r\n                                    onClick={prevFormStep}\r\n                                    type=\"button\"\r\n                                >\r\n                                    back\r\n                                </button> */}\r\n                                <div className=\"row\">\r\n                                    <div className='col-12 d-flex justify-content-center'>\r\n                                        <div className='orgicon1'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 1</i>\r\n                                        </div>\r\n\r\n                                        <div className='orgicon1line'>\r\n                                            <span style={{ color: '#452868' }}> ----------------------------- </span>\r\n\r\n                                        </div>\r\n                                        <div className='orgicon2'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 2</i>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Fundraising Goal</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"goal\"\r\n                                                step=\"0.01\"\r\n                                                placeholder=\"Fundraising goal (MATIC)\"\r\n                                                {...register(\"goal\",\r\n                                                    {\r\n                                                        required: true,\r\n\r\n                                                    })}\r\n                                                aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                            {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Funding Wallet </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"wallet_id\"\r\n                                                // defaultValue='1'\r\n                                                placeholder=\"Funding Wallet\"\r\n                                                {...register(\"wallet_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Name</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"organization_name\"\r\n                                                placeholder=\"Organization name\"\r\n                                                {...register(\"organization_name\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.organization_name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Website</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"url\"\r\n                                                placeholder=\"Website\"\r\n                                                {...register(\"url\", {\r\n                                                    required: true,\r\n                                                    pattern: {\r\n                                                        value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                                    }\r\n                                                })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.url ? \"true\" : \"false\"}\r\n                                            />\r\n\r\n                                            {errors.url && errors.url?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                                            {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Describe your project\"\r\n\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <Controller\r\n                                                control={control}\r\n                                                name=\"description\"\r\n                                                defaultValue=\"\"\r\n\r\n                                                // {...register(\"description\", { required: true })}\r\n                                                rules={{ required: true, min: 150 }}\r\n                                                // rules={{\r\n                                                //     required: true, pattern: {\r\n\r\n                                                //         message: \"Description is required\",\r\n                                                //     },\r\n                                                // }}\r\n                                                render={({ field }) => {\r\n                                                    return <JoditEditor\r\n                                                        ref={field.ref}\r\n                                                        value={field.value}\r\n                                                        // config={config}\r\n                                                        aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                                        placeholder=\"start typing\"\r\n                                                        tabIndex={1} // tabIndex of textarea\r\n                                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                        onChange={field.onChange}\r\n                                                    />\r\n                                                }}\r\n                                            />\r\n                                            {errors?.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Country</label>\r\n\r\n                                            <select name=\"country\"\r\n                                                {...register(\"country\", { required: true })}>\r\n                                                aria-invalid={errors.country ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                                {countries.data?.data?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.name}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"annual_revenue_range\"\r\n                                                {...register(\"annual_revenue_range\", { required: true })}>\r\n                                                {annualRevenue?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key.id} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>EIN Number/Tax Id</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"tax_id\"\r\n                                                placeholder=\"EIN Number/Tax Id(optional)\"\r\n                                                {...register(\"tax_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (required)</label>\r\n                                            <select name=\"social\"\r\n                                                {...register(\"social\", { required: true })}>\r\n                                                aria-invalid={errors.social ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\r\n                                                {socialmedia?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.title}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (secondary)</label>\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"social_link\"\r\n                                                    placeholder=\"social link(optional) \"\r\n                                                    {...register(\"social_link\")}\r\n                                                // {...register(\"email\")}\r\n                                                // aria-invalid={errors.social_link ? \"true\" : \"false\"}\r\n                                                />\r\n                                            </div>\r\n                                            {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"project\"\r\n                                                {...register(\"hear_about\", { required: true })}>\r\n                                                {hereAbout?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Banner</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n\r\n                                                name=\"banner_image\"\r\n                                                placeholder=\"Select file\"\r\n                                                disp\r\n                                                {...register(\"banner_image\", { required: true })}\r\n                                                aria-invalid={errors.banner_image ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\r\n\r\n                                            {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Logo</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n                                                name=\"logo\"\r\n                                                placeholder=\"Select file\"\r\n                                                {...register(\"logo\", { required: true })}\r\n                                                aria-invalid={errors.logo ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <div className='logo_one'>\r\n\r\n                                                <span className='logo-dis'>maximum height should be 250 pixels</span>\r\n                                            </div>\r\n                                            {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\r\n                                    </div>\r\n                                    {/* <div className=\"col-3\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => goBack()}>Previous</button>\r\n                                    </div> */}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CreateOrganization","import { useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Signup from './Signup'\r\nimport CreateOrganization from './createOrganization';\r\nimport FormProvider from \"./Context/context\";\r\n\r\n\r\nconst SignupIndex = () => {\r\n  const [formStep, setFormStep] = useState(0);\r\n\r\n  const nextFormStep = () => setFormStep((currentStep) => currentStep + 1);\r\n\r\n  const prevFormStep = () => setFormStep((currentStep) => currentStep - 1);\r\n\r\n  return (\r\n    <FormProvider>\r\n\r\n      <FormCard currentStep={formStep} prevFormStep={prevFormStep}>\r\n        {formStep === 0 && (\r\n          <Signup formStep={formStep} nextFormStep={nextFormStep} />\r\n        )}\r\n        {formStep === 1 && <CreateOrganization goBack={prevFormStep} />\r\n        }\r\n      </FormCard>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default SignupIndex;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport SignupSection from '../components/Signup';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Signup = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <SignupSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contact',\r\n\r\n    initialState: {\r\n        contact: [],\r\n\r\n\r\n    },\r\n    reducers: {\r\n\r\n        postContact: (state, action) => {\r\n            state.contact = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const contactReducer = contactSlice.reducer\r\n\r\nexport const {\r\n    postContact\r\n} = contactSlice.actions;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ContactAction } from '../../redux/Actions/contactAction';\r\nimport Loader from '../Loader/loader';\r\n\r\n\r\nconst Contact = () => {\r\n    const [loading, setLoading] = useState()\r\n    const dispatch = useDispatch()\r\n    // useEffect(() => {\r\n    //     dispatch(ContactAction())\r\n    // })\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        setLoading(true)\r\n        const formData = new FormData()\r\n        formData.append('name', data.name)\r\n        formData.append('subject', data.subject)\r\n        formData.append('email', data.email)\r\n        formData.append('description', data.description)\r\n        dispatch(ContactAction(formData, setLoading))\r\n    }\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>Contact</span>\r\n                            <h3 className=\"mt-3 mb-0\">Get In Touch</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form id=\"contact-form\" className=\"item-form card no-hover\" onSubmit={handleSubmit(OnSubmit)} >\r\n                            {loading ? (\r\n                                <Loader />\r\n                            ) : (\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name\"  {...register(\"name\", { required: true })}\r\n                                                aria-invalid={errors.name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Name is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" {...register(\"email\", { required: true })}\r\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.email?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Email is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"subject\" placeholder=\"Subject\"  {...register(\"subject\", { required: true })}\r\n                                                aria-invalid={errors.subject ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.subject?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Subject is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <textarea className=\"form-control\" name=\"message\" placeholder=\"Message\" cols={30} rows={3} defaultValue={\"\"}  {...register(\"description\", { required: true })}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Message is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\"><i className=\"icon-paper-plane mr-2\" />Send Message</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </form>\r\n                        <p className=\"form-message\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Contact;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { postContact } from \"../Slices/contactSlice\";\r\nexport const ContactAction = (params, setLoading) => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/contact-us/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(postContact(res));\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", res.data.message, 'success')\r\n                .then(function () {\r\n                    window.location = \"/\";\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport ContactSection from '../components/Contact/Contact';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst Contact = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ContactSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Contact;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ForgotPasswordAction, LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { forgotpassword, message, statusCode } = useSelector(state => {\r\n        // \r\n        return state.forgotpassword\r\n    })\r\n\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        dispatch(ForgotPasswordAction(data)).then(() => {\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors?.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div>{errors.username && errors.username.message}</div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Send Reset Link</button>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                    <hr />\r\n                                    <div className=\"other-option\">\r\n                                        Social Icons\r\n                                        <div className=\"social-icons d-flex justify-content-center\">\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <a key={`lsd_${idx}`} className={item.link} href=\"#\">\r\n                                                        <i className={item.icon} />\r\n                                                        <i className={item.icon} />\r\n                                                    </a>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport ForgotPassword from '../components/ForgotPassword/forgotPassword';\r\n\r\nconst Forgot = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ForgotPassword />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forgot\r\n","export const TOKEN_KEY = localStorage.getItem('authToken')\r\n\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"authToken\");\r\n}\r\n\r\nexport const isLogin = () => {\r\n  return TOKEN_KEY ? true : false\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from './utils';\r\n\r\nconst PrivateRoute = ({ component: Component, restricted, ...rest }) => {\r\n    // const isLog = isLogin()\r\n    // \r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Redirect to=\"/\" />\r\n                : <Component {...props} />\r\n\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Geonames from \"geonames.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nconst geonames = new Geonames({\r\n    username: \"fullstackdeveloper91\",\r\n    lan: \"en\",\r\n    encoding: \"JSON\"\r\n});\r\n// const useStyles = makeStyles(theme => ({\r\n//     formControl: {\r\n//         minWidth: \"100%\",\r\n//         // background: 'black',\r\n//         // color: \"#FFF\"\r\n//     },\r\n//     selectEmpty: {\r\n//         marginTop: theme.spacing(2)\r\n//     }\r\n// }));\r\nexport default function GeoLocation(props) {\r\n    // const classes = useStyles();\r\n    const { locationTitle, geoId, onChange, isCountry } = props;\r\n    const [options, setOptions] = useState([]);\r\n    // console.log(options, 'opttt')\r\n    const [currentItem, setCurrentItem] = useState(\"\");\r\n    const [labelWidth, setLabelWidth] = useState(0);\r\n    useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n        {\r\n            !currentItem && (\r\n                setCurrentItem(props?.selected)\r\n            )\r\n        }\r\n    }, [props]);\r\n    // http://api.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en\r\n    // https://secure.geonames.org/countryInfoJSON?username=jhon_doe&lang=en\r\n    useEffect(() => {\r\n        try {\r\n            const data = async () => {\r\n                (await isCountry)\r\n                    ? axios?.get(`https://secure.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en`)?.then(res => {\r\n                        // \r\n                        setOptions(res);\r\n                        console.log(res, \"countries\")\r\n                    })\r\n                    // \"https://secure.geonames.org/childrenJSON?geonameId=\" + id\r\n                    : axios?.get(`https://secure.geonames.org/childrenJSON?username=fullstackdeveloper91&lang=en&geonameId=${geoId}`)?.then(res => {\r\n                        setOptions(res);\r\n                        console.log(res, \"cities\")\r\n                    });\r\n            };\r\n            data();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }, [geoId, isCountry]);\r\n    const inputLabel = useRef(null);\r\n    const handleChange = e => {\r\n        setCurrentItem(e.target.value);\r\n        onChange(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <form >\r\n            <label ref={inputLabel} id=\"demo-simple-select-outlined-label\" style={{ display: 'none' }}>\r\n                {locationTitle}\r\n            </label>\r\n            <select\r\n                label=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={currentItem}\r\n                onChange={handleChange}\r\n                labelWidth={labelWidth}\r\n            >\r\n                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select </option>\r\n                {options?.data?.geonames?.map((v, index) => (\r\n                    <option key={index} value={v?.geonameId}>\r\n                        {isCountry ? v?.countryName : v?.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </form>\r\n    );\r\n}\r\nGeoLocation.propTypes = {\r\n    locationTitle: PropTypes.string,\r\n    geoId: PropTypes.node,\r\n    isCountry: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\nGeoLocation.defaultProps = {\r\n    onChange: undefined\r\n};","// import { getValue } from '@mui/system';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { CategoriesAction, ProjectDetail, UpdateProject } from '../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\nimport GeoLocation from '../components/Create/geoLocation';\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../redux/Actions/authAction';\r\n\r\nconst EditProject = () => {\r\n    const editor = useRef(null);\r\n    const [country, setCountry] = useState();\r\n    console.log(country)\r\n    const [state, setState] = useState();\r\n    const [city, setCity] = useState();\r\n    const [description, setDescription] = useState();\r\n    // const [descriptionup, setDescriptionup] = useState();\r\n    // console.log(descriptionup, 'discup')\r\n    const [type, setType] = useState();\r\n    const { id } = useParams();\r\n    // console.log(id, \"idd\")\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    const dis = projdetail.description\r\n    // setDescriptionup(dis)\r\n    // console.log(dis, 'dis')\r\n    // console.log(projdetail, \"gfgfhghgghhgh\")\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n\r\n    }, [id])\r\n    const config = {\r\n        placeholderText: 'Edit Your Content Here!',\r\n        charCounterCount: false\r\n    }\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(first)\r\n\r\n    // console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            // const formData = new FormData()\r\n            // // formData.append('country_id', event?.currentTarget?.value)\r\n            // formData.append('country_id', projdetail.country)\r\n            // dispatch(StateList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n\r\n        dispatch(UpdateProject(id, formData))\r\n    }\r\n\r\n\r\n\r\n        const disablePastDate = () => {\r\n            const today = new Date();\r\n            const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n            const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n            const yyyy = today.getFullYear();\r\n            return yyyy + \"-\" + mm + \"-\" + dd;\r\n        };\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    // console.log(cat, 'cat')\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n    const handleChangeCountry = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n        const formData = new FormData()\r\n        // formData.append('country_id', event?.currentTarget?.value)\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    return (\r\n        // <Modal\r\n        //     {...props}\r\n        //     size=\"lg\"\r\n        //     aria-labelledby=\"contained-modal\"\r\n        //     centered\r\n        // >\r\n        //     <Modal.Header closeButton>\r\n        //         <Modal.Title id=\"contained-modal\">\r\n        //             Collection\r\n        //         </Modal.Title>\r\n        //     </Modal.Header>\r\n        //     <Modal.Body>\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n                    <div className=\"col-12 col-md-7\">\r\n                        <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Get Started</span>\r\n                                <h3 className=\"mt-3 mb-0\">Update Project</h3>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"2\" onChange={(e) => setType(e.target.value)} {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                        </div>\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"1\" onChange={(e) => setType(e.target.value)}  {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {/* {type == 1 && ( */}\r\n\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Project name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"title\"\r\n                                            placeholder=\"Project name\"\r\n                                            {...register(\"title\", { required: true })}\r\n                                            aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                                    </div>\r\n                                    {/* )} */}\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Web address</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"address\"\r\n                                            placeholder=\"Web Address\"\r\n                                            {...register(\"address\", { required: true })}\r\n                                            aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <label>Description</label>\r\n                                    <div className=\"form-group\">\r\n                                        {/* <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"textarea\"\r\n                                            // data-provide=\"markdown-editable\" rows=\"10\"\r\n                                            placeholder=\"Description\"\r\n                                            cols={30}\r\n                                            {...register(\"description\", { required: true })}\r\n                                            aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        /> */}\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n                                            render={({ field: { value, onChange } }) => {\r\n                                                return <JoditEditor\r\n                                                    ref={editor}\r\n                                                    value={value}\r\n                                                    // config={config}\r\n\r\n                                                    placeholder=\"start typing\"\r\n                                                    tabIndex={1} // tabIndex of textarea\r\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                    onChange={newContent => { }}\r\n                                                />\r\n                                            }}\r\n                                        />\r\n                                        {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                        {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"country\"\r\n                                                    {...register(\"country\", { required: true })}\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeCountry()\r\n                                                    }>\r\n\r\n                                                    aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                        Select your country</option>\r\n                                                    {countries?.data?.data?.map((option, key) => (\r\n                                                        <>\r\n                                                            <option key={key.id} value={option.id} >\r\n\r\n                                                                {option.name}\r\n\r\n                                                            </option>\r\n                                                        </>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"state\"\r\n\r\n                                                    {...register(\"state\", { required: true })}\r\n                                                    //  onChange={handleChangeState}\r\n\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeState\r\n                                                    } >\r\n                                                    aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state</option>\r\n                                                    {states?.data?.data?.map((option, key) => (\r\n\r\n                                                        <><option key={key.id} value={option.id}  >\r\n                                                            {option.name}\r\n                                                        </option></>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>City or Region</label>\r\n\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}>\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        {type == 2 ? (\r\n\r\n                                            <label>Price</label>\r\n                                        ) : (\r\n\r\n                                            <label>Price per NFT</label>\r\n                                        )}\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"price\"\r\n                                            placeholder=\"Price\"\r\n                                            {...register(\"price\", { required: true })}\r\n                                            aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Number of NFTs</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"number_of_nft\"\r\n                                            defaultValue={1}\r\n                                            disabled={type == 1}\r\n                                            placeholder=\"Select your number of NFTs (1-10)\"\r\n                                            min={1}\r\n                                            max={10}\r\n                                            {...register(\"number_of_nft\", { required: true })}\r\n                                            aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                        {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {type == 2 && (\r\n\r\n                                    <><div className=\"col-12 col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Campaign Start date</label>\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control\"\r\n                                                name=\"start_date\"\r\n                                                min={disablePastDate()}\r\n                                                // placeholder=\"Start date\"\r\n                                                {...register(\"start_date\", { required: true })}\r\n                                                aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                            {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                        </div>\r\n                                    </div><div className=\"col-12 col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Campaign End Date</label>\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"end_date\"\r\n                                                    min={disablePastDate()}\r\n                                                    // placeholder=\"End date\"\r\n                                                    {...register(\"end_date\", { required: true })}\r\n                                                    aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                                {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                            </div>\r\n                                        </div></>\r\n                                )}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category</label>\r\n                                        <select name=\"annual_revenue_range\"\r\n                                            // defaultValue={}\r\n                                            {...register(\"category_id\")}>\r\n                                            {cat?.map((option, key) => (\r\n\r\n                                                <option key={key.id} value={option.id}  >\r\n                                                    {option.title}\r\n\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        //     </Modal.Body>\r\n        // </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default EditProject;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport EditProject from '../Edit/editProject';\r\n\r\nconst ProjectUpdate = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <EditProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjectUpdate;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst TermsConditions = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter())\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{footer?.footer?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: footer?.footer?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default TermsConditions","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport TermsConditions from '../components/Footer/t&c';\r\n\r\n\r\nconst TermsCond = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <TermsConditions />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TermsCond\r\n","import React, { Component, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  CategoriesAction,\r\n  getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\n\r\nconst projectTypesMap = {\r\n  LatestProjects: 2,\r\n  RecentCampaigns: 1,\r\n};\r\n\r\nconst ExploreAll = () => {\r\n  const { type } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const liveProjects = useSelector((state) => {\r\n    return state?.projectdetails?.liveProjects[type];\r\n  });\r\n  console.log(liveProjects?.nft_data?.image, \"live\");\r\n\r\n\r\n  useEffect(() => {\r\n    //\r\n    dispatch(\r\n      getPublicLiveProjects({\r\n        cursor: 1,\r\n        type: projectTypesMap[type],\r\n        projectType: type,\r\n      })\r\n    );\r\n  }, [dispatch, type]);\r\n\r\n  return (\r\n    <section className=\"explore-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-8 col-lg-7\">\r\n            <div className=\"intro text-center mb-4\">\r\n              <h3 className=\"mt-3 mb-0\">\r\n                {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}\r\n              </h3>\r\n              <p>\r\n                Invest in NFTs that are based on real-life projects or events\r\n                related to important causes\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row items explore-items h-auto\">\r\n          {liveProjects && liveProjects.length ? (\r\n            [\r\n              ...new Map(\r\n                liveProjects?.map((item) => [item[\"title\"], item])\r\n              ).values(),\r\n            ].map((item, idx) => {\r\n              return (\r\n                <Link\r\n                  key={`edth_${idx}`}\r\n                  className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                >\r\n                  <div>\r\n                    <Link to={`/projects/${item.slug}`}>\r\n                      <div className=\"card\">\r\n                        <div className=\"image-over\">\r\n                          <Link to={`/projects/${item.slug}`}>\r\n                            <img\r\n                              className=\"card-img-top\"\r\n                              src={item.image}\r\n                              alt=\"\"\r\n                            />\r\n                          </Link>\r\n                          {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                        </div>\r\n\r\n                        <div className=\"card-caption col-12 p-0\">\r\n                          {/* Card Body */}\r\n                          <div className=\"card-body\">\r\n                            {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                            {/* <a > */}\r\n                            <h5 className=\"mb-0\">\r\n                              {item.title.slice(0, 15)}\r\n                            </h5>\r\n                            {/* </a> */}\r\n                            <div\r\n                              className=\"seller d-flex align-items-center my-3\"\r\n\r\n                            >\r\n                              <span>Owned By</span>\r\n                              {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                              {/* <a > */}\r\n                              <h6 className=\"ml-2 mb-0\">\r\n                                {item.user_data.username.slice(0, 12)}\r\n                              </h6>\r\n                              {/* </a> */}\r\n\r\n                              {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                            </div>\r\n                            <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                              <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                              {item?.number_of_nft == 1 ? (\r\n                                <span>{item.number_of_nft} NFT</span>\r\n                              ) : (\r\n                                <span>{item.number_of_nft} NFTs</span>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                              <Link to={`/projects/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                <i className=\"icon-handbag\" />\r\n                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                              </Link>\r\n                              <Link to={`/projects/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"col-12 col-sm-12 col-lg-12\">\r\n              <h2 className=\"allproj2\">No latest project found</h2>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default ExploreAll;\r\n","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreAll from '../components/Explore/viewAllLatest';\r\n\r\nconst All = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ExploreAll type=\"Latest Projects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default All;","import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst AllCollections = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state.collection.collection\r\n    })\r\n    // console.log(coll, \"coll\")\r\n    useEffect(() => {\r\n\r\n        dispatch(PopularCollectionAction())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center mb-4\">\r\n\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center text-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* Explore Menu */}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items explore-items h-auto\">\r\n                        {coll && coll.length ?\r\n                            [...new Map(coll?.map(item =>\r\n                                [item[\"title\"], item])).values()]?.map((item, idx) => {\r\n                                    return (\r\n                                        <Link key={`edth_${idx}`} to={`/popularcollection/details/${item.slug}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\" >\r\n                                            <div>\r\n                                                <div className=\"card position-relative \">\r\n                                                    <div className=\"image-over \">\r\n                                                        <img className=\"card-img-top\" src={item.image} />\r\n                                                    </div>\r\n\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <a>\r\n                                                                <h5 className=\"mb-0 mt-3\">{item.title.slice(0, 15)}...</h5>\r\n                                                            </a>\r\n\r\n                                                            <div class=\"\"><p>{item.description.slice(0, 50)}...</p></div>\r\n\r\n                                                            <div class=\"mb-2 align-items-center justify-content-between\">\r\n                                                                <div class=\"mt-2 mb-2 d-flex justify-content-between text-align-center fundraiser_sale\">\r\n                                                                    {item?.nft_data.length == 1 ? (\r\n\r\n                                                                        <span>{item.nft_data.length} NFT</span>\r\n                                                                    ) : (\r\n                                                                        <span>{item.nft_data.length} NFTs</span>\r\n                                                                    )\r\n\r\n                                                                    }\r\n                                                                    {/* <span>Total NFTs</span>\r\n                                                                    <span>{item.nft_data.length}</span> */}\r\n\r\n                                                                    {/* <div>\r\n                                                                        <span>Sale</span>\r\n                                                                        <div>100</div>\r\n                                                                    </div> */}\r\n                                                                </div>\r\n                                                                {/* <span class=\"share\">\r\n                                                                    <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\"></path></svg>\r\n                                                                </span> */}\r\n                                                            </div>\r\n                                                            {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span style={{ color: '#8E8E8E' }}>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\">{item?.user_data?.username}</h6>\r\n                                                                </a>\r\n                                                            </div> */}\r\n\r\n\r\n                                                            {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div> */}\r\n                                                            {/* <div>\r\n                                                                {item.status == '1' ?\r\n                                                                    <Button>Donation</Button>\r\n                                                                    :\r\n\r\n                                                                    <Button>Product Sale</Button>\r\n                                                                }\r\n                                                            </div> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                            <div className=\"col-12 col-sm-12 col-lg-12 no-data\">\r\n                                <h2>\r\n                                    No Popular Collections\r\n                                </h2>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default AllCollections; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AllCollections from '../components/Collections/exploreCollection';\r\n\r\nconst ColExplore = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AllCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ColExplore;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AboutUsAction, getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst AboutUs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const about = useSelector(state => {\r\n        return state.footer.aboutus\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(AboutUsAction())\r\n    }, [])\r\n    // console.log(about, 'footerabout')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{about?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: about?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AboutUs","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AboutUs from '../components/Footer/about';\r\n\r\nconst Aboutus = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AboutUs />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Aboutus;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ReferalPopup(props) {\r\n    const location = useLocation();\r\n    const [copy, setCopy] = useState(false)\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n    const url = window.location.href + `?refid=${props.userRef}`\r\n    const userprojurl = `https://app.karmatica.io/projects/${props.id}` + `?refid=${props.userRef}`\r\n    console.log(userprojurl)\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header className=' align-items-start'>\r\n                {window.ethereum?.selectedAddress ? (\r\n\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Refer your friends\r\n                        <p>Earn Royalties When You Share: <br />30% of NFTs for first level and 5% for secondary referrals.</p>\r\n\r\n\r\n                    </Modal.Title>\r\n                ) : (\r\n                    <Modal.Title id=\"contained-modal-title-vcenter \">\r\n\r\n                        <p>Earn When You Share: <br />30% of NFT sales for first level referral </p>\r\n                        <p style={{ color: \"red\" }}>Connect your wallet to earn referral income in MATIC when you share projects</p>\r\n\r\n\r\n                    </Modal.Title>\r\n                )}\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className='refer-frnd'>\r\n                <form className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-10 p-0\">\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                {/* <label>Display name</label> */}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"display_name\"\r\n                                    value={location.pathname === `/projnftdetails/${props.id}` ? userprojurl : url}\r\n                                    disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}\r\n                                // required\r\n                                // placeholder=\"Enter collection name\"\r\n                                // {...register('title')}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n\r\n                            </div>\r\n                            {/* <FacebookShareCount url={\"shareUrl\"}>\r\n                            {shareCount => <span className=\"myShareCountWrapper\">{shareCount}</span>}\r\n                        </FacebookShareCount> */}\r\n\r\n\r\n                            <hr />\r\n                            <div className=\"refer-icons\">\r\n                                {location.pathname === `/projnftdetails/${props.id}` ? (\r\n                                    <>  <TwitterShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                        <FacebookShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                        <WhatsappShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                        <TelegramShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                        <InstapaperShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" >  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                        <LinkedinShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                        <EmailShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><EmailIcon size={32} round={true} /></EmailShareButton></>\r\n                                ) : (\r\n\r\n                                    <><TwitterShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                        <FacebookShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                        <WhatsappShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                        <TelegramShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                        <InstapaperShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\">  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                        <LinkedinShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                        <EmailShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><EmailIcon size={32} round={true} /></EmailShareButton></>\r\n                                )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 p-0 text-right\">\r\n                            {location.pathname === `/projnftdetails/${props.id}` ? (\r\n                                <CopyToClipboard text={userprojurl} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                            ) : (\r\n\r\n                                <CopyToClipboard text={url} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                            )}\r\n                            {copy == true &&\r\n                                <span className='copytext'>Copied!</span>\r\n\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ReferalPopup","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNft = (props) => {\r\n    // debugger\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id, props.id))\r\n    }, [props.nft_id, props.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\" >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div>\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                    <Fragment>\r\n\r\n                                                        <div className=\"row relative\">\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  name',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  description',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={'nft_description'}\r\n\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n\r\n                                                                            onChange={newContent => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            <div className='col-12'>\r\n                                                                <label className='mt-2 mb-3'>Choose Collection</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n\r\n\r\n                                                                <div className=\"form-group\">\r\n\r\n                                                                    <div className=\"card choose_div\" style={{\r\n                                                                        background: \"black\",\r\n                                                                        marginBottom: \"8px\",\r\n                                                                    }}>\r\n                                                                        <div className=\"card-body \">\r\n                                                                            <Button variant=\"primary\" className='collection_btn' onClick={() => setModalShowcoll(true)}>\r\n                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n                                                                            </Button>\r\n\r\n                                                                            <CollPopup\r\n                                                                                show={modalShowcoll}\r\n                                                                                onHide={() => setModalShowcoll(false)} />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            {col?.map((item, idx) => (\r\n\r\n                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-6 col-lg-3 col-12 choose_div\">\r\n\r\n\r\n\r\n                                                                    <div id={item.id} onClick={() => setNft_collection_id(item.id)} className=\"card\"\r\n                                                                        style={{\r\n                                                                            background: \"black\",\r\n                                                                            marginBottom: \"8px\",\r\n                                                                            border: nft_collection_id == item.id ? \"1px solid #fff\" : null\r\n                                                                        }}>\r\n                                                                        <div className=\"card-body\">\r\n                                                                            <div>\r\n\r\n\r\n                                                                                {item.title}\r\n                                                                            </div>\r\n\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n\r\n                                                            ))}\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                    <div\r\n                                                                        className=\"position-relative upload_nft\"\r\n                                                                        style={{\r\n                                                                            backgroundImage: \"url('')\",\r\n                                                                            backgroundSize: \"contain\",\r\n                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                        }}\r\n                                                                    >\r\n\r\n                                                                        <div\r\n                                                                            className={\r\n                                                                                nftFileType === \"Player\" || nftFileType === \"modal\"\r\n                                                                                    ? \" inputdragVedio\"\r\n                                                                                    : \"inputtdrag\"\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <input\r\n                                                                                type=\"file\"\r\n                                                                                onChange={handleUpload}\r\n                                                                                maxCount={1}\r\n                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                            />\r\n\r\n                                                                            {(nftFileType === \"Image\") &&\r\n                                                                                <div>\r\n\r\n                                                                                    {source ? (\r\n\r\n                                                                                        <img\r\n                                                                                            src={source}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <img\r\n                                                                                            src={image}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    )}\r\n\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n                                                                            {nftFileType === \"Player\" &&\r\n                                                                                <div>\r\n\r\n                                                                                    {source ? (\r\n\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={source}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={image}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p>\r\n                                                                                            Because you’ve included\r\n                                                                                            multimedia, you’ll need to provide\r\n                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                            the card display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft}\r\n\r\n                                                                                                />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview}\r\n\r\n                                                                                                />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n\r\n\r\n\r\n                                                                            {nftFileType === \"modal\" &&\r\n                                                                                <div>\r\n                                                                                    {!source ? (\r\n                                                                                        <DModal\r\n                                                                                            vdo={image}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <DModal\r\n                                                                                            vdo={source}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p className=\"\">\r\n                                                                                            Because you’ve included multimedia,\r\n                                                                                            you’ll need to provide an image\r\n                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                            display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft} />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview} />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                        </div>\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const slug = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    useEffect(() => {\r\n        dispatch(NftList(props.slug?.id))\r\n        // dispatch(ProjectDetail(slug))\r\n    }, [props.slug?.id])\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n                        <thead>\r\n                            {/* {latprojnftdetail?.map((items) => { \r\n                         return (  */}\r\n\r\n                            <><tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr><tr className='contract-address'>\r\n                                    <th >Contract</th>\r\n                                    <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${nftdetail?.collectionData?.contract_id}`} >{nftdetail.collectionData?.contract_id?.slice(0, 5)}.....{nftdetail.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                </tr><tr>\r\n                                    <th>Token ID</th>\r\n                                    <td>{nftdetail.token_id}</td>\r\n                                </tr><tr>\r\n                                    <th>Token Stranded</th>\r\n                                    <td>ERC721</td>\r\n                                </tr></>\r\n\r\n                            {/* )})} */}\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* {projdetail.nft_data?.map((items) => { */}\r\n                            {/* // return ( */}\r\n                            <tr>\r\n\r\n                                <td>\r\n                                    {/* {items.collectionData?.contract_id} */}\r\n                                </td>\r\n                                <td>\r\n                                    {/* {items.token_id} */}\r\n                                </td>\r\n                                {/* <td>ERC721</td> */}\r\n                                {/* <td>Polygon (Matic)</td> */}\r\n                            </tr>\r\n                            {/* // ) */}\r\n                            {/* })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n                {/* <div className='nothing'>\r\n                No matching records found\r\n                        </div> */}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftdataTable","import axios from \"axios\";\r\n\r\nexport const GetMatic = async (setMatic) => {\r\n\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\r\n            config\r\n        )\r\n        setMatic(res?.data)\r\n        console.log('res', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, LatestProjectDetail, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport { BuyNft } from '../Wallet/interact';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport MyVerticallyCenteredModal from './refralPopup';\r\nimport swal from 'sweetalert';\r\nimport Banner from '../Create/editBanner';\r\nimport EditNft from '../Create/editNft';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport latNftdataTable from './../Explore/latProjNftdata';\r\nimport LatNftdataTable from './../Explore/latProjNftdata';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReferalPopup from './refralPopup';\r\nimport ReadMore from '../../readMore';\r\nimport { GetMatic } from './GetMAtic';\r\nimport FormItem from 'antd/es/form/FormItem';\r\nimport { useLocation } from \"react-router-dom\";\r\nconst ProjDetails = () => {\r\n\r\n\r\n    const { slug } = useParams();\r\n    const search = useLocation().search;\r\n    const refid = new URLSearchParams(search).get('refid');\r\n    console.log(refid, 'refid')\r\n    const [tok, setTok] = useState('')\r\n    // console.log('tok', tok)\r\n    const dispatch = useDispatch()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    // const [matic, setmatic] = useState('')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(\"latround\", Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad)))\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    console.log('latproj', latprojdetail?.nft_data)\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n\r\n\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(LatestProjectDetail(slug))\r\n        dispatch(GetUserAction())\r\n\r\n    }, [slug])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className='col-12'>\r\n                        <span className=\"p-0 title_main\">{latprojdetail.title}</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <><div>\r\n                                    {latprojdetail?.user_data?.user_id === userdet?.user_id && localStorage.getItem('authToken') &&\r\n                                        <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() => setModalShow(true)}></i>\r\n\r\n\r\n                                    }\r\n                                    <Banner\r\n                                        id={slug}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div><img src={latprojdetail?.image} alt=\"first nft\" /></>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"fundraiser mt-4 \">\r\n                            <div className='lorem_done'>\r\n                                <img width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" src={latprojdetail?.user_data?.organization_detail?.logo} />\r\n                                {/* <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg> */}\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 col-12 mt-4 mt-lg-0\">\r\n                        <div className='proj-left user_icon'>\r\n                            <div className=\"progress_nft \">\r\n                                <div className='progress_main'><span>\r\n                                    {/* ({Number(latprojdetail.project_count) * Number(matic['matic-network']?.cad)} of {Number(latprojdetail.price) * Number(Math.round(matic['matic-network']?.cad))} MATIC ) */}\r\n                                    <span className='nft_price'>${Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad))} raised of ${Math.round(Number(latprojdetail.price)) * Number(Math.round(matic['matic-network']?.cad))} Cdn Goal</span>\r\n                                    <div>\r\n\r\n                                        {/* ${Math.round(latprojdetail.project_count)} raised of ${Math.round(latprojdetail.price)} Cdn Goal */}\r\n                                        <span className='nft_price'>({Math.round(latprojdetail.project_count)} of {Math.round(latprojdetail.price)} MATIC) </span>\r\n                                    </div>\r\n                                    {/* <span className='nft_price'>{latprojdetail.project_count} raised of {latprojdetail.price} Cdn goal (150 of 758 MATIC)</span><small>  </small> */}\r\n                                    <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                    </div>\r\n                                    <p className='donation-count'>${latprojdetail.project_count} RAISED</p>\r\n                                </span>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex flex-wrap gap-5 justify-content-start\">\r\n\r\n\r\n                                    <>\r\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Invest\r\n                                        </Button>\r\n\r\n\r\n\r\n                                        </a>\r\n                                        <Button className=\"btn sm:ml-2 btn-bordered-white m-0\" variant=\"primary\" onClick={() => setModalShowrefer(true)}>\r\n\r\n\r\n                                            Share\r\n                                        </Button><ReferalPopup\r\n                                            id={slug}\r\n                                            userRef={userDetail}\r\n                                            show={modalShowrefer}\r\n                                            onHide={() => setModalShowrefer(false)} /></>\r\n\r\n\r\n                                </div>\r\n                                {latprojdetail?.user_invest && latprojdetail?.user_invest?.length ?\r\n                                    [...new Map(latprojdetail?.user_invest?.slice(0, 3)?.map(item =>\r\n                                        [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                            const date1 = new Date(item.updated_at)\r\n                                            const date2 = new Date()\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            console.log('days', days_difference)\r\n                                            return (\r\n                                                <ul className=\"m-0 custom_lis pl-0\">\r\n                                                    <li>\r\n                                                        <div className='lorem_done p-0'>\r\n                                                            <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                            </svg>\r\n                                                            </span>\r\n\r\n                                                            <span><div className=\"progress_name\">{item.username} </div> <div>${item.price} Cdn / {Math.round(Number(latprojdetail.price) * Number(matic['matic-network']?.cad))} MATIC ({days_difference} days ago)</div></span>\r\n                                                        </div>\r\n                                                    </li>\r\n\r\n\r\n                                                </ul>\r\n                                            )\r\n                                        }) :\r\n                                    <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\r\n\r\n                                        <span className='allproj2 w-100'>\r\n                                            No user has invested yet\r\n                                        </span>\r\n\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n\t\t\t\t\t\t<i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={latprojdetail.description} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-4'>\r\n\r\n\r\n                        <div className='table-main-detail position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-12'>\r\n                        <div className='mt-4'>\r\n                            <div className='table-detail'>\r\n                                <LatNftdataTable />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\" col-12 mt-4\">\r\n                        <div id=\"invest\" className=\"items mt-0 explore-items p-0\">\r\n                            <ProjNFTS\r\n                                refid={refid}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ProjDetails from '../components/ItemDetails/viewProdetails';\r\n\r\n\r\nconst latprojDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ProjDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default latprojDetails;","import React, { useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { GetCollectionsAction } from '../../redux/Actions/projectAction'\r\n\r\nconst ShowCollections = () => {\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    // const val = localStorage.getItem(\"values\")\r\n    // console.log(val.address, 'vall')\r\n    // console.log(col, 'col')\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n    }, [])\r\n    // useEffect(() => {\r\n\r\n    // })\r\n    // var dat = localStorage.getItem(\"values\");\r\n    // dat = JSON.parse(dat);\r\n    // console.log('dat', dat?.nfts[0]?.image?.fileList[0]?.thumbUrl)\r\n    // console.log('valus', localStorage.getItem('values', 'address'))\r\n    // localStorage.setItem(\"values\", JSON.stringify({\r\n    //     ...data,\r\n    //     nfts: values.nfts.map(x => {\r\n    //         return {\r\n    //             name: x.name,\r\n    //             description: x.description,\r\n    //             image: x.image,\r\n    //         }\r\n    //     })\r\n    // }));\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <span>Explore</span>\r\n                            <h3 className=\"mt-3 mb-0\">My Collections</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {/* {val?.map((item, idx) => { */}\r\n                    {/* return ( */}\r\n                    <Link to={`/collection/${''}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                        <div>\r\n                            <div className=\"card\">\r\n                                <div className=\"image-over\">\r\n                                    {/* <Link to={`/collection/${''}`}> */}\r\n                                    <img className=\"card-img-top\" src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                                    {/* </Link> */}\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 p-0\">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-0\">{col.name}</h5>\r\n                                        </a>\r\n                                        <div className=\"seller d-flex align-items-center my-3\">\r\n                                            <span style={{ color: '#8E8E8E' }}>{col?.nfts?.[0]?.name}</span>\r\n                                            <a href=\"/author\">\r\n                                                <h6 className=\"ml-2 mb-0\"> </h6>\r\n                                            </a>\r\n                                        </div>\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n\r\n                                            <span> {col.price}</span>\r\n                                            <span> {col.number_of_nft}</span>\r\n                                        </div>\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />dfg</a> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                    {/* ) */}\r\n                    {/* })} */}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ShowCollections","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ShowCollections from '../components/Create/showCollections';\r\n\r\nconst Showcollections = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ShowCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Showcollections;","import React, { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\nconst CollItem = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch()\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    // console.log(projdetail, 'projdata')\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    {/* Explore Menu */}\r\n                    <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row items explore-items\">\r\n                {Object.keys(projdetail).map((item, idx) => {\r\n                    // {projdetail?.map((item, idx) => {\r\n                    return (\r\n                        <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" >\r\n                            <div className=\"card no-hover text-center\">\r\n                                <div className=\"image-over\">\r\n                                    <a href=\"/item-details\">\r\n                                        {/* <img className=\"card-img-top\" src={item.img} alt=\"\" /> */}\r\n                                    </a>\r\n                                    {/* Author */}\r\n                                    <a className=\"author\" href=\"/authors\">\r\n                                        <div className=\"author-thumb avatar-lg\">\r\n                                            <img className=\"rounded-circle\" src={item?.nft_data?.title} alt=\"\" />\r\n                                        </div>\r\n                                    </a>\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 \">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body mt-4\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-2\">{item?.nft_data?.title}</h5>\r\n                                        </a>\r\n                                        {/* <span>{item.content}</span> */}\r\n                                        <hr />\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                            {/* <span>{item.price}</span> */}\r\n                                            {/* <span><i className=\"icon-heart mr-2\" />{item.likes}</span> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CollItem;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetCollectionDetails, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Author from '../Author/Author';\r\nimport CollItem from './bread-crumb';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst CollectionDetails = () => {\r\n\r\n    const initData = {\r\n        itemImg: \"/img/avtar1.png\",\r\n        date: \"2022-03-30\",\r\n        tab_1: \"Bids\",\r\n        tab_2: \"History\",\r\n        tab_3: \"Details\",\r\n        ownerImg: \"/img/avtar1.png\",\r\n        itemOwner: \"Themeland\",\r\n        created: \"15 Jul 2021\",\r\n        title: \"Walking On Air\",\r\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n        price_1: \"1.5 ETH\",\r\n        price_2: \"$500.89\",\r\n        count: \"1 of 5\",\r\n        size: \"14000 x 14000 px\",\r\n        volume: \"64.1\",\r\n        highest_bid: \"2.9 BNB\",\r\n        bid_count: \"1 of 5\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n    const tabData_1 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"14 ETH\",\r\n            time: \"4 hours ago\",\r\n            author: \"@arham\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"10 ETH\",\r\n            time: \"8 hours ago\",\r\n            author: \"@junaid\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"12 ETH\",\r\n            time: \"3 hours ago\",\r\n            author: \"@yasmin\"\r\n        }\r\n    ]\r\n\r\n    const tabData_2 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"32 ETH\",\r\n            time: \"10 hours ago\",\r\n            author: \"@hasan\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"24 ETH\",\r\n            time: \"6 hours ago\",\r\n            author: \"@artnox\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"29 ETH\",\r\n            time: \"12 hours ago\",\r\n            author: \"@meez\"\r\n        }\r\n    ]\r\n\r\n    const sellerData = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            seller: \"@ArtNoxStudio\",\r\n            post: \"Creator\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            seller: \"Virtual Worlds\",\r\n            post: \"Collection\"\r\n        }\r\n    ]\r\n\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coldetail = useSelector(state => {\r\n        return state?.projectdetails?.getcollectiondetails\r\n    })\r\n    // console.log(coldetail, 'coldetail')\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionDetails(id))\r\n    }, [id])\r\n\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(id))\r\n    // }\r\n\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n                                <img src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                            </div>\r\n\r\n\r\n                            </>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            <div className='d-flex  align-items-center justify-content-between'>\r\n                                <h3 className=\"m-0\">{coldetail.title}</h3>\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center '>\r\n                                    <Button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" variant=\"primary\" onClick={() => setModalShow(true)} style={{ color: '#FFF' }}>\r\n                                        Add item\r\n                                    </Button>\r\n\r\n                                    {/* <MyVerticallyCenteredModal\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    /> */}\r\n                                    {/* <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"> <Link to={\"\"} style={{ color: '#FFF' }}>Add item</Link></a> */}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                          <ReadMore data={coldetail?.description} />\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <CollItem />\r\n                </div>\r\n            </div >\r\n\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default CollectionDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Create/collectionDetail';\r\n\r\n\r\nconst CollectionDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <CollectionDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CollectionDetail;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { useParams } from 'react-router';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction DesPopup(props) {\r\n    const editor = useRef(null);\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const [country, setCountry] = useState()\r\n    const [type, setType] = useState()\r\n    const dispatch = useDispatch()\r\n    const slug = useParams()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n\r\n    // const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            setDescription(projdetail.description)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n        dispatch(UpdateProject(props.id, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12\">\r\n                            <label>Description</label>\r\n                            <div className=\"form-group\">\r\n\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"description\"\r\n                                    defaultValue=\"\"\r\n                                    render={({ field: { value, onChange } }) => {\r\n                                        return <JoditEditor\r\n                                            ref={editor}\r\n                                            value={value}\r\n                                            // config={config}\r\n\r\n                                            placeholder=\"start typing\"\r\n                                            tabIndex={1} // tabIndex of textarea\r\n                                            onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                            onChange={newContent => { }}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                                {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default DesPopup","import React, { useEffect, useState } from 'react';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport Banner from './editBanner';\r\nimport DesPopup from './desPopup';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReadMore from '../../readMore';\r\nimport { GetMatic } from '../ItemDetails/GetMAtic';\r\nimport ReferalPopup from '../ItemDetails/refralPopup';\r\nimport Swal from 'sweetalert2';\r\n\r\n// import ProgressBar from 'react-bootstrap';\r\n\r\nconst ProjNftDetails = () => {\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(slug))\r\n    // }\r\n\r\n    const { slug } = useParams()\r\n    // console.log(id, 'idd')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [matic, setmatic] = useState('')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [nftId, setNftID] = useState();\r\n    console.log('nftid', nftId)\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    const dispatch = useDispatch()\r\n    const [modalShowDes, setModalShowDes] = React.useState(false);\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    // console.log(projdetail?.nft_data && projdetail?.nft_data && projdetail?.nft_data.length && projdetail?.nft_data[0]?.is_mint, 'projdata')\r\n\r\n\r\n    useEffect((event) => {\r\n        (GetMatic(setmatic))\r\n        // event.preventDefault()\r\n        dispatch(ProjectDetail(slug))\r\n    }, [slug])\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(id))\r\n    // }\r\n    // \r\n    const bannerHandler = () => {\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail \">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <span className=\"my-2 p-0 title_main\">{projdetail.title}</span>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-8'>\r\n                        <div className=\"item-info\" >\r\n                            <div className=\"item-thumb text-center\">\r\n                                {/* {projdetail && projdetail?.nft_data && projdetail?.nft_data?.length ? */}\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() =>\r\n                                        setModalShow(true)}></i>\r\n                                    <Banner\r\n                                        id={slug}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div>\r\n                                <img src={projdetail?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"fundraiser mt-4 p-0\">\r\n                            <div className='lorem_done'>\r\n\r\n                                <img src={latprojdetail?.user_data?.organization_detail?.logo} width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" />\r\n                                {/* <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg> */}\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12 col-lg-4 mt-3 mt-lg-0'>\r\n                        <div className='progress_nft_main'>\r\n                            <div >\r\n                                <div className=\"progress_nft mb-3\">\r\n                                    <div className='progress_main'><span>\r\n                                        {/* ({Number(projdetail.project_count) * Number(matic['matic-network']?.cad)} of {Number(projdetail.price) * Number(Math.round(matic['matic-network']?.cad))} MATIC ) */}\r\n                                        <span className='nft_price'>${Number(projdetail.project_count) * Number(matic['matic-network']?.cad)} raised of ${Number(projdetail.price) * Number(Math.round(matic['matic-network']?.cad))} Cdn </span>\r\n                                        <div>\r\n                                            {/* <span className='nft_price'>{projdetail.project_count} raised of ${projdetail.price} Cdn </span> */}\r\n                                            <span className='nft_price'>({projdetail.project_count} of {projdetail.price} MATIC )</span>\r\n\r\n                                        </div>\r\n                                        <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" now={projdetail.project_percentage} />\r\n                                            {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                        </div>\r\n                                        <p className='donation-count'>${projdetail.project_count} Cdn RAISED</p>\r\n                                    </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex justify-content-start\">\r\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Invest\r\n                                        </Button>\r\n                                        </a>\r\n\r\n\r\n\r\n\r\n                                        {projdetail?.nft_data && projdetail?.nft_data && projdetail?.nft_data.length > 0 && projdetail?.nft_data[0]?.is_mint == 0 ? (\r\n\r\n                                            <Button className=\" btn  btn-bordered-white m-0 ml-2\" variant=\"primary\" onClick={() => Swal.fire(\r\n                                                'Please mint your NFTs',\r\n\r\n                                            )}>\r\n                                                Share\r\n                                            </Button>\r\n                                        ) : (\r\n                                            <>\r\n                                                <Button className=\" btn  btn-bordered-white m-0 mr-2\" onClick={() => setModalShowrefer(true)} variant=\"primary\">\r\n                                                    Share\r\n                                                </Button>\r\n                                                <ReferalPopup\r\n                                                    id={slug}\r\n                                                    userRef={userDetail}\r\n                                                    show={modalShowrefer}\r\n                                                    onHide={() => setModalShowrefer(false)} />\r\n                                            </>\r\n\r\n                                        )}\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    {projdetail?.user_invest && projdetail?.user_invest?.length ?\r\n                                        [...new Map(projdetail?.user_invest?.slice(0, 3)?.map(item =>\r\n                                            [item[\"title\"], item])).values()].map((item, idx) => {\r\n\r\n                                                // {projdetail.user_invest?.slice(0, 3)?.map((items) => {\r\n                                                const date1 = new Date(item.updated_at)\r\n                                                const date2 = new Date()\r\n                                                const time_difference = date2.getTime() - date1.getTime();\r\n                                                const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                console.log('days', days_difference)\r\n                                                return (\r\n\r\n                                                    <ul className=\"m-0 custom_lis pl-0\">\r\n                                                        <li>\r\n                                                            <div className='lorem_done p-0'>\r\n                                                                <span>\r\n\r\n                                                                    <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                    </svg>\r\n                                                                </span>\r\n                                                                <span><div className=\"progress_name\">{item.username} </div> <div>${item.price} Cdn / 40 MATIC ({days_difference} days ago)</div></span>\r\n                                                            </div>\r\n                                                        </li>\r\n\r\n\r\n                                                    </ul>\r\n                                                )\r\n                                            }) :\r\n                                        <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\r\n\r\n                                            <span className='allproj2  w-100'>\r\n                                                No user has invested yet\r\n                                            </span>\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-8 mt-4'>\r\n                        <div class=\"user-description\">\r\n\r\n                            <h5 className='user_title justify-content-between'>\r\n\r\n                                <div className='d-flex align-items-center gap-5'> <div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div></div>\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                        <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n                                {/* {projdetail?.status == 1 && (\r\n                                                            <div >\r\n\r\n                                                                <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a>\r\n                                                                <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            )} */}\r\n                                <div >\r\n                                    <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                        setModalShowDes(true)}></i>\r\n                                    <DesPopup\r\n                                        id={slug}\r\n                                        show={modalShowDes}\r\n                                        onHide={() => setModalShowDes(false)} />\r\n                                </div>\r\n                            </h5>\r\n                            <ReadMore data={projdetail.description} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: projdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-4'>\r\n                        <div className='container table-main-detail position-relative'>\r\n\r\n                            <ProjdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div className='col-12 mt-4'>\r\n                    <div className='container table-detail'>\r\n\r\n                        <LatNftdataTable\r\n\r\n                        />\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mt-4\">\r\n\r\n\r\n                    <div className='nfts_main' id='invest'>\r\n\r\n\r\n\r\n                        <div className='intro row m-0 p-0'>\r\n                            <div className=\"intro-content\">\r\n                                <span >NFTs</span>\r\n                                <h3 className=\"w-full mb-0 pt-4\">NFTs</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row items mt-0 explore-items px-0\">\r\n                            {projdetail.number_of_nft != projdetail?.nft_data?.length && (\r\n                                <div className='col-12 col-sm-6 col-lg-3 item explore-item'>\r\n                                    <div className='card no-hover m-0 add-nft '>\r\n\r\n\r\n                                        <div class=\"image-over relative\">\r\n\r\n\r\n\r\n                                            <Link to={`/addnft/${projdetail.slug}?projectid=${projdetail.id}`}>\r\n\r\n                                                + Add NFT </Link>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n\r\n                            {projdetail?.nft_data?.map((x, idx) => {\r\n                                // {projdetail?.map((item, idx) => {\r\n                                // const image_preview = URL.revokeObjectURL(x.preview_imag)\r\n                                return (\r\n                                    <div key={`eds_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item \">\r\n\r\n                                        <div className=\"card no-hover m-0\">\r\n\r\n\r\n\r\n                                            {/* <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                            <div className=\"image-over relative\">\r\n                                                {x.user_id == projdetail.user_id ? (\r\n                                                    <>\r\n                                                        {/* <Link to={`/nft/details/${x.slug}?project=${slug}`}> */}\r\n                                                        <Link to={`/nft/details/${x.slug}`}>\r\n                                                            {x.extention === 'Player' || x.extention === 'modal' ? (\r\n\r\n                                                                <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\r\n                                                            ) : (\r\n                                                                <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                            )}\r\n                                                        </Link>\r\n\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <>\r\n                                                        {x.extention === 'Player' || x.extention === 'modal' ? (\r\n\r\n                                                            <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\r\n                                                        ) : (\r\n                                                            <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                        )}\r\n                                                    </>\r\n                                                )}\r\n                                                <div className='token'>\r\n                                                    <span>#{x?.token_id}</span>\r\n                                                    <span className='cards-icons'>\r\n                                                        {x.is_mint == 0 &&\r\n                                                            <Link to={`/nft/details/${x.slug}?project=${slug}`} ><i className=\"fa-solid fa-pen\" /></Link>\r\n                                                            // <div>\r\n                                                            //     <i className=\"fa-solid fa-pen\" \r\n                                                            //     onClick={(e) => {\r\n                                                            //         setNftID(x.slug)\r\n                                                            //         e.preventDefault();\r\n                                                            //         setModalShowedit(true)\r\n                                                            //     }\r\n                                                            //     } ></i>\r\n                                                            //     {modalShowedit &&\r\n\r\n                                                            //         <EditNft\r\n                                                            //             debugger\r\n                                                            //             id={slug}\r\n                                                            //             nft_id={nftId}\r\n                                                            //             show={modalShowedit}\r\n                                                            //             onHide={() => setModalShowedit(false)} />\r\n                                                            //     }\r\n                                                            // </div>\r\n                                                        }\r\n                                                    </span>\r\n                                                </div>\r\n                                                {/* Author */}\r\n\r\n                                            </div>\r\n                                            {/* Card Caption */}\r\n                                            <div className=\"card-caption px-0 col-12 \">\r\n                                                {/* Card Body */}\r\n                                                <div className=\"card-body\">\r\n\r\n                                                    <a href=\"#\" className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <h5 className=\"m-0 pb-2 p-0 text-capitalize\">{x.title.slice(0, 16)}...</h5>\r\n\r\n                                                    </a>\r\n                                                    {/* <div className='creater mt-1 mb-1'>\r\n                                                        <span >Creator:</span><span className='ml-2'>{x?.user_data?.username}</span>\r\n                                                    </div> */}\r\n                                                    <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\r\n                                                        <span className='align-self-start' dangerouslySetInnerHTML={{ __html: x.description.slice(0, 52) }} />\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className='mint d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price' >\r\n                                                        {x.is_mint == 0 ? (\r\n\r\n                                                            <button className='btn py-2 ml-lg-auto btn-bordered-white'>\r\n                                                                <Link to={`/nft/details/${x.slug}`}>Sell</Link>\r\n                                                            </button>\r\n                                                        ) : (\r\n\r\n                                                            <>\r\n                                                                {x.user_id !== projdetail.user_id ? (\r\n                                                                    <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>\r\n                                                                        <a >SOLD OUT</a>\r\n                                                                    </button>\r\n                                                                ) : (\r\n                                                                    <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>\r\n                                                                        <a >Minted</a>\r\n                                                                    </button>\r\n                                                                )}\r\n                                                            </>\r\n\r\n\r\n                                                        )}\r\n                                                        <a> <img className=\"mr-1\" src='../img/image14.png' />{x.amount}</a>\r\n                                                    </div>\r\n\r\n\r\n\r\n                                                    {/* <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\r\n                                                <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={`/nftprojdetails/${item.slug}`} style={{ color: \"white\" }}>Invest</Link></button></a>\r\n                                                <a> <img className=\"mr-1\" src='../img/image14.png' />{item.price}</a>\r\n                                            </div> */}\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default ProjNftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport ProjNftDetails from '../components/Create/projdetails';\r\n\r\nconst ProjNft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ProjNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjNft;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { set, useForm } from 'react-hook-form';\r\nimport 'antd/dist/antd.css';\r\nimport { Steps } from 'antd';\r\nimport { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined, CheckOutlined } from '@ant-design/icons'\r\nimport { useParams } from 'react-router';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n\r\nfunction NftPopup(props) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const { id } = useParams();\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n\r\n    const description = 'This is a description.';\r\n    function gettxhashAddress() {\r\n        // \r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n    // function getconfirmAddress() {\r\n    //     // \r\n    //     return web3.eth.getTransactionReceipt;\r\n    // }\r\n    // useEffect(() => {\r\n    // setTxhash(gettxhashAddress())\r\n    // setConfirm(getconfirmAddress())\r\n    // if (txhas) {\r\n    // setCurrent(1)\r\n    // setCurrent(2)\r\n    // setCurrent(3)\r\n    // }\r\n    // }, [])\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n    })\r\n    // console.log('latprojdetailpop', nftdetail)\r\n    // const mint = () => {\r\n    //     CreateMetaDataAndMint({\r\n    //         _name: nftdetail.title,\r\n    //         _des: nftdetail.description,\r\n    //         _imgBuffer: nftdetail.image\r\n    //     })\r\n    // }\r\n\r\n    const { Step } = Steps;\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Follow steps\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Steps current={props.current} direction='vertical'>\r\n                        <Step title=\"Deploying contract\" description='Uploading of all media assets and metadata to IPFS' />\r\n                        <Step icon={props.current == 0 && <LoadingOutlined type=\"loading\" />} title=\"Mint\" description='Send transaction to create your NFT' />\r\n                        <Step icon={props.current !== 2 ? <LoadingOutlined type=\"loading\" /> : props.current == 2 && <CheckOutlined type=\"finish\" />} title=\"Approve\" description='This transaction is conducted only once per collection' />\r\n\r\n                    </Steps>\r\n\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NftPopup","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst NftTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n\r\n\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getnftwoldetails\r\n    })\r\n    console.log('lattt', latprojnftdetail.nft_history)\r\n    useEffect(() => {\r\n        dispatch(GetNftwol(props.id))\r\n    }, [props.id])\r\n    const location = useLocation()\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr >\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n\r\n\r\n                        <tbody>\r\n                            {latprojnftdetail?.nft_history?.map((items) => {\r\n                                return (\r\n                                    <tr className='contract-address'>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/tx/${items?.txd_id}`} >{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</a></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n\r\n\r\n\r\n\r\n                    </Table>\r\n                    <div className='nothing'>\r\n                        {latprojnftdetail?.nft_history?.length == 0 &&\r\n                            <span> No matching records found</span>\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftTransdataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nconst { CONTRACT_ADDRESS_URL } = process.env;\r\nconst LatNftDataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     debugger\r\n    //     dispatch(NftList(id))\r\n    // }, [id])\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getnftwoldetails\r\n    })\r\n    console.log(latprojnftdetail, 'laptnft')\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n\r\n                        <thead>\r\n\r\n                            <tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr>\r\n                            <tr className='contract-address'>\r\n                                <th>Contract ID</th>\r\n                                <td> <a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${latprojnftdetail?.collectionData?.contract_id}`} >{latprojnftdetail?.collectionData?.contract_id?.slice(0, 5)}.....{latprojnftdetail?.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                {/* <td>{latprojnftdetail?.collectionData?.contract_id}</td> */}\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Token ID</th>\r\n                                <td>{latprojnftdetail?.token_id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Token Stranded</th>\r\n                                <td>ERC721</td>\r\n                            </tr>\r\n\r\n                            {/* <tr>\r\n\r\n                                <th>Contract Address</th>\r\n                                <th>Token ID</th>\r\n                                <th>Token Stranded</th>\r\n                                <th>Blockchain</th>\r\n                            </tr> */}\r\n\r\n\r\n                        </thead>\r\n\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftDataTable","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport Loader from '../Loader/loader';\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction BuyPopup(props) {\r\n    const location = useLocation();\r\n    const [copy, setCopy] = useState(false)\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    // const [loading, setLoading] = useState(true)\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            className=\"loading\"\r\n        >\r\n\r\n\r\n\r\n            {props.loading &&\r\n\r\n                <><Loader />\r\n\r\n                    <div className=\"form-group m-0\">\r\n                        <span>Processing...</span>\r\n                    </div>\r\n\r\n\r\n\r\n                </>\r\n            }\r\n\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default BuyPopup","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Nftprice, Nftdeatil } from './nftprice'\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { updateReffid } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport ReadMore from '../../readMore';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport UserdataTable from '../AuthorProfile/userTransTable';\r\nimport NftTransdataTable from './nftTRansTable';\r\nimport LatNftDataTable from '../Explore/latnftTable';\r\nimport BidPopup from './bidPopup';\r\nimport DModal from '../Create/3dModal';\r\nimport Timer from './timer';\r\nimport BuyPopup from './buyPopup';\r\nimport { GetMatic } from './../ItemDetails/GetMAtic';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst LatprojNftDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const search = useLocation().search;\r\n    const refid = new URLSearchParams(search).get('refid');\r\n    console.log(refid, 'refid')\r\n    const [ownwallet, setOwnWallet] = useState('')\r\n    const [matic, setMatic] = useState('')\r\n    const [ownFee, setOwnFee] = useState('')\r\n    const [bidmodalShow, setBidModalShow] = React.useState(false);\r\n    const [buymodalShow, setBuyModalShow] = React.useState(false);\r\n    const [referalid, setReferalid] = useState(\"\")\r\n\r\n    const [platformFee, setPlatformFee] = useState('')\r\n    console.log('own', ownwallet)\r\n    const id = useParams();\r\n    // console.log(id, 'idd')\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.getnftwoldetails\r\n    })\r\n    console.log('matic', matic['matic-network']?.cad * latprojnftdetail?.amount)\r\n    console.log((latprojnftdetail?.amount * Math.round(matic['matic-network']?.cad)), 'latext')\r\n    // console.log(\"latround\", Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad)))\r\n    // console.log('paymentflow', [latprojnftdetail.payment_flow?.project_data.wallets])\r\n\r\n\r\n    const getSett = useSelector(state => {\r\n        // \r\n        return state.projectdetails.settings\r\n    })\r\n    console.log('getSett', getSett)\r\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\r\n    console.log('sett', setValue)\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetUserAction())\r\n        dispatch(GetNftwol(id))\r\n        dispatch(GetSettings())\r\n\r\n\r\n    }, [id])\r\n\r\n    const buyHandler = () => {\r\n\r\n        // setOwnWallet([latprojnftdetail.payment_flow?.project_data.wallets])\r\n        // setOwnFee([latprojnftdetail.payment_flow?.project_data.fees])\r\n        // setPlatformFee([latprojnftdetail.payment_flow?.karmatica_fee])\r\n\r\n\r\n        BuyNft({\r\n\r\n            contractAddress: latprojnftdetail?.collectionData?.contract_id,\r\n            tokenId: latprojnftdetail.token_id,\r\n            payFrom: latprojnftdetail.pay_from,\r\n            values: setValue.value,\r\n            sellingCount: latprojnftdetail.selling_count,\r\n            platformFee: ([latprojnftdetail.payment_flow?.karmatica_fee]),\r\n\r\n            ownerFee: ([latprojnftdetail.payment_flow?.project_data?.fees]),\r\n            ownerWallet: ([latprojnftdetail.payment_flow?.project_data?.wallets]),\r\n            flow: ([latprojnftdetail.payment_flow]),\r\n\r\n            refid: refid,\r\n            proj_id: latprojnftdetail.project_id,\r\n            nft_id: latprojnftdetail.id,\r\n            loadingg: setLoading,\r\n            modal: setBuyModalShow,\r\n\r\n\r\n\r\n\r\n        })\r\n    }\r\n    const reffHandler = async () => {\r\n        await updateReffid({ tokenId: latprojnftdetail.token_id, refid, nft_id: latprojnftdetail.id })\r\n        await buyHandler()\r\n    }\r\n    // const bidHandler = () =>{\r\n    // if(window.ethereum?.selectedAddress){\r\n    //     debugger\r\n\r\n    //     dispatch(BidPopup())\r\n    // }else{\r\n    //     ConnectWallet()\r\n    // }\r\n    // }\r\n    // const yestTime = \"9:24:49 PM\"\r\n    // const timeNow = new Date()?.toLocaleTimeString() - yestTime()\r\n    // console.log(\"time now\", timeNow)\r\n    // const yesterday = new Date(new Date().getTime() - (24 * 60 * 60 * 1000));\r\n    // console.log('yestwe', yesterday)\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                        <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}  </span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n\r\n                                {/* {latprojdetail?.nft_data?.map((item, idx) => { */}\r\n                                {/*  */}\r\n                                {/* return ( */}\r\n                                {latprojnftdetail.extention === \"PLayer\" &&\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={latprojnftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n\r\n                                {latprojnftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={latprojnftdetail.image}\r\n\r\n                                    />\r\n                                }\r\n                                {latprojnftdetail.extention === 'Image' &&\r\n\r\n                                    <img src={latprojnftdetail.image} alt=\"\" />\r\n                                }\r\n                                {/* ) */}\r\n                                {/* })} */}\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\r\n                        {/* <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}  </span>\r\n\r\n\r\n                        </div> */}\r\n                        <div className=\"content \">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{latprojnftdetail.owned_by}</span>\r\n\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {latprojnftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled mb-0\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{latprojnftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Affiliate first sale royalties : </span>\r\n                                    <span> 30%</span>\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>NFT creator royalties : </span>\r\n                                    <span> 10%</span>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                                <div className='eddlbtton d-flex gap- align-items-center mt-2 justify-content-between'>\r\n\r\n                                    {/* <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <li><span class='boldertext'>Affiliate first sale royalties: 20%</span></li>\r\n                                       <li><span class='boldertext'>NFT creator royalties: 10% </span></li> \r\n                                        <li><span class='boldertext'>Affiliate secondary royalties: 5% </span></li>\r\n\r\n                                        \r\n                                    </ul>\r\n                                </div> */}\r\n                                    <div className='eddlbtton flex-wrap d-flex gap-10  align-items-center mt-2'>\r\n                                        {/* {latprojnftdetail.type == 1 ? ( */}\r\n                                        {latprojnftdetail.sold_nft == 1 ? (\r\n                                            <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" disabled>SOLD OUT</button>\r\n                                        ) : (\r\n\r\n                                            <>\r\n                                                {latprojnftdetail.user_id === userdet.user_id ? (\r\n                                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                            disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                                        </>\r\n\r\n                                                    </div>\r\n\r\n                                                ) : (\r\n\r\n                                                    <><button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                        id=\"nftdetail.id\" onClick={() => { reffHandler(); setBuyModalShow(true); setLoading(true); }}>Buy Now</button><BuyPopup\r\n                                                            show={buymodalShow}\r\n                                                            loading={loading}\r\n\r\n\r\n                                                            onHide={() => setBuyModalShow(false)} /></>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n                                        {/* ) : ( */}\r\n\r\n                                        {/* <><button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                onClick={() => setBidModalShow(true)}>Place Bid</button><BidPopup\r\n\r\n                                                    id={latprojnftdetail.id}\r\n                                                    projid={latprojnftdetail.project_id}\r\n                                                    projtitle={latprojnftdetail.title}\r\n                                                    projcoll={latprojnftdetail?.collectionData?.title}\r\n                                                    show={bidmodalShow}\r\n                                                    onHide={() => setBidModalShow(false)} /></>\r\n                                        )} */}\r\n\r\n                                    </div>\r\n                                    {/* <Timer\r\n                                        time={latprojnftdetail.end_date}\r\n                                    /> */}\r\n                                    <div className='eddlbtton bitbtn d-flex  align-items-center mt-2'>\r\n\r\n                                        <div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <p dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4 '>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <img src='../img/image14.png' />\r\n                                    {/* <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg> */}\r\n                                    <span><small>{latprojnftdetail.amount}  / ${latprojnftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n                                    {/* <span><small>$120</small></span> */}\r\n                                </div>\r\n\r\n                                {/* <div className='sales'>\r\n                                    <span>\r\n                                        Creator royalties on secondary sales:\r\n                                    </span>\r\n                                    <span>5%</span>\r\n                                </div> */}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=''>\r\n                            <div className=\"profile_detail mt-4\">\r\n\r\n                                <LatNftDataTable\r\n                                // id={id}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <NftTransdataTable\r\n                                id={id}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"col-12\">\r\n                        <div className=\"card no-hover countdown-times my-4 \">\r\n                            <span dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                        </div>\r\n\r\n                    </div> */}\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\nexport default LatprojNftDetails;","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { getBid, NftList, ProjectDetail, ProjectList, UpdateBId } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst NftAuctiondataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { slug } = useParams()\r\n    const [bidstatus, setBidStatus] = useState(2)\r\n    console.log('biddst', bidstatus)\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(NftList(props.slug.id))\r\n\r\n    }, [props.slug.id])\r\n\r\n    const acceptHandler = (id) => {\r\n\r\n        console.log(\"accept\", id)\r\n        getBid(props)\r\n        dispatch(UpdateBId({ id, status: bidstatus }))\r\n    }\r\n    return (\r\n        <div className='position-relative'>\r\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Latest Bids\" key=\"1\" >\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>User</th>\r\n                                <th>Bid Price</th>\r\n                                <th>Wallet</th>\r\n                                {/* <th>To</th> */}\r\n                                <th>Transaction</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody className='img_table'>\r\n                            {nftdetail.bids?.map((item) => {\r\n\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>{item.username}</td>\r\n                                        <td>{item.amount}</td>\r\n                                        <td>{item.pay_from?.slice(0, 4)}...{item.pay_from?.slice(35, 44)}</td>\r\n                                        {/* <td>{item.pay_to?.slice(0, 4)}...{item.pay_to?.slice(35, 44)}</td> */}\r\n                                        <td>{item.txd_id?.slice(0, 4)}...{item.txd_id?.slice(35, 44)}</td>\r\n                                        <td>\r\n                                            {item.status == 1 ? (\r\n\r\n                                                <button type=\"submit\" onClick={() => acceptHandler(item.id, setBidStatus(\"2\"))}>Accept</button>\r\n                                            ) : (\r\n                                                <a>Confirmed</a>\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                        {/* <div className='nothing col-spam-5' colspan=\"5\">\r\n                            No matching records found\r\n                        </div> */}\r\n                    </Table>\r\n                    {nftdetail?.bids?.length == 0 &&\r\n                        <div className='nothing'>\r\n\r\n                            No matching records found\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftAuctiondataTable","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, ResellNft, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport JoditEditor from 'jodit-react';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport Web3 from 'web3';\r\nimport React from 'react';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { CreateMetaDataAndMint, UpdateStatus } from '../Wallet/interact';\r\nimport NftPopup from './nftPopup';\r\nimport { useFormData } from '../Create/Context/context';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nfunction SellPopup(props) {\r\n    const history = useHistory()\r\n    const [current, setCurrent] = React.useState(0)\r\n    const dispatch = useDispatch()\r\n    const slug = useParams()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const [auctiontype, setAuctionType] = useState(\"\")\r\n    const autionTypeChange = (event) => {\r\n        setAuctionType(event.target.value);\r\n\r\n    }\r\n    const [auctiondata, setAuctiondata] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [startdate, setStartdate] = useState(\"\")\r\n    const [enddate, setEnddate] = useState(\"\")\r\n    const location = useLocation();\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    console.log('nftdetail', nftdetail)\r\n\r\n    const mint = (contractAddress, type, start_date, end_date, price) => {\r\n\r\n        // auctiondata.map((item) => {\r\n        //     setPrice(item.price)\r\n        // })\r\n        CreateMetaDataAndMint({\r\n\r\n            _name: nftdetail.title,\r\n            _des: nftdetail.description,\r\n            _imgBuffer: nftdetail.image,\r\n            contractAddress,\r\n            setCurrent,\r\n            collid: nftdetail?.collection_id,\r\n            nft_file_content: nftdetail?.nft_file_content,\r\n            slug,\r\n            dispatch: dispatch,\r\n            setModalShow,\r\n\r\n            // auctiondata\r\n            type,\r\n            price,\r\n            start_date,\r\n            end_date,\r\n\r\n        })\r\n    }\r\n\r\n    const deployContract = async (type, start_date, end_date, price) => {\r\n        try {\r\n            if (nftdetail?.collectionData?.contract_id == null) {\r\n\r\n                await window.ethereum.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: web3.utils.toHex('80001') }],\r\n                })\r\n\r\n                // const { address } = await ConnectWallet()\r\n                const address = window?.ethereum?.selectedAddress\r\n                const MyNFTContract = new web3.eth.Contract(NFTContract.abi)\r\n                const gas = await web3.eth.getGasPrice();\r\n                // const gas = 500000\r\n\r\n                MyNFTContract.deploy({\r\n                    data: NFTContract.bytecode,\r\n                    arguments: [nftdetail?.collectionData?.title, nftdetail?.collectionData?.symbol],\r\n                }).send({\r\n                    from: address,\r\n                })\r\n                    .on('error', (error) => {\r\n                        // console.log(error)\r\n                    })\r\n                    .on('transactionHash', (transactionHash) => {\r\n                        // console.log(transactionHash, \"transactionHash\")\r\n                    })\r\n                    .on('receipt', (receipt) => {\r\n                        // receipt will contain deployed contract address\r\n                        // console.log(receipt, \"reciept\")\r\n                    })\r\n                    .on('confirmation', (confNumber, receipt) => {\r\n                        // console.log(receipt.contractAddress, \"confirmRecipet\")\r\n                        if (confNumber == 1) {\r\n                            mint(receipt?.contractAddress)\r\n                            // setContractAdd(receipt?.contractAddress)\r\n                            // UpdateContract(id)\r\n                        }\r\n\r\n                    })\r\n            } else {\r\n                mint(nftdetail?.collectionData?.contract_id, type, start_date, end_date, price)\r\n            }\r\n            return {\r\n                success: true,\r\n                // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n                status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n            }\r\n        } catch (error) {\r\n            // \r\n            alert(\"went wrong\")\r\n            return {\r\n                success: false,\r\n                status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    console.log('mint', props.ismint)\r\n    const OnSubmit = async (data) => {\r\n\r\n        setModalShow(true)\r\n        const formData = new FormData()\r\n        formData.append(\"nft_id\", props.nftid)\r\n        formData.append(\"type\", data.auctiontype)\r\n        formData.append(\"end_date\", data.end_date)\r\n        formData.append(\"start_date\", data.start_date)\r\n        formData.append(\"price\", data.price)\r\n        {\r\n            props.ismint == 1 ? (\r\n\r\n                dispatch(ResellNft(formData, props))\r\n            ) : (\r\n                await deployContract({ type: data.auctiontype, end_date: data.end_date, start_date: data.start_date, price: data.price })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate());\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div className='d-flex justify-content-between w-full'>\r\n                    <label className='modal-title h4 '>List for sale</label> <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover form-sell\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12 \">\r\n                            <div className=\"form-group\">\r\n                                <div className='mb-3'>Choose a type of sale</div>\r\n\r\n                                <div className=\"form-check form-check-inline mr-2\">\r\n                                    {/* {data.usertype == 2 ? ( */}\r\n                                    <>\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            name=\"radiobutton\"\r\n                                            id=\"1\"\r\n                                            onChange={autionTypeChange}\r\n                                            defaultChecked\r\n                                            value=\"1\"\r\n                                            {...register(\"auctiontype\", { required: true })}\r\n                                            aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\r\n\r\n                                        />\r\n                                        <label className=\"form-check-label mr-2\" htmlFor=\"buy\">Fixed Price</label>\r\n                                    </>\r\n\r\n\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"2\"\r\n                                        disabled\r\n                                        onChange={autionTypeChange}\r\n                                        value=\"2\"\r\n                                        {...register(\"auctiontype\", { required: true })}\r\n\r\n                                        aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\r\n\r\n                                    />\r\n                                        <label className=\"form-check-label\" htmlFor=\"auction\">English Auction</label></>\r\n                                    {/* )} */}\r\n                                </div>\r\n\r\n                                {errors.auctiontype?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Type is required</p>}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                <label>Set Price</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>} */}\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">price is required</p>}\r\n\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <>\r\n                            <label className='col-12 my-3'>Set Duration </label>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        // placeholder='dd-mm-yy'\r\n                                        // hidden={data.type == 1}\r\n                                        defaultValue={defaultValue}\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // value={defaultValue}\r\n                                        min={disablePastDate()}\r\n\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                    // aria-invalid={errors.start_date ? \"true\" : \"false\"} \r\n                                    />\r\n                                    {/* {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        min={disablePastDate()}\r\n                                        defaultValue={defaultValue1}\r\n                                        // value={defaultValue1}\r\n                                        {...register(\"end_date\")}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    <div >\r\n\r\n                                    </div>\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div>\r\n                            {auctiontype == 1 ? (\r\n\r\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days after which the listing may expire and be removed</span>\r\n                            ) : (\r\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days</span>\r\n                            )}\r\n                        </>\r\n                        <div className='w-full text-center'>\r\n                            {props.ismint == 1 ? (\r\n                                <button type=\"submit\" className=\" mb-0 btn btn-bordered-white\" style={{ color: '#FFF' }}\r\n                                >Sell</button>\r\n                            ) : (\r\n                                <>\r\n\r\n                                    <button type=\"submit\" className=\" mb-0 btn btn-bordered-white\" style={{ color: '#FFF' }}\r\n                                        id=\"nftdetail.id\">Mint</button><NftPopup\r\n                                        show={modalShow}\r\n                                        current={current}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </>\r\n\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default SellPopup","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNftName = (props) => {\r\n\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props?.nft_id?.id))\r\n    }, [props?.nft_id?.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\" >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal \r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className='col-12 item-form card no-hover'>\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                    <Fragment>\r\n\r\n                                                        <div className=\"row relative\">\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  name',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftName;","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNftDesc = (props) => {\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id?.id))\r\n    }, [props.nft_id?.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\" >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter \">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className='col-12'>\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                    <Fragment>\r\n\r\n                                                        <div className=\"row relative\">\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  description',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={'nft_description'}\r\n\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n\r\n                                                                            onChange={newContent => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftDesc;","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNftImage = (props) => {\r\n\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [size, setSize] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id?.id))\r\n    }, [props.nft_id?.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n        // debugger\r\n\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n                    // setLoading(false)\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n            // setLoading(false)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\">\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter h-auto\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"col-12\">\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                    <Fragment>\r\n\r\n                                                        <div className=\"row relative \">\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"col-lg-12 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                    <div\r\n                                                                        className=\"position-relative upload_nft\"\r\n                                                                        style={{\r\n                                                                            backgroundImage: \"url('')\",\r\n                                                                            backgroundSize: \"contain\",\r\n                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                            margin: \"0 auto\",\r\n                                                                        }}\r\n                                                                    >\r\n\r\n                                                                        <div\r\n                                                                            className={\r\n                                                                                nftFileType === \"Player\" || nftFileType === \"modal\"\r\n                                                                                    ? \" inputdragVedio\"\r\n                                                                                    : \"inputtdrag\"\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <input\r\n                                                                                type=\"file\"\r\n                                                                                onChange={handleUpload}\r\n                                                                                maxCount={1}\r\n                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                            />\r\n\r\n                                                                            {(nftFileType === \"Image\") &&\r\n\r\n                                                                                <div>\r\n\r\n                                                                                    {source ?\r\n                                                                                        nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ?\r\n                                                                                            (\r\n                                                                                                <img\r\n                                                                                                    src={source}\r\n                                                                                                    className=\"nft-image\"\r\n                                                                                                />\r\n                                                                                            ) : (\r\n                                                                                                <>\r\n                                                                                                    <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                        Minimum size should be 500x500\r\n                                                                                                    </p>\r\n                                                                                                    <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                        Image size should be max 1mb\r\n                                                                                                    </p>\r\n                                                                                                </>\r\n                                                                                            ) : (\r\n                                                                                            <img\r\n                                                                                                src={image}\r\n                                                                                                className=\"nft-image\"\r\n                                                                                            />\r\n                                                                                        )}\r\n\r\n                                                                                </div>\r\n\r\n                                                                            }\r\n\r\n\r\n                                                                            {nftFileType === \"Player\" &&\r\n                                                                                <div>\r\n\r\n                                                                                    {source ? (\r\n\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={source}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={image}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p>\r\n                                                                                            Because you’ve included\r\n                                                                                            multimedia, you’ll need to provide\r\n                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                            the card display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft}\r\n\r\n                                                                                                />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview}\r\n\r\n                                                                                                />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n\r\n\r\n\r\n                                                                            {nftFileType === \"modal\" &&\r\n                                                                                <div>\r\n                                                                                    {!source ? (\r\n                                                                                        <DModal\r\n                                                                                            vdo={image}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <DModal\r\n                                                                                            vdo={source}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p className=\"\">\r\n                                                                                            Because you’ve included multimedia,\r\n                                                                                            you’ll need to provide an image\r\n                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                            display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft} />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview} />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftImage;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport Web3 from 'web3';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport EditCollection from './updateCollection';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport { CreateMetaDataAndMint } from './../Wallet/interact';\r\nimport NftPopup from './nftPopup';\r\nimport axios from 'axios';\r\nimport { redirect } from 'next/dist/server/api-utils';\r\nimport LatprojNftDetails from '../Auctions/nftBuy';\r\nimport DModal from '../Create/3dModal';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport NftAuctiondataTable from './nftAuctiontable';\r\nimport SellPopup from './sellPopup';\r\nimport EditNftName from '../Create/editNftNamepopup';\r\nimport EditNftDesc from '../Create/editDescPopup';\r\nimport EditNftImage from '../Create/nftImageeditPopup';\r\nimport { GetMatic } from './GetMAtic';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\nconst NftDetails = (props) => {\r\n    const history = useHistory()\r\n    const [nftId, setNftID] = useState();\r\n    const search = useLocation().search;\r\n    const projslug = new URLSearchParams(search).get('project');\r\n    console.log(projslug, 'projslug')\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.getnftwoldetails\r\n    })\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [sellmodalShow, setSellModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [modalShoweditdes, setModalShoweditdes] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [modalShoweditimg, setModalShoweditimg] = React.useState(false);\r\n    // const [mintmodalShow, setMintModalShow] = React.useState(false);\r\n\r\n    const [current, setCurrent] = React.useState(0)\r\n    const [contractAdd, setContractAdd] = useState('')\r\n    // const [collid, setCollid] = useState('')\r\n    // console.log('collid', collid)\r\n    // console.log('contAddre', contractAdd)\r\n    // console.log('current', current)\r\n    const slug = useParams();\r\n    // console.log(id, 'idd')\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'projdataaaa')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n\r\n    // console.log('collupdate', collupdate)\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(NftList(slug.id))\r\n        dispatch(ProjectDetail(slug.id))\r\n        // dispatch(GetSettings())\r\n    }, [slug, dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n                            {nftdetail.is_mint == 0 &&\r\n\r\n                                <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n\r\n                                    <div >\r\n                                        <div className='position-absolute nft-edit-icon'><i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditimg(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        </div>\r\n                                        <div className='loader-img'>{modalShoweditimg &&\r\n\r\n                                            <EditNftImage\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditimg}\r\n                                                onHide={() => setModalShoweditimg(false)} />\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n                                {nftdetail.extention === \"Player\" &&\r\n\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={nftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={nftdetail.image}\r\n                                    // mdl={setModal}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"Image\" &&\r\n\r\n                                    <img src={nftdetail.image} alt=\"\" />\r\n                                }\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-sm-0\">\r\n                        <div className=' card no-hover py-0 mt-2 mb-2 mt-lg-0 mb-lg-0 '>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{nftdetail?.title} </span>\r\n                            {nftdetail.is_mint == 0 &&\r\n                                <div className='nft-edit-icon position-absolute mt-2'>\r\n                                    <i className=\"fa-solid fa-pen \" onClick={(e) => {\r\n                                        setNftID(slug)\r\n                                        e.preventDefault();\r\n                                        setModalShowedit(true)\r\n                                    }\r\n                                    } ></i>\r\n                                    {modalShowedit &&\r\n\r\n                                        <EditNftName\r\n                                            // debugger\r\n                                            id={projslug}\r\n                                            nft_id={nftId}\r\n                                            show={modalShowedit}\r\n                                            onHide={() => setModalShowedit(false)} />\r\n                                    }\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div className=\"content sm:mt-3 mt-lg-2\">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{nftdetail?.user_data?.username}</span>\r\n\r\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {nftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{nftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                {nftdetail.is_mint == 0 ? (\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            onClick={() => setSellModalShow(true)}>  Sell</button>\r\n                                            <SellPopup\r\n                                                show={sellmodalShow}\r\n\r\n                                                onHide={() => setSellModalShow(false)} />\r\n                                        </>\r\n\r\n                                    </div>\r\n                                ) : (\r\n                                    <>\r\n                                        {nftdetail.sold_nft == 1 ? (\r\n\r\n                                            <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                    disabled>SOLD OUT</span>\r\n\r\n                                                </>\r\n\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                    disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                                </>\r\n\r\n                                            </div>\r\n                                        )}\r\n                                    </>\r\n\r\n\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-12 md:col-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                                {nftdetail?.is_mint == 0 &&\r\n                                    <div className='nft-edit-icon position-absolute mt-2'>\r\n                                        <i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditdes(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        {modalShoweditdes &&\r\n\r\n                                            <EditNftDesc\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditdes}\r\n                                                onHide={() => setModalShoweditdes(false)} />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft \" />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4'>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <img src='../../img/image14.png' />\r\n                                    {/* <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg> */}\r\n                                    <span><small>{nftdetail.amount}  / ${nftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n                                    {/* <span>{latprojnftdetail.amount}</span>\r\n                                    <span><small>${nftdetail.amount}</small></span> */}\r\n                                </div>\r\n\r\n                                {/* <div className='sales'>\r\n                                    <span>\r\n                                        Creator royalties on secondary sales:\r\n                                    </span>\r\n                                    <span>5%</span>\r\n                                </div> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-8 col-12'>\r\n                        <div className=\"profile_detail mt-4\">\r\n\r\n                            <NftdataTable\r\n                                slug={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='container table-detail'>\r\n\r\n                            <NftAuctiondataTable\r\n                                slug={slug}\r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* <div className='col-12 description'>\r\n                    <h3 > Description</h3>\r\n                    <div className=\"card no-hover countdown-times my-4\">\r\n            \r\n                        <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft\" />\r\n                    </div>\r\n                     </div> */}\r\n                </div >\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default NftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport NftDetails from '../components/ItemDetails/nftDetails';\r\n\r\nconst Nft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <NftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nft;","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { Table } from 'react-bootstrap';\r\nconst FunddataTable = (props) => {\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [expandIconPosition] = useState('end');\r\n\r\n    // const { id } = useParams()\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\"/><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\"/></svg>    */}\r\n\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive>\r\n                        <tbody class=\"nfts_details\">\r\n                            <tr>\r\n                                <td><span>Organization Name </span> <span>{funddetail?.organization_detail?.organization_name}</span></td>\r\n                                <td><span>Country</span>  <span>{funddetail?.organization_detail?.country}</span></td>\r\n                                <td><span>Tax Number </span> <span>{funddetail?.organization_detail?.tax_number}</span></td>\r\n                                <td><span>Web URL</span>  <span>{funddetail?.organization_detail?.web_url}</span></td>\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default FunddataTable","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from './fundraiserdetail';\r\nimport FundTransdataTable from './fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\nimport { Button } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst FundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const id = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n    console.log('userdettt', userDetail)\r\n    const log = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(fundprojdetail.user_data, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    const investHandler = () => {\r\n\r\n        if (!window.ethereum?.selectedAddress) {\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html:\r\n                    'Connect Wallet to Invest',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <section className=\"item-details-area fundraise-main\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src=\"/img/ph.jpg\" /> */}\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done mt-3'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n                            {/* <img src={funddetail?.user_data?.avatar} width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" /> */}\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n\r\n                        <div className=\"progress_nft mobile_nft mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                            </div>\r\n\r\n\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length ?\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        }) :\r\n                                    <div className=\"col-12 col-sm-12 col-lg-12\">\r\n\r\n                                        <span className='allproj2'>\r\n                                            No Projects\r\n                                        </span>\r\n\r\n                                    </div>\r\n                                }\r\n                            </ul>\r\n                            <Link className=\"\" to=\"/all/LatestProjects\"><p className='see_all'>See all</p></Link>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className='custam_col mt-3 mt-lg-0'>\r\n                            <h5 class=\"user_title \">\r\n\r\n                                <div className='d-flex align-item-center gap-5'>\r\n                                    <svg className='' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg>\r\n\r\n                                    <div>Description</div>\r\n\r\n                                </div>\r\n                            </h5>\r\n\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='funddeatil mt-3 '>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-4 desktop_nft\">\r\n                        <div className=\"progress_nft  mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"100%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                                {/* <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" />\r\n                                            <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                        </div> */}\r\n\r\n                                {/* <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                    </div> */}\r\n\r\n                            </div>\r\n\r\n                            <div className=\"d-flex gap-5 flex-wrap justify-content-start\">\r\n\r\n                                <div>\r\n\r\n                                    <Button variant=\"primary\" onClick={() => investHandler()} className=\" btn  btn-bordered-white m-0 mr-2\">\r\n                                        Invest\r\n                                    </Button>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length &&\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        })}\r\n                            </ul>\r\n                            <Link className=\"\" to={`/all/fundraise/projects/${user_id}`}><p className='see_all'>See all</p></Link>\r\n                        </div>\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            {/* <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        \r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div> */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=''>\r\n                    {/* <div className='col-7'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div> */}\r\n                    <div className='col-12 mt-3 mb-3'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default FundraiserDetail;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport FundraiserDetail from '../components/TopSeller/fundraiserDetails';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\n\r\nconst FundDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main main-fund-detail\">\r\n\r\n            <Header />\r\n            <FundraiserDetail />\r\n            <Fundraiser />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default FundDetail;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport LatprojNftDetails from '../components/Auctions/nftBuy';\r\n\r\nconst latnftprojDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LatprojNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default latnftprojDetails;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\nexport default ScrollToTop","\r\n\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Upload } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddNftAction, CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport swal from 'sweetalert';\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport DModal from './3dModal';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst AddNft = ({ current, prev }) => {\r\n    const editor = useRef(null);\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    // console.log(data, 'formdta')\r\n    const [count, setCount] = useState(0);\r\n    // const [nft_description, setNft_description] = useState([])\r\n    // console.log('nft_description', nft_description)\r\n    const [nftFileType, setNFtFileType] = useState()\r\n    const [nft, setNft] = useState()\r\n    const [size, setSize] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    console.log(nftwidth, 'nftwidth')\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    console.log(nftHeight, 'nftheight')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"1\" });\r\n    const [NFtFileExtension, setNFtExtension] = useState()\r\n    const [source, setSource] = useState([])\r\n    const [preview, setPreview] = useState([])\r\n    const [nft_description, setNft_description] = useState([])\r\n    // console.log('colldata', coldata)\r\n    const [sourceType, setSourceType] = useState()\r\n    // console.log(nft_collection_id)\r\n    // const [coll_id,setCollId] = useState()\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    // console.log(\"collid\", coll_id)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const search = useLocation().search;\r\n    const projid = new URLSearchParams(search).get('projectid');\r\n    console.log(projid, 'projid')\r\n    const handleIncrement = () => {\r\n        setCount(prevCount => prevCount + 1);\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n    const slug = useParams()\r\n    // function descc(e) {\r\n    //     setNft_description(prev => [...prev, nft_description]);\r\n    // };\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    // this.setState(prev => ({\r\n    //     item: prev.item.map(item => item.name === 'xjz' ? { ...item, age: '10' } : item)\r\n    // }))\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n        defaultValues\r\n    });\r\n    useEffect(() => {\r\n        register(\"nft_description\");\r\n    }, [register]);\r\n\r\n    // const ipfsClient = create('http://127.0.0.1:5001')\r\n    // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n    // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n    // console.log(imaeg, 'imgg')\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n        setPreview(prevState => {\r\n            // debugger\r\n            prevState[index] = e?.target?.files[0]\r\n\r\n            return [...prevState]\r\n        })\r\n\r\n        // setPreview(pimage)\r\n    };\r\n    const handleUpload = (e, index) => {\r\n        const filetype = e.target.files[0].type\r\n        setNFtExtension(filetype)\r\n        // debugger\r\n        setNft(e.target.files[0])\r\n\r\n\r\n\r\n        var fr = new FileReader;\r\n\r\n        fr.onload = function () { // file is loaded\r\n            var img = new Image;\r\n\r\n            img.onload = function () {\r\n                setSize(e.target.files[0].size);\r\n                // alert(img.width); // image is loaded; sizes are available\r\n                setNftwidth(img.width)\r\n                setNftheight(img.height)\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n\r\n        let type = \"Image\"\r\n\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert('Filesize must 100mb or below');\r\n        } else {\r\n\r\n\r\n            switch (filetype) {\r\n                case 'image/png':\r\n                case 'image/jpg':\r\n                case 'image/gif':\r\n                case 'image/svg':\r\n                    type = \"Image\"\r\n                    break;\r\n                case 'audio/mpeg':\r\n                case 'audio/ogg':\r\n                case 'video/mp4':\r\n                case 'video/webm':\r\n                    type = 'Player'\r\n                    break;\r\n                case '':\r\n                    // if (nft?.name?.str.includes(\".glb\")) {\r\n                    type = 'modal'\r\n                    // }\r\n                    break;\r\n                default:\r\n                    type = 'Image'\r\n            }\r\n\r\n            // setNFtFileType(type)\r\n\r\n            setSource(prevState => {\r\n                // debugger\r\n                prevState[index] = { file: e.target.files[0], type: type }\r\n                setSourceType(type)\r\n\r\n                return [...prevState]\r\n            })\r\n\r\n\r\n            // switch (nft?.name?.str.includes(\".glb\")) {\r\n\r\n            //     case '':\r\n            //         setNFtFileType('modal')\r\n            //         break;\r\n            // }\r\n\r\n        }\r\n\r\n        // if (nftFileType === 'Image' && window.innerHeight > '500' && window.innerWidth > '500') {\r\n        //     alert(\"This is  matching\")\r\n        // }\r\n        // else {\r\n        //     setNftError('Minimum size should be 500x500')\r\n        //     alert('This is not matching')\r\n\r\n        // }\r\n    }\r\n\r\n    // console.log('col', col)\r\n\r\n\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n            const nftImagepromises = values?.nfts?.map(x => uploadNFT(nft))\r\n\r\n            const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n            // \r\n\r\n            const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n            // \r\n            var str = addedImage;\r\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n            const formData = new FormData()\r\n\r\n\r\n\r\n            if (check === false) {\r\n\r\n                formData.append('image', addedImage)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                // const newlist = newList.push(nft_collection_id);\r\n                formData.append('collection_id', coll_id)\r\n                // formData.append('nft_description', nft_description)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n                formData.append('preview_imag', Pimage)\r\n                formData.append('extention', sourceType)\r\n                // dispatch(uploadNFT())\r\n                dispatch(AddNftAction(formData, projid, slug, setLoading))\r\n                // setLoading(false)\r\n            } else {\r\n                // debugger\r\n                console.log('fail')\r\n                setLoading(false)\r\n                swal('error!', 'Nft not uploaded', 'error')\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error, 'error')\r\n        }\r\n        // console.log('Received values of form:', values, data)\r\n\r\n    };\r\n    // console.log('title', localStorage.getItem('title'))\r\n    const handleCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n        beforeUpload: () => {\r\n            return false;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    // const getFile = (e) => {\r\n    //     // \r\n    //     console.log('Upload event:', e);\r\n\r\n    //     if (Array.isArray(e)) {\r\n    //         return e;\r\n    //     }\r\n    //     return e && e.fileList;\r\n    // };\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n\r\n                                <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n\r\n\r\n                                <div>\r\n        \r\n                                    {loading ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                                            <Form\r\n                                                form={form}\r\n                                                name=\"dynamic_form_nest_item\"\r\n                                                initialValues={{\r\n                                                    nfts: nfts,\r\n                                                }}\r\n                                                // onSubmit={(event) => handleSubmit(event)}\r\n                                                onFinish={(event) => onFinish(event)}\r\n\r\n                                                autoComplete=\"off\"\r\n                                                className=\"item-form card no-hover\"\r\n                                            >\r\n                                                <Form.List name=\"nfts\">\r\n                                                    {(fields, { add, remove }) => (\r\n                                                        <>\r\n                                                            <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                                                <svg\r\n                                                                    width=\"16px\"\r\n                                                                    height=\"16px\"\r\n                                                                    viewBox=\"0 0 24 24\"\r\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                                >\r\n                                                                    <path\r\n                                                                        fill=\"none\"\r\n                                                                        stroke=\"#fff\"\r\n                                                                        stroke-width=\"2\"\r\n                                                                        d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\r\n                                                                        transform=\"matrix(-1 0 0 1 24 0)\"\r\n                                                                    />\r\n                                                                </svg>\r\n                                                                Previous\r\n                                                            </Button>\r\n\r\n                                                            <>\r\n                                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n\r\n\r\n                                                                    <Fragment>\r\n                                                                        {/* <div>Artwork {index}</div> */}\r\n                                                                        <div className=\"row relative\">\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label>Name</label>\r\n                                                                                <div>\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_name\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: \"Name is required\",\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <label>Name</label> */}\r\n                                                                                        <Input placeholder=\"Name\" />\r\n                                                                                    </Form.Item>\r\n                                                                                </div>\r\n                                                                                <label>Description</label>\r\n                                                                                <div>\r\n\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_description\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: \"Missing  description\",\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <Controller\r\n                                                                                control={control}\r\n                                                                                name=\"nft_description\"\r\n                                                                                defaultValue=\"\"\r\n                                                                                render={({ field: { value, onChange } }) => {\r\n                                                                                    return  */}\r\n                                                                                        <JoditEditor\r\n                                                                                            ref={editor}\r\n                                                                                            value={nft_description}\r\n                                                                                            // config={config}\r\n\r\n                                                                                            placeholder=\"start typing\"\r\n                                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                                            onBlur={(newContent) =>\r\n                                                                                                setNft_description(newContent)\r\n                                                                                            } // preferred to use only this option to update the content for performance reasons\r\n                                                                                            onChange={(newContent) => { }}\r\n                                                                                        />\r\n                                                                                        {/* }} */}\r\n                                                                                        {/* /> */}\r\n                                                                                    </Form.Item>\r\n                                                                                    {errors.nft_description?.type ===\r\n                                                                                        \"required\" && (\r\n                                                                                            <p style={{ color: \"red\" }} role=\"alert\">\r\n                                                                                                Description is required\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                    {errors.nft_description &&\r\n                                                                                        errors.nft_description.type ===\r\n                                                                                        \"minLength\" && (\r\n                                                                                            <p style={{ color: \"red\" }}>\r\n                                                                                                min length of words is 300\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n\r\n                                                                            <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                                <MinusCircleOutlined\r\n                                                                                    onClick={(e) => {\r\n                                                                                        remove(name);\r\n                                                                                        handleDecrement(e);\r\n                                                                                    }}\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                            {/* </div> */}\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label className=\"mt-2 mb-3\">\r\n                                                                                    Choose Collection\r\n                                                                                </label>\r\n                                                                            </div>\r\n\r\n\r\n                                                                            {col?.map((item, idx) => (\r\n                                                                                <div\r\n                                                                                    key={`auc_${idx}`}\r\n                                                                                    id={item.id}\r\n                                                                                    className=\"col-md-6 col-lg-3 col-12 choose_div\"\r\n                                                                                >\r\n                                                                                    <div\r\n                                                                                        id={item.id}\r\n                                                                                        onClick={() =>\r\n                                                                                            onHandleClick(index, item.id)\r\n                                                                                        }\r\n                                                                                        className=\"card\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                            border:\r\n                                                                                                nft_collection_id[index] == item.id\r\n                                                                                                    ? \"1px solid #fff\"\r\n                                                                                                    : null,\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <div className=\"card-body\">\r\n                                                                                            <div>{item.title}</div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    {/* </Form.Item> */}\r\n                                                                                </div>\r\n                                                                                // </div>\r\n                                                                            ))}\r\n                                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                                {/* <div className=\"col-24\"> */}\r\n\r\n                                                                                <div className=\"form-group\">\r\n                                                                                    <div\r\n                                                                                        className=\"card choose_div\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <div className=\"card-body \">\r\n                                                                                            <Button\r\n                                                                                                variant=\"primary\"\r\n                                                                                                className=\"collection_btn\"\r\n                                                                                                onClick={() => setModalShow(true)}\r\n                                                                                            >\r\n                                                                                                <i className=\"f1a-regular fa-plus\"></i>{\" \"}\r\n                                                                                                Create Collection\r\n                                                                                            </Button>\r\n\r\n                                                                                            <MyVerticallyCenteredModal\r\n                                                                                                show={modalShow}\r\n                                                                                                onHide={() => setModalShow(false)}\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                                    <div\r\n                                                                                        className=\"position-relative upload_nft\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage: \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a image',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        > */}\r\n                                                                                        {/* <div className='uploadnftpopup-input Icon_cam' > */}\r\n                                                                                        <div\r\n                                                                                            className={\r\n                                                                                                source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\r\n                                                                                                    ? \" inputdragVedio\"\r\n                                                                                                    : \"inputtdrag\"\r\n                                                                                            }\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                // onChange={handleUpload}\r\n                                                                                                maxCount={1}\r\n                                                                                                onChange={e => handleUpload(e, index)}\r\n                                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                                            />\r\n\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\r\n                                                                                                <div>\r\n                                                                                                    {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\r\n                                                                                                    {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? (\r\n\r\n\r\n                                                                                                        <img\r\n                                                                                                            src={URL.createObjectURL(source[index].file)}\r\n                                                                                                            className=\"nft-image\"\r\n                                                                                                        />\r\n                                                                                                    ) : (\r\n                                                                                                        <>\r\n                                                                                                            <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                                Minimum size should be 500x500\r\n                                                                                                            </p>\r\n                                                                                                            <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                                Image size should be max 1mb\r\n                                                                                                            </p>\r\n                                                                                                        </>\r\n\r\n\r\n\r\n                                                                                                    )}\r\n                                                                                                    {/* : (\r\n                                                                                        <p style={{ color: \"red\" }}>\r\n                                                                                            Minimum size should be 500x500\r\n                                                                                        </p>\r\n                                                                                    )\r\n                                                                                    s\r\n                                                                                    } */}\r\n                                                                                                </div>\r\n                                                                                            }\r\n\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\r\n                                                                                                <div>\r\n                                                                                                    {/* { source?.length && source?.[index] && source[index]?.type === \"Player\" && ( */}\r\n                                                                                                    <video\r\n                                                                                                        // className=\"VideoInput_video\"\r\n                                                                                                        width=\"100%\"\r\n                                                                                                        // height={height}\r\n                                                                                                        controls\r\n                                                                                                        src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                                    // onChange={setSource}\r\n                                                                                                    />\r\n                                                                                                    {/* )} */}\r\n                                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                                        <label>Preview Image</label>\r\n                                                                                                        <p>\r\n                                                                                                            Because you’ve included\r\n                                                                                                            multimedia, you’ll need to provide\r\n                                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                                            the card display of your item\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                    <div\r\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                                        style={{\r\n                                                                                                            backgroundImage:\r\n                                                                                                                \"url('')\",\r\n                                                                                                            backgroundSize: \"contain\",\r\n                                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                                            backgroundPosition: \"center\",\r\n                                                                                                        }}\r\n                                                                                                    >\r\n                                                                                                        <input\r\n                                                                                                            type=\"file\"\r\n                                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                                        // onChange={previewChange}\r\n                                                                                                        />\r\n                                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                                    <img\r\n                                                                                                                        className=\"preview_image\"\r\n                                                                                                                        src={URL.createObjectURL(preview[index])}\r\n\r\n\r\n                                                                                                                    // onChange={setPimage}\r\n                                                                                                                    />\r\n                                                                                                                )}\r\n                                                                                                            </div>\r\n                                                                                                        }\r\n                                                                                                    </div>\r\n\r\n                                                                                                </div>\r\n                                                                                            }\r\n\r\n                                                                                            {/* )} */}\r\n                                                                                            {/* <div className=\"VideoInput_footer\">{vdo || \"Nothing selectd\"}</div> */}\r\n\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\r\n                                                                                                <div>\r\n                                                                                                    <DModal\r\n                                                                                                        vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                                    // mdl={setModal}\r\n                                                                                                    />\r\n\r\n                                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                                        <label>Preview Image</label>\r\n                                                                                                        <p className=\"\">\r\n                                                                                                            Because you’ve included multimedia,\r\n                                                                                                            you’ll need to provide an image\r\n                                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                                            display of your item\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                    <div\r\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                                        style={{\r\n                                                                                                            backgroundImage:\r\n                                                                                                                \"url('')\",\r\n                                                                                                            backgroundSize: \"contain\",\r\n                                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                                            backgroundPosition: \"center\",\r\n                                                                                                        }}\r\n                                                                                                    >\r\n                                                                                                        <input\r\n                                                                                                            type=\"file\"\r\n                                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                                        />\r\n                                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                                    <img\r\n                                                                                                                        className=\"preview_image\"\r\n                                                                                                                        src={URL.createObjectURL(preview[index])} />\r\n                                                                                                                )}\r\n                                                                                                            </div>\r\n                                                                                                        }\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                        {/* </Form.Item> */}\r\n                                                                                        {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a MP4 File',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        >\r\n    \r\n                                                                            <VideoInput width={400} height={300} />\r\n    \r\n    \r\n                                                                        </Form.Item> */}\r\n\r\n                                                                                        {/* <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>MP4 & MP3 </label>\r\n                                                                                <VideoInput width={400} height={300} />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>3D Modal </label>\r\n                                                                                <Dinosaur />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                               \r\n    \r\n                                                                            </div>\r\n                                                                        </div> */}\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n\r\n                                                                ))}\r\n\r\n\r\n                                                            </>\r\n                                                        </>\r\n                                                    )}\r\n                                                </Form.List>\r\n                                                <Form.Item>\r\n                                                    <div className=\"col-12\">\r\n                                                        <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\r\n                                                            Add\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </Form.Item>\r\n                                            </Form>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\nexport default AddNft;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\n\r\nimport AddNft from '../components/Create/addNft';\r\n\r\nconst AddNFT = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AddNft />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddNFT;","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ReadMore from '../../readMore';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport FundDetail from '../../themes/fund-detail';\r\nimport latprojDetails from '../../themes/latproj-details';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllFundraise = () => {\r\n\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    <h3 className=\"mt-3 mb-0\">All Fundraiser's</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {/* {fund && fund.length ?\r\n                                [...new Map(fund.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\r\n                            {fund?.map((item, idx) => {\r\n\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} to={`/fundraiser/detail/${item.user_id}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <div className=\"card project_cards position-relative \">\r\n                                                {/* matic */}\r\n                                                {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span className='matics'>{item.amount} MATIC</span>\r\n                                                  \r\n                                                </div> */}\r\n                                                <div className=\"image-over position-relative \">\r\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                    <img className=\"card-img-top\" src={item?.organization_detail?.banner_image} />\r\n                                                </div>\r\n                                                <div className='token'>\r\n                                                    <span></span>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\r\n                                                        <a>\r\n                                                            <h5 className=\"mb-0 mt-3\">{item?.organization_detail?.organization_name} </h5>\r\n                                                        </a>\r\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                    <span>Owned By</span>\r\n                                                                    <a href=\"/author\">\r\n                                                                        <h6 className=\"ml-2 mb-0\">You</h6>\r\n                                                                    </a>\r\n                                                                </div> */}\r\n                                                        <div className=''>\r\n                                                            <p dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 50) }} />\r\n                                                            {/* <p> It is a long established fact that a reader</p> */}\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className='mb-2 d-flex align-items-center justify-content-between'>\r\n                                                            <div className='mt-2 mb-2 d-flex text-align-center fundraiser_sale'>\r\n                                                                <div>\r\n                                                                    <span>Created</span>\r\n                                                                    <div>148</div>\r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    <span>Sale</span>\r\n                                                                    <div>100</div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                                            </svg></span>\r\n                                                        </div>\r\n\r\n                                                        {/* <div className='donate-btn'>\r\n                                                                <button className='btn ml-lg-auto btn-bordered-white'>Donate Now</button>\r\n                                                            </div> */}\r\n                                                        \r\n\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                            {/* }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    <h2 className='allproj2'>\r\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                    </h2>\r\n                                </div>\r\n                            } */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllFundraise; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport GetAllFundraise from '../components/Explore/fundraiserProjects';\r\n\r\nconst AllFundraiser = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllFundraise />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllFundraiser;","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { GetfundraiserProject, ProjectList } from '../../redux/Actions/projectAction';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllFundraiseProjects = (props) => {\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n    const { user_id } = useParams()\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    console.log(fundprojdetail, 'fundprojdetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetfundraiserProject(user_id))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    <h3 className=\"mt-3 mb-0\">Fundraiser Projects</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {/* {fund && fund.length ?\r\n                                [...new Map(fund.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\r\n                            {fundprojdetail?.map((item, idx) => {\r\n\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} to={`/projdetails/${item.id}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <div className=\"card project_cards\">\r\n                                                <div className=\"image-over relative \">\r\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                    <img className=\"card-img-top\" src={item?.nft_data[0]?.image} alt={item.nft_data.description} />\r\n                                                </div>\r\n                                                <div className='token'>\r\n                                                    <span></span>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <a>\r\n                                                            <h5 className=\"mb-0\">{item.title.slice(0, 20)}</h5>\r\n                                                        </a>\r\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                            <span>Owned By</span>\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\"></h6>\r\n                                                            </a>\r\n                                                        </div> */}\r\n                                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                            <span>{item.price} MATIC</span>\r\n                                                            <span>{item.nft_data.length} NFTS </span>\r\n                                                            <span> + {item.number_of_nft} NFTS </span>\r\n                                                        </div>\r\n\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                            {/* }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    <h2 className='allproj2'>\r\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                    </h2>\r\n                                </div>\r\n                            } */}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllFundraiseProjects; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport GetAllFundraiseProjects from '../components/Explore/fundProj';\r\n\r\nconst AllFundraiserProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllFundraiseProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllFundraiserProjects;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { Button } from 'bootstrap';\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from '../TopSeller/fundraiserdetail';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst MyFundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    // console.log(fundprojdetail, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div class=\"row py-0\">\r\n                    <div className='col-12 p-0'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-between px-0\">\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div className='custam_col'>\r\n                            <h5 class=\"user_title\"><div>Description</div></h5>\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n                                    <div className=\"card no-hover detail_single_nfts\">\r\n\r\n                                        <li className='nft_price'>\r\n                                            ${funddetail?.total_fundraised} raised from all projects\r\n\r\n                                        </li>\r\n\r\n\r\n                                        {/* <li className=\"price d-flex justify-content-between\">\r\n                                                <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"> 71% </span>\r\n    \r\n                                            </li> */}\r\n\r\n                                    </div>\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        {/* <li className='card-inner-heading'>\r\n                                            <span style={{}}>Projects</span>\r\n                                        </li> */}\r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    // console.log('todat', date2)\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    // const totaldays = days_difference.slice(0,1)\r\n                                                    // console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                    {/* {(item.created_at).diff(new Date, 'day', true)} */}\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-12'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default MyFundraiserDetail;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport MyFundraiserDetail from '../components/Explore/my_fundraise';\r\n\r\nconst FundraiserProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <MyFundraiserDetail />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FundraiserProjects;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst Rewards = () => {\r\n\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>How Creator and Referral MATIC Rewards Work</h3>\r\n                        <span className='termsandconditions'><li>Affiliates get 30% on first level NFT referred sales at Karmatica.io only.</li>\r\n                            <li>Creators get 10% of secondary NFT sales for the lifetime of the project.</li>\r\n                            <br />\r\n                            <h5>NFT sale to BUYER 1 </h5>\r\n                            69% goes to Creator <br />\r\n                            30% goes to Affiliate<br />\r\n                            1% to Karmatica<br />\r\n                            <br />\r\n                            <h5>NFT resold from BUYER 1 to BUYER 2 via Affiliate</h5>\r\n                            84% goes to BUYER 1<br />\r\n                            10% goes to NFT Creator<br />\r\n                            5% goes to Affiliate <br />\r\n                            1% to Karmatica<br />\r\n                        </span>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default Rewards","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport Rewards from '../components/Footer/reward';\r\n\r\nconst NftReward = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <Rewards />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NftReward;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AllNoti, GetUserAction, NotiDelete } from '../../redux/Actions/authAction'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\nimport moment from \"moment\";\r\nconst AllNotifications = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const nooti = useSelector(state => {\r\n\r\n        return state?.user?.noti\r\n    })\r\n    useEffect(() => {\r\n        dispatch(AllNoti())\r\n        dispatch(GetUserAction())\r\n    }, [])\r\n    const deleteHandler = (id) => {\r\n        dispatch(NotiDelete(id))\r\n    }\r\n    console.log(nooti, 'noti')\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-7\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <ul className='termsandconditions' >\r\n                            {nooti.map((item) => {\r\n                                return (\r\n                                    <><li>{item.title}</li>\r\n                                        <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\r\n                                            <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n\r\n                        {/* <h3>{footer?.footer?.title}</h3> */}\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AllNotifications","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport AllNotifications from './../components/Header/Allnotifications';\r\n\r\nconst Notifi = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AllNotifications />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Notifi;","import React, { Component, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { GetUserAction } from \"../../redux/Actions/authAction\";\r\nimport {\r\n    CategoriesAction,\r\n    getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\n\r\n\r\nconst ExploreBuyedNfts = () => {\r\n    const { type } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <h3 className=\"mt-3 mb-0\">\r\n                                My NFTs\r\n                                {/* {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")} */}\r\n                            </h3>\r\n                            <p>\r\n                                Invest in NFTs that are based on real-life projects or events\r\n                                related to important causes\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {userdet?.purchase_nft && userdet?.purchase_nft?.length ? (\r\n                        [\r\n                            ...new Map(\r\n                                userdet?.purchase_nft?.map((item) => [item[\"title\"], item])\r\n                            ).values(),\r\n                        ].map((item, idx) => {\r\n                            return (\r\n                                <Link\r\n                                    key={`edth_${idx}`}\r\n                                    className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                                >\r\n                                    <div>\r\n                                        <Link to={`/my/nfts-detail/${item.slug}`}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"image-over\">\r\n                                                    <Link to={`/my/nfts-detail/${item.slug}`}>\r\n                                                        <img\r\n                                                            className=\"card-img-top\"\r\n                                                            src={item.image}\r\n                                                            alt=\"\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                    {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                                                </div>\r\n\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                                                        <a >\r\n                                                            <h5 className=\"mb-0\">\r\n                                                                {item.title.slice(0, 15)}\r\n                                                            </h5>\r\n                                                        </a>\r\n                                                        <div\r\n                                                            className=\"seller d-flex align-items-center my-3\"\r\n\r\n                                                        >\r\n                                                            <span>Owned By</span>\r\n                                                            {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\">\r\n                                                                    {/* {item.user_data.username.slice(0, 12)} */}\r\n                                                                    You\r\n                                                                </h6>\r\n                                                            </a>\r\n\r\n                                                            {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                                        </div>\r\n                                                        <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                                                            <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                            {/* {item?.number_of_nft == 1 ? (\r\n                                                                <span>{item.number_of_nft} NFT</span>\r\n                                                            ) : (\r\n                                                                <span>{item.number_of_nft} NFTs</span>\r\n                                                            )} */}\r\n                                                        </div>\r\n                                                        <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                                                            <Link to={`/my/nfts-detail/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                                                <i className=\"icon-handbag\" />\r\n                                                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                                                            </Link>\r\n                                                            <Link to={`/my/nfts-detail/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                            <h2 className=\"allproj2\">No latest project found</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default ExploreBuyedNfts;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreBuyedNfts from '../components/Explore/BuyedNfts';\r\n\r\nconst BuyedNft = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ExploreBuyedNfts />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default BuyedNft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetbuyedNftDetails, NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftBuydataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const slug = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails?.getBuyedNftdetails\r\n\r\n    })\r\n    useEffect(() => {\r\n        dispatch(GetbuyedNftDetails(props.slug))\r\n        // dispatch(ProjectDetail(slug))\r\n    }, [props.slug])\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n                        <thead>\r\n                            {/* {latprojnftdetail?.map((items) => { \r\n                         return (  */}\r\n\r\n                            <><tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr><tr className='contract-address'>\r\n                                    <th >Contract</th>\r\n                                    <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${nftdetail?.collectionData?.contract_id}`} >{nftdetail.collectionData?.contract_id?.slice(0, 5)}.....{nftdetail.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                </tr><tr>\r\n                                    <th>Token ID</th>\r\n                                    <td>{nftdetail.token_id}</td>\r\n                                </tr><tr>\r\n                                    <th>Token Stranded</th>\r\n                                    <td>ERC721</td>\r\n                                </tr></>\r\n\r\n                            {/* )})} */}\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* {projdetail.nft_data?.map((items) => { */}\r\n                            {/* // return ( */}\r\n                            <tr>\r\n\r\n                                <td>\r\n                                    {/* {items.collectionData?.contract_id} */}\r\n                                </td>\r\n                                <td>\r\n                                    {/* {items.token_id} */}\r\n                                </td>\r\n                                {/* <td>ERC721</td> */}\r\n                                {/* <td>Polygon (Matic)</td> */}\r\n                            </tr>\r\n                            {/* // ) */}\r\n                            {/* })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n                {/* <div className='nothing'>\r\n                No matching records found\r\n                        </div> */}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftBuydataTable","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetbuyedNftDetails, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport Web3 from 'web3';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport EditCollection from '../ItemDetails/updateCollection';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport { CreateMetaDataAndMint } from './../Wallet/interact';\r\nimport NftPopup from '../ItemDetails/nftPopup';\r\nimport axios from 'axios';\r\nimport { redirect } from 'next/dist/server/api-utils';\r\nimport LatprojNftDetails from '../Auctions/nftBuy';\r\nimport DModal from '../Create/3dModal';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport NftAuctiondataTable from '../ItemDetails/nftAuctiontable';\r\nimport SellPopup from '../ItemDetails/sellPopup';\r\nimport EditNftName from '../Create/editNftNamepopup';\r\nimport EditNftDesc from '../Create/editDescPopup';\r\nimport EditNftImage from '../Create/nftImageeditPopup';\r\nimport NftBuydataTable from './NftBuyData';\r\nimport { GetMatic } from '../ItemDetails/GetMAtic';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\n\r\nconst BuyedNftDetails = (props) => {\r\n    const history = useHistory()\r\n    const [nftId, setNftID] = useState();\r\n    // const search = useLocation().search;\r\n    // const projslug = new URLSearchParams(search).get('project');\r\n    // console.log(projslug, 'projslug')\r\n    // const latprojnftdetail = useSelector(state => {\r\n    //     // \r\n    //     return state.projectdetails.getnftwoldetails\r\n    // })\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [sellmodalShow, setSellModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [modalShoweditdes, setModalShoweditdes] = React.useState(false);\r\n    const [modalShoweditimg, setModalShoweditimg] = React.useState(false);\r\n    // const [mintmodalShow, setMintModalShow] = React.useState(false);\r\n\r\n    const [current, setCurrent] = React.useState(0)\r\n    const [contractAdd, setContractAdd] = useState('')\r\n\r\n    const slug = useParams();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getBuyedNftdetails\r\n\r\n    })\r\n    // console.log(\"nftmint\", nftdetail.is_mint)\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetbuyedNftDetails(slug))\r\n        // dispatch(GetSettings())\r\n    }, [slug])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n                            {/* {nftdetail.is_mint == 0 &&\r\n\r\n                                <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n\r\n                                    <div >\r\n                                        <div className='position-absolute nft-edit-icon'><i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditimg(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        </div>\r\n                                        <div className='loader-img'>{modalShoweditimg &&\r\n\r\n                                            <EditNftImage\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditimg}\r\n                                                onHide={() => setModalShoweditimg(false)} />\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            } */}\r\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n                                {nftdetail.extention === \"Player\" &&\r\n\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={nftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={nftdetail.image}\r\n                                    // mdl={setModal}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"Image\" &&\r\n\r\n                                    <img src={nftdetail.image} alt=\"\" />\r\n                                }\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-sm-0\">\r\n                        <div className=' card no-hover py-0 mt-2 mb-2 mt-lg-0 mb-lg-0 '>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{nftdetail?.title} </span>\r\n                            {/* {nftdetail.is_mint == 0 &&\r\n                                <div className='nft-edit-icon position-absolute mt-2'>\r\n                                    <i className=\"fa-solid fa-pen \" onClick={(e) => {\r\n                                        setNftID(slug)\r\n                                        e.preventDefault();\r\n                                        setModalShowedit(true)\r\n                                    }\r\n                                    } ></i>\r\n                                    {modalShowedit &&\r\n\r\n                                        <EditNftName\r\n                                            // debugger\r\n                                            id={projslug}\r\n                                            nft_id={nftId}\r\n                                            show={modalShowedit}\r\n                                            onHide={() => setModalShowedit(false)} />\r\n                                    }\r\n                                </div>\r\n                            } */}\r\n\r\n                        </div>\r\n                        <div className=\"content sm:mt-3 mt-lg-2\">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    {/* <span>{nftdetail?.user_data?.username}</span> */}\r\n                                    <span>You</span>\r\n\r\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {nftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{nftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                {nftdetail.nft_type === \"1\" ? (\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                            disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                        </>\r\n\r\n                                    </div>\r\n\r\n\r\n                                ) : (\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            onClick={() => setSellModalShow(true)}>  Sell</button>\r\n                                            <SellPopup\r\n\r\n                                                show={sellmodalShow}\r\n                                                slug={slug}\r\n\r\n                                                onHide={() => setSellModalShow(false)}\r\n                                                nftid={nftdetail.id}\r\n                                                ismint={nftdetail.is_mint}\r\n                                            />\r\n\r\n                                        </>\r\n\r\n                                    </div>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-12 md:col-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            {/* <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                                {nftdetail?.is_mint == 0 &&\r\n                                    <div className='nft-edit-icon position-absolute mt-2'>\r\n                                        <i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditdes(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        {modalShoweditdes &&\r\n\r\n                                            <EditNftDesc\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditdes}\r\n                                                onHide={() => setModalShoweditdes(false)} />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div> */}\r\n                            <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft \" />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4'>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    {/* <img src='../../img/image14.png' /> */}\r\n                                    {/* <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg> */}\r\n                                    {/* <span>{latprojnftdetail.amount}</span> */}\r\n                                    <img src='../../img/image14.png' />\r\n                                    <span><small>{nftdetail.amount} / ${nftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn</small> </span>\r\n                                    {/* <span><small>${nftdetail.amount}</small></span> */}\r\n                                </div>\r\n\r\n                                <div className='sales'>\r\n                                    <span>\r\n                                        Creator royalties on secondary sales:\r\n                                    </span>\r\n                                    <span>5%</span>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-8 col-12'>\r\n                        <div className=\"profile_detail mt-4\">\r\n\r\n                            <NftBuydataTable\r\n                                slug={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className='col-12 mt-4'>\r\n                        <div className='container table-detail'>\r\n\r\n                            <NftAuctiondataTable\r\n                                slug={slug}\r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* <div className='col-12 description'>\r\n                    <h3 > Description</h3>\r\n                    <div className=\"card no-hover countdown-times my-4\">\r\n            \r\n                        <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft\" />\r\n                    </div>\r\n                     </div> */}\r\n                </div >\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default BuyedNftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport BuyedNftDetails from '../components/Explore/NftBuyedDetails';\r\nconst BuyNftDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main main-fund-detail\">\r\n\r\n            <Header />\r\n            <BuyedNftDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default BuyNftDetail;","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnnualRevenueList, CountryList, CreateOrganizationAfterRoleChange, HearAboutList, Register } from '../../redux/Actions/authAction'\r\nimport { Controller, useForm } from 'react-hook-form'\r\n\r\nimport { useHistory } from 'react-router'\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\r\nimport { useState } from 'react'\r\nimport JoditEditor from 'jodit-react';;\r\n\r\n// import { Widget } from \"@uploadcare/react-widget\";\r\n// import FileUpload from \"react-material-file-upload\";\r\n// import { uploadcare } from '../lib/uploadcare.min.js';\r\nconst RoleChangeOrganizationdetails = () => {\r\n\r\n    const [description, setDescription] = useState()\r\n\r\n    const editor = useRef(null);\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n\r\n    const OnSubmit = (values) => {\r\n        // debugger\r\n        // FormData.append('email', data.email)\r\n        // FormData.append('password', data.password)\r\n        // FormData.append('confirm_password', data.confirm_password)\r\n        const formData = new FormData()\r\n        formData.append('banner_image', values.banner_image[0])\r\n        formData.append('logo', values.logo[0])\r\n        formData.append('wallet_id', values.wallet_id)\r\n        // formData.append('role', data.role)\r\n        formData.append('goal', values.goal)\r\n        formData.append('organization_name', values.organization_name)\r\n        formData.append('url', values.url)\r\n        formData.append('country', values.country)\r\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\r\n        formData.append('tax_id', values.tax_id)\r\n\r\n        formData.append('social', values.social)\r\n        formData.append('social_link', values.social_link)\r\n        formData.append('description', description)\r\n        // formData.append('method_heard_detail', values.method_heard_detail)\r\n\r\n        dispatch(CreateOrganizationAfterRoleChange(formData))\r\n        // if (formData) {\r\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\r\n        //     history.push('/login')\r\n        // }\r\n    }\r\n\r\n    const socialmedia = useSelector(state => {\r\n        return state?.getSocialmediaIcons?.getsocial\r\n    })\r\n    // console.log('social', socialmedia)\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n        dispatch(AnnualRevenueList())\r\n        dispatch(HearAboutList())\r\n        dispatch(GetSocialMediaIcons())\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        {/* <div className={formStep === 1 ? styles.showForm : styles.hideForm}> */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            {/* <button\r\n                                    // className={styles.back}\r\n                                    onClick={prevFormStep}\r\n                                    type=\"button\"\r\n                                >\r\n                                    back\r\n                                </button> */}\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Fundraising Goal</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"goal\"\r\n                                            step=\"0.01\"\r\n                                            placeholder=\"Fundraising goal (MATIC)\"\r\n                                            {...register(\"goal\",\r\n                                                {\r\n                                                    required: true,\r\n\r\n                                                })}\r\n                                            aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                        {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Funding Wallet </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"wallet_id\"\r\n                                            // defaultValue='1'\r\n                                            placeholder=\"Funding Wallet\"\r\n                                            {...register(\"wallet_id\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"organization_name\"\r\n                                            placeholder=\"Organization name\"\r\n                                            {...register(\"organization_name\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.organization_name ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Website</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"url\"\r\n                                            placeholder=\"Website\"\r\n                                            {...register(\"url\", {\r\n                                                required: true,\r\n                                                pattern: {\r\n                                                    value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                                }\r\n                                            })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.url ? \"true\" : \"false\"}\r\n                                        />\r\n\r\n                                        {errors.url && errors.url?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                                        {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Describe your project\"\r\n\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form- group mt-3\">\r\n                                        <label>Description</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n\r\n                                            // {...register(\"description\", { required: true })}\r\n                                            rules={{ required: true, min: 150 }}\r\n                                            // rules={{\r\n                                            //     required: true, pattern: {\r\n\r\n                                            //         message: \"Description is required\",\r\n                                            //     },\r\n                                            // }}\r\n                                            render={({ field }) => {\r\n                                                return <JoditEditor\r\n                                                    ref={field.ref}\r\n                                                    value={field.value}\r\n                                                    // config={config}\r\n                                                    aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                                    placeholder=\"start typing\"\r\n                                                    tabIndex={1} // tabIndex of textarea\r\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                    onChange={field.onChange}\r\n                                                />\r\n                                            }}\r\n                                        />\r\n                                        {errors?.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Country</label>\r\n\r\n                                        <select name=\"country\"\r\n                                            {...register(\"country\", { required: true })}>\r\n                                            aria-invalid={errors.country ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                            {countries.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"annual_revenue_range\"\r\n                                                {...register(\"annual_revenue_range\", { required: true })}>\r\n                                                {annualRevenue?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key.id} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>EIN Number/Tax Id</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"tax_id\"\r\n                                            placeholder=\"EIN Number/Tax Id(optional)\"\r\n                                            {...register(\"tax_id\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Social Media (required)</label>\r\n                                        <select name=\"social\"\r\n                                            {...register(\"social\", { required: true })}>\r\n                                            aria-invalid={errors.social ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\r\n                                            {socialmedia?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.title}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Social Media (secondary)</label>\r\n                                        <div className=\"input-group-prepend\">\r\n\r\n                                            <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"social_link\"\r\n                                                placeholder=\"social link(optional) \"\r\n                                                {...register(\"social_link\")}\r\n                                            // {...register(\"email\")}\r\n                                            // aria-invalid={errors.social_link ? \"true\" : \"false\"}\r\n                                            />\r\n                                        </div>\r\n                                        {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"project\"\r\n                                                {...register(\"hear_about\", { required: true })}>\r\n                                                {hereAbout?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Banner</label>\r\n                                        <input\r\n                                            className=\"form-control p-2\"\r\n                                            type=\"file\"\r\n\r\n                                            name=\"banner_image\"\r\n                                            placeholder=\"Select file\"\r\n                                            disp\r\n                                            {...register(\"banner_image\", { required: true })}\r\n                                            aria-invalid={errors.banner_image ? \"true\" : \"false\"}\r\n                                        />\r\n                                        <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\r\n\r\n                                        {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Logo</label>\r\n                                        <input\r\n                                            className=\"form-control p-2\"\r\n                                            type=\"file\"\r\n                                            name=\"logo\"\r\n                                            placeholder=\"Select file\"\r\n                                            {...register(\"logo\", { required: true })}\r\n                                            aria-invalid={errors.logo ? \"true\" : \"false\"}\r\n                                        />\r\n                                        <div className='logo_one'>\r\n\r\n                                            <span className='logo-dis'>maximum height should be 250 pixels</span>\r\n                                        </div>\r\n                                        {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\r\n                                </div>\r\n                                {/* <div className=\"col-3\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => goBack()}>Previous</button>\r\n                                    </div> */}\r\n                            </div>\r\n                        </form>\r\n                        {/* </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default RoleChangeOrganizationdetails","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport RoleChangeOrganizationdetails from '../components/Signup/roleChangeOrginazationdetails';\r\n\r\nexport const createOrganizationafterRoleChange = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <RoleChangeOrganizationdetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Nftprice, Nftdeatil } from './nftprice'\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { updateReffid } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport ReadMore from '../../readMore';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport UserdataTable from '../AuthorProfile/userTransTable';\r\nimport NftTransdataTable from './nftTRansTable';\r\nimport LatNftDataTable from '../Explore/latnftTable';\r\nimport BidPopup from './bidPopup';\r\nimport DModal from '../Create/3dModal';\r\nimport Timer from './timer';\r\nimport BuyPopup from './buyPopup';\r\nimport { GetMatic } from './../ItemDetails/GetMAtic';\r\nimport { ResellActionDetails } from '../../redux/Actions/resellNftAction';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst ResellNftDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [ownwallet, setOwnWallet] = useState('')\r\n    const [matic, setMatic] = useState('')\r\n    const [ownFee, setOwnFee] = useState('')\r\n    const [bidmodalShow, setBidModalShow] = React.useState(false);\r\n    const [buymodalShow, setBuyModalShow] = React.useState(false);\r\n    const [referalid, setReferalid] = useState(\"\")\r\n\r\n    const [platformFee, setPlatformFee] = useState('')\r\n    console.log('own', ownwallet)\r\n    const slug = useParams();\r\n    // console.log(id, 'idd')\r\n    const resellnftdetail = useSelector(state => {\r\n        // \r\n        return state.resell?.reselldetails\r\n    })\r\n    console.log(resellnftdetail, 'latext')\r\n    // console.log(\"latround\", Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad)))\r\n    // console.log('paymentflow', [latprojnftdetail.payment_flow?.project_data.wallets])\r\n\r\n\r\n    const getSett = useSelector(state => {\r\n        // \r\n        return state.projectdetails.settings\r\n    })\r\n    console.log('getSett', getSett)\r\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\r\n    console.log('sett', setValue)\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetUserAction())\r\n        dispatch(ResellActionDetails(slug))\r\n        dispatch(GetSettings())\r\n\r\n\r\n    }, [slug])\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    // const reffHandler = () => {\r\n    //     (updateReffid({ tokenId: latprojnftdetail.token_id, refid, nft_id: latprojnftdetail.id }))\r\n    // }\r\n    const buyHandler = () => {\r\n\r\n        // setOwnWallet([latprojnftdetail.payment_flow?.project_data.wallets])\r\n        // setOwnFee([latprojnftdetail.payment_flow?.project_data.fees])\r\n        // setPlatformFee([latprojnftdetail.payment_flow?.karmatica_fee])\r\n\r\n\r\n        BuyNft({\r\n\r\n            contractAddress: resellnftdetail?.collectionData?.contract_id,\r\n            tokenId: resellnftdetail.token_id,\r\n            payFrom: resellnftdetail.pay_from,\r\n            values: setValue.value,\r\n            sellingCount: resellnftdetail.selling_count,\r\n            platformFee: ([resellnftdetail.payment_flow?.karmatica_fee]),\r\n\r\n            ownerFee: ([resellnftdetail.payment_flow?.project_data?.fees]),\r\n            ownerWallet: ([resellnftdetail.payment_flow?.project_data?.wallets]),\r\n            flow: ([resellnftdetail.payment_flow]),\r\n\r\n            proj_id: resellnftdetail.project_id,\r\n            nft_id: resellnftdetail.id,\r\n            loadingg: setLoading,\r\n            modal: setBuyModalShow,\r\n        })\r\n    }\r\n    // const bidHandler = () =>{\r\n    // if(window.ethereum?.selectedAddress){\r\n    //     debugger\r\n\r\n    //     dispatch(BidPopup())\r\n    // }else{\r\n    //     ConnectWallet()\r\n    // }\r\n    // }\r\n    // const yestTime = \"9:24:49 PM\"\r\n    // const timeNow = new Date()?.toLocaleTimeString() - yestTime()\r\n    // console.log(\"time now\", timeNow)\r\n    // const yesterday = new Date(new Date().getTime() - (24 * 60 * 60 * 1000));\r\n    // console.log('yestwe', yesterday)\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                        <span Class=\"title_main \" style={{ color: '#fff' }}>{resellnftdetail.title}  </span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n\r\n                                {/* {latprojdetail?.nft_data?.map((item, idx) => { */}\r\n                                {/*  */}\r\n                                {/* return ( */}\r\n                                {resellnftdetail.extention === \"PLayer\" &&\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={resellnftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n\r\n                                {resellnftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={resellnftdetail.image}\r\n\r\n                                    />\r\n                                }\r\n                                {resellnftdetail.extention === 'Image' &&\r\n\r\n                                    <img src={resellnftdetail.image} alt=\"\" />\r\n                                }\r\n                                {/* ) */}\r\n                                {/* })} */}\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\r\n                        {/* <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{resellnftdetail.title}  </span>\r\n\r\n\r\n                        </div> */}\r\n                        <div className=\"content \">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{resellnftdetail.owned_by}</span>\r\n\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {resellnftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled mb-0\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{resellnftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Affiliate first sale royalties : </span>\r\n                                    <span> 30%</span>\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>NFT creator royalties : </span>\r\n                                    <span> 10%</span>\r\n\r\n                                </div>\r\n\r\n\r\n                                <div className='eddlbtton d-flex gap- align-items-center mt-2 justify-content-between'>\r\n\r\n                                    {/* <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <li><span class='boldertext'>Affiliate first sale royalties: 20%</span></li>\r\n                                       <li><span class='boldertext'>NFT creator royalties: 10% </span></li> \r\n                                        <li><span class='boldertext'>Affiliate secondary royalties: 5% </span></li>\r\n\r\n                                        \r\n                                    </ul>\r\n                                </div> */}\r\n                                    <div className='eddlbtton flex-wrap d-flex gap-10  align-items-center mt-2'>\r\n                                        {/* {resellnftdetail.type == 1 ? ( */}\r\n                                        {resellnftdetail.sold_nft == 1 ? (\r\n                                            <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" disabled>SOLD OUT</button>\r\n                                        ) : (\r\n\r\n                                            <>\r\n                                                {resellnftdetail.user_id === userdet.user_id ? (\r\n                                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                            disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                                        </>\r\n\r\n                                                    </div>\r\n                                                ) : (\r\n\r\n                                                    <><button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                        id=\"nftdetail.id\" onClick={() => { buyHandler(); setBuyModalShow(true); setLoading(true); }}>Buy Now</button><BuyPopup\r\n                                                            show={buymodalShow}\r\n                                                            loading={loading}\r\n\r\n\r\n                                                            onHide={() => setBuyModalShow(false)} /></>\r\n\r\n                                                )}\r\n\r\n                                            </>\r\n                                        )}\r\n                                        {/* ) : ( */}\r\n\r\n                                        {/* <><button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                onClick={() => setBidModalShow(true)}>Place Bid</button><BidPopup\r\n\r\n                                                    id={resellnftdetail.id}\r\n                                                    projid={resellnftdetail.project_id}\r\n                                                    projtitle={resellnftdetail.title}\r\n                                                    projcoll={resellnftdetail?.collectionData?.title}\r\n                                                    show={bidmodalShow}\r\n                                                    onHide={() => setBidModalShow(false)} /></>\r\n                                        )} */}\r\n\r\n                                    </div>\r\n                                    {/* <Timer\r\n                                        time={resellnftdetail.end_date}\r\n                                    /> */}\r\n                                    <div className='eddlbtton bitbtn d-flex  align-items-center mt-2'>\r\n\r\n                                        <div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <p dangerouslySetInnerHTML={{ __html: resellnftdetail.description }} />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: resellnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4 '>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <img src='../../../../img/image14.png' />\r\n                                    {/* <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg> */}\r\n                                    <span><small>{resellnftdetail.amount}  / ${resellnftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n                                    {/* <span><small>$120</small></span> */}\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=''>\r\n                            <div className=\"profile_detail mt-4\">\r\n\r\n                                <LatNftDataTable\r\n                                // id={id}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <NftTransdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"col-12\">\r\n                        <div className=\"card no-hover countdown-times my-4 \">\r\n                            <span dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                        </div>\r\n\r\n                    </div> */}\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\nexport default ResellNftDetails;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ResellNftDetails from '../components/Auctions/resellNftBuy';\r\n\r\nconst ResellDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ResellNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ResellDetail;","import React, { Component, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n    CategoriesAction,\r\n    getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\nimport { ResellAction } from \"../../redux/Actions/resellNftAction\";\r\n\r\n\r\n\r\nconst ExploreAllResell = () => {\r\n    const slug = useParams();\r\n    const dispatch = useDispatch();\r\n    const nfts = useSelector((state) => {\r\n        return state?.resell?.resell;\r\n    });\r\n    console.log(nfts, \"resellnfts\");\r\n    useEffect(() => {\r\n        dispatch(ResellAction())\r\n\r\n    }, [dispatch]);\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <h3 className=\"mt-3 mb-0\">\r\n                                All Reselled NFTs\r\n                            </h3>\r\n                            <p>\r\n                                Invest in NFTs that are based on real-life projects or events\r\n                                related to important causes\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {nfts && nfts.length ? (\r\n                        [\r\n                            ...new Map(\r\n                                nfts?.map((item) => [item[\"title\"], item])\r\n                            ).values(),\r\n                        ].map((item, idx) => {\r\n                            return (\r\n                                <Link\r\n                                    key={`edth_${idx}`}\r\n                                    className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                                >\r\n                                    <div>\r\n                                        <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"image-over\">\r\n                                                    <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                                        <img\r\n                                                            className=\"card-img-top\"\r\n                                                            src={item.image}\r\n                                                            alt=\"\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                    {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                                                </div>\r\n\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                                                        <a >\r\n                                                            <h5 className=\"mb-0\">\r\n                                                                {item.title.slice(0, 15)}\r\n                                                            </h5>\r\n                                                        </a>\r\n                                                        <div\r\n                                                            className=\"seller d-flex align-items-center my-3\"\r\n\r\n                                                        >\r\n                                                            <span>Owned By</span>\r\n                                                            {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\">\r\n                                                                    {item.user_data.username.slice(0, 12)}\r\n                                                                </h6>\r\n                                                            </a>\r\n\r\n                                                            {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                                        </div>\r\n                                                        <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                                                            <span><img className=\"mr-1\" src='../../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                            {/* {item?.number_of_nft == 1 ? ( */}\r\n                                                            <span>1 NFT</span>\r\n                                                            {/* ) : ( */}\r\n                                                            {/* <span>{item.number_of_nft} NFTs</span> */}\r\n                                                            {/* )} */}\r\n                                                        </div>\r\n                                                        <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                                                            <Link to={`/nft/resell/details/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                                                <i className=\"icon-handbag\" />\r\n                                                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                                                            </Link>\r\n                                                            <Link to={`/nft/resell/details/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                            <h2 className=\"allproj2\">No NFTs found</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default ExploreAllResell;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreAllResell from '../components/Explore/viewallResell';\r\n\r\nconst AllResellNft = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ExploreAllResell />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AllResellNft;","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RefralTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n    }, [props.id])\r\n    const location = useLocation()\r\n    return (\r\n        <footer className=\"footer-area\">\r\n            {/* Footer Top */}\r\n            <div className=\"footer-top\">\r\n                <div className=\"container\">\r\n                    <div className='position-relative'>\r\n                        <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                            <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n                            <Panel header=\"Referral Activity\" key=\"1\">\r\n                                <Table responsive >\r\n                                    <thead>\r\n\r\n\r\n                                        <tr>\r\n\r\n                                            <th>Item</th>\r\n                                            <th>Token</th>\r\n                                            <th>NFT Price</th>\r\n                                            <th>Referral Amount</th>\r\n                                            <th>Collection</th>\r\n                                            <th>From</th>\r\n                                            <th>To</th>\r\n\r\n                                            <th>Transaction</th>\r\n                                        </tr>\r\n\r\n\r\n                                    </thead>\r\n\r\n\r\n                                    <tbody>\r\n                                        {userdet?.referral_history?.map((items) => {\r\n                                            return (\r\n\r\n                                                <><tr className='contract-address'>\r\n\r\n                                                    <td ><Link to={`/nftprojdetails/${items.slug}`} >{items.title?.slice(0, 20)}</Link>...</td>\r\n                                                    <td>#{items.token_id}</td>\r\n                                                    <td>{items.price}</td>\r\n                                                    {/* <td>{items.referral_amount} </td> */}\r\n                                                    <td className='referal'>{items.referral_amount} <img src='../../img/image14.png' /></td>\r\n                                                    <td><Link to={`/popularcollection/details/${items.collection_slug}`}>{items.collection_name}</Link></td>\r\n                                                    <td>{items.pay_from?.slice(0, 4)}...{items.pay_from?.slice(35, 44)}</td>\r\n                                                    <td>{items.pay_to?.slice(0, 4)}...{items.pay_to?.slice(35, 44)}</td>\r\n                                                    <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/tx/${items?.transaction_hash}`} >{items.transaction_hash?.slice(0, 4)}...{items.transaction_hash?.slice(35, 44)}</a></td>\r\n                                                </tr>\r\n                                                </>\r\n\r\n                                            )\r\n                                        })}\r\n\r\n                                    </tbody>\r\n\r\n\r\n\r\n\r\n                                </Table>\r\n                                <div className='nothing'>\r\n                                    {userdet?.referral_history?.length == 0 &&\r\n                                        <span> No matching records found</span>\r\n                                    }\r\n                                </div>\r\n                            </Panel>\r\n\r\n                        </Collapse>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default RefralTransdataTable","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport RefralTransdataTable from '../components/Explore/viewReferals';\r\n\r\nconst AllReraltrans = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <RefralTransdataTable />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AllReraltrans;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\n// importing all the themes\r\nimport ThemeOne from \"../themes/theme-one\";\r\nimport ExploreOne from \"../themes/explore-one\";\r\nimport ExploreTwo from \"../themes/project-list\";\r\nimport ExploreFour from \"../themes/latestProjects\";\r\nimport Auctions from \"../themes/auctions\";\r\nimport ItemDetails from \"../themes/item-details\";\r\nimport Activity from \"../themes/activity\";\r\nimport HelpCenter from \"../themes/help-center\";\r\nimport Authors from \"../themes/authors\";\r\nimport Author from \"../themes/author\";\r\nimport WalletConnect from \"../themes/wallet-connect\";\r\nimport Create from \"../themes/create\";\r\nimport Login from \"../themes/login\";\r\nimport Signup from \"../themes/signup\";\r\nimport Contact from \"../themes/contact\";\r\nimport Forgot from \"../themes/forgotpassword\";\r\nimport PrivateRoute from \"./privateRoutes\";\r\nimport ProjectUpdate from \"../themes/update\";\r\nimport TermsCond from \"../themes/term&cond\";\r\nimport All from \"../themes/viewalllatest\";\r\nimport ColExplore from \"../themes/exploreCollections\";\r\nimport Aboutus from \"../themes/Aboutus\";\r\nimport latprojDetails from \"../themes/latproj-details\";\r\nimport Showcollections from \"../themes/showcollections\";\r\nimport CollectionDetail from \"../themes/collectn-details\";\r\nimport ProjNft from \"../themes/projnft-details\";\r\nimport Nft from './../themes/nft-list';\r\nimport FundDetail from \"../themes/fund-detail\";\r\nimport latnftprojDetails from \"../themes/Latnft\";\r\nimport ScrollToTop from \"../ScrollToTop\";\r\nimport EditNft from \"../components/Create/editNft\";\r\nimport AddNFT from \"../themes/addnftTheme\";\r\nimport AllFundraiser from \"../themes/allFundproj\";\r\nimport AllFundraiserProjects from \"../themes/fund-projects\";\r\nimport FundraiserProjects from \"../themes/fundraise\";\r\nimport NftReward from \"../themes/rwrd\";\r\nimport Notifi from \"../themes/allnot\";\r\nimport BuyedNft from \"../themes/buyed-nft\";\r\nimport BuyNftDetail from \"../themes/buyNft-details\";\r\nimport { createOrganizationafterRoleChange } from \"../themes/rolechange-organization\";\r\nimport ResellDetail from \"../themes/resell-details\";\r\nimport AllResellNft from \"../themes/allresellNfts\";\r\nimport AllReraltrans from \"../themes/all-refrals\";\r\n\r\n\r\nconst MyRouts = () => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <ScrollToTop />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ThemeOne} />\r\n          <Route exact path=\"/explore-1\" component={ExploreOne} />\r\n          <Route exact path=\"/projectlist\" component={ExploreTwo} />\r\n          <Route exact path=\"/create/organization\" component={createOrganizationafterRoleChange} />\r\n          <Route exact path=\"/allnotifications\" component={Notifi} />\r\n          <Route exact path=\"/updateproject/:id\" component={ProjectUpdate} />\r\n          {/* <Route exact path=\"/projectlist\" component={ExploreThree} /> */}\r\n          <Route exact path=\"/explore-4\" component={ExploreFour} />\r\n          <Route exact path=\"/nft/resell/details/:slug\" component={ResellDetail} />\r\n          <Route exact path=\"/my/nfts\" component={BuyedNft} />\r\n          <Route exact path=\"/my/nfts-detail/:slug\" component={BuyNftDetail} />\r\n          <Route exact path=\"/rewards\" component={NftReward} />\r\n          <Route exact path=\"/auctions\" component={Auctions} />\r\n          <Route exact path=\"/popularcollection/details/:slug\" component={ItemDetails} />\r\n          <Route exact path=\"/projects/:slug\" component={latprojDetails} />\r\n          <Route exact path=\"/referals-detail\" component={AllReraltrans} />\r\n          <Route exact path=\"/nftprojdetails/:slug\" component={latnftprojDetails} />\r\n          <Route exact path=\"/fundraiser/detail/:user_id\" component={FundDetail} />\r\n          <Route exact path=\"/myfundraiser/detail/:user_id\" component={FundraiserProjects} />\r\n          <Route exact path=\"/projnftdetails/:slug\" component={ProjNft} />\r\n          <Route exact path=\"/allfundraise\" component={AllFundraiser} />\r\n          <Route exact path=\"/all/fundraise/projects/:user_id\" component={AllFundraiserProjects} />\r\n          <Route exact path=\"/nft/details/:id\" component={Nft} />\r\n          <Route exact path=\"/nftedit/:id/:id\" component={EditNft} />\r\n          <Route exact path=\"/addnft/:id\" component={AddNFT} />\r\n          <Route exact path=\"/activity\" component={Activity} />\r\n          <Route exact path=\"/help-center\" component={HelpCenter} />\r\n          <Route exact path=\"/authors\" component={Authors} />\r\n          <Route exact path=\"/profile\" component={Author} />\r\n          <Route exact path=\"/terms&conditions\" component={TermsCond} />\r\n          <Route exact path=\"/all/:type\" component={All} />\r\n          <Route exact path=\"/all/resll/nfts\" component={AllResellNft} />\r\n          <Route exact path=\"/aboutus\" component={Aboutus} />\r\n          <Route exact path=\"/allcollections\" component={ColExplore} />\r\n          <Route exact path=\"/wallet-connect\" component={WalletConnect} />\r\n          <Route exact path=\"/my-collections\" component={Showcollections} />\r\n          <Route exact path=\"/collection/:id\" component={CollectionDetail} />\r\n          {/* <Route exact path=\"/newest-projects\" component={NewestProj} /> */}\r\n\r\n          <Route exact path=\"/create\" component={Create} />\r\n\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          {/* <PrivateRoute exact path=\"/create-organization\" component={createOrganization} /> */}\r\n          <PrivateRoute exact path=\"/forgotpassword\" component={Forgot} />\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyRouts\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\n// importing MyRouts where we located all of our theme\r\nimport MyRouts from './routers/routes'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MyRouts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport { authReducer } from '../redux/Slices/authSlice'\r\nimport { combineReducers } from '@reduxjs/toolkit'\r\nimport { projectReducer } from './Slices/projectSlice'\r\nimport { footerReducer } from './Slices/footerSlice'\r\nimport { fundraiserReducer } from './Slices/fundraiserSlice'\r\nimport { collectionReducer } from './Slices/popularCollectionSlice'\r\nimport { contactReducer } from './Slices/contactSlice';\r\nimport { resellReducer } from './Slices/resellNftSlice'\r\n\r\nconst reducer = combineReducers({\r\n    user: authReducer,\r\n    countries: authReducer,\r\n    annualRevenue: authReducer,\r\n    hereAbout: authReducer,\r\n    login: authReducer,\r\n    forgotpassword: authReducer,\r\n    errmessage: authReducer,\r\n    createproject: projectReducer,\r\n    // getproject: projectReducer,\r\n    projectdetails: projectReducer,\r\n    latestprojects: projectReducer,\r\n    fundraiser: fundraiserReducer,\r\n    footer: footerReducer,\r\n    collection: collectionReducer,\r\n    getcollections: collectionReducer,\r\n    getcollectiondetails: collectionReducer,\r\n    getSocialmediaIcons: projectReducer,\r\n    contact: contactReducer,\r\n    resell: resellReducer\r\n    // userDetail: authReducer,\r\n\r\n    // Nftlist: projectReducer\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer,\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css'\r\nimport App from './App';\r\nimport store from '../src/redux/store';\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__DKvey\",\"formCard\":\"styles_formCard__Vehpw\",\"formRow\":\"styles_formRow__13Stn\",\"back\":\"styles_back__3AVbA\",\"input-error\":\"styles_input-error__3FssS\",\"error\":\"styles_error__1A4Gx\",\"disabledBtn\":\"styles_disabledBtn__qMaBa\",\"steps\":\"styles_steps__2TgQb\",\"errorText\":\"styles_errorText__9D9Jp\",\"hideForm\":\"styles_hideForm__19FPq\",\"showForm\":\"styles_showForm__2S4hD\"};"],"sourceRoot":""}