{"version":3,"sources":["redux/Slices/authSlice.js","components/Wallet/interact.js","redux/Actions/authAction.js","components/Header/Header.js","redux/Slices/projectSlice.js","redux/Actions/projectAction.js","components/Hero/Hero.js","components/Auctions/AuctionsOne.js","redux/Slices/fundraiserSlice.js","redux/Actions/fundraiserAction.js","components/TopSeller/topfundraiser.js","redux/Slices/popularCollectionSlice.js","redux/Actions/popularAction.js","components/Collections/Collections.js","components/Explore/ExploreOne.js","components/Work/Work.js","redux/Slices/footerSlice.js","redux/Actions/footerAction.js","components/Footer/Footer.js","components/Modal/ModalSearch.js","components/Modal/ModalMenu.js","components/Scrollup/Scrollup.js","themes/theme-one.js","components/Breadcrumb/Breadcrumb.js","components/Explore/ExploreTwo.js","themes/explore-one.js","components/Loader/loader.js","components/Explore/ProjectList.js","themes/project-list.js","components/Explore/ExploreFive.js","components/Explore/LatestProjects.js","themes/latestProjects.js","themes/auctions.js","readMore.js","components/TopSeller/fundPaymenttable.js","components/AuthorProfile/userDetails.js","components/Create/projectDetailpopup.js","components/AuthorProfile/userTransTable.js","components/Explore/projDetailtable.js","components/Explore/latProjNftdata.js","components/Auctions/projectnfts.js","components/Collections/collectionNfts.js","components/Explore/popularDetails.js","themes/item-details.js","components/Activity/Activity.js","themes/activity.js","components/Blog/Blog.js","themes/blog.js","components/Sidebar/Sidebar.js","components/BlogSingle/BlogSingle.js","themes/blog-single.js","components/HelpCenter/HelpCenter.js","components/Faq/Faq.js","themes/help-center.js","components/Authors/Authors.js","components/TopSeller/TopSellerTwo.js","themes/authors.js","shared/Upload.js","utils/blobfromurl.js","components/Create/editBanner.js","components/AuthorProfile/avatarUpload.js","components/AuthorProfile/bannerUpload.js","components/AuthorProfile/AuthorProfile.js","components/Explore/ExploreSix.js","components/Author/Author.js","themes/author.js","components/Wallet/Wallet.js","themes/wallet-connect.js","components/Create/Context/context.js","components/Create/Create.js","routers/utils.js","components/Create/createCollection.js","components/Create/3dModal.js","components/Create/uploadNft.js","components/Create/index.js","themes/create.js","components/Login/Login.js","themes/login.js","components/Signup/FormCard.js","components/Signup/Context/context.js","components/Signup/Signup.js","components/Signup/createOrganization.js","components/Signup/index.js","themes/signup.js","redux/Slices/contactSlice.js","components/Contact/Contact.js","redux/Actions/contactAction.js","themes/contact.js","components/ForgotPassword/forgotPassword.js","themes/forgotpassword.js","routers/privateRoutes.js","components/Create/geoLocation.js","Edit/editProject.js","themes/update.js","components/Footer/t&c.js","themes/term&cond.js","components/Explore/viewAllLatest.js","themes/viewalllatest.js","components/Collections/exploreCollection.js","themes/exploreCollections.js","components/Footer/about.js","themes/Aboutus.js","components/ItemDetails/refralPopup.js","components/Create/editNft.js","components/Explore/nftdataTable.js","components/ItemDetails/GetMAtic.js","components/ItemDetails/viewProdetails.js","themes/latproj-details.js","components/Create/showCollections.js","themes/showcollections.js","components/Create/bread-crumb.js","components/Create/collectionDetail.js","themes/collectn-details.js","components/Create/desPopup.js","components/Create/projdetails.js","themes/projnft-details.js","components/ItemDetails/nftPopup.js","components/Auctions/nftTRansTable.js","components/Explore/latnftTable.js","components/Auctions/bidPopup.js","components/Auctions/timer.js","components/Auctions/buyPopup.js","components/Auctions/nftBuy.js","components/ItemDetails/nftAuctiontable.js","components/ItemDetails/sellPopup.js","components/Create/editNftNamepopup.js","components/Create/editDescPopup.js","components/Create/nftImageeditPopup.js","components/ItemDetails/nftDetails.js","themes/nft-list.js","components/TopSeller/fundraiserdetail.js","components/TopSeller/fundraiserDetails.js","themes/fund-detail.js","themes/Latnft.js","ScrollToTop.js","components/Create/addNft.js","themes/addnftTheme.js","components/Explore/my_fundraise.js","components/Explore/fundProj.js","components/Explore/fundraiserProjects.js","themes/allFundproj.js","themes/fund-projects.js","themes/fundraise.js","components/Footer/reward.js","themes/rwrd.js","components/Header/Allnotifications.js","themes/allnot.js","routers/routes.js","App.js","redux/store.js","index.js","components/Signup/styles/styles.module.scss","components/Create/styles/styles.module.scss"],"names":["userToken","localStorage","getItem","authSlice","createSlice","name","initialState","user","userdetail","role","logout","message","countries","states","city","noti","annualRevenue","hereAbout","updpro","wallesign","organization","reducers","registerSuccess","state","action","payload","data","auth_token","setItem","registerFail","response","allnotification","updateprofile","userDetail","loginSuccess","logoutSuccess","removeItem","forgotpasswordSuccess","createOrganizationSuccess","wallsignin","getCountryList","getStateList","getCityList","getAnnualRevenueList","getHearAboutList","authReducer","reducer","actions","createAlchemyWeb3","require","contractABI","isMetaMaskInstalled","Boolean","window","ethereum","web3","Roles","creatorWalletUpdate","formData","FormData","append","selectedAddress","config","headers","axios","post","process","UpdateWalletAddress","ConnectWallet","chainId","networkVersion","request","method","params","utils","toHex","code","chainName","nativeCurrency","decimals","symbol","rpcUrls","swal","addressArray","obj","status","address","res","target","href","getCurrentWalletConnected","length","UpdateStatus","slug","token_id","transaction_hash","pay_from","pay_to","type","token","price","start_date","end_date","Authorization","UpdateContract","collid","contractAddress","CreateMetaDataAndMint","_imgBuffer","_des","_name","setCurrent","nft_file_content","eth","Contract","abi","contract","sendTransaction","to","from","methods","mint","encodeABI","on","hash","receipt","confNumber","tokid","hexToNumber","logs","topics","id","transactionHash","error","success","alert","UpdateBuyHistory","nft_id","proj_id","refid","txd_id","payFrom","tokenId","values","BuyNft","platformFee","sellingCount","ownerFee","flow","ownerWallet","loadingg","wallets","fee","buyer_data","map","x","karmatica_fees","project_data","fees","console","log","nftContract","getTransactionCount","memory_clients","wal","memory_amounts","amt","amountToSend","toWei","transferowner","buyNft","then","location","UpdateBid","amount","project_id","BidNft","projid","value","err","Register","createAsyncThunk","thunkAPI","transformRequest","dispatch","GetUserAction","get","CountryList","StateList","CityList","UpdateProfileAction","NotiDelete","delete","Header","useLocation","useDispatch","useState","setAddress","add1","slice","toUpperCase","add2","userRole","useSelector","history","useHistory","getSelectedAddress","useEffect","accounts","userdet","notiHandler","WalletHandler","is_new_user","push","title","text","icon","buttons","continue","skip","className","src","alt","exact","activeClassName","onClick","Swal","fire","html","showCloseButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","handleCreate","pathname","notification_count","notification","item","moment","created_at","format","style","color","class","left","email","user_id","projectSlice","project","projects","nftlist","projectdetails","latestprojectdetails","categories","collections","getcollections","getcollectiondetails","collectiondetails","getSocialmediaIcons","getfundProjDetails","getnftwoldetails","settings","nftadd","nftres","nftupdate","updbanner","matic","liveProjects","LatestProjects","RecentCampaigns","createProjectSuccess","createCollectionSuccess","getCollections","getsocial","getCollectionDetails","getNftwolDetails","nftUpd","nftAdd","getfundprojdetails","getProjectList","getMatic","getCategoriesList","getSettings","getLatestProjectList","createFail","getProjectDetail","getCollectionDetail","Nftres","getNftList","getLatestProjectDetail","updatebanner","publicLiveProjects","deleteProject","filter","projectReducer","CreateProjectAction","setLoading","timer","ProjectDetail","LatestProjectDetail","ProjectList","NftList","uploadNFT","catch","getPublicLiveProjects","projectType","UpdateProject","props","DeleteProject","CategoriesAction","GetCollectionsAction","GetNftwol","GetfundraiserProject","UpdateNft","AddNftAction","projectTypesMap","Hero","options","enableHighAccuracy","timeout","maximumAge","pos","crd","coords","latitude","longitude","errors","warn","cursor","navigator","geolocation","permissions","query","result","getCurrentPosition","onchange","idx","user_data","avatar","username","Math","round","number_of_nft","xmlns","viewBox","version","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fill","fillRule","points","dur","repeatCount","attributeName","AuctionsOne","match","join","image","fundraiserSlice","fundraiser","fundraiserdetail","getTopFundraiser","getTopFundraiserDetail","fundraiserReducer","TopFundraiserAction","TopFundraiserDetail","Fundraiser","fund","organization_detail","banner_image","organization_name","collectionSlice","collection","collectiondetail","getPopularCollection","getPopularCollectiondetails","collectionReducer","PopularCollectionAction","PopularCollectionActionDetails","Collections","coll","width","height","nft_data","logo","initData","pre_heading","heading","btn_1","btn_2","img","owner","count","btnText","Component","preHeading","workData","Work","footerSlice","footer","aboutus","getfooter","getabout","footerReducer","getFooter","AboutUsAction","Footer","ModalSearch","placeholder","ModalMenu","Scrollup","Home","Breadcrumb","this","subpage","page","ExploreTwo","exploreData","setState","ExploreOne","Loader","Spinner","animation","margin","display","GetAllProjects","loading","Map","is_nft_mintted","dangerMode","willDelete","description","content","LatestProject","Auctions","ReadMore","isReadMore","setIsReadMore","dangerouslySetInnerHTML","__html","FundTransdataTable","Panel","Collapse","useParams","expandIconPosition","funddetail","country","defaultActiveKey","onChange","key","opacity","d","cx","cy","r","header","Table","responsive","payment_history","items","UserTransdataTable","ProjDetailPopup","useRef","useForm","register","handleSubmit","formState","setValue","control","watch","setDescription","setType","setCountry","setCity","handleChangeCountry","event","preventDefault","currentTarget","handleChangeState","handleChangeCity","cities","projdetail","cat","Object","keys","category_id","Modal","size","centered","onHide","Body","onSubmit","required","render","field","onBlur","ref","disabled","selected","option","defaultValue","min","max","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","disablePastDate","UserdataTable","React","wallet_id","referrers","referral_amount","total_fundraised","ProjdataTable","modalShowproj","setModalShowproj","latprojdetail","date1","updated_at","time_difference","getTime","days_difference","ceil","show","dayjs","country_name","state_name","city_name","category","LatNftdataTable","project_activity","nft_title","ProjNFTS","marginLeft","CollectionNFTS","collNft","CollectionDetails","Web3","providers","HttpProvider","ItemDetails","Activity","tabData_1","tabData_2","tabData_3","filterData","tabTitle_1","tabTitle_2","tabTitle_3","time","seller","widgetTitle","Blog","blogData","author","date","Sidebar","widgetData_1","widgetData_2","widgetData_3","widgetTitle_1","widgetTitle_2","widgetTitle_3","BlogSingle","content_1","quote","content_2","content_3","rel","dateTime","commentTitle","commentContent","rows","commentBtn","HelpCenter","btnClass","contentId","contentClass","Faq","Authors","authorData","TopSeller","sellerData","UploadImage","initalImag","setImageSrc","imageSrc","initialImage","borderRadius","language","objectFit","compressInitial","hideDownloadBtn","imageSrcProp","imageChanged","newDataUri","dataURLtoBlob","dataurl","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","Banner","Title","Upload","Button","UpdateBanner","AvatarUpload","BannerUpload","AuthorProfile","modalSho","setModalSho","modalShowavatar","setModalShowavatar","focusable","filter_1","filter_2","filter_3","filter_4","filter_5","group","likes","Author","Wallet","handleConnect","walletData","WalletConnect","FormContext","createContext","FormProvider","children","setData","Provider","setFormValues","prevValues","useFormData","useContext","Create","current","next","prev","setPrice","setImage","usertype","setUserType","nonft","mode","imageUri","setDate","toISOString","substr","defaultValue1","styles","showForm","hideForm","imageBanner","defaultChecked","e","htmlFor","pattern","rules","minLength","tabIndex","newContent","maxLength","step","entries","TOKEN_KEY","MyVerticallyCenteredModal","dat","short_url","CreateCollectionAction","DModal","vdo","refContainer","renderer","setRenderer","source","file","container","scW","clientWidth","scH","clientHeight","THREE","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","outputEncoding","appendChild","domElement","scene","scale","camera","initialCameraPosition","sin","PI","cos","ambientLight","add","controls","OrbitControls","autoRotate","enableZoom","minDistance","minZoom","GLTFLoader","load","gltf","traverse","child","isMesh","m","receiveShadow","castShadow","isLight","l","shadow","bias","mapSize","xhr","animate","loaded","total","req","frame","requestAnimationFrame","p","rotSpeed","sqrt","pow","position","y","z","lookAt","update","cancelAnimationFrame","dispose","top","UploadNft","editor","setCount","nft_description","setNft_description","modalShow","setModalShow","nft_collection_id","setNft_collection_id","nftFileType","nft","setNft","nftwidth","setNftwidth","nftHeight","setNftheight","Pimage","setPimage","coll_id","setSource","sourceType","setSourceType","setNFtExtension","preview","setPreview","convertToBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","previewChange","index","pimage","files","base64","prevState","defaultValues","col","lat","onFinish","nftImagepromises","nfts","all","imagesRes","addedImage","image_hash","extension","check","includes","nft_name","Form","form","initialValues","autoComplete","List","fields","remove","transform","restField","Item","MinusCircleOutlined","prevCount","previ","onHandleClick","background","marginBottom","border","variant","backgroundImage","backgroundSize","backgroundRepeat","maxCount","filetype","fr","Image","handleUpload","accept","URL","createObjectURL","backgroundPosition","block","PlusOutlined","steps","UploadNftIndex","Login","login","password","FormCard","currentStep","prevFormStep","formSchema","Yup","shape","confirm_password","oneOf","Signup","formStep","nextFormStep","resolver","yupResolver","errMessage","errmessage","validate","val","CreateOrganization","goBack","socialmedia","goal","url","tax_id","social","social_link","disp","SignupIndex","setFormStep","contactSlice","contact","postContact","contactReducer","Contact","subject","ContactAction","cols","ForgotPassword","forgotpassword","statusCode","Forgot","PrivateRoute","component","rest","restricted","Geonames","lan","encoding","EditProject","ProjectUpdate","TermsConditions","TermsCond","ExploreAll","All","AllCollections","ColExplore","AboutUs","about","Aboutus","ReferalPopup","copy","setCopy","userRef","userprojurl","TwitterShareButton","TwitterIcon","FacebookShareButton","FacebookIcon","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","EmailIcon","onMouseLeave","EditNft","setNFtFileType","previewnft","setPreviewnft","modalShowcoll","setModalShowcoll","nftdetail","setFieldsValue","collection_id","nft_image","preview_imag","extention","NftdataTable","collectionData","contract_id","GetMatic","setMatic","ProjDetails","search","URLSearchParams","modalShowrefer","setModalShowrefer","referrer_id","Number","project_count","cad","ProgressBar","varient","now","project_percentage","user_invest","latprojDetails","ShowCollections","Showcollections","CollItem","coldetail","GetCollectionDetails","CollectionDetail","DesPopup","ProjNftDetails","setmatic","nftId","modalShowDes","setModalShowDes","is_mint","ProjNft","NftPopup","Step","Steps","closeButton","direction","LoadingOutlined","CheckOutlined","NftTransdataTable","latprojnftdetail","nft_history","LatNftDataTable","BidPopup","projtitle","projcoll","Timer","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","interval","setInterval","parse","floor","clearInterval","BuyPopup","LatprojNftDetails","ownwallet","bidmodalShow","setBidModalShow","buymodalShow","setBuyModalShow","getSett","find","Class","selling_count","payment_flow","karmatica_fee","buyHandler","NftAuctiondataTable","bidstatus","setBidStatus","acceptHandler","UpdateBId","bids","SellPopup","auctiontype","setAuctionType","autionTypeChange","startdate","enddate","deployContract","MyNFTContract","NFTContract","getGasPrice","deploy","bytecode","arguments","send","OnSubmit","EditNftName","EditNftDesc","EditNftImage","NftDetails","setNftID","projslug","sellmodalShow","setSellModalShow","modalShowedit","setModalShowedit","modalShoweditdes","setModalShoweditdes","modalShoweditimg","setModalShoweditimg","Nft","FunddataTable","tax_number","web_url","FundraiserDetail","fundprojdetail","FundDetail","latnftprojDetails","ScrollToTop","scrollTo","AddNft","AddNFT","MyFundraiserDetail","GetAllFundraiseProjects","GetAllFundraise","AllFundraiser","AllFundraiserProjects","FundraiserProjects","Rewards","NftReward","AllNotifications","nooti","Notifi","MyRouts","path","ThemeOne","ExploreFour","App","combineReducers","createproject","latestprojects","store","configureStore","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1f58533a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\nconst userToken = localStorage.getItem('authToken')\r\n    // ? JSON.parse(localStorage.getItem('user'))\r\n    ? localStorage.getItem('authToken')\r\n    : null\r\n\r\nconst authSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: {},\r\n        userdetail: [],\r\n        userToken,\r\n        role: null,\r\n        // wallToken,\r\n        logout: {},\r\n        message: {},\r\n        countries: [],\r\n        states: [],\r\n        city: [],\r\n        noti: [],\r\n        annualRevenue: [],\r\n        hereAbout: [],\r\n        updpro: [],\r\n        wallesign: [],\r\n        organization: false\r\n    },\r\n    reducers: {\r\n        registerSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.userToken = action.payload.data.data.auth_token;\r\n            state.role = action.payload.data.data.role;\r\n            localStorage.setItem('authToken', action.payload.data.data.auth_token)\r\n        },\r\n        registerFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        allnotification: (state, action) => {\r\n\r\n            state.noti = action.payload.data.data\r\n        },\r\n        updateprofile: (state, action) => {\r\n            // \r\n            state.updpro = action?.payload?.data?.data;\r\n        },\r\n        userDetail: (state, action) => {\r\n            // \r\n            state.userdetail = action.payload.data.data\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.role = action.payload?.data?.data?.role;\r\n            state.message = action.payload?.data?.message\r\n            state.userToken = action.payload?.data?.data?.auth_token;\r\n            localStorage.setItem('authToken', action.payload?.data?.data?.auth_token)\r\n        },\r\n        logoutSuccess: (state) => {\r\n            localStorage.removeItem('authToken')\r\n            state.user.role = null\r\n            state.userToken = null\r\n        },\r\n        forgotpasswordSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.message = action.payload.data.message\r\n\r\n        },\r\n        createOrganizationSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.organization = true\r\n        },\r\n        wallsignin: (state, action) => {\r\n            state.wallesign = action.payload?.data?.data;\r\n        },\r\n        getCountryList: (state, action) => {\r\n            state.countries = action.payload;\r\n        },\r\n        getStateList: (state, action) => {\r\n            state.states = action.payload;\r\n        },\r\n        getCityList: (state, action) => {\r\n            state.city = action.payload;\r\n        },\r\n\r\n        getAnnualRevenueList: (state, action) => {\r\n            state.annualRevenue = action.payload;\r\n        },\r\n\r\n        getHearAboutList: (state, action) => {\r\n            state.hereAbout = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer\r\n\r\nexport const {\r\n    allnotification,\r\n    registerSuccess,\r\n    createOrganizationSuccess,\r\n    getCountryList,\r\n    getStateList,\r\n    getCityList,\r\n    getAnnualRevenueList,\r\n    getHearAboutList,\r\n    loginSuccess,\r\n    forgotpasswordSuccess,\r\n    logoutSuccess,\r\n    registerFail,\r\n    userDetail,\r\n    wallsignin,\r\n    updateprofile\r\n} = authSlice.actions;","import { create } from 'ipfs-http-client'\r\nimport { useHistory } from 'react-router-dom'\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\n// import { walletSignin } from '../../redux/Actions/authAction';\r\nimport { object } from 'yup';\r\nimport { redirect } from 'next/dist/server/api-utils';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// const contractABI = require('../../src/backend/contracts/artWork.sol/NFTContract.json')\r\nconst contractABI = require('../../backend/contracts/artWork.sol/NFTContract.json')\r\n\r\n// const contractAddress = \"0xE915A57e52A1f5a432b15727EA79e2542d435087\";\r\n// connect to a different API\r\n// const ipfsClient = create('http://127.0.0.1:5001')\r\n\r\nfunction isMetaMaskInstalled() {\r\n  return Boolean(window.ethereum);\r\n}\r\n\r\nconst ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n// const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n// const ipfsBaseUrl = ('http://208.113.134.142:8080/')\r\n// const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\n\r\nexport const Roles = {\r\n  \"ADMIN\": 1,\r\n  \"BUYER\": 2,\r\n  \"CREATOR\": 3\r\n}\r\n\r\nexport const creatorWalletUpdate = async (auth_token) => {\r\n  try {\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/wallet/connect`,\r\n      formData, config\r\n    )\r\n\r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n}\r\n\r\nexport const UpdateWalletAddress = async (role, auth_token = null) => {\r\n  try {\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    formData.append('role', Roles[role])\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/sign_in`,\r\n      formData, config\r\n    )\r\n\r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n};\r\n\r\nexport const ConnectWallet = async (role) => {\r\n\r\n  const chainId = 80001// Polygon Mainnet\r\n\r\n  if (window?.ethereum?.networkVersion !== chainId) {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: web3.utils.toHex(chainId) }]\r\n      });\r\n\r\n    } catch (err) {\r\n      // This error code indicates that the chain has not been added to MetaMask\r\n      if (err.code === 4902) {\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainName: 'Mumbai Testnet',\r\n              chainId: web3.utils.toHex(chainId),\r\n              nativeCurrency: { name: 'MATIC', decimals: 18, symbol: 'MATIC' },\r\n              rpcUrls: ['https://rpc-mumbai.maticvigil.com/']\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  }\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n\r\n    if (window.ethereum) {\r\n      try {\r\n        const addressArray = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: web3.utils.toHex('80001') }],\r\n        })\r\n\r\n        const obj = {\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n          address: addressArray[0],\r\n        };\r\n\r\n        const res = await UpdateWalletAddress(role)\r\n        return {\r\n          ...obj,\r\n          res\r\n        }\r\n\r\n      } catch (err) {\r\n        return {\r\n          address: \"\",\r\n          status: \"😥 \" + err.message,\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        address: \"\",\r\n        status: (\r\n          <span>\r\n            <p>\r\n              {\" \"}\r\n              🦊{\" \"}\r\n              <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n                You must install Metamask, a virtual Ethereum wallet, in your\r\n                browser.\r\n              </a>\r\n            </p>\r\n          </span>\r\n        ),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      // \r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      // console.log(addressArray, 'address')\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n          status: \"🦊 Connect to Metamask using the top right button.\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const UpdateStatus = async ({ slug, token_id, transaction_hash, pay_from, pay_to, type }) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('is_mint', '1');\r\n    formData.append('token_id', token_id);\r\n    formData.append('transaction_hash', transaction_hash);\r\n    formData.append('pay_from', pay_from);\r\n    formData.append('pay_to', pay_to);\r\n    formData.append('type', type.type)\r\n    formData.append('price', type.price)\r\n    formData.append('start_date', type.start_date)\r\n    formData.append('end_date', type.end_date)\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/NftUpdate/${slug}`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nconst UpdateContract = async (collid, contractAddress) => {\r\n\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('contract_id', contractAddress);\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${collid}`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const sendFileToIPFS = async (fileImg) => {\r\n  if (fileImg) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", fileImg);\r\n\r\n      const resFile = await axios({\r\n        method: \"post\",\r\n        url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\r\n        data: formData,\r\n        headers: {\r\n          'pinata_api_key': `${process.env.REACT_APP_PINATA_API_KEY}`,\r\n          'pinata_secret_api_key': `${process.env.REACT_APP_PINATA_API_SECRET}`,\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        },\r\n      });\r\n\r\n      const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n\r\n      return ImgHash\r\n\r\n    } catch (error) {\r\n      // console.log(\"Error sending File to IPFS: \")\r\n      // console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const CreateMetaDataAndMint = async ({ slug, _imgBuffer, _des, _name, setCurrent, contractAddress, collid, nft_file_content, type, price, start_date, end_date }) => {\r\n  // const metaDataObj = {\r\n  //   name: _name,\r\n  //   description: _des,\r\n  //   image: _imgBuffer,\r\n  // }\r\n\r\n  // const addedMetaData = await nft_file_content(JSON.stringify(metaDataObj));\r\n\r\n  const contract = await new web3.eth.Contract(contractABI.abi, contractAddress);//loadContract();\r\n  // new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\");//loadContract();\r\n\r\n  try {\r\n    let txHash = null\r\n\r\n    // const web3 = new Web3(window.ethereum);\r\n\r\n    await web3.eth.sendTransaction({\r\n      to: contractAddress, // Required except during contract publications.\r\n      // to: \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\", // Required except during contract publications.\r\n      from: window.ethereum.selectedAddress,\r\n      data: contract.methods.mint(nft_file_content).encodeABI() //make call to NFT smart contract\r\n    })\r\n      .on('transactionHash', function (hash) {\r\n        txHash = hash\r\n\r\n        // console.log('txhash11', txHash)\r\n\r\n        setCurrent(1)\r\n      })\r\n      .on('receipt', function (receipt) {\r\n        // console.log(receipt, 'recipt')\r\n        // console.log(receipt.logs[0].topics[3])\r\n        setCurrent(1)\r\n      })\r\n      .on('confirmation', async (confNumber, receipt) => {\r\n        if (confNumber == 1) {\r\n\r\n\r\n          await UpdateContract(collid, contractAddress)\r\n          // await UpdateContract(collid, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n          const tokid = web3.utils.hexToNumber(receipt.logs[0].topics[3])\r\n\r\n          // console.log(startdate)\r\n          await UpdateStatus({ slug: slug.id, token_id: tokid, transaction_hash: receipt.transactionHash, pay_from: receipt.from, pay_to: receipt.to, type, price, start_date, end_date })\r\n          setCurrent(2)\r\n          // history.push(`nft/details/${slug.id}`)\r\n          // return redirect(`nft/details/${id}`)\r\n          // console.log('tokid', tokid)\r\n        }\r\n      })\r\n      .on('error', function (error) {\r\n\r\n      })\r\n\r\n    // \r\n    // console.log('txHash', txHash)\r\n    return {\r\n      success: true,\r\n      // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n      status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n    }\r\n  } catch (error) {\r\n    // \r\n    alert(\"went wrong\")\r\n    return {\r\n      success: false,\r\n      status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n    }\r\n  }\r\n}\r\n\r\nconst UpdateBuyHistory = async (nft_id, proj_id, refid, txd_id, payFrom, pay_to, tokenId, values) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('price', nft_id.values);\r\n    formData.append('txd_id', nft_id.txd_id);\r\n    formData.append('project_id', nft_id.proj_id);\r\n    formData.append('nft_id', nft_id.nft_id);\r\n    formData.append('pay_from', nft_id.payFrom);\r\n    formData.append('pay_to', nft_id.pay_to);\r\n    formData.append('token_id', nft_id.tokenId);\r\n    formData.append('ref_id', nft_id.refid);\r\n    formData.append('status', '1');\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/transaction/store`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\n\r\nexport const BuyNft = async ({ contractAddress, tokenId, payFrom, values, platformFee, sellingCount, ownerFee, flow, ownerWallet, refid, proj_id, nft_id, loadingg }) => {\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n    try {\r\n\r\n      let wallets = []\r\n      let fee = []\r\n\r\n\r\n      wallets = [...wallets, ...flow[0]?.buyer_data?.map(x => x.wallets), flow[0]?.karmatica_fees[0]?.wallets, flow[0]?.project_data[0]?.wallets]\r\n      fee = [...fee, ...flow[0]?.buyer_data?.map(x => x.fees), flow[0]?.karmatica_fees[0]?.fees, flow[0]?.project_data[0]?.fees]\r\n      console.log(fee)\r\n      console.log(wallets)\r\n\r\n\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      const obj = {\r\n        status: \"👆🏽 Write a message in the text-field above.\",\r\n        address: addressArray[0],\r\n      };\r\n\r\n      const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n      const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n      // const amountToSendPlatform = ((`${platformFee[0]?.fees}` / 100) * 0.03)\r\n      // const amountToSend = (({ fee } / 100) * 0.03)\r\n      // console.log('amou', amountToSend)\r\n      const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n      // const walletToSend = (({ wallets } / 100) * 0.03)\r\n      // console.log('walle', walletToSend)\r\n      // // const amountToSend = (amountToSendPlatform - amount, \"either\")\r\n      // const amountToSend = (0.0005)\r\n      // const amountToSend = ; // Convert to wei value\r\n      const memory_clients = wallets.map(wal => {\r\n\r\n        return (`${wal}`)\r\n      })\r\n\r\n\r\n\r\n      const memory_amounts = fee.map(amt => {\r\n        const amountToSend = ((amt / 100) * 0.03)\r\n        return web3.utils.toWei(`${amountToSend}`, \"ether\")\r\n      })\r\n\r\n      const transferowner = {\r\n        'from': window.ethereum?.selectedAddress,\r\n        'to': contractAddress,\r\n        // 'to': \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\",\r\n        // 'value': web3.utils.toWei(`${values}`),\r\n        'value': web3.utils.toWei('0.03', 'ether'),\r\n        // 'input': nftContract.methods.buyNft(contractAddress, tokenId).encodeABI()\r\n        'input': nftContract.methods.buyNft(contractAddress, tokenId, memory_clients, memory_amounts).encodeABI()\r\n      };\r\n\r\n      // const txHash = await web3.eth.sendTransaction(tx)\r\n\r\n      // console.log('txhash', txHash)\r\n      await web3.eth.sendTransaction(transferowner)\r\n        .on('transactionHash', function (hash) {\r\n          let txHash = hash\r\n          // console.log('tx', txHash)\r\n\r\n\r\n        })\r\n        .on('receipt', function (receipt) {\r\n          // console.log(receipt, 'recipt')\r\n        })\r\n        .on('confirmation', async (confNumber, receipt) => {\r\n          if (confNumber == 1) {\r\n            console.log(confNumber, 'counttrans')\r\n            console.log(receipt, 'conf')\r\n            // localStorage.setItem('txd_id', receipt.transactionHash)\r\n            // localStorage.setItem('pay_to', receipt.receipt.to)\r\n            UpdateBuyHistory({ nft_id, proj_id, refid, txd_id: receipt.transactionHash, payFrom, pay_to: receipt.to, tokenId, values })\r\n            loadingg(false)\r\n            swal(\"success\", \"Confirmed\", 'success').then(function () {\r\n              window.location = `/`;\r\n            });\r\n          }\r\n          // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n          // setModeShow(false)\r\n\r\n          // modalShow(false)\r\n        })\r\n        .on('error', function (error) {\r\n\r\n        })\r\n        .then(function (receipt) {\r\n          // will be fired once the receipt is mined\r\n        })\r\n    } catch (error) {\r\n      // \r\n      alert(error)\r\n\r\n    }\r\n  }\r\n}\r\n\r\nconst UpdateBid = async ({ amount, project_id, nft_id, pay_to, pay_from }) => {\r\n  // debugger\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('amount', amount);\r\n    formData.append('project_id', project_id);\r\n    formData.append('nft_id', nft_id);\r\n    formData.append('pay_from', pay_from);\r\n    formData.append('pay_to', pay_to);\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/project/bids`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const BidNft = async (id, projid) => {\r\n\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n    try {\r\n\r\n\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      const obj = {\r\n        status: \"👆🏽 Write a message in the text-field above.\",\r\n        address: addressArray[0],\r\n      };\r\n\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n      // const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n      // const amountToSendPlatform = ((`${platformFee[0]?.fees}` / 100) * 0.03)\r\n      // const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n      // // const amountToSend = (amountToSendPlatform - amount, \"either\")\r\n      // const amountToSend = (0.0005)\r\n      // const amountToSend = ; // Convert to wei value\r\n      // const memory_clients = [platformFee[0].wallets, ownerWallet[0]]\r\n      // const memory_amounts = [web3.utils.toWei(`${amountToSendPlatform}`, \"ether\"), web3.utils.toWei(`${amountToSendowner}`, \"ether\")]\r\n\r\n      web3.eth.sendTransaction(\r\n        {\r\n          from: window.ethereum?.selectedAddress,\r\n          to: \"0xB79722911A09502fb54De1f7769F6624C301810a\",\r\n          value: web3.utils.toWei(\"0.01\"),\r\n          data: \"0xdf\"\r\n        }, function (err, transactionHash) {\r\n          if (!err)\r\n            console.log(transactionHash + \" success\");\r\n          UpdateBid({ amount: \"0.03\", project_id: projid, nft_id: id, pay_to: \"0xB79722911A09502fb54De1f7769F6624C301810a\", pay_from: window.ethereum?.selectedAddress })\r\n        });\r\n      // await web3.eth.sendTransaction(transferbid)\r\n      //   .on('transactionHash', function (hash) {\r\n      //     let txHash = hash\r\n      //     // console.log('tx', txHash)\r\n\r\n\r\n      //   })\r\n      //   .on('receipt', function (receipt) {\r\n      //     // console.log(receipt, 'recipt')\r\n      //   })\r\n      //   .on('confirmation', async (confNumber, receipt) => {\r\n      //     // \r\n      //     console.log(receipt, 'conf')\r\n      //     // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n      //     // setModeShow(false)\r\n\r\n      //     // modalShow(false)\r\n      //   })\r\n      //   .on('error', function (error) {\r\n\r\n      //   })\r\n      //   .then(function (receipt) {\r\n      //     // will be fired once the receipt is mined\r\n      //   })\r\n    } catch (error) {\r\n      // \r\n      alert(error)\r\n\r\n    }\r\n  }\r\n}","import axios from \"axios\";\r\nimport { allnotification, createOrganizationSuccess, getAnnualRevenueList, getCityList, getCountryList, getHearAboutList, getStateList, loginSuccess, registerFail, registerSuccess, updateprofile, userDetail, wallsignin, } from \"../Slices/authSlice\";\r\nimport swal from \"sweetalert\";\r\n// import { useNavigate } from 'react-router-dom';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { creatorWalletUpdate } from \"../../components/Wallet/interact\";\r\n\r\nexport const Register = createAsyncThunk(\r\n    \"auth/register\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const token = localStorage.getItem('authToken')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                transformRequest: formData => formData\r\n            }\r\n\r\n            //create oraginization creator login\r\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/signup`,\r\n                params, config)\r\n\r\n            await creatorWalletUpdate(res?.data?.data?.auth_token)\r\n\r\n            thunkAPI.dispatch(loginSuccess(res));\r\n\r\n            if (res.status === 200) {\r\n                swal(\"success\", res.data.message, 'success').then(function () {\r\n                    window.location = \"/create\";\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data) {\r\n                if (e?.response?.data.message) {\r\n\r\n                    swal('error', e?.response?.data?.message, 'error')\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\nexport const LoginAction = (params, history) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/organization_signin`,\r\n            params, config)\r\n\r\n        dispatch(loginSuccess(res));\r\n\r\n    } catch (e) {\r\n\r\n        if (e?.response?.data.message) {\r\n\r\n            swal('error', e?.response?.data?.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ForgotPasswordAction = (params) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/forgot_pssword`,\r\n            params, config)\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = \"/login\";\r\n            });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetUserAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getUserDetails`,\r\n            config)\r\n        // console.log('userres', res)\r\n        dispatch(userDetail(res));\r\n\r\n\r\n    } catch (e) {\r\n        // \r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CreateOrganizationAction = (params) => async dispatch => {\r\n    // \r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\r\n            params, config)\r\n\r\n        dispatch(createOrganizationSuccess(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error').then(function () {\r\n                // dispatch(ProjectDetail(params))\r\n                window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const CountryList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCountryList`,\r\n            config)\r\n        dispatch(getCountryList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const StateList = (formData) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getStateById`,\r\n            formData, config)\r\n        // debugger\r\n        dispatch(getStateList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CityList = (formData) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getCityById`,\r\n            formData, config)\r\n        dispatch(getCityList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AnnualRevenueList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAnnualRevenueList`,\r\n            config)\r\n        dispatch(getAnnualRevenueList(res));\r\n    } catch (e) {\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const HearAboutList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getHearAboutList`,\r\n            config)\r\n        dispatch(getHearAboutList(res));\r\n    } catch (e) {\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\n// export const walletSignin = (params, history) => async dispatch => {\r\n\r\n//     // \r\n//     const formData = new FormData();\r\n\r\n//     formData.append('wallet_id', params);\r\n//     // \r\n//     // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n//     try {\r\n//         // const token = localStorage.getItem('authToken')\r\n//         // const token = localStorage.getItem('authToken')\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-Type': 'multipart/form-data',\r\n//                 // Authorization: `Bearer ${token}`\r\n//             },\r\n\r\n//             // transformRequest: formData => formData\r\n//         }\r\n//         const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/sign_in`,\r\n//             formData, config)\r\n//         console.log(res, 'signres')\r\n//         dispatch(wallsignin(res));\r\n//         if (res.status == 200) {\r\n//             localStorage.setItem('auth_token', res.data.data.auth_token)\r\n\r\n//             if (res.data.data.role == 3) {\r\n//                 history.push('/projectlist')\r\n//             } else {\r\n//                 if (res.data.data.role == 2) {\r\n//                     history.push('/profile')\r\n\r\n//                 }\r\n//             }\r\n//         }\r\n\r\n//     } catch (e) {\r\n//         if (e?.response?.data.message) {\r\n//             swal('error', e.response.data.message, 'error')\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const UpdateProfileAction = (formData) => async dispatch => {\r\n\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/profileUpdate`,\r\n            formData, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        await dispatch(updateprofile(res));\r\n\r\n        if (res.status === 200) {\r\n            dispatch(GetUserAction())\r\n            swal(\"success\", \"updated\", 'success')\r\n            // .then(function () {\r\n            // dispatch(ProjectDetail(params))\r\n            // window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CountSet = () => async dispatch => {\r\n    // debugger\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/notification/update`,\r\n            {}, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const NotiDelete = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/notification/delete/${id}`,\r\n            config)\r\n        // \r\n        console.log(res, 'delete rres')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AllNoti = () => async dispatch => {\r\n\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAllNotification`,\r\n            config)\r\n        // \r\n        console.log(res, 'allnoti rres')\r\n        await dispatch(allnotification(res));\r\n\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { CountSet, GetUserAction, NotiDelete } from '../../redux/Actions/authAction';\r\nimport swal from 'sweetalert';\r\nimport { loginSuccess, logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\nimport { isCancel } from 'axios';\r\nimport moment from \"moment\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    const location = useLocation();\r\n    const dispatch = useDispatch()\r\n    const [address, setAddress] = useState(null)\r\n    const [active, setActive] = useState(null)\r\n    const add1 = address?.slice(0, 4).toUpperCase()\r\n    const add2 = address?.slice(35, 44).toUpperCase()\r\n\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n        setAddress(null)\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n    // console.log(userRole)\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n        getCurrentWalletConnected()\r\n        setAddress(getSelectedAddress)\r\n\r\n        if (window.ethereum) {\r\n            window.ethereum.on('accountsChanged', function (accounts) {\r\n                if (!accounts.length) {\r\n                    setAddress(null)\r\n                    //  setIsLoggedIn(false)\r\n                    localStorage.removeItem('auth_token')\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [dispatch, address])\r\n\r\n    function getSelectedAddress() {\r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    // const names = Object?.keys(userdet?.notification?.status);\r\n    // console.log(names)\r\n    const notiHandler = () => {\r\n        // debugger\r\n        dispatch(CountSet())\r\n    }\r\n    const deleteHandler = (id) => {\r\n        dispatch(NotiDelete(id))\r\n    }\r\n    const WalletHandler = async () => {\r\n        const response = await ConnectWallet(\"BUYER\")\r\n        const { res } = response\r\n\r\n        // debugger\r\n        if (!res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            history.push('/all/LatestProjects')\r\n        }\r\n        else if (res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            history.push('/create')\r\n\r\n            swal({\r\n                title: \"Welcome to Karmatica!!!\",\r\n                text: \"Karmatica would like to know more about yourself. Update your profile\",\r\n                icon: \"success\",\r\n                buttons: {\r\n                    continue: '',\r\n                    skip: '',\r\n                }\r\n            }).then((value) => {\r\n                switch (value) {\r\n                    case \"continue\":\r\n                        window.location = '/profile'\r\n                        break;\r\n\r\n                    case \"skip\":\r\n                        window.location = '/projectlist'\r\n                        break;\r\n\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n        else if (!res?.data?.data?.is_new_user && Roles[\"CREATOR\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        else if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n        else if (!window.ethereum?.selectedAddress) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <header id=\"header\">\r\n            {/* Navbar */}\r\n            <nav data-aos=\"zoom-out\" data-aos-delay={800} className=\"navbar navbar-expand\">\r\n                <div className=\"container header\">\r\n                    {/* Navbar Brand*/}\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        <img className=\"navbar-brand-sticky desktop_logo\" src=\"/img/karmatica.png\" alt=\"karmatica\" />\r\n                        <img className=\"mobile-logo\" src=\"/img/logo.png\" alt=\"\" />\r\n                    </Link>\r\n                    <div className=\"ml-auto\" />\r\n                    {/* Navbar */}\r\n                    <ul className=\"navbar-nav items mx-auto\">\r\n                        <li className=\"nav-item dropdown\">\r\n                            <NavLink exact activeClassName=\"navbar__link--active\" className=\"nav-link\" to=\"/\">Explore</NavLink>\r\n                        </li>\r\n                        {/* {log !== null && ( */}\r\n                        <li className=\"nav-item\" >\r\n                            <a onClick={() => handleCreate()} className={location.pathname === `/create` && \"nav-link-active\"} activeClassName={location.pathname === `/create` && \"navbar__link--active\"} >Create</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact activeClassName=\"navbar__link--active\" to={`/all/${\"LatestProjects\"}`} className=\"nav-link\">Latest</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a target=\"_blank\" href=\"https://changelly.com/?from=btc&to=matic&amount=0.1&ref_id=_-GPCBjccW7TMMjO\" className=\"nav-link\">Swap</a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Navbar Toggler */}\r\n                    {window.ethereum?.selectedAddress &&\r\n                        <div className=\"dropdown notification relative\">\r\n                            <i className=\"btn btn-secondary dropdown-toggle fa-sharp fa-solid fa-bell  text-white w-auto m-0 \" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" onClick={() => notiHandler()} ></i>\r\n                            {userdet?.notification_count > 0 &&\r\n\r\n                                <small className='dropdown-notification'>{userdet?.notification_count}</small>\r\n                            }\r\n                            <ul className=\"creator-dropdown dropdown-menu notification-menu dropdown-scrollbar\" aria-labelledby=\"dropdownMenuButton1\">\r\n\r\n                                {userdet?.notification?.map((item) => {\r\n                                    return (\r\n\r\n                                        <><li>{item.title}</li>\r\n                                            <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\r\n                                                <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\r\n                                    )\r\n                                })}\r\n                                {userdet?.notification?.length > 0 &&\r\n                                    <span><button type='submit' className='noty_all'><Link to='/allnotifications'>See all</Link></button></span>\r\n                                }\r\n                                {userdet?.notification?.length == 0 &&\r\n                                    <li>No Notification</li>\r\n                                }\r\n                            </ul>\r\n\r\n                        </div>\r\n                    }\r\n                    <ul className=\"navbar-nav toggle\">\r\n                        <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#menu\">\r\n                                <i className=\"fas fa-bars toggle-icon m-0\" />\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Navbar Action Button */}\r\n                    {/* Navbar Action Button */}\r\n                    <ul className=\"navbar-nav action\">\r\n                        {window.ethereum?.selectedAddress &&\r\n                            <>\r\n\r\n                                <li className=\"nav-item mr-2\">\r\n                                    <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />{add1}...{add2}</a>\r\n                                </li>\r\n                            </>\r\n                        }\r\n                        {!window.ethereum?.selectedAddress &&\r\n                            <li className=\"nav-item ml-3\">\r\n                                <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />Connect Wallet</a>\r\n                            </li>\r\n                        }\r\n                    </ul>\r\n                    {window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? (\r\n                        <>\r\n                            <div className=\"dropdown dropdown_login\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <i className=\"fa fa-solid fa-user\"></i>\r\n                                </button>\r\n                                <ul class=\"creator-dropdown dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\" style={{ left: '-37%' }}>\r\n                                    {/* <li>{userdet?.username}</li> */}\r\n                                    <li>{userdet?.email}</li>\r\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/profile'>My Profile</Link></button></li>\r\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/projectlist'>My Projects</Link></button></li>\r\n                                    {userRole == 3 && (\r\n\r\n                                        <li><button type='button' class=\"dropdown-item\"><Link to={`/fundraiser/detail/${userdet.user_id}`}>Fundraise</Link></button></li>\r\n                                    )}\r\n                                    <li><button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'>Logout</a></button></li>\r\n                                </ul>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <ul className=\"navbar-nav action\">\r\n                            <li className=\"nav-item ml-3\">\r\n                                <a className=\"creator-button btn ml-md-auto btn-bordered-white\"\r\n                                    onClick={() => history.push('/wallet-connect')}><i className=\"fa fa-user\" />\r\n                                    <div>Creator</div></a>\r\n                                {/* <Link to=\"/login\" className=\"creator-button btn ml-md-auto btn-bordered-white\">\r\n                                    <i className=\"fa fa-user\" />\r\n                                    <div>CREATOR</div>\r\n                                </Link> */}\r\n                            </li>\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </nav>\r\n        </header >\r\n    )\r\n}\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\nconst userToken = localStorage.getItem('authToken')\r\n    // ? JSON.parse(localStorage.getItem('user'))\r\n    ? localStorage.getItem('authToken')\r\n    : null\r\nconst projectSlice = createSlice({\r\n    name: 'project',\r\n\r\n    initialState: {\r\n        project: [],\r\n        projects: [],\r\n        nftlist: [],\r\n        projectdetails: [],\r\n        latestprojectdetails: [],\r\n        categories: [],\r\n        collections: [],\r\n        getcollections: [],\r\n        getcollectiondetails: [],\r\n        collectiondetails: [],\r\n        getSocialmediaIcons: [],\r\n        getfundProjDetails: [],\r\n        getnftwoldetails: [],\r\n        settings: [],\r\n        nftadd: [],\r\n        nftres: [],\r\n        nftupdate: [],\r\n        updbanner: [],\r\n        matic: [],\r\n        // liveProjects: [],\r\n        liveProjects: {\r\n            LatestProjects: [],\r\n            RecentCampaigns: []\r\n        },\r\n        message: {},\r\n    },\r\n    reducers: {\r\n        createProjectSuccess: (state, action) => {\r\n            state.project = action.payload;\r\n        },\r\n        createCollectionSuccess: (state, action) => {\r\n            state.collections = action.payload;\r\n        },\r\n        getCollections: (state, action) => {\r\n            // \r\n            state.getcollections = action?.payload?.data?.data;\r\n        },\r\n        getSocialmediaIcons: (state, action) => {\r\n            // \r\n            state.getsocial = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetails: (state, action) => {\r\n            // \r\n            state.getcollectiondetails = action?.payload?.data?.data;\r\n        },\r\n        getNftwolDetails: (state, action) => {\r\n            // \r\n            state.getnftwoldetails = action?.payload?.data?.data;\r\n        },\r\n        nftUpd: (state, action) => {\r\n            // \r\n            state.nftupdate = action?.payload?.data?.data;\r\n        },\r\n        nftAdd: (state, action) => {\r\n            // \r\n            state.nftadd = action?.payload?.data?.data;\r\n        },\r\n        getfundprojdetails: (state, action) => {\r\n            // \r\n            state.getfundProjDetails = action?.payload?.data?.data;\r\n        },\r\n        getProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        getMatic: (state, action) => {\r\n            state.matic = action.payload?.data?.data\r\n        },\r\n        getCategoriesList: (state, action) => {\r\n            state.categories = action?.payload?.data?.data;\r\n        },\r\n        getSettings: (state, action) => {\r\n            state.settings = action?.payload?.data?.data;\r\n        },\r\n\r\n        getLatestProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        createFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        getProjectDetail: (state, action) => {\r\n            // \r\n            state.projectdetails = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetail: (state, action) => {\r\n            // \r\n            state.collectiondetails = action?.payload?.data?.data;\r\n        },\r\n        Nftres: (state, action) => {\r\n            // \r\n            state.nftres = action?.payload?.data?.data;\r\n        },\r\n        getNftList: (state, action) => {\r\n            // \r\n            state.nftlist = action?.payload?.data?.data;\r\n        },\r\n        getLatestProjectDetail: (state, action) => {\r\n            // \r\n            state.latestprojectdetails = action?.payload?.data?.data;\r\n        },\r\n        updatebanner: (state, action) => {\r\n            // \r\n            state.updbanner = action?.payload?.data?.data;\r\n        },\r\n        publicLiveProjects: (state, action) => {\r\n            state.liveProjects[action.payload.type] = action.payload.res.data.data.data\r\n            // state.liveProjects = action.payload.data.data.data\r\n            // state.liveProjects['R'] = action.payload.data.data.data\r\n        },\r\n        deleteProject: (state, action) => {\r\n            const { id } = action.payload?.data?.data;\r\n            state.projects = state.projects.filter(item => item.id !== id)\r\n        }\r\n    },\r\n});\r\n\r\nexport const projectReducer = projectSlice.reducer\r\n\r\nexport const {\r\n    createProjectSuccess,\r\n    getProjectList,\r\n    getProjectDetail,\r\n    getLatestProjectDetail,\r\n    publicLiveProjects,\r\n    createCollectionSuccess,\r\n    deleteProject,\r\n    createFail,\r\n    getLatestProjectList,\r\n    getCategoriesList,\r\n    getCollections,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getCollectionDetail,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    Nftres,\r\n    updatebanner,\r\n    nftUpd,\r\n    nftAdd,\r\n    getMatic\r\n} = projectSlice.actions;","import axios from \"axios\";\r\nimport {\r\n    createProjectSuccess,\r\n    deleteProduct,\r\n    getProjectDetail,\r\n    getProjectList,\r\n    createFail,\r\n    publicLiveProjects,\r\n    deleteProject,\r\n    getLatestProjectList,\r\n    getTopFundraiser,\r\n    getLatestProjectDetail,\r\n    getCategoriesList,\r\n    createCollectionSuccess,\r\n    getCollections,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    Nftres,\r\n    updatebanner,\r\n    nftUpd,\r\n    nftAdd,\r\n    getMatic\r\n} from \"../Slices/projectSlice\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport swal from \"sweetalert\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { redirect } from \"next/dist/server/api-utils\";\r\n\r\nexport const CreateProjectAction = (params, setLoading, history) => async dispatch => {\r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        // \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(createProjectSuccess(res));\r\n\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal({ title: \"success\", text: res.data.message, icon: 'success', buttons: false, timer: 1500 })\r\n                .then(() => {\r\n                    history.push(\"/projectlist\");\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectDetail = (slug) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/details/${slug}`,\r\n            config)\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        // console.log('details', res)\r\n        dispatch(getProjectDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const LatestProjectDetail = (slug) => async dispatch => {\r\n    // debugger\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjectDetails/${slug}`,\r\n            config)\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getLatestProjectDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectList = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    // setLoading(true)\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/list`,\r\n            config)\r\n\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        await dispatch(getProjectList(res.data?.data));\r\n        // setLoading(false)\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            // setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const NftList = (slug) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdx/${slug}`,\r\n            config)\r\n\r\n        // console.log(res, 'proj')\r\n        await dispatch(getNftList(res));\r\n\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const uploadNFT = async (params) => {\r\n    // debugger\r\n    // const [loading, setLoading] = useState()\r\n    // setLoading(true)\r\n    const token = localStorage.getItem('authToken')\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        // transformRequest: formData.append('image', params)\r\n    }\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", params);\r\n    return axios\r\n        .post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n            formData, config)\r\n        .then(function (response) {\r\n            // setLoading(false)\r\n            // console.log(response, 'resss')\r\n            return {\r\n                success: true,\r\n                data: response.data,\r\n            };\r\n        })\r\n        .catch(function (error) {\r\n            // swal('error!', 'NFT not uploaded', 'error')\r\n            // uploadNFT(setLoading(false))\r\n        });\r\n    // formData.append('image',params)\r\n\r\n    // const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n    //     params, config)\r\n    // \r\n    // console.log('rasasses', res)\r\n    // return res\r\n    // await dispatch(Nftres(res))\r\n\r\n}\r\n\r\n\r\nexport const getPublicLiveProjects = createAsyncThunk(\r\n    \"auth/liveProjects\",\r\n\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const { type, projectType } = params\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjects?page=&latitude=&longitude=&search_keyword=&category_id=&type`, config)\r\n            // console.log(res, 'projres')\r\n            thunkAPI.dispatch(publicLiveProjects({\r\n                res: res,\r\n                type: projectType,\r\n            }));\r\n            // thunkAPI.dispatch(publicLiveProjects(res));\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n\r\nexport const UpdateProject = (props, params) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/update/${props}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'proj')\r\n        await dispatch(getProjectDetail(res));\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = `/projnftdetails/${props}`;\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const DeleteProject = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/projects/destroy/${id}`,\r\n            config)\r\n        // \r\n        // console.log(res.status, 'proj')\r\n        await dispatch(deleteProject(res));\r\n        if (res.status === 200) {\r\n            dispatch(ProjectList())\r\n            // swal(\"success\", res.data.message, 'success').then(function () {\r\n            //     window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CategoriesAction = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCategories`, config)\r\n        // console.log(res, 'catres')\r\n        dispatch(getCategoriesList(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const GetCollectionsAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollection`,\r\n            config)\r\n        // console.log('colres', res)\r\n        await dispatch(getCollections(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CreateCollectionAction = ({ dat, imageBanner }) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const formData = new FormData()\r\n        formData.append('title', dat.title)\r\n        formData.append('description', dat.description)\r\n        formData.append('short_url', dat.short_url)\r\n        formData.append('symbol', dat.symbol)\r\n        formData.append('image', imageBanner)\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createCollection`, formData,\r\n            config)\r\n        // dispatch(GetCollectionsAction)\r\n        await dispatch(createCollectionSuccess(res));\r\n        if (res?.status === 200) {\r\n\r\n            await dispatch(GetCollectionsAction());\r\n            swal(\"success\", 'Collection Created', 'success')\r\n            // .then(function () {\r\n            //     onClick={() => props.onHide()}\r\n            // });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\nexport const GetCollectionDetails = (id) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollectionById/${id}`,\r\n            config)\r\n\r\n        await dispatch(getCollectionDetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSocialMediaIcons = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSocialMediaIcon`,\r\n            config)\r\n        // console.log('social', res)\r\n        await dispatch(getSocialmediaIcons(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateCollection = (id, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${id}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(getLatestProjectDetail(res));\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSettings = () => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSettings`,\r\n            config)\r\n        // \r\n        // console.log(res, 'sett rres')\r\n        await dispatch(getSettings(res));\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetNftwol = ({ slug }) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdxWithoutLogin/${slug}`,\r\n            config)\r\n\r\n        await dispatch(getNftwolDetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetfundraiserProject = (slug) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getProjectByfundraiserIdx/${slug}`,\r\n            config)\r\n\r\n        await dispatch(getfundprojdetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateBanner = (formData, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/image_update/${params}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(updatebanner(res));\r\n\r\n        if (res.status === 200) {\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                dispatch(ProjectDetail(params))\r\n                dispatch(LatestProjectDetail(params))\r\n                // window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const UpdateNft = (formData, props, setLoading) => async dispatch => {\r\n    // debugger\r\n\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/update/${props.id}/${props.nft_id?.id}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftUpd(res));\r\n\r\n        if (res.status === 200) {\r\n            swal(\"success\", \"updated\", 'success')\r\n            setLoading(false)\r\n            dispatch(NftList(props.nft_id?.id))\r\n            dispatch(ProjectDetail(props.id))\r\n            // .then(function () {\r\n            //     window.location = `/nft/details/${props.nft_id?.id}?project=${props.id}`;\r\n\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const AddNftAction = (formData, slug, setLoading) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/create/${slug}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftAdd(res));\r\n\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                // dispatch(ProjectDetail(props.id))\r\n                // dispatch(LatestProjectDetail(params))\r\n                window.location = `/projnftdetails/${slug}`;\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetMatic = () => async dispatch => {\r\n\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n\r\n        }\r\n        // \r\n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\r\n            config\r\n        )\r\n        await dispatch(getMatic(res))\r\n        console.log('res', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};\r\nexport const getBid = (id) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getBidsDetailByIdx/${id}}`,\r\n            config)\r\n        await dispatch(res)\r\n        console.log('res bid', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};\r\nexport const UpdateBId = ({ id, status }) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/change_bids_status/${id}}`,\r\n            { status: status }, config)\r\n        await dispatch(res)\r\n        console.log('res bid', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};","import React, { Component } from 'react';\r\n\r\nimport { useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { Roles } from '../Wallet/interact';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst projectTypesMap = {\r\n    \"LatestProjects\": 2,\r\n    \"RecentCampaigns\": 1\r\n}\r\nconst Hero = ({ type }) => {\r\n    const history = useHistory()\r\n\r\n    var options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0,\r\n    };\r\n\r\n    function success(pos) {\r\n        var crd = pos.coords;\r\n\r\n        // console.log(\"Your current position is:\");\r\n        // console.log(`Latitude : ${crd.latitude}`);\r\n        // console.log(`Longitude: ${crd.longitude}`);\r\n        // console.log(`More or less ${crd.accuracy} meters.`);\r\n        localStorage.setItem('latitude', `${crd.latitude}`);\r\n        localStorage.setItem('longitude', `${crd.longitude}`);\r\n        // setLatitude(`${crd.latitude}`)\r\n        // setLongitude(`${crd.longitude}`)\r\n    }\r\n\r\n    function errors(err) {\r\n        console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n    const dispatch = useDispatch()\r\n\r\n    const liveProjects = useSelector(state => {\r\n        return state?.projectdetails?.liveProjects[type]\r\n    })\r\n    console.log(liveProjects, 'liveeproj')\r\n    useEffect(() => {\r\n        dispatch(getPublicLiveProjects({\r\n            cursor: 1,\r\n            type: projectTypesMap[type],\r\n            projectType: type,\r\n        }))\r\n\r\n    }, [dispatch])\r\n    const currentLocation = () => {\r\n        // \r\n        if (navigator.geolocation) {\r\n            navigator.permissions\r\n                .query({ name: \"geolocation\" })\r\n                .then(function (result) {\r\n                    if (result.state === \"granted\") {\r\n                        // console.log(result.state);\r\n                        //If granted then you can directly call your function here\r\n                        navigator.geolocation.getCurrentPosition(success);\r\n                    } else if (result.state === \"prompt\") {\r\n                        navigator.geolocation.getCurrentPosition(success, errors, options);\r\n                    } else if (result.state === \"denied\") {\r\n                        //If denied then you have to show instructions to enable location\r\n                    }\r\n                    result.onchange = function () {\r\n                        // console.log(result.state);\r\n                    };\r\n                });\r\n        } else {\r\n            alert(\"Sorry Not available!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        currentLocation()\r\n    }, [])\r\n\r\n    const handleCreate = () => {\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                // showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n        else if (!userToken && !localStorage.getItem('authToken')) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                // showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section className=\"hero-section\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-md-6 col-lg-7\">\r\n\r\n                        <h1 className=\"mt-4\">Create NFTs to fund real-life projects. Earn up to 30% by sharing.</h1>\r\n                        {/* <p>Earn rewards by referring your friends.</p> */}\r\n                        {/* Buttons */}\r\n                        <div className=\"button-group\">\r\n                            <Link className=\"btn btn-bordered-white\" to={`/all/${\"LatestProjects\"}`}><i className=\"icon-rocket mr-2\" />Explore</Link>\r\n                            <a className=\"btn btn-bordered-white\" onClick={handleCreate}><i className=\"icon-note mr-2\" />Create </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-md-6 col-lg-4 auction-slider auctions-slides'>\r\n                        {liveProjects?.slice(0, 1).map((item, idx) => {\r\n                            return (\r\n\r\n                                <div key={`auc_${item.id}`} className=\"item card\">\r\n\r\n\r\n                                    {/* {item?.nft_data?.map((item, idx) => { */}\r\n                                    {/* return ( */}\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/projects/${item.slug}`}>\r\n                                            {/* <img className=\"card-img-top\" src={item?.image} alt=\"\" /> */}\r\n                                            <img class=\"card-img-top\" src=\"https://clickthemart.com/storage/project_img/2023-02-09-11-37-271675942647.\" alt=\"\"></img>\r\n                                        </Link>\r\n\r\n                                    </div>\r\n                                    {/* ) */}\r\n                                    {/* })} */}\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                                            <a href=\"#\">\r\n                                                <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                                            </a>\r\n                                            <a className=\"seller d-flex align-items-center mb-2\" href=\"#\">\r\n                                                <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" />\r\n                                                <span className=\"ml-2 mb-0\">{item.user_data.username}</span>\r\n                                            </a>\r\n                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                <span>{Math.round(item.price)} MATIC</span>\r\n                                                {item?.number_of_nft == 1 ? (\r\n\r\n                                                    <span>{item.number_of_nft} NFT</span>\r\n                                                ) : (\r\n                                                    <span>{item.number_of_nft} NFTs</span>\r\n                                                )\r\n\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Shape */}\r\n            <div className=\"shape\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                    <defs>\r\n                        <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                            <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                            <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                        <polygon points fill=\"url(#linearGradient-1)\">\r\n                            <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                        </polygon>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Hero;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\n\r\nconst projectTypesMap = {\r\n    \"LatestProjects\": 2,\r\n    \"RecentCampaigns\": 1\r\n}\r\n\r\n\r\nconst AuctionsOne = ({ type }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const liveProjects = useSelector(state => {\r\n        return state?.projectdetails?.liveProjects[type]\r\n    })\r\n    console.log(liveProjects, 'liveeproj')\r\n    useEffect(() => {\r\n        dispatch(getPublicLiveProjects({\r\n            cursor: 1,\r\n            type: projectTypesMap[type],\r\n            projectType: type,\r\n        }))\r\n\r\n    }, [dispatch])\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"live-auctions-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Project</span>\r\n                                <h3 className=\"mt-3 mb-0\">{type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {liveProjects?.length > 4 &&\r\n\r\n                                    <Link to={`/all/${type}`} style={{ color: 'white' }} ><a className=\"btn content-btn\">View All</a></Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auctions-slides \">\r\n                    <div className=\"swiper-container slider-mid items \">\r\n                        <div className=\"swiper-wrapper col-12 \">\r\n                            {/* Single Slide */}\r\n\r\n                            {liveProjects?.map((item, idx) => {\r\n                                return (\r\n\r\n                                    <div key={`auc_${item.id}`} className=\"swiper-slide item card\">\r\n\r\n\r\n                                        {/* {item?.nft_data?.map((item, idx) => { */}\r\n                                        {/* return ( */}\r\n                                        <div className=\"image-over\">\r\n                                            <Link to={`/projects/${item.slug}`}>\r\n                                                <img className=\"card-img-top\" src={item?.image} alt=\"\" />\r\n                                            </Link>\r\n\r\n                                        </div>\r\n                                        {/* ) */}\r\n                                        {/* })} */}\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body\">\r\n                                                {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                                                <a href=\"#\">\r\n                                                    <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                                                </a>\r\n                                                <div className=\"seller d-flex align-items-center my-3\" href=\"#\">\r\n                                                <span>Owned By</span> \r\n                                                {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n                                                \r\n                                                <a href='#'>\r\n                                                        <h6 className=\"ml-2 mb-0\">{item.user_data.username}</h6>\r\n                                                    </a>\r\n\r\n                                                    {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span>{Math.round(item.price)} MATIC</span>\r\n                                                    {item?.number_of_nft == 1 ? (\r\n\r\n                                                        <span>{item.number_of_nft} NFT</span>\r\n                                                    ) : (\r\n                                                        <span>{item.number_of_nft} NFTs</span>\r\n                                                    )\r\n\r\n                                                    }\r\n                                                </div>\r\n                                              \r\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3 mb-0\" href=\"/login\"><i className=\"icon-handbag mr-2\" />Buy</a>              </div>\r\n                                            \r\n\r\n                                           \r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        \r\n                        <div className=\"swiper-pagination\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n            \r\n\r\n\r\n    )\r\n}\r\nexport default AuctionsOne;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst fundraiserSlice = createSlice({\r\n    name: 'fundraiser',\r\n\r\n    initialState: {\r\n        fundraiser: [],\r\n        fundraiserdetail: [],\r\n    },\r\n    reducers: {\r\n        getTopFundraiser: (state, action) => {\r\n            // \r\n            state.fundraiser = action.payload;\r\n\r\n        },\r\n        getTopFundraiserDetail: (state, action) => {\r\n            // \r\n            state.fundraiserdetail = action?.payload?.data?.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const fundraiserReducer = fundraiserSlice.reducer\r\n\r\nexport const {\r\n    getTopFundraiser,\r\n    getTopFundraiserDetail\r\n} = fundraiserSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getTopFundraiser, getTopFundraiserDetail } from \"../Slices/fundraiserSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const TopFundraiserAction = createAsyncThunk(\r\n    \"auth/topfundraiser\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // \r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers`, config)\r\n            // console.log(res, 'fund res')\r\n            thunkAPI.dispatch(getTopFundraiser(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n// export const TopFundraiserDetail = createAsyncThunk(\r\n//     \"auth/topfundraiserdetail\",\r\n//     async (id, thunkAPI) => {\r\n//         // \r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//             }\r\n//             const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${id}`, config)\r\n\r\n//             thunkAPI.dispatch(getTopFundraiserDetail(res?.data?.data));\r\n\r\n//         } catch (e) {\r\n//             if (e?.response?.data.message) {\r\n//                 swal('error', e.response.data.message, 'error')\r\n//             }\r\n//         }\r\n//     })\r\nexport const TopFundraiserDetail = (user_id) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${user_id}`,\r\n            config)\r\n\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getTopFundraiserDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getTopFundraiser } from '../../redux/Slices/projectSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Fundraiser = () => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <section className=\"top-seller-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Fundraisers</span>\r\n                                <h3 className=\"mt-3 mb-0\">Top Fundraisers</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {fund?.length > 5 &&\r\n\r\n                                    <Link className=\"btn content-btn\" to='/allfundraise'>View All</Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {fund?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Seller */}\r\n                                <Link to={`/fundraiser/detail/${item.user_id}`}>\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n\r\n                                            <img className=\"avatar-md rounded-circle\" src={item?.organization_detail?.banner_image} alt=\"\" />\r\n\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3\">\r\n                                                <a className=\"seller mb-2 text-capitalize\">{item?.organization_detail?.organization_name}</a>\r\n                                                {/* <span dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 15) }} /> */}\r\n                                                <span>${item.amount} Raised</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Fundraiser;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst collectionSlice = createSlice({\r\n    name: 'collection',\r\n\r\n    initialState: {\r\n        collection: [],\r\n        collectiondetail: [],\r\n    },\r\n    reducers: {\r\n        getPopularCollection: (state, action) => {\r\n            // \r\n            state.collection = action.payload;\r\n        },\r\n        getPopularCollectiondetails: (state, action) => {\r\n            // \r\n            state.collectiondetail = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const collectionReducer = collectionSlice.reducer\r\n\r\nexport const {\r\n    getPopularCollection,\r\n    getPopularCollectiondetails\r\n} = collectionSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getPopularCollection, getPopularCollectiondetails } from \"../Slices/popularCollectionSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const PopularCollectionAction = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnection`, config)\r\n            console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollection(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const PopularCollectionActionDetails = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ slug }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnectionByIdx/${slug}`, config)\r\n            // console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollectiondetails(res));\r\n\r\n        } catch (e) {\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { Link } from 'react-router-dom';\r\nconst Collections = () => {\r\n    const dispatch = useDispatch()\r\n    const coll = useSelector(state => {\r\n        //\r\n        return state?.collection?.collection\r\n    })\r\n    console.log(coll, \"coll detail\")\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionAction({}))\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"popular-collections-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>POPULAR</span>\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {coll?.length > 8 &&\r\n\r\n                                    <Link className=\"btn content-btn text-left\" to=\"/allcollections\">Explore More</Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {coll?.slice(0, 8)?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`cd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/popularcollection/details/${item?.slug}`}>\r\n                                            <img className=\"card-img-top\" src={item?.image} alt=\"\" />\r\n                                        </Link>\r\n                                        {/* Seller */}\r\n                                        <a className=\"seller\" >\r\n                                            <div className=\"seller-thumb avatar-lg\">\r\n                                                <img className='' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            <a>\r\n                                                <h5 className=\"mb-0 \">{item.title.slice(0, 12)} </h5>\r\n                                            </a>\r\n                                            <div class=\"mb-2 align-items-center\">\r\n                                                <div class=\"mt-2 mb-2 d-flex justify-content-center text-align-center gap-5\">\r\n                                                    <span>Total NFTs:</span>\r\n                                                    <span>{item.nft_data.length}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                                {/* <div>\r\n                                    <div className=\"card position-relative \">\r\n                                        <div className=\"image-over \">\r\n                                            <Link to={`/popularcollection/details/${item?.slug}`}>\r\n                                                <img className=\"card-img-top\" src={item?.image} alt=\"\" />\r\n                                            </Link>\r\n                                        </div> */}\r\n                                {/* Card Caption */}\r\n\r\n                                {/* <div className=\"card-caption col-12 p-0\">\r\n                                            <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} /> */}\r\n\r\n                                <div className=\"card-caption col-12 p-0\">\r\n                                    <img className='logo' src={item?.organization_detail?.logo} alt='logo' width={50} height={50} />\r\n\r\n                                    {/* Card Body */}\r\n                                    {/* <div className=\"card-body\">\r\n                                                <a>\r\n                                                    <h5 className=\"mb-0 \">{item.title.slice(0, 15)}...</h5>\r\n                                                </a>\r\n                                                <div class=\"\"><p> {item.description.slice(0, 52)}...</p></div>\r\n                                                <div class=\"mb-2 align-items-center\">\r\n                                                    <div class=\"mt-2 mb-2 d-flex justify-content-between text-align-center fundraiser_sale\">\r\n                                                        {item?.nft_data.length == 1 ? (\r\n\r\n                                                            <span>{item?.nft_data.length} NFT</span>\r\n                                                        ) : (\r\n                                                            <span>{item?.nft_data.length} NFTs</span>\r\n                                                        )\r\n\r\n                                                        }\r\n                                                    </div>\r\n                                                </div> */}\r\n                                    {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span style={{ color: '#8E8E8E' }}>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\">{item?.user_data?.username}</h6>\r\n                                                                </a>\r\n                                                            </div> */}\r\n                                    {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div> */}\r\n                                    {/* <div>\r\n                                                                {item.status == '1' ?\r\n                                                                    <Button>Donation</Button>\r\n                                                                    :\r\n                                                                    <Button>Product Sale</Button>\r\n                                                                }\r\n                                                            </div> */}\r\n                                    {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                    {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                    // </div>\r\n                            // </div>\r\n                            // </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default Collections;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Exclusive Assets\",\r\n    heading: \"Explore\",\r\n    btn_1: \"View All\",\r\n    btn_2: \"Load More\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        img: \"/img/auction_1.jpg\",\r\n        title: \"Walking On Air\",\r\n        owner: \"Richard\",\r\n        price: \"1.5 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        img: \"/img/auction_2.jpg\",\r\n        title: \"Domain Names\",\r\n        owner: \"John Deo\",\r\n        price: \"2.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        img: \"/img/auction_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        owner: \"Arham\",\r\n        price: \"2.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        img: \"/img/auction_4.jpg\",\r\n        title: \"Industrial Revolution\",\r\n        owner: \"Yasmin\",\r\n        price: \"1.8 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        img: \"/img/auction_5.jpg\",\r\n        title: \"Utility\",\r\n        owner: \"Junaid\",\r\n        price: \"1.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        img: \"/img/auction_6.jpg\",\r\n        title: \"Sports\",\r\n        owner: \"ArtNox\",\r\n        price: \"1.9 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"7\",\r\n        img: \"/img/auction_7.jpg\",\r\n        title: \"Cartoon Heroes\",\r\n        owner: \"Junaid\",\r\n        price: \"3.2 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"8\",\r\n        img: \"/img/auction_8.jpg\",\r\n        title: \"Gaming Chair\",\r\n        owner: \"Johnson\",\r\n        price: \"0.69 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"9\",\r\n        img: \"/img/auction_9.jpg\",\r\n        title: \"Photography\",\r\n        owner: \"Sara\",\r\n        price: \"2.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"10\",\r\n        img: \"/img/auction_10.jpg\",\r\n        title: \"Zed Run\",\r\n        owner: \"SpaceMan\",\r\n        price: \"3.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"11\",\r\n        img: \"/img/auction_11.jpg\",\r\n        title: \"Rare Tyres\",\r\n        owner: \"Monas\",\r\n        price: \"2.2 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"12\",\r\n        img: \"/img/auction_12.jpg\",\r\n        title: \"World of Women\",\r\n        owner: \"Victor\",\r\n        price: \"4.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n]\r\n\r\nclass ExploreOne extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area load-more p-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.initData.pre_heading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/explore-3\">{this.state.initData.btn_1}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`exo_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/item-details\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                </a>\r\n                                                <div className=\"seller d-flex align-items-center my-3\">\r\n                                                    <span>Owned By</span>\r\n                                                    <a href=\"/author\">\r\n                                                        <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span>{item.price}</span>\r\n                                                    <span>{item.count}</span>\r\n                                                </div>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/login\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <a id=\"load-btn\" className=\"btn btn-bordered-white mt-5\" href=\"#\">{this.state.initData.btn_2}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreOne;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst data = {\r\n    preHeading: \"How It Works\",\r\n    heading: \"Create and sell your NFTs\",\r\n    workData: [\r\n        {\r\n            \"id\": 1,\r\n            \"icon\": \"icons icon-wallet text-effect\",\r\n            \"title\": \"Setup your wallet\",\r\n            \"text\": \"Click Connect Wallet in the top right corner to login and get started.\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"icon\": \"icons icon-grid text-effect\",\r\n            \"title\": \"Create your collection\",\r\n            \"text\": \"Click Creator and set up your organization profile, description, fundraising goal and more.\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"icon\": \"icons icon-drawer text-effect\",\r\n            \"title\": \"Add your NFTs\",\r\n            \"text\": \"Upload your project art or images and description.\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"icon\": \"icons icon-bag text-effect\",\r\n            \"title\": \"List them for sale\",\r\n            \"text\": \"Choose how you want to price and sell your NFTs!\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst Work = () => {\r\n\r\n\r\n    return (\r\n        <section className=\"work-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro mb-4\">\r\n                            <div className=\"intro-content\">\r\n                                <span>{data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {data?.workData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Work */}\r\n                                <div className=\"single-work\">\r\n                                    <i className={item.icon} />\r\n                                    <h4>{item.title}</h4>\r\n                                    <p>{item.text}</p>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Work;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst footerSlice = createSlice({\r\n    name: 'footer',\r\n\r\n    initialState: {\r\n        footer: [],\r\n        aboutus: []\r\n\r\n    },\r\n    reducers: {\r\n\r\n        getfooter: (state, action) => {\r\n            state.footer = action.payload;\r\n        },\r\n        getabout: (state, action) => {\r\n            state.aboutus = action.payload;\r\n        },\r\n\r\n    },\r\n});\r\n\r\nexport const footerReducer = footerSlice.reducer\r\n\r\nexport const {\r\n    getfooter,\r\n    getabout,\r\n} = footerSlice.actions;","import axios from \"axios\";\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getabout, getfooter } from \"../Slices/footerSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const getFooter = createAsyncThunk(\r\n    \"auth/footer\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/term-condition`, config)\r\n            thunkAPI.dispatch(getfooter(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const AboutUsAction = createAsyncThunk(\r\n    \"auth/about\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAbouts`, config)\r\n            thunkAPI.dispatch(getabout(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getFooter } from '../../redux/Actions/footerAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Footer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter())\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n    // console.log(userRole)\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const history = useHistory()\r\n    const handleCreate = () => {\r\n\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        else if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n        else if (!userToken) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n\r\n\r\n        <footer className=\"footer-area\">\r\n            {/* Footer Top */}\r\n            <div className=\"footer-top\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Logo */}\r\n                                <a className=\"navbar-brand\" href=\"/\">\r\n                                    <img src=\"/img/logo.png\" alt=\"\" />\r\n                                </a>\r\n                                <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                                {/* Social Icons */}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Useful Links</h4>\r\n                                <ul>\r\n                                    <li className=\"nav-item\">\r\n                                        <a onClick={() => handleCreate()} className=\"\">Create Project</a>\r\n                                    </li>\r\n                                    {/* <li><Link to=\"/create\" onClick={handleCreate}>Create Project</Link></li> */}\r\n                                    <li><Link to={`/all/${\"LatestProjects\"}`}>Explore NFTs</Link></li>\r\n                                    <li><Link to=\"/terms&conditions\">Terms of Service</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Community</h4>\r\n                                <ul>\r\n                                    <li><a target=\"_blank\" href=\"https://www.canopycrypto.io/our-team/\">About Us</a></li>\r\n                                    {/* <li><Link to='/https://www.canopycrypto.io/our-team/'>About Us</Link></li> */}\r\n                                    <li><Link to='/contact'>Get Support</Link></li>\r\n                                    <li><Link to='/rewards'>Rewards</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Footer Bottom */}\r\n            <div className=\"footer-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Copyright Area */}\r\n                            <div className=\"copyright-area d-flex flex-wrap justify-content-center justify-content-sm-between text-center py-4\">\r\n                                {/* Copyright Left */}\r\n\r\n                                <div className=\"copyright-left\">© 2023 Copyright Karmatica.</div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ModalSearch = () => {\r\n    const dispatch = useDispatch()\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n    }\r\n    return (\r\n        <div id=\"search\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        {/* {this.state.data.menuName} <i className={this.state.data.menuIcon} /> */}\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form className=\"row\">\r\n                            <div className=\"col-12 align-self-center\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 pb-3\">\r\n                                        <Link to='/author'>Profile</Link>\r\n                                        <Link to='/projectlist'>My Projects</Link>\r\n                                        {/* <button type='button' class=\"dropdown-item\"><a href='/author'>Profile</a></button>\r\n                <button type='button' class=\"dropdown-item\"><a href='/projectlist'>My Projects</a></button> */}\r\n                                        <button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'>Logout</a></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group mt-4\">\r\n                                        <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group align-self-center\">\r\n                                        {/* <button className=\"btn btn-bordered-white mt-3\">{this.state.data.btnText}</button> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ModalSearch;","import React from 'react';\r\n\r\nconst ModalMenu = () => {\r\n    return (\r\n        <div id=\"menu\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        Menu <i className=\"far fa-times-circle icon-close\" />\r\n                    </div>\r\n                    <div className=\"menu modal-body\">\r\n                        <div className=\"row w-100\">\r\n                            <div className=\"items p-0 col-12 text-center\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalMenu;","import React from 'react';\r\n\r\nconst Scrollup = () => {\r\n    return (\r\n        <div id=\"scroll-to-top\" className=\"scroll-to-top\">\r\n            <a href=\"#header\" className=\"smooth-anchor\">\r\n                <i className=\"fas fa-arrow-up\" />\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scrollup;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Hero from '../components/Hero/Hero';\r\nimport Auctions from '../components/Auctions/AuctionsOne';\r\nimport TopSeller from '../components/TopSeller/topfundraiser';\r\nimport Collections from '../components/Collections/Collections';\r\nimport Explore from '../components/Explore/ExploreOne';\r\nimport Work from '../components/Work/Work';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Hero />\r\n            <Auctions key=\"latestProjects\" type={\"LatestProjects\"} />\r\n            {/* <Auctions type={\"Top Fundraisers\"} /> */}\r\n            {/* <Auctions key=\"recentCampaigns\" type={\"RecentCampaigns\"} /> */}\r\n            {/* <Auctions type={\"Popular Connections\"} /> */}\r\n            <Fundraiser />\r\n            <Collections />\r\n            {/* <Explore /> */}\r\n            <Work />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Breadcrumb extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"breadcrumb-area overlay-dark d-flex align-items-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Breamcrumb Content */}\r\n                            <div className=\"breadcrumb-content text-center\">\r\n                                <h2 className=\"m-0\">{this.props.title}</h2>\r\n                                <ol className=\"breadcrumb d-flex justify-content-center\">\r\n                                    <li className=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\r\n                                    <li className=\"breadcrumb-item\"><a href=\"#\">{this.props.subpage}</a></li>\r\n                                    <li className=\"breadcrumb-item active\">{this.props.page}</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/explore\";\r\n\r\nclass ExploreTwo extends Component {\r\n    state = {\r\n        data: {},\r\n        exploreData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    exploreData: res.data.exploreData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/explore-1\">{this.state.data.btnText}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.exploreData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`edt_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/item-details\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                </a>\r\n                                                <div className=\"seller d-flex align-items-center my-3\">\r\n                                                    <span>Owned By</span>\r\n                                                    <a href=\"/author\">\r\n                                                        <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span>{item.price}</span>\r\n                                                    {/* <span>{item.count}</span> */}\r\n                                                </div>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreTwo;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass ExploreOne extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 1\" />\r\n                <Explore />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreOne;","/**\r\n * Loader Spinner\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n\r\n\r\n\r\n    return (\r\n        // <div style={{position: 'absolute', backgroundColor: '#0002', width: '100%', height: '100%'}}>\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                height: \"100px\",\r\n                width: \"100px\",\r\n                margin: \"auto\",\r\n                display: \"block\",\r\n                // position: 'absolute',\r\n                // left: 'calc(50% - 50px)',\r\n                // top: 'calc(50% - 50px)'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\nimport swal from 'sweetalert';\r\n\r\nconst GetAllProjects = () => {\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const projects = useSelector(state => {\r\n        return state.projectdetails.projects\r\n    })\r\n\r\n    console.log(projects, 'projects')\r\n\r\n    useEffect(() => {\r\n        dispatch(ProjectList())\r\n    }, [dispatch])\r\n\r\n    const showDeleteHandler = (id) => {\r\n        // debugger\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this project!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    dispatch(DeleteProject(id))\r\n                    swal(\"Poof! Your project has been deleted!\", {\r\n                        icon: \"success\",\r\n                    });\r\n                } else {\r\n                    swal(\"Your project is safe!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    {window.ethereum?.selectedAddress && (\r\n\r\n                                        <h3 className=\"mt-3 mb-0\">My Projects</h3>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {projects && projects.length ?\r\n                                [...new Map(projects.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                        return (\r\n                                            <Link key={`edth_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                                <div>\r\n                                                    {/* <button onClick={() => showDeleteHandler()}>delete</button> */}\r\n                                                    <div className=\"card project_cards\">\r\n                                                        <div className=\"image-over relative \">\r\n                                                            {item.is_nft_mintted !== 1 &&\r\n\r\n                                                                <i class=\"fa-sharp fa-solid fa-trash\" onClick={() => showDeleteHandler(item.id)}></i>\r\n                                                            }\r\n                                                            <Link to={`/projnftdetails/${item.slug}`}>\r\n                                                                {/* <i class=\"fa-solid fa-pen\" ></i> */}\r\n                                                                <img className=\"card-img-top\" src={item?.image} alt={item.nft_data.description} />\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                        <div className='token'>\r\n                                                            <span></span>\r\n                                                        </div>\r\n                                                        {/* Card Caption */}\r\n                                                        <div className=\"card-caption col-12 p-0\">\r\n                                                            {/* Card Body */}\r\n                                                            <div className=\"card-body\">\r\n                                                                <a>\r\n                                                                    <h5 className=\"mb-0 pb-0 break-all\">{item.title.slice(0, 16)}</h5>\r\n                                                                </a>\r\n                                                                <div className=\"seller d-flex align-items-center my-2\">\r\n                                                                    <span>Owned By</span>\r\n\r\n                                                                    <h6 className=\"ml-2 mb-0\">You</h6>\r\n\r\n                                                                </div>\r\n                                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                    <span>{item.price} MATIC</span>\r\n                                                                    {item.nft_data.length == 1 ? (\r\n\r\n                                                                        <span>{item.nft_data.length} NFT </span>\r\n                                                                    ) : (\r\n                                                                        <><span>{item.nft_data.length} NFTs </span>\r\n                                                                            <span> + {item.number_of_nft} NFTs </span></>\r\n                                                                    )}\r\n                                                                </div>\r\n\r\n                                                                {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                                {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        )\r\n                                    }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    {window.ethereum?.selectedAddress ? (\r\n                                        <h2 className='allproj2'>\r\n                                            You have no projects yet, <Link to=\"/create\">create one now</Link>\r\n                                        </h2>\r\n\r\n                                    ) : (\r\n                                        <h2 className='allproj2'>\r\n                                            Please connect you wallet to continue, <Link to=\"/wallet-connect\">Connect</Link>\r\n                                        </h2>\r\n                                    )}\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllProjects; ","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ProjectList';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport GetAllProjects from '../components/Explore/ProjectList';\r\n\r\nconst ExploreTwo = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Projects\" subpage=\"Explore\" page=\"\" /> */}\r\n            <GetAllProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExploreTwo;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Explore\",\r\n    heading: \"Exclusive Digital Assets\",\r\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        img: \"/img/auction_1.jpg\",\r\n        title: \"Walking On Air\",\r\n        owner: \"Richard\",\r\n        price: \"1.5 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        img: \"/img/auction_2.jpg\",\r\n        title: \"Domain Names\",\r\n        owner: \"John Deo\",\r\n        price: \"2.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        img: \"/img/auction_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        owner: \"Arham\",\r\n        price: \"2.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        img: \"/img/auction_4.jpg\",\r\n        title: \"Industrial Revolution\",\r\n        owner: \"Yasmin\",\r\n        price: \"1.8 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        img: \"/img/auction_5.jpg\",\r\n        title: \"Utility\",\r\n        owner: \"Junaid\",\r\n        price: \"1.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        img: \"/img/auction_6.jpg\",\r\n        title: \"Sports\",\r\n        owner: \"ArtNox\",\r\n        price: \"1.9 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n]\r\n\r\nclass ExploreFive extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"explore-slides\">\r\n                        <div className=\"swiper-container slider-mid items\">\r\n                            <div className=\"swiper-wrapper\">\r\n                                {/* Single Slide */}\r\n                                {this.state.data.map((item, idx) => {\r\n                                    return (\r\n                                        <div key={`exfi_${idx}`} className=\"swiper-slide item\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"image-over\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <div className=\"seller d-flex align-items-center my-3\">\r\n                                                            <span>Owned By</span>\r\n                                                            <a href=\"/author\">\r\n                                                                <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                            <span>{item.price}</span>\r\n                                                            <span>{item.count}</span>\r\n                                                        </div>\r\n                                                        <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/create\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div className=\"swiper-pagination\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreFive;","import React, { Component } from 'react';\r\nimport AuctionsOne from '../Auctions/AuctionsOne';\r\n\r\n\r\n\r\nconst LatestProject = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <AuctionsOne />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default LatestProject;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreFive';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\n\r\nconst LatestProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" />\r\n            <AuctionsOne type=\"LatestProjects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LatestProjects;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreFour from './latestProjects';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\n\r\nconst Auctions = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LatestProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Auctions;","\r\nimport React, { useState } from \"react\";\r\n\r\nconst ReadMore = ({ data }) => {\r\n\r\n    const [isReadMore, setIsReadMore] = useState(true);\r\n    const toggleReadMore = () => {\r\n        setIsReadMore(!isReadMore);\r\n    };\r\n\r\n    return (\r\n        <p className=\"text\">\r\n            <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: isReadMore ? data?.slice(0, 500) : data }} />\r\n            <span onClick={toggleReadMore} className=\"read-or-hide\">\r\n                {isReadMore ? \"...read more\" : \" show less\"}\r\n            </span>\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default ReadMore","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst FundTransdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n\r\n\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg class=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></circle><path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {funddetail?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                    {funddetail?.payment_history?.length == 0 &&\r\n                        <div className='nothing'>\r\n                            No matching records found\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FundTransdataTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst UserTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    // const latprojnftdetail = useSelector(state => {\r\n    //     // \r\n    //     return state?.projectdetails?.getnftwoldetails\r\n    // })\r\n    // console.log('lattt', latprojnftdetail.nft_history)\r\n    // useEffect(() => {\r\n    //     dispatch(GetNftwol(props.id))\r\n    // }, [props.id])\r\n    const location = useLocation()\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <tbody>\r\n                            {userdet?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n\r\n\r\n\r\n\r\n                    </Table>\r\n\r\n                </Panel>\r\n                {userdet?.payment_history?.length == 0 &&\r\n                    <div className='nothing'>\r\n                        No matching records found\r\n                    </div>\r\n                }\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserTransdataTable","// import Button from 'react-bootstrap/Button';\r\n// import Modal from 'react-bootstrap/Modal';\r\n// import { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useEffect, useRef, useState } from 'react';\r\n// import { Controller, useForm } from 'react-hook-form';\r\n// import { CopyToClipboard } from 'react-copy-to-clipboard'\r\n// import {\r\n//     EmailShareButton,\r\n//     FacebookIcon,\r\n//     FacebookShareButton,\r\n//     InstapaperShareButton,\r\n//     InstapaperIcon,\r\n//     LineShareButton,\r\n//     LinkedinShareButton,\r\n//     PinterestShareButton,\r\n//     RedditShareButton,\r\n//     TelegramIcon,\r\n//     TelegramShareButton,\r\n//     TwitterIcon,\r\n//     TwitterShareButton,\r\n//     WhatsappIcon,\r\n//     WhatsappShareButton,\r\n//     LinkedinIcon,\r\n//     EmailIcon,\r\n// } from \"react-share\";\r\n// import {\r\n//     FacebookShareCount,\r\n//     HatenaShareCount,\r\n//     OKShareCount,\r\n//     PinterestShareCount,\r\n//     RedditShareCount,\r\n//     TumblrShareCount,\r\n//     VKShareCount\r\n// } from \"react-share\";\r\n// import JoditEditor from 'jodit-react';\r\n// import { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\n// import { useParams } from 'react-router';\r\n// // import 'bootstrap/dist/css/bootstrap.min.css';\r\n// function ProjDetailPopup(props) {\r\n//     const editor = useRef(null);\r\n//     // const [title, setTitle] = useState(\"\");\r\n//     // const [description, setDescription] = useState(\"\");\r\n//     // const [short_url, setShortUrl] = useState(\"\");\r\n//     // const [symbol, setSymbol] = useState(\"\");\r\n//     const dispatch = useDispatch()\r\n//     const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n//     const [description, setDescription] = useState();\r\n//     const id = useParams()\r\n//     const [type, setType] = useState()\r\n//     // const url = window.location.href + '/' + props.userRef\r\n//     // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n//     const { countries } = useSelector(state => state.countries)\r\n//     const [country, setCountry] = useState('')\r\n//     console.log('country', country)\r\n//     const [state, setState] = useState('')\r\n//     const [city, setCity] = useState('')\r\n//     console.log(countries?.data?.data, 'cntry')\r\n//     const states = useSelector(state => {\r\n//         // debugger\r\n//         return state.countries.states\r\n//     })\r\n//     // console.log(countries?.data?.data)\r\n//     useEffect(() => {\r\n//         dispatch(CategoriesAction())\r\n//         dispatch(CountryList())\r\n//         // dispatch(StateList('101'))\r\n\r\n//         // dispatch(StateList(projdetail.country))\r\n//     }, [])\r\n\r\n//     const handleChangeCountry = (event) => {\r\n//         debugger\r\n//         event?.preventDefault()\r\n//         // 👇 Get input value from \"event\"\r\n//         setCountry(event?.currentTarget?.value);\r\n\r\n//         const formData = new FormData()\r\n//         formData.append('country_id', event?.currentTarget?.value)\r\n//         dispatch(StateList(formData))\r\n\r\n//         // if (country) {\r\n\r\n//         //     debugger\r\n//         // }\r\n//     };\r\n//     const handleChangeState = (event) => {\r\n//         // debugger\r\n//         event.preventDefault()\r\n//         // 👇 Get input value from \"event\"\r\n//         setState(event.currentTarget.value);\r\n//         const formData = new FormData()\r\n//         formData.append('country_id', country)\r\n//         formData.append('state_id', event?.currentTarget?.value)\r\n//         dispatch(CityList(formData))\r\n\r\n\r\n//         //     debugger\r\n//         // }\r\n//     };\r\n//     const handleChangeCity = (event) => {\r\n//         // debugger\r\n//         // 👇 Get input value from \"event\"\r\n//         setCity(event?.currentTarget?.value);\r\n\r\n//     };\r\n\r\n//     const cities = useSelector(state => {\r\n//         // debugger\r\n//         return state.countries.city\r\n//     })\r\n\r\n\r\n//     const projdetail = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.projectdetails\r\n//     })\r\n//     console.log(projdetail.nft_data, 'projdatanft')\r\n//     const cat = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.categories\r\n//     })\r\n//     const disablePastDate = () => {\r\n//         const today = new Date();\r\n//         const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n//         const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n//         const yyyy = today.getFullYear();\r\n//         return yyyy + \"-\" + mm + \"-\" + dd;\r\n//     };\r\n//     useEffect(() => {\r\n//         if (projdetail && Object.keys(projdetail).length) {\r\n\r\n//             setValue(\"title\", projdetail.title)\r\n//             setValue(\"address\", projdetail.address)\r\n//             setValue(\"description\", projdetail.description)\r\n//             setValue('state', projdetail.state)\r\n//             setValue('country', projdetail.country)\r\n//             setValue('city', projdetail.city)\r\n//             setValue(\"price\", projdetail.price)\r\n//             setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n//             setValue(\"start_date\", projdetail.start_date)\r\n//             setValue(\"end_date\", projdetail.end_date)\r\n//             setValue(\"type\", projdetail.type)\r\n//             setValue('category_id', projdetail.category_id)\r\n\r\n//             setType(projdetail.type)\r\n//             setCountry(projdetail.country)\r\n//             setDescription(projdetail.description)\r\n//             // setState(projdetail.state)\r\n//             // setCity(projdetail.city)\r\n//             console.log(projdetail.state, 'edit state')\r\n//             console.log(projdetail.city, 'edit city')\r\n//             setValue(\"image\", projdetail.image)\r\n//             const formData = new FormData()\r\n//             // formData.append('country_id', event?.currentTarget?.value)\r\n//             formData.append('country_id', projdetail.country)\r\n//             formData.append('state_id', projdetail.state)\r\n//             dispatch(StateList(formData))\r\n//             dispatch(CityList(formData))\r\n\r\n//         }\r\n//     }, [projdetail]);\r\n\r\n//     const OnSubmit = (data) => {\r\n//         const formData = new FormData()\r\n\r\n//         // formData.append('image', data.image[0])\r\n//         formData.append('title', data.title)\r\n//         formData.append('description', description)\r\n//         formData.append('state', data.state)\r\n//         formData.append('country', data.country)\r\n//         formData.append('city', data.city)\r\n//         formData.append('address', data.address)\r\n//         formData.append('price', data.price)\r\n//         formData.append('number_of_nft', data.number_of_nft)\r\n//         if (data?.type == 1) {\r\n\r\n//             formData.append('start_date', '')\r\n//             formData.append('end_date', '')\r\n//         } else {\r\n\r\n//             formData.append('start_date', data.start_date)\r\n//             formData.append('end_date', data.end_date)\r\n//         }\r\n//         formData.append('type', data.type)\r\n//         formData.append('category_id', data.category_id)\r\n//         debugger\r\n\r\n//         dispatch(UpdateProject(props.id, formData))\r\n//     }\r\n\r\n//     return (\r\n//         <Modal\r\n//             {...props}\r\n//             size=\"lg\"\r\n//             aria-labelledby=\"contained-modal-title-vcenter\"\r\n//             centered\r\n//         >\r\n//             <Modal.Header >\r\n\r\n//                 <div>\r\n//                     <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n//                 </div>\r\n//             </Modal.Header>\r\n//             <Modal.Body>\r\n//                 <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n//                     <div className=\"row\">\r\n\r\n//                         <div className=\"col-6\">\r\n//                             {/* {type == 1 && ( */}\r\n\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Project name</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"title\"\r\n//                                     placeholder=\"Project name\"\r\n//                                     {...register(\"title\", { required: true })}\r\n//                                     aria-invalid={errors.title ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n//                             </div>\r\n//                             {/* )} */}\r\n//                         </div>\r\n//                         <div className=\"col-6\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Web address</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"address\"\r\n//                                     placeholder=\"Web Address\"\r\n//                                     {...register(\"address\", { required: true })}\r\n//                                     aria-invalid={errors.address ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n//                             </div>\r\n//                         </div>\r\n\r\n\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Country</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"country\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"country\"\r\n//                                             {...register(\"country\", { required: true })}\r\n//                                             // value={value}\r\n//                                             // defaultValue={value}\r\n\r\n//                                             onChange={handleChangeCountry}\r\n\r\n//                                         >\r\n\r\n//                                             aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n//                                                 Select your country</option>\r\n//                                             {countries?.data?.data?.map((option, key) => (\r\n//                                                 <>\r\n//                                                     <option key={key.id} value={option.id}  >\r\n\r\n//                                                         {option.name}\r\n\r\n//                                                     </option>\r\n//                                                 </>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>State or Province</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"state\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"state\"\r\n\r\n//                                             {...register(\"state\", { required: true })}\r\n//                                             // defaultValue={value}\r\n//                                             // value={value}\r\n//                                             onChange={handleChangeState} >\r\n//                                             aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n//                                             {states?.data?.data?.map((option, key) => (\r\n\r\n//                                                 <><option key={key.id} value={option.id} >\r\n//                                                     {option.name}\r\n//                                                 </option></>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>City or Region</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"city\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"city\"\r\n//                                             {...register(\"city\", { required: true })}\r\n//                                             // value={value}\r\n//                                             onChange={handleChangeCity}\r\n//                                         >\r\n//                                             aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n//                                             {cities?.data?.data?.map((option, key) => (\r\n//                                                 <><option key={key.id} value={option.id}>\r\n//                                                     {option.name}\r\n//                                                 </option></>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         {/* <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>Country</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"country\"\r\n//                                             // selected={country}\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                                 // onChange={onChange}\r\n\r\n//                                                 <GeoLocation\r\n//                                                     // locationTitle=\"Country\"\r\n//                                                     isCountry\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n//                                                     onChange={setCountry}\r\n//                                                     required={true}\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>State or Province</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"state\"\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n//                                                 <GeoLocation\r\n\r\n//                                                     onChange={setState}\r\n//                                                     geoId={country}\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n\r\n\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>City or Region</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"city\"\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n//                                                 <GeoLocation\r\n\r\n//                                                     onChange={setCity}\r\n//                                                     geoId={state}\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div> */}\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 {projdetail.type == 2 ? (\r\n\r\n//                                     <label>Price</label>\r\n//                                 ) : (\r\n\r\n//                                     <label>Price per NFT</label>\r\n//                                 )}\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"price\"\r\n//                                     placeholder=\"Price\"\r\n//                                     {...register(\"price\", { required: true })}\r\n//                                     aria-invalid={errors.price ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 <label>Number of NFTs</label>\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"number_of_nft\"\r\n//                                     defaultValue={1}\r\n//                                     // disabled={type == 1}\r\n//                                     placeholder=\"Select your number of NFTs (1-10)\"\r\n//                                     min={1}\r\n//                                     max={10}\r\n//                                     {...register(\"number_of_nft\", { required: true })}\r\n//                                     aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n//                                 {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         {projdetail.type == 2 && (\r\n\r\n//                             <><div className=\"col-12 col-md-6\">\r\n//                                 <div className=\"form-group\">\r\n//                                     <label>Campaign Start date</label>\r\n//                                     <input\r\n//                                         type=\"date\"\r\n//                                         className=\"form-control\"\r\n//                                         name=\"start_date\"\r\n//                                         // min={disablePastDate()}\r\n//                                         // placeholder=\"Start date\"\r\n//                                         {...register(\"start_date\", { required: true })}\r\n//                                         aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n//                                     {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n//                                 </div>\r\n//                             </div><div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>Campaign End Date</label>\r\n//                                         <input\r\n//                                             type=\"date\"\r\n//                                             className=\"form-control\"\r\n//                                             name=\"end_date\"\r\n//                                             min={disablePastDate()}\r\n//                                             // placeholder=\"End date\"\r\n//                                             {...register(\"end_date\", { required: true })}\r\n//                                             aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n//                                         {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n//                                     </div>\r\n//                                 </div></>\r\n//                         )}\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 <label>Category</label>\r\n//                                 <select name=\"annual_revenue_range\"\r\n//                                     // defaultValue={}\r\n//                                     {...register(\"category_id\")}>\r\n//                                     {cat?.map((option, key) => (\r\n\r\n//                                         <option key={key.id} value={option.id}>\r\n//                                             {option.title}\r\n\r\n//                                         </option>\r\n//                                     ))}\r\n//                                 </select>\r\n//                             </div>\r\n//                         </div>\r\n\r\n\r\n//                         <div className=\"col-12\">\r\n//                             <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n//                         </div>\r\n//                     </div>\r\n\r\n\r\n\r\n//                 </form>\r\n//             </Modal.Body>\r\n//             {/* <Modal.Footer>\r\n//                 <Button onClick={props.onHide}>Close</Button>\r\n//             </Modal.Footer> */}\r\n//         </Modal >\r\n//     );\r\n// }\r\n\r\n// export default ProjDetailPopup\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\nimport { useParams } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ProjDetailPopup(props) {\r\n    const editor = useRef(null);\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n    const id = useParams()\r\n    const [type, setType] = useState()\r\n    // const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    const { countries } = useSelector(state => state.countries)\r\n    const [country, setCountry] = useState('')\r\n    console.log('country', country)\r\n    const [state, setState] = useState('')\r\n    const [city, setCity] = useState('')\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(countries?.data?.data)\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList('101'))\r\n\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n\r\n    const handleChangeCountry = (event) => {\r\n        event?.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n\r\n        const formData = new FormData()\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // debugger\r\n        event.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeCity = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCity(event?.currentTarget?.value);\r\n\r\n    };\r\n\r\n    const cities = useSelector(state => {\r\n        // debugger\r\n        return state.countries.city\r\n    })\r\n\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            setDescription(projdetail.description)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n        dispatch(UpdateProject(props.id, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-6 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Project name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Project name\"\r\n                                    {...register(\"title\", { required: true })}\r\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <div className=\"col-6 col-12\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    placeholder=\"Web Address\"\r\n                                    {...register(\"address\", { required: true })}\r\n                                    aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Country</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"country\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"country\"\r\n                                            {...register(\"country\", { required: true })}\r\n                                            // value={value}\r\n                                            // defaultValue={value}\r\n\r\n                                            onChange={handleChangeCountry}\r\n\r\n                                        >\r\n\r\n                                            aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                Select your country</option>\r\n                                            {countries?.data?.data?.map((option, key) => (\r\n                                                <>\r\n                                                    <option key={key.id} value={option.id}  >\r\n\r\n                                                        {option.name}\r\n\r\n                                                    </option>\r\n                                                </>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>State or Province</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"state\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"state\"\r\n\r\n                                            {...register(\"state\", { required: true })}\r\n                                            // defaultValue={value}\r\n                                            // value={value}\r\n                                            onChange={handleChangeState} >\r\n                                            aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n                                            {states?.data?.data?.map((option, key) => (\r\n\r\n                                                <><option key={key.id} value={option.id} >\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>City or Region</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"city\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}\r\n                                            // value={value}\r\n                                            onChange={handleChangeCity}\r\n                                        >\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                {projdetail.type == 2 ? (\r\n\r\n                                    <label>Price</label>\r\n                                ) : (\r\n\r\n                                    <label>Price per NFT</label>\r\n                                )}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    placeholder=\"Price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    defaultValue={1}\r\n                                    // disabled={type == 1}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    min={1}\r\n                                    max={10}\r\n                                    {...register(\"number_of_nft\", { required: true })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {projdetail.type == 2 && (\r\n\r\n                            <><div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // min={disablePastDate()}\r\n                                        // placeholder=\"Start date\"\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                        aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                    {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                </div>\r\n                            </div><div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Campaign End Date</label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n                                            name=\"end_date\"\r\n                                            min={disablePastDate()}\r\n                                            // placeholder=\"End date\"\r\n                                            {...register(\"end_date\", { required: true })}\r\n                                            aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                        {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                    </div>\r\n                                </div></>\r\n                        )}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"annual_revenue_range\"\r\n                                    // defaultValue={}\r\n                                    {...register(\"category_id\")}>\r\n                                    {cat?.map((option, key) => (\r\n\r\n                                        <option key={key.id} value={option.id}>\r\n                                            {option.title}\r\n\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default ProjDetailPopup","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nconst UserdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    // const { id } = useParams()\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details' >\r\n\r\n                        <tbody >\r\n\r\n                            <tr>\r\n\r\n                                <td><span>Name </span> <span>{userdet.username}</span></td>\r\n                                <td><span>Wallet ID</span>  <span>{userdet.wallet_id}</span></td>\r\n                                <td><span>Reffers </span> <span>{userdet.referrers}</span></td>\r\n                                <td><span>Refferal Amount </span> <span>{userdet.referral_amount} KARMATICA token</span></td>\r\n                                <td><span>Fundraised </span> <span>{userdet.total_fundraised} MATIC</span></td>\r\n\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserdataTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { LatestProjectDetail, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { ProgressBar, Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nimport dayjs from 'dayjs';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\nconst ProjdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { slug } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'userprojdata')\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(latprojdetail, 'userprojdetaaaa')\r\n    // const [projuserID, setProjuserid] = useState()\r\n    // console.log('projjj', projuserID)\r\n    // const projuserid = projdetail?.user_data?.map((item) => {\r\n    //     return (\r\n    //         setProjuserid(item.user_id)\r\n    //     )\r\n    // })\r\n    console.log(userdet.user_id, 'uid')\r\n    useEffect(() => {\r\n        dispatch(LatestProjectDetail(slug))\r\n        dispatch(ProjectDetail(slug))\r\n        dispatch(PopularCollectionActionDetails(props.idx))\r\n    }, [slug])\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    const location = useLocation();\r\n    const date1 = new Date(coll?.updated_at)\r\n    const date2 = new Date()\r\n    const time_difference = date2.getTime() - date1.getTime();\r\n    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n    console.log('days', days_difference)\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details'>\r\n                        {projdetail?.user_data?.user_id === userdet?.user_id && localStorage.getItem('authToken') &&\r\n\r\n                            <div >\r\n                                <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                    setModalShowproj(true)}></i>\r\n                                <ProjDetailPopup\r\n                                    // debugger\r\n                                    id={props.id}\r\n                                    show={modalShowproj}\r\n                                    onHide={() => setModalShowproj(false)} />\r\n                                {/* <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a> */}\r\n\r\n                                {/* <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                {/* </a> */}\r\n                            </div>\r\n                        }\r\n                        <tbody className=''>\r\n                            {/* {projdetail.nft_data?.map((items) => {\r\n                                return ( */}\r\n                            <tr>\r\n\r\n                                {/* {projdetail?.country_name?.map((item) => {\r\n                                    return (\r\n\r\n                                        <tr>Country : {item.name}</tr>\r\n                                    )\r\n                                })} */}\r\n                                {location.pathname === `/projects/${slug}` ? (\r\n\r\n                                    <>\r\n                                        {/* <td><span>Owned By:</span> <span>{latprojdetail?.user_data?.username}</span> </td> */}\r\n                                        {/* <td><span>Total NFT's:</span> <span>{latprojdetail?.number_of_nft}</span></td> */}\r\n                                        <td><span>Chain: </span> <span>Polygon (Matic)</span></td>\r\n                                        <td><span>Created : </span> <span> {dayjs(latprojdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\r\n                                        <td><span>Country </span> <span>{latprojdetail?.country_name?.name}</span></td>\r\n                                        <td><span>State</span>  <span>{latprojdetail?.state_name?.name}</span> </td>\r\n                                        <td><span>City</span>  <span>{latprojdetail?.city_name?.name}</span> </td>\r\n                                        <td><span>Number of NFTs</span>  <span>{latprojdetail?.number_of_nft}</span> </td>\r\n                                        {latprojdetail.type == 2 &&\r\n\r\n                                            <><td><span>Start Date</span>  <span>{latprojdetail?.start_date}</span> </td>\r\n                                                <td><span>End Date </span> <span>{latprojdetail?.end_date}</span> </td></>\r\n                                        }\r\n                                        <td><span>Price </span> <span> {latprojdetail?.price} </span> </td></>\r\n                                ) : (\r\n                                    <>\r\n                                        {location.pathname === `/popularcollection/details/${slug}` ? (\r\n                                            <>\r\n\r\n                                                <td><span>Number of NFTs </span><span> {coll?.nft_data?.length}</span></td>\r\n                                                <td><span>Chain </span> <span>Polygon (Matic)</span></td>\r\n                                                <td><span>Created at</span>  <span>{days_difference} days ago</span> </td>\r\n                                                <td><span>Category</span>  <span>{coll?.category}</span> </td>\r\n                                            </>\r\n                                        ) : (\r\n\r\n                                            <>\r\n                                                <td><span>Chain: </span> <span>Polygon (Matic)</span></td>\r\n                                                <td><span>Created : </span> <span> {dayjs(projdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\r\n                                                <td><span>Country </span> <span>{projdetail.country_name?.name}</span></td>\r\n                                                <td><span>State</span>  <span>{projdetail.state_name?.name}</span> </td>\r\n                                                <td><span>City</span>  <span>{projdetail.city_name?.name}</span> </td>\r\n                                                <td><span>Number of NFTs</span>  <span>{projdetail.number_of_nft}</span> </td>\r\n                                                {projdetail.type == 2 &&\r\n\r\n                                                    <><td><span>Start Date</span>  <span>{projdetail.start_date}</span> </td>\r\n                                                        <td><span>End Date </span> <span>{projdetail.end_date}</span> </td></>\r\n                                                }\r\n                                                <td><span>Price </span> <span> {projdetail.price} </span> </td>\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjdataTable","// import React, { useEffect, useState } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { Collapse } from 'antd';\r\n// import { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\n// import { useParams } from 'react-router';\r\n// import { Table } from 'react-bootstrap';\r\n\r\n// const LatNftdataTable = () => {\r\n//     const dispatch = useDispatch()\r\n\r\n//     const { Panel } = Collapse;\r\n//     const onChange = (key) => {\r\n//         console.log(key);\r\n//     };\r\n//     const { id } = useParams()\r\n//     const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n//     const onPositionChange = (newExpandIconPosition) => {\r\n//         setExpandIconPosition(newExpandIconPosition);\r\n//     };\r\n//     const projdetail = useSelector(state => {\r\n//         // debugger\r\n//         return state?.projectdetails?.latestprojectdetails\r\n//     })\r\n//     console.log(projdetail.nft_data, 'projdatanft')\r\n\r\n//     useEffect(() => {\r\n//         // debugger\r\n//         dispatch(ProjectDetail(id))\r\n//     }, [id])\r\n\r\n//     return (\r\n//         <div>\r\n//             <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n//                 <Panel header=\"Item Activity\" key=\"1\">\r\n//                     <Table responsive >\r\n//                         <thead>\r\n\r\n\r\n//                             <tr>\r\n\r\n//                                 <th>Item</th>\r\n//                                 <th>Price</th>\r\n//                                 <th>From</th>\r\n//                                 <th>To</th>\r\n//                                 <th>Transaction</th>\r\n//                             </tr>\r\n\r\n\r\n//                         </thead>\r\n//                         <tbody>\r\n//                             {projdetail?.project_activity && projdetail?.project_activity?.length ?\r\n//                                 [...new Map(projdetail?.project_activity.map(item =>\r\n//                                     [item[\"title\"], item])).values()].map((item, idx) => {\r\n//                                         return (\r\n\r\n//                                             <tr>\r\n\r\n//                                                 <td><img\r\n//                                                     src={item.image}\r\n//                                                     className=\"rounded-circle\"\r\n//                                                     alt=\"Avatar\"\r\n//                                                 />{item.nft_title.slice(0, 15)}</td>\r\n//                                                 <td>{item.price}</td>\r\n//                                                 <td>{item.pay_from.slice(0, 4)}...{item.pay_from.slice(35, 44)}</td>\r\n//                                                 <td>{item.pay_to.slice(0, 4)}...{item.pay_to.slice(35, 44)}</td>\r\n//                                                 <td>{item.txd_id.slice(0, 4)}...{item.txd_id.slice(35, 44)}</td>\r\n//                                             </tr>\r\n//                                         )\r\n//                                     }) :\r\n//                                 // <div className=\"col-12 col-sm-12 col-lg-12\">\r\n//                                 <>\r\n\r\n//                                     <span>You don't have any activity yet</span>\r\n\r\n//                                 </>\r\n//                                 // </div>\r\n//                             }\r\n//                             {/* {projdetail?.project_activity?.map((items) => {\r\n//                                 return (\r\n\r\n//                                     <tr>\r\n\r\n//                                         <td><img\r\n//                                             src={items.image}\r\n//                                             className=\"rounded-circle\"\r\n//                                             alt=\"Avatar\"\r\n//                                         />{items.nft_title.slice(0, 15)}</td>\r\n//                                         <td>{items.price}</td>\r\n//                                         <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n//                                         <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n//                                         <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n//                                     </tr>\r\n//                                 )\r\n//                             })} */}\r\n\r\n//                         </tbody>\r\n//                     </Table>\r\n//                 </Panel>\r\n//             </Collapse>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default LatNftdataTable\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst LatNftdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { slug } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(ProjectDetail(slug))\r\n    }, [slug])\r\n\r\n    return (\r\n        <div className='position-relative'>\r\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\" >\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>Item</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody className='img_table'>\r\n                            {projdetail?.project_activity && projdetail?.project_activity?.length ?\r\n                                [...new Map(projdetail?.project_activity.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                        return (\r\n                                            <tr>\r\n\r\n                                                <td><img\r\n                                                    src={item.image}\r\n                                                    className=\"rounded-circle mr-2\"\r\n                                                    alt=\"Avatar\"\r\n                                                />{item.nft_title.slice(0, 15)}</td>\r\n                                                <td>{item.price}</td>\r\n                                                <td>{item.pay_from.slice(0, 4)}...{item.pay_from.slice(35, 44)}</td>\r\n                                                <td>{item.pay_to.slice(0, 4)}...{item.pay_to.slice(35, 44)}</td>\r\n                                                <td>{item.txd_id.slice(0, 4)}...{item.txd_id.slice(35, 44)}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) :\r\n                                // <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                <>\r\n\r\n                                </>\r\n                            }\r\n                        </tbody>\r\n                        {/* <div className='nothing col-spam-5' colspan=\"5\">\r\n                            No matching records found\r\n                        </div> */}\r\n                    </Table>\r\n                    <div className='nothing'>\r\n                        {projdetail?.project_activity == 0 &&\r\n                            <span> No matching records found</span>\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftdataTable","\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects, LatestProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\nconst ProjNFTS = (props) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams();\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    useEffect(() => {\r\n        // \r\n        dispatch(LatestProjectDetail(slug))\r\n\r\n    }, [slug])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container\">\r\n                <div className='intro row m-0'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row items\">\r\n\r\n                    {latprojdetail?.nft_data?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* <div className=\"intro text-center\">\r\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                                </div> */}\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.slug}?refid=${props.refid}`}>\r\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            {/* <div className=\"countdown-times mb-3\">\r\n                                                <div className=\"countdown d-flex\" data-date={item.end_date} />\r\n                                            </div> */}\r\n\r\n\r\n                                            <h5 className=\"mb-0\">{item.title.slice(0, 16)} ...</h5>\r\n\r\n                                            {/* <a className=\"seller d-flex align-items-center my-3\">\r\n                                                <img className=\"avatar-sm rounded-circle\"\r\n                                                    src='https://images.unsplash.com/photo-1547555999-14e818e09e33?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1032&q=80' alt=\"\" />\r\n                                                <span className=\"ml-2\">{item.from}</span>\r\n                                            </a> */}\r\n                                            <div className=\"card-bottom\">\r\n                                                <p dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                                            </div>\r\n\r\n                                            <div className='button_group buy-invest-btn'>\r\n                                                {/* <div className=''>\r\n                                                    <Link to={`/nftprojdetails/${item.slug}`}><button className='btn ml-lg-auto btn-bordered-white'>Buy</button></Link>\r\n                                                </div> */}\r\n\r\n                                                <div className=''>\r\n                                                    <a><button className='btn py-2 ml-lg-auto btn-bordered-white'><Link to={`/nftprojdetails/${item.slug}`} style={{ color: \"white\" }}>Invest</Link></button></a>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* {item?.user_data?.user_id === userdet?.user_id && localStorage.getItem('authToken') && \r\n\r\n                                                {\r\n                                                    item?.is_mint == 0 ? (\r\n                                                        <div className='mint_btn'>\r\n                                                            <a href=\"#\"><button className='btn ml-lg-auto btn-bordered-white'>Mint</button></a>\r\n                                                        </div>\r\n                                                    ) : (\r\n\r\n                                                        <div className='mint_btn'>\r\n                                                            <a><button className='btn ml-lg-auto btn-bordered-white'>Minted</button></a>\r\n                                                        </div>\r\n                                                    )\r\n                                                }\r\n                                                \r\n                                            } */}\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                {/* {\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <a className=\"btn btn-bordered-white mt-5\">Load More</a>\r\n                    </div>\r\n                </div>\r\n               } */}\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default ProjNFTS;","// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { Link, useParams } from 'react-router-dom';\r\n// import { getPublicLiveProjects, LatestProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\n// const ProjNFTS = () => {\r\n\r\n\r\n//     const dispatch = useDispatch()\r\n//     const { id } = useParams();\r\n//     const latprojdetail = useSelector(state => {\r\n//         // \r\n//         return state.projectdetails.latestprojectdetails\r\n//     })\r\n\r\n//     useEffect(() => {\r\n//         // \r\n//         dispatch(LatestProjectDetail(id))\r\n\r\n//     }, [id])\r\n//     return (\r\n//         <section className=\"live-auctions-area single_project-detail\">\r\n//             <div className=\"container\">\r\n//                 <div className='intro row m-0'>\r\n//                     <div className=\"intro-content\">\r\n//                         <span style={{ marginLeft: \"15px\" }}>NFTs</span>\r\n//                         <h3 className=\"w-full mb-0\">NFTs</h3>\r\n//                     </div>\r\n//                 </div>\r\n\r\n\r\n//                 <div className=\"row items\">\r\n\r\n//                     {latprojdetail?.nft_data?.map((item, idx) => {\r\n//                         return (\r\n//                             <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n//                                 {/* <div className=\"intro text-center\">\r\n//                                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n//                                 </div> */}\r\n//                                 <div className=\"card\">\r\n\r\n//                                     <div className=\"image-over\">\r\n//                                         <Link to={`/nftprojdetails/${item.id}`}>\r\n//                                             <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n//                                         </Link>\r\n//                                     </div>\r\n//                                     {/* Card Caption */}\r\n//                                     <div className=\"card-caption col-12 p-0\">\r\n//                                         {/* Card Body */}\r\n//                                         <div className=\"card-body\">\r\n//                                             <div className=\"countdown-times mb-3\">\r\n//                                                 <div className=\"countdown d-flex\" data-date={item.end_date} />\r\n//                                             </div>\r\n//                                             <a href=\"/item-details\">\r\n//                                                 <h5 className=\"mb-0\">{item.title.toUpperCase()} {item.token_id}</h5>\r\n//                                             </a>\r\n//                                             {/* <a className=\"seller d-flex align-items-center my-3\">\r\n//                                                 <img className=\"avatar-sm rounded-circle\"\r\n//                                                     src='https://images.unsplash.com/photo-1547555999-14e818e09e33?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1032&q=80' alt=\"\" />\r\n//                                                 <span className=\"ml-2\">{item.from}</span>\r\n//                                             </a> */}\r\n//                                             <div className=\"card-bottom d-flex\">\r\n//                                                 <span dangerouslySetInnerHTML={{ __html: item.description.slice(0, 28).toUpperCase() }} /><span></span>\r\n//                                             </div>\r\n\r\n//                                         </div>\r\n//                                     </div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         );\r\n//                     })}\r\n//                 </div>\r\n//                 {/* {\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col-12 text-center\">\r\n//                         <a className=\"btn btn-bordered-white mt-5\">Load More</a>\r\n//                     </div>\r\n//                 </div>\r\n//                } */}\r\n//             </div>\r\n//         </section >\r\n//     );\r\n\r\n// }\r\n\r\n// export default ProjNFTS;\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects, LatestProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getPopularCollectiondetails } from '../../redux/Slices/popularCollectionSlice';\r\n\r\nconst CollectionNFTS = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams();\r\n    const collNft = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    console.log(collNft, \"collNft\")\r\n    useEffect(() => {\r\n\r\n        dispatch(getPopularCollectiondetails())\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container p-0\">\r\n                <div className='intro row m-0'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row items\">\r\n\r\n                    {collNft?.nft_data?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* <div className=\"intro text-center\">\r\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                                </div> */}\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.slug}`}>\r\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            {/* <div className=\"countdown-times mb-3\">\r\n                                                <div className=\"countdown d-flex\" data-date={item.end_date} />\r\n                                            </div> */}\r\n                                            <a href=\"/item-details\">\r\n                                                <h5 className=\"mb-0\">{item.title.slice(0,20)}...</h5>\r\n                                            </a>\r\n                                            {/* <a className=\"seller d-flex align-items-center my-3\">\r\n                                                <img className=\"avatar-sm rounded-circle\"\r\n                                                    src='https://images.unsplash.com/photo-1547555999-14e818e09e33?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1032&q=80' alt=\"\" />\r\n                                                <span className=\"ml-2\">{item.from}</span>\r\n                                            </a> */}\r\n                                            <div className=\"card-bottom d-flex\">\r\n                                                <span dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                {/* {\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <a className=\"btn btn-bordered-white mt-5\">Load More</a>\r\n                    </div>\r\n                </div>\r\n               } */}\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default CollectionNFTS;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Nftprice, Nftdeatil } from './nftprice'\r\nimport { useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport ReadMore from '../../readMore';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport UserdataTable from '../AuthorProfile/userTransTable';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport ProjdataTable from './projDetailtable';\r\nimport LatNftdataTable from './latProjNftdata';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { getPopularCollection } from '../../redux/Slices/popularCollectionSlice';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\nimport CollectionNFTS from '../Collections/collectionNfts';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst CollectionDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const slug = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionActionDetails(slug))\r\n\r\n\r\n    }, [slug])\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    console.log(coll, 'coll')\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail collection_detail\">\r\n            <div className=\"container\">\r\n                <div className='col-12 col-lg-12 '>\r\n                    <span className=\"p-0 title_main \">{coll?.title}</span>\r\n                </div>\r\n                <div className=\"row\">\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n\r\n                                <img src={coll?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12 col-lg-4 '>\r\n                        <div class=\"user-description mt-4 mt-sm-0\">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={coll?.description?.slice(0, 505)} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: coll.description }} /> */}\r\n                        </div>\r\n\r\n                        {/* <div className='content content_project'>\r\n                        <div className='card no-hover position-relative'>\r\n                        <div><span className='boldertext'>Number of NFTs :</span><span> {coll?.nft_data?.length}</span></div>\r\n                        <div><span className='boldertext'>Chain :</span> <span>Polygon (Matic)</span></div>\r\n                        <div><span className='boldertext'>Created at:</span>  <span> {days_difference}12  days ago</span></div>\r\n                        <div><span className='boldertext'>Category:</span>  <span>{coll?.category}</span></div>\r\n                        </div>\r\n\r\n                    </div> */}\r\n                        {/* \r\n                        <div className='table-main-detail mt-3 mt-lg-0 position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                                idx={slug}\r\n                            />\r\n                        </div> */}\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {/* <div className=\"col-lg-4 col-12 mt-3 mt-lg-0\">\r\n                        <div>\r\n                            <div className=\" mb-3\">\r\n\r\n\r\n\r\n\r\n\r\n                                {coll?.user_invest?.slice(0, 3)?.map((items) => {\r\n                                    const date1 = new Date(items.updated_at)\r\n                                    const date2 = new Date()\r\n                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                    console.log('days', days_difference)\r\n                                    return (\r\n\r\n                                        <ul className=\"m-0 custom_lis pl-0\">\r\n                                            <li>\r\n                                                <div className='lorem_done p-0'>\r\n                                                    <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    </svg>\r\n                                                    </span>\r\n\r\n                                                   \r\n                                                </div>\r\n                                            </li>\r\n\r\n\r\n                                        </ul>\r\n\r\n                                    )\r\n                                })}\r\n\r\n\r\n                                <p className='see_all'>See all</p>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-12 col-lg-12 mt-3\">\r\n                        {/* <div className='row'>\r\n                            <div className='filter'>\r\n                                <div className='filter-main-name'>\r\n                                    <div>Short</div>\r\n                                    <div>\r\n                                        <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"0\" fill=\"none\" width=\"24\" height=\"24\"/><g><path d=\"M7 10l5 5 5-5\" fill=\"#fff\"/></g></svg>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='filter-main'>\r\n                                    <ul>\r\n                                        <li>Latest</li>\r\n                                        <li>Oldest</li>\r\n                                        <li>Price:Low to Heigh</li>\r\n                                        <li>Price:Heigh to Low </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n\r\n\r\n\r\n                        {/* <div>\r\n\r\n                        <ProjdataTable\r\n                            idx={id}\r\n                        //  id={id}\r\n                        />\r\n                    </div> */}\r\n\r\n                        {/* </div> */}\r\n\r\n                        {/* <div className='col-12'>\r\n                        <div className='mt-3'>\r\n                            <div className='table-detail'>\r\n                                <LatNftdataTable />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div> */}\r\n\r\n                        <div className=\" col-12 mt-3 p-0\">\r\n                            <div className=\"items mt-0 explore-items p-0\">\r\n                                <CollectionNFTS />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                    </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default CollectionDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Explore/popularDetails';\r\n\r\nclass ItemDetails extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <CollectionDetails />\r\n                {/* <LiveAuctions /> */}\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemDetails;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/activity\";\r\n\r\nclass Activity extends Component {\r\n    state = {\r\n        data: {},\r\n        tabData_1: [],\r\n        tabData_2: [],\r\n        tabData_3: [],\r\n        filterData: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    tabData_1: res.data.tabData_1,\r\n                    tabData_2: res.data.tabData_2,\r\n                    tabData_3: res.data.tabData_3,\r\n                    filterData: res.data.filterData \r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"activity-area load-more\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro mb-4\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        <div className=\"col-12 col-md-6 col-lg-8\">\r\n                            {/* Netstorm Tab */}\r\n                            <ul className=\"netstorm-tab nav nav-tabs\" id=\"nav-tab\">\r\n                                <li>\r\n                                    <a className=\"active\" id=\"nav-home-tab\" data-toggle=\"pill\" href=\"#nav-home\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_1}</h5>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a id=\"nav-profile-tab\" data-toggle=\"pill\" href=\"#nav-profile\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_2}</h5>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a id=\"nav-contact-tab\" data-toggle=\"pill\" href=\"#nav-contact\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_3}</h5>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                            {/* Tab Content */}\r\n                            <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                                <div className=\"tab-pane fade show active\" id=\"nav-home\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_1.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`ato_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"nav-profile\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_2.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`att_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"nav-contact\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_3.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`atth_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            {/* Activity Content */}\r\n                            <div className=\"activity-content mt-5 mt-lg-0\">\r\n                                {/* Single Widget */}\r\n                                <div className=\"single-widget\">\r\n                                    {/* Search Widget */}\r\n                                    <div className=\"widget-content search-widget\">\r\n                                        <form action=\"#\">\r\n                                            <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Single Widget */}\r\n                                <div className=\"single-widget\">\r\n                                    {/* Filter Widget */}\r\n                                    <div className=\"widget filter-widget\">\r\n                                        <h4 className=\"title\">{this.state.data.widgetTitle}</h4>\r\n                                        {/* Filter Widget Content */}\r\n                                        <div className=\"widget-content\">\r\n                                            {/* Tags Widget Items */}\r\n                                            <div className=\"widget-content filter-widget-items mt-3\">\r\n                                                {this.state.filterData.map((item, idx) => {\r\n                                                    return (\r\n                                                        <a key={`fd_${idx}`} href=\"#\" className=\"badge tag\">{item.title}</a>\r\n                                                    );\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Activities from '../components/Activity/Activity';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Activity extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Activity\" subpage=\"Pages\" page=\"Activity\" />\r\n                <Activities />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/blog\";\r\n\r\nclass Blog extends Component {\r\n    state = {\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data.blogData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"blog-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`bd_${idx}`} className=\"col-12 col-md-4 item\">\r\n                                    {/* Single Blog */}\r\n                                    <div className=\"card blog-card\">\r\n                                        {/* Blog Thumb */}\r\n                                        <div className=\"blog-thumb\">\r\n                                            <a href=\"/blog-single\"><img src={item.img} alt=\"\" /></a>\r\n                                        </div>\r\n                                        {/* Blog Content */}\r\n                                        <div className=\"blog-content\">\r\n                                            {/* Meta Info */}\r\n                                            <ul className=\"meta-info d-flex justify-content-between list-unstyled mt-4\">\r\n                                                <li>By <a href=\"#\">{item.author}</a></li>\r\n                                                <li><a href=\"#\">{item.date}</a></li>\r\n                                            </ul>\r\n                                            {/* Blog Title */}\r\n                                            <a href=\"/blog-single\">\r\n                                                <h4>{item.title}</h4>\r\n                                            </a>\r\n                                            <p>{item.content}</p>\r\n                                            {/* Blog Button */}\r\n                                            <a className=\"btn content-btn\" href=\"/blog-single\">{item.btnText}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport BlogSection from '../components/Blog/Blog';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Blog extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Blog\" subpage=\"Community\" page=\"Blog\" />\r\n                <BlogSection />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/sidebar\";\r\n\r\nclass Sidebar extends Component {\r\n    state = {\r\n        data: {},\r\n        widgetData_1: [],\r\n        widgetData_2: [],\r\n        widgetData_3: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    widgetData_1: res.data.widgetData_1,\r\n                    widgetData_2: res.data.widgetData_2,\r\n                    widgetData_3: res.data.widgetData_3\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <aside className=\"col-12 col-lg-4 pl-lg-5 p-0 float-right sidebar\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 align-self-center text-left\">\r\n                        {/* Widget [categories] */}\r\n                        <div className=\"item widget-categories\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_1}</h4>\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                {this.state.widgetData_1.map((item, idx) => {\r\n                                    return (\r\n                                        <li key={`wdo_${idx}`} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            <a href=\"#\">{item.title}</a>\r\n                                            <span className=\"badge circle\">{item.content}</span>\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                        {/* Widget [tags] */}\r\n                        <div className=\"item widget-tags\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_2}</h4>\r\n                            {this.state.widgetData_2.map((item, idx) => {\r\n                                return (\r\n                                    <a key={`wdt_${idx}`} href=\"\" className=\"badge tag\">{item.title}</a>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        {/* Widget [share-this] */}\r\n                        <div className=\"item widget-share-this\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_3}</h4>\r\n                            <ul className=\"navbar-nav social share-list\">\r\n                                {this.state.widgetData_3.map((item, idx) => {\r\n                                    return (\r\n                                        <li key={`wdth_${idx}`} className=\"nav-item\">\r\n                                            <a href=\"#\" className=\"nav-link\"><i className={item.icon} /></a>\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/blogSingle\";\r\n\r\nclass BlogSingle extends Component {\r\n    state = {\r\n        data: {}\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"single featured post-details\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {/* Main */}\r\n                        <div className=\"col-12 col-lg-8 p-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 align-self-center\">\r\n                                    {/* Image */}\r\n                                    <div className=\"blog-thumb\">\r\n                                        <img className=\"w-100\" src={this.state.data.image} alt=\"\" />\r\n                                    </div>\r\n                                    <h2 className=\"featured ml-0\">{this.state.data.title}</h2>\r\n                                    <p>{this.state.data.content_1}</p>\r\n                                    <p>\r\n                                    </p>\r\n                                    <blockquote>{this.state.data.quote}</blockquote>\r\n                                    <p>{this.state.data.content_2}</p>\r\n                                    <p>{this.state.data.content_3}</p>\r\n                                    {/* Post Holder */}\r\n                                    <ul className=\"mb-5 post-holder\">\r\n                                        <li className=\"post-meta-item\">\r\n                                            <div className=\"date\">\r\n                                                <span className=\"posted-on\">Posted On <a href=\"#\" rel=\"bookmark\"><time className=\"entry-date published updated\" dateTime=\"2018-11-01T06:18:46+00:00\">{this.state.data.date}</time></a></span>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                    {/* Comments */}\r\n                                    <h3 className=\"comments-reply-text mb-3\">{this.state.data.commentTitle}</h3>\r\n                                    <p className=\"mt-3\">{this.state.data.commentContent}</p>\r\n                                    <form>\r\n                                        <fieldset>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 col-lg-6 input-group p-0 pr-lg-3 mb-3\">\r\n                                                    <input type=\"text\" name=\"name\" data-minlength={3} placeholder=\"Name\" required />\r\n                                                </div>\r\n                                                <div className=\"col-12 col-lg-6 input-group p-0 mb-3\">\r\n                                                    <input type=\"email\" name=\"email\" data-minlength={3} placeholder=\"Email\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 input-group p-0 mb-3\">\r\n                                                    <textarea name=\"message\" data-minlength={3} rows={4} placeholder=\"Message\" required defaultValue={\"\"} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12 input-group p-0\">\r\n                                                <a className=\"btn btn-bordered-white text-white\">{this.state.data.commentBtn}<i className=\"icon-login ml-2\" /></a>\r\n                                            </div>\r\n                                        </fieldset>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Sidebar */}\r\n                        <Sidebar />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogSingle;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Blog from '../components/BlogSingle/BlogSingle';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass BlogSingle extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Blog Single\" subpage=\"Community\" page=\"Blog Single\" />\r\n                <Blog />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogSingle;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Help Center\",\r\n    heading: \"How can we help you?\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        icon: \"icon icon-plane text-effect\",\r\n        title: \"Getting Started\",\r\n        content: \"Learn how to create an account, set up your wallet, and what you can do on NetStorm\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        icon: \"icon icon-note text-effect\",\r\n        title: \"Creating\",\r\n        content: \"Learn how to create your very first NFT and how to create your NFT collections so you can begin selling and sharing\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        icon: \"icon icon-handbag text-effect\",\r\n        title: \"Buying\",\r\n        content: \"Learn how to purchase your first NFT and understand gas fees and what's gas free on NetStorm\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        icon: \"icon icon-chart text-effect\",\r\n        title: \"Selling\",\r\n        content: \"Learn how list your NFTs for sale and understand the different ways to list your NFTs\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        icon: \"icon icon-link text-effect\",\r\n        title: \"Partners\",\r\n        content: \"Learn how you can partner with us to showcase your NFT drops\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        icon: \"icon icon-flag text-effect\",\r\n        title: \"Developers\",\r\n        content: \"Learn how you can develop with NetStorm &amp; sell them on Marketplace\"\r\n    }\r\n]\r\n\r\nclass HelpCenter extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"help-center-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`hd_${idx}`} className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                    {/* Help Card */}\r\n                                    <div className=\"card help-card\">\r\n                                        <a className=\"d-block text-center\" href=\"#\">\r\n                                            <i className={item.icon} />\r\n                                            <h4>{item.title}</h4>\r\n                                            <p>{item.content}</p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"FAQ\",\r\n    heading: \"Frequently Asked Questions\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        btnClass: \"btn d-block text-left w-100 py-4\",\r\n        target: \"#collapseOne\",\r\n        quote: \"How do I create an NetStorm account?\",\r\n        contentId: \"collapseOne\",\r\n        contentClass: \"collapse show\",\r\n        content: \"The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text.\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseTwo\",\r\n        quote: \"Where can I see transaction details?\",\r\n        contentId: \"collapseTwo\",\r\n        contentClass: \"collapse\",\r\n        content: \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source.\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseThree\",\r\n        quote: \"How do royalties work on NetStorm?\",\r\n        contentId: \"collapseThree\",\r\n        contentClass: \"collapse\",\r\n        content: \"It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFour\",\r\n        quote: \"How do I list an NFT to sell?\",\r\n        contentId: \"collapseFour\",\r\n        contentClass: \"collapse\",\r\n        content: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFive\",\r\n        quote: \"How do I create an NFT?\",\r\n        contentId: \"collapseFive\",\r\n        contentClass: \"collapse\",\r\n        content: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"\r\n    }\r\n]\r\n\r\nclass Faq extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"faq-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* FAQ Content */}\r\n                            <div className=\"faq-content\">\r\n                                {/* Netstorm Accordion */}\r\n                                <div className=\"accordion\" id=\"netstorm-accordion\">\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <div className=\"col-12 col-md-10\">\r\n                                            {/* Single Accordion Item */}\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <div key={`fd_${idx}`} className=\"single-accordion-item p-3\">\r\n                                                        {/* Card Header */}\r\n                                                        <div className=\"card-header bg-inherit border-0 p-0\">\r\n                                                            <h2 className=\"m-0\">\r\n                                                                <button className={item.btnClass} type=\"button\" data-toggle=\"collapse\" data-target={item.target}>\r\n                                                                    {item.quote}\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id={item.contentId} className={item.contentClass} data-parent=\"#netstorm-accordion\">\r\n                                                            {/* Card Body */}\r\n                                                            <div className=\"card-body py-3\">\r\n                                                                {item.content}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Faq;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Help from '../components/HelpCenter/HelpCenter';\r\nimport Faq from '../components/Faq/Faq';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass HelpCenter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Help Center\" subpage=\"Community\" page=\"Help Center\" />\r\n                <Help />\r\n                <Faq />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/authors\";\r\n\r\nclass Authors extends Component {\r\n    state = {\r\n        data: {},\r\n        authorData: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    authorData: res.data.authorData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                <p>{this.state.data.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.authorData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`ad_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card no-hover text-center\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/author\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                            {/* Seller */}\r\n                                            <a className=\"seller\" href=\"/author\">\r\n                                                <div className=\"seller-thumb avatar-lg\">\r\n                                                    <img className=\"rounded-circle\" src={item.avatar} alt=\"\" />\r\n                                                </div>\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body mt-4\">\r\n                                                <a href=\"/author\">\r\n                                                    <h5>{item.author}</h5>\r\n                                                </a>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authors;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/seller\";\r\n\r\nclass TopSeller extends Component {\r\n    state = {\r\n        data: {},\r\n        sellerData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    sellerData: res.data.sellerData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"top-seller-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/authors\">View All</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.sellerData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-4 item\">\r\n                                    {/* Single Seller */}\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n                                            <a href=\"/author\">\r\n                                                <img className=\"avatar-md rounded-circle\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3\">\r\n                                                <a className=\"seller mb-2\" href=\"/author\">{item.seller}</a>\r\n                                                <span>{item.price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopSeller;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Author from '../components/Authors/Authors';\r\nimport TopSeller from '../components/TopSeller/TopSellerTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Authors extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Authors\" subpage=\"Pages\" page=\"Authors\" />\r\n                <Author />\r\n                <TopSeller />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authors;","import React, { useState } from 'react';\r\nimport ReactImagePickerEditor, { ImagePickerConf } from 'react-image-picker-editor';\r\n\r\nimport 'react-image-picker-editor/dist/index.css'\r\n\r\nconst UploadImage = ({ initalImag, imageSrc, setImageSrc, show = true }) => {\r\n  const config2 = {\r\n    borderRadius: '8px',\r\n    language: 'en',\r\n    width: '330px',\r\n    height: '250px',\r\n    objectFit: 'contain',\r\n    compressInitial: null,\r\n    hideDownloadBtn: true\r\n  };\r\n\r\n  const initialImage = initalImag;\r\n\r\n  return <div className='image-container'>\r\n    < ReactImagePickerEditor\r\n      config={config2}\r\n      // initialImage={im}\r\n      imageSrcProp={initialImage}\r\n      imageChanged={(newDataUri) => { setImageSrc(newDataUri) }} />\r\n    {/* <br /> <br />\r\n    <hr />\r\n    <br /> */}\r\n    {/* <p>Image preview:</p> */}\r\n    {/* {imageSrc && <img src={imageSrc} alt=\"example\" style={{ maxHeight: '900px', maxWidth: '100%', objectFit: 'contain', background: 'black' }} />}\r\n    {!imageSrc && <h2 style={{ textAlign: 'center', color: '#FFF' }}>No image loaded yet</h2>} */}\r\n\r\n  </div>\r\n}\r\n\r\nexport default UploadImage;\r\n\r\n\r\n","export const dataURLtoBlob = (dataurl) => {\r\n    var arr = dataurl?.split(','), mime = arr[0]?.match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr?.length, u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new Blob([u8arr], { type: mime });\r\n}\r\n\r\nexport const blobToDataURl = (blob) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = _e => resolve(reader.result);\r\n        reader.onerror = _e => reject(reader.error);\r\n        reader.onabort = _e => reject(new Error(\"Read aborted\"));\r\n        reader.readAsDataURL(blob);\r\n    });\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {  UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage  from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\n\r\nfunction Banner(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const image = dataURLtoBlob(imageSrc)\r\n        formData.append('image', image)\r\n        dispatch(UpdateBanner(formData, props.id))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Project Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default Banner","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\n\r\nfunction AvatarUpload(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        // const banner_image = dataURLtoBlob(imageSrc)\r\n        const avatar = dataURLtoBlob(imageSrc)\r\n        formData.append('avatar', avatar)\r\n        formData.append('username', userdet.username)\r\n        // formData.append('banner_image', banner_image)\r\n        dispatch(UpdateProfileAction(formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Profile Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default AvatarUpload","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\n\r\nfunction BannerUpload(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const banner_image = dataURLtoBlob(imageSrc)\r\n        // formData.append('avatar', userdet.avatar)\r\n        formData.append('username', userdet.username)\r\n        formData.append('banner_image', banner_image)\r\n        dispatch(UpdateProfileAction(formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Profile Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default BannerUpload","\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GetUserAction, UpdateProfileAction } from \"../../redux/Actions/authAction\";\r\nimport { useEffect } from \"react\";\r\nimport UserTransdataTable from \"./userTransTable\";\r\nimport UserdataTable from \"./userDetails\";\r\nimport Banner from \"../Create/editBanner\";\r\nimport AvatarUpload from \"./avatarUpload\";\r\nimport BannerUpload from \"./bannerUpload\";\r\n// const BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/author\";\r\n\r\nconst AuthorProfile = () => {\r\n    const [modalSho, setModalSho] = React.useState(false);\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowavatar, setModalShowavatar] = React.useState(false);\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        if (userdet && Object.keys(userdet).length) {\r\n\r\n            setValue(\"avatar\", userdet.avatar)\r\n            setValue(\"username\", userdet.username)\r\n            setValue(\"email\", userdet.email)\r\n\r\n        }\r\n\r\n    }, [userdet])\r\n    const onSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('username', data.username)\r\n        formData.append('email', userdet.email)\r\n        dispatch(UpdateProfileAction(formData))\r\n\r\n    }\r\n    useEffect(() => {\r\n        dispatch(GetUserAction());\r\n    }, []);\r\n    useEffect(() => {\r\n        if (userdet && Object.keys(userdet).length) {\r\n            setValue(\"avatar\", userdet.avatar);\r\n            setValue(\"username\", userdet.username);\r\n            setValue(\"email\", userdet.email);\r\n        }\r\n    }, [userdet]);\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"container\">\r\n                {/* <h3 class=\"p-0\">Author Name </h3> */}\r\n                <div className=\"row pt-0\">\r\n                    <div className='col-md-8'>\r\n                        <div className=\"banner item-thumb text-center\">\r\n                            <div>\r\n                                <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                    onClick={() => setModalSho(true)}\r\n                                ></i>\r\n                                <BannerUpload\r\n\r\n                                    show={modalSho}\r\n                                    onHide={() => setModalSho(false)} />\r\n\r\n                            </div>\r\n                            <img src={userdet.banner_image} alt=\"first nft\" />\r\n                        </div>\r\n                        <div className=\"table-detail mt-4\">\r\n                            <UserdataTable />\r\n\r\n                        </div>\r\n                        <div className=\"profile_detail mt-4 position-relative\">\r\n\r\n                            <UserTransdataTable />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4 mt-4 mt-lg-0\">\r\n                        <div className=\"profile_main_right card wrap_card no-hover text-center\">\r\n\r\n                            <div className=\"image-over\">\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                        onClick={() => setModalShowavatar(true)}\r\n                                    ></i>\r\n                                    <AvatarUpload\r\n\r\n                                        show={modalShowavatar}\r\n                                        onHide={() => setModalShowavatar(false)} />\r\n\r\n                                </div>\r\n                                <img className=\"card-img-top\" src={userdet.avatar} alt=\"\" />\r\n                            </div>\r\n                            {/* Card Caption */}\r\n                            <div className=\"card-caption col-12 p-0\">\r\n                                {/* Card Body */}\r\n\r\n\r\n                            </div>\r\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover p-0\">\r\n\r\n                                <div className=\"card-body\">\r\n                                    <from className=\"Edite_able\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"username\"\r\n                                                placeholder=\"username\"\r\n                                                {...register(\"username\", { required: true })}\r\n                                                aria-invalid={errors.username ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n                                            <i class=\"fa-solid fa-pen\"></i>\r\n                                        </label>\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control\"\r\n                                                name=\"email\"\r\n                                                value={userdet.email}\r\n                                                {...register(\"address\")}\r\n                                                aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {/* {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>} */}\r\n                                            {/* <i class=\"fa-solid fa-pen\"></i> */}\r\n                                        </label>\r\n\r\n                                        {/* Social Icons */}\r\n                                        <div className=\"social-icons d-flex justify-content-center my-3\">\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-facebook-f fa-w-10\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"facebook-f\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 320 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-twitter fa-w-16\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"twitter\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 512 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-google-plus-g fa-w-20\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"google-plus-g\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 640 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M386.061 228.496c1.834 9.692 3.143 19.384 3.143 31.956C389.204 370.205 315.599 448 204.8 448c-106.084 0-192-85.915-192-192s85.916-192 192-192c51.864 0 95.083 18.859 128.611 50.292l-52.126 50.03c-14.145-13.621-39.028-29.599-76.485-29.599-65.484 0-118.92 54.221-118.92 121.277 0 67.056 53.436 121.277 118.92 121.277 75.961 0 104.513-54.745 108.965-82.773H204.8v-66.009h181.261zm185.406 6.437V179.2h-56.001v55.733h-55.733v56.001h55.733v55.733h56.001v-55.733H627.2v-56.001h-55.733z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-vine fa-w-12\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"vine\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 384 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M384 254.7v52.1c-18.4 4.2-36.9 6.1-52.1 6.1-36.9 77.4-103 143.8-125.1 156.2-14 7.9-27.1 8.4-42.7-.8C137 452 34.2 367.7 0 102.7h74.5C93.2 261.8 139 343.4 189.3 404.5c27.9-27.9 54.8-65.1 75.6-106.9-49.8-25.3-80.1-80.9-80.1-145.6 0-65.6 37.7-115.1 102.2-115.1 114.9 0 106.2 127.9 81.6 181.5 0 0-46.4 9.2-63.5-20.5 3.4-11.3 8.2-30.8 8.2-48.5 0-31.3-11.3-46.6-28.4-46.6-18.2 0-30.8 17.1-30.8 50 .1 79.2 59.4 118.7 129.9 101.9z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                        </div>\r\n                                        <button className=\"btn btn-bordered-white btn-smaller\" type=\"submit\" >\r\n                                            Update\r\n                                        </button>\r\n                                    </from>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\" \"}\r\n            </div>\r\n            {\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthorProfile;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Explore\",\r\n    heading: \"Exclusive Digital Assets\",\r\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n    filter_1: \"All\",\r\n    filter_2: \"Art\",\r\n    filter_3: \"Music\",\r\n    filter_4: \"Collectibles\",\r\n    filter_5: \"Sports\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_1.jpg\",\r\n        author: \"/img/avatar_1.jpg\",\r\n        title: \"Virtual Worlds\",\r\n        content: \"ERC-729\",\r\n        price: \"4.37 BNB\",\r\n        likes: \"154\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        group: '[\"music\"]',\r\n        img: \"/img/auction_2.jpg\",\r\n        author: \"/img/avatar_2.jpg\",\r\n        title: \"Walking On Air\",\r\n        content: \"ERC-543\",\r\n        price: \"2.37 BNB\",\r\n        likes: \"74\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        group: '[\"music\",\"collectibles\"]',\r\n        img: \"/img/auction_3.jpg\",\r\n        author: \"/img/avatar_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        content: \"ERC-932\",\r\n        price: \"1.89 BNB\",\r\n        likes: \"\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        group: '[\"music\",\"sports\",\"art\",\"collectibles\"]',\r\n        img: \"/img/auction_4.jpg\",\r\n        author: \"/img/avatar_4.jpg\",\r\n        title: \"Sports\",\r\n        content: \"ERC-250\",\r\n        price: \"0.74 BNB\",\r\n        likes: \"184\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        group: '[\"sports\",\"art\",\"music\"]',\r\n        img: \"/img/auction_5.jpg\",\r\n        author: \"/img/avatar_5.jpg\",\r\n        title: \"Cartoon Heroes\",\r\n        content: \"ERC-167\",\r\n        price: \"4.23 BNB\",\r\n        likes: \"126\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_6.jpg\",\r\n        author: \"/img/avatar_6.jpg\",\r\n        title: \"Domain Names\",\r\n        content: \"ERC-037\",\r\n        price: \"3.41 BNB\",\r\n        likes: \"23\"\r\n    }\r\n]\r\n\r\nclass ExploreSix extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                    <div className=\"col-12\">\r\n                        {/* Explore Menu */}\r\n                        <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n                            <label className=\"btn active d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"all\" defaultChecked className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_1}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"art\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_2}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"music\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_3}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"collectibles\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_4}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_5}</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items explore-items\">\r\n                    {this.state.data.map((item, idx) => {\r\n                        return (\r\n                            <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" data-groups={item.group}>\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <a href=\"/item-details\">\r\n                                            <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                        </a>\r\n                                        {/* Author */}\r\n                                        <a className=\"author\" href=\"/authors\">\r\n                                            <div className=\"author-thumb avatar-lg\">\r\n                                                <img className=\"rounded-circle\" src={item.author} alt=\"\" />\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            <a href=\"/item-details\">\r\n                                                <h5 className=\"mb-2\">{item.title}</h5>\r\n                                            </a>\r\n                                            <span>{item.content}</span>\r\n                                            <hr />\r\n                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                <span>{item.price}</span>\r\n                                                <span><i className=\"icon-heart mr-2\" />{item.likes}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreSix;","import React, { Component } from 'react';\r\nimport AuthorProfile from '../AuthorProfile/AuthorProfile';\r\nimport Explore from '../Explore/ExploreSix';\r\n\r\nclass Author extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"author-area explore-area author-details-area  popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-12\">\r\n                            <AuthorProfile />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Author;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport AuthorProfile from '../components/Author/Author';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Author extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <AuthorProfile />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Author;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ConnectWallet, Roles } from './interact';\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginSuccess } from '../../redux/Slices/authSlice';\r\n\r\nconst data = {\r\n    \"preHeading\": \"Wallet Connect\",\r\n    \"heading\": \"Connect your Wallet\",\r\n    \"content\": \"Connect your wallet to continue browsing our website\",\r\n    \"walletData\": [\r\n        {\r\n            \"id\": 1,\r\n            \"img\": \"/img/metamask.png\",\r\n            \"title\": \"MetaMask\",\r\n            \"content\": \"A browser extension with great flexibility. The web's most popular wallet\"\r\n        },\r\n    ]\r\n}\r\n\r\nconst Wallet = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleConnect = async () => {\r\n        const res = await ConnectWallet(\"CREATOR\")\r\n\r\n        if (res?.res?.response?.status === 401) {\r\n           history.push('/signup')\r\n        }\r\n        else {\r\n          dispatch(loginSuccess(res?.res))\r\n          localStorage.setItem('authToken',res?.res?.data?.data?.auth_token)\r\n          history.push('/projectlist')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"wallet-connect-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mt-4 pt-2 mb-1\">\r\n                            {/* <span>{data.preHeading}</span> */}\r\n                            <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            <p>{data.content}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center items\">\r\n                    {data?.walletData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} onClick={handleConnect}\r\n                                className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                {/* Single Wallet */}\r\n                                <div className=\"card single-wallet\">\r\n                                    <a className=\"d-block text-center\">\r\n                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                        <h4 className=\"mb-0\">{item.title}</h4>\r\n                                        <p>{item.content}</p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Wallet;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Wallet from '../components/Wallet/Wallet';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass WalletConnect extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Wallet />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WalletConnect;","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    console.log(data, 'dataaacreate')\r\n    // localStorage.setItem(\"data\", JSON.stringify(data))\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport React, { Component, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { CategoriesAction, CreateProjectAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\n\r\nimport 'reactjs-popup/dist/index.css';\r\nimport styles from \"./styles/styles.module.scss\"\r\nimport { useFormData } from './Context/context';\r\nimport JoditEditor from 'jodit-react'; import { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\nimport UploadImage from '../../shared/Upload';\r\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\r\n\r\n\r\nconst Create = ({ current, next, prev }) => {\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues, prevValues } = useFormData();\r\n    console.log(data.city)\r\n    const [description, setDescription] = useState()\r\n    console.log('disss', description)\r\n    const [country, setCountry] = useState(\"\");\r\n    console.log('country', country)\r\n    const [state, setState] = useState(\"\");\r\n    console.log('state', state)\r\n    const [city, setCity] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    console.log('price', price)\r\n    console.log('city', city)\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [collection_id, setCollectionId] = useState(0);\r\n    const [usertype, setUserType] = useState();\r\n    console.log(\"type\", usertype)\r\n\r\n    // const schema = yup.object().shape({\r\n    //     description: yup.string().required()\r\n    //     // password: yup.string().required(),\r\n    // });\r\n    const [nonft, setNonft] = useState('1')\r\n    function onHandleClick(event) {\r\n        setCollectionId(event.currentTarget.id);\r\n    };\r\n\r\n    console.log(data, \"_________DATA_IN_CREATE______\")\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n\r\n    console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({\r\n        mode: \"all\",\r\n    });\r\n\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    // console.log(col, 'col')\r\n    const onSubmit = (data) => {\r\n\r\n        const imageBanner = dataURLtoBlob(image)\r\n\r\n        setFormValues({ ...data, description, type: data?.usertype, image: imageBanner, imageUri: image });\r\n        // localStorage.setItem('country', JSON.stringify(country))\r\n        next()\r\n    }\r\n    // const bannerimage =\r\n    // console.log('bannerimg', bannerimage)\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        if (prev) {\r\n\r\n            setValue('title', data.title)\r\n            setValue('address', data.address)\r\n            setValue('category_id', data.category_id)\r\n            setValue('country', data.country)\r\n            setValue('state', data.state)\r\n            setValue('city', data.city)\r\n            setValue('description', data.description)\r\n            setValue('number_of_nft', data.number_of_nft)\r\n            setValue('price', data.price)\r\n            setValue('start_date', data.start_date)\r\n            setValue('type', data.usertype)\r\n            setValue('image', data.imageUri)\r\n\r\n            setUserType(data.usertype)\r\n            setCountry(data.country)\r\n            setDescription(data.description)\r\n            setImage(data.imageUri)\r\n            setState(data.state)\r\n            setCity(data.city)\r\n\r\n            setValue('end_date', data.end_date)\r\n        }\r\n\r\n    }, [data])\r\n\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n\r\n    const handleChangeCountry = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', event.currentTarget.value)\r\n        dispatch(StateList(formData)) // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setCountry(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event.currentTarget.value)\r\n        dispatch(CityList(formData))\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    function imposeMinMax(el) {\r\n        if (el?.value != \"\") {\r\n            if (parseInt(el?.value) < parseInt(el?.min)) {\r\n                el.value = el?.min;\r\n            }\r\n            if (parseInt(el?.value) > parseInt(el?.max)) {\r\n                el.value = el.max;\r\n            }\r\n        }\r\n    }\r\n\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate());\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n\r\n    const handleSubmitDraft = (data) => {\r\n        const imageBanner = dataURLtoBlob(image)\r\n        const formData = new FormData()\r\n        for (const [key, value] of Object.entries(data)) {\r\n            formData.append(key, value)\r\n        }\r\n\r\n        formData.append(\"type\", data.usertype)\r\n        formData.append(\"image\", imageBanner)\r\n        formData.append(\"status\", 3)\r\n        formData.append(\"on_which_step_left\", 0)\r\n        if (data.usertype == 1) {\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        }\r\n\r\n        dispatch(CreateProjectAction(formData, setLoading, history))\r\n    }\r\n    return (\r\n\r\n        <div className={current === 0 ? styles.showForm : styles.hideForm}>\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12 \">\r\n                        <div className=\"form-group mt-3\">\r\n                            <div className=\"form-check form-check-inline mr-2\">\r\n                                {/* {data.usertype == 2 ? ( */}\r\n                                <>\r\n                                    <input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"1\"\r\n                                        // checked={data.usertype ? false:tr}\r\n                                        value=\"1\"\r\n                                        defaultChecked={data.usertype == 1 ? true : !usertype ? true : false}\r\n                                        {...register(\"usertype\", { required: true })}\r\n                                        aria-invalid={errors.usertype ? \"true\" : \"false\"}\r\n                                        onChange={(e) => setUserType(e.target.value)}\r\n                                    // defaultChecked={data.usertype}\r\n                                    />\r\n                                    <label className=\"form-check-label mr-2\" htmlFor=\"donation\">Single</label>\r\n                                </>\r\n                                {/* ) : ( */}\r\n\r\n                                <><input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    name=\"radiobutton\"\r\n                                    id=\"2\"\r\n                                    value=\"2\"\r\n                                    {...register(\"usertype\", { required: true })}\r\n                                    defaultChecked={data.usertype == 2 ? true : false}\r\n                                    onChange={(e) => setUserType(e.target.value)}\r\n                                    aria-invalid={errors.type ? \"true\" : \"false\"}\r\n\r\n                                />\r\n                                    <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label></>\r\n                                {/* )} */}\r\n                            </div>\r\n\r\n                            {errors.usertype?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Type is required</p>}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-md-6 col-12\">\r\n                        {/* {type == 1 && ( */}\r\n\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Project name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"title\"\r\n                                placeholder=\"Project name\"\r\n                                {...register(\"title\", { required: true, pattern: { value: /[A-Za-z]/ } })}\r\n                                aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>}\r\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                        </div>\r\n                        {/* )} */}\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Web address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                // required={false}\r\n                                name=\"address\"\r\n                                placeholder=\"Web address\"\r\n                                {...register(\"address\", {\r\n                                    required: true,\r\n                                    pattern: {\r\n                                        value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                    }\r\n                                })}\r\n                                aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                            />\r\n\r\n\r\n                            {errors.address && errors.address?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                            {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <label>Description</label>\r\n                        <div className=\"form-group\">\r\n\r\n\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"description\"\r\n                                defaultValue=\"\"\r\n                                rules={{ required: true, minLength: 100 }}\r\n\r\n\r\n                                render={({ field }) => {\r\n                                    return <JoditEditor\r\n                                        ref={field.ref}\r\n                                        // value={description}\r\n                                        // {...register(\"description\", { required: true })}\r\n                                        // config={config}\r\n                                        value={field.value}\r\n\r\n                                        placeholder=\"start typing\"\r\n                                        aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        tabIndex={1} // tabIndex of textarea\r\n                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                        onChange={field.onChange}\r\n                                    />\r\n\r\n                                }}\r\n                            />\r\n                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            {errors.description && errors.description.type === \"minLength\" && (\r\n                                <p style={{ color: 'red' }}>\r\n                                    min length of words is 100\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Country</label>\r\n\r\n                            <select name=\"country\"\r\n\r\n                                {...register(\"country\", { required: true })} onChange={handleChangeCountry}>\r\n                                aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                {countries?.data?.data?.map((option, key) => (\r\n                                    <>\r\n\r\n\r\n                                        <option key={key.id} value={option.id}>\r\n\r\n                                            {option.name}\r\n\r\n                                        </option>\r\n\r\n\r\n                                    </>\r\n\r\n                                ))}\r\n                            </select>\r\n                            {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>State or province</label>\r\n\r\n                            <select name=\"state\"\r\n                                {...register(\"state\")} onChange={handleChangeState}>\r\n                                aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state/province</option>\r\n                                {states?.data?.data?.map((option, key) => (\r\n\r\n                                    <><option key={key.id} value={option.id}  >\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                            {/* {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>} */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group\">\r\n                            <label>City or Region</label>\r\n\r\n                            <select name=\"city\"\r\n                                {...register(\"city\")}>\r\n                                aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city/region</option>\r\n                                {cities?.data?.data?.map((option, key) => (\r\n                                    <><option key={key.id} value={option.id}>\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                            {/* {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>} */}\r\n                        </div>\r\n\r\n                        {!usertype || usertype == 1 ? (\r\n\r\n                            <div className=\"col-12 col-md-12 pl-0 pr-0\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Number of NFTs</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n\r\n                                        className=\"form-control\"\r\n                                        name=\"number_of_nft\"\r\n\r\n                                        value={nonft}\r\n                                        // onChange={nonft}\r\n                                        defaultValue={nonft}\r\n                                        // defaultValue={1}\r\n                                        // disabled={true}\r\n                                        min={1}\r\n                                        max={1}\r\n\r\n                                        maxLength={1}\r\n                                        // onChange={setNonft(\"1\")}\r\n                                        // onKeyUp={imposeMinMax()}\r\n                                        placeholder=\"number of NFT (1 allowed)\"\r\n                                        {...register(\"number_of_nft\", { required: true, min: 1, max: 1 })}\r\n                                        // {...register(\"number_of_nft\", { maxLength: 12 })}\r\n                                        aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                    />\r\n                                    {/* {errors.number_of_nft && errors.number_of_nft.type === \"max\" && (\r\n            <p style={{ color: 'red' }}>\r\n                Only 1 nft allowed (select campaign for more than one NFTs)\r\n            </p>\r\n\r\n\r\n        )} */}\r\n                                    {/* {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required and limit is upto 1</p>} */}\r\n                                    {/* {errors.number_of_nft?.type === \"maxLength\" && <p style={{ color: 'red' }} role=\"alert\">Max one length </p>} */}\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"col-12 col-md-12 pl-0 pr-0\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Number of NFTs</label>\r\n                                    <input\r\n                                        // onInput={(e) => {\r\n                                        //     if (e?.target?.value?.length < e.target.maxLength)\r\n                                        //         e.target.value = e.target.value.slice(0, e.target.maxLength);\r\n                                        // }}\r\n                                        type=\"number\"\r\n                                        className=\"form-control\"\r\n                                        name=\"number_of_nft\"\r\n\r\n                                        // defaultValue={1}\r\n                                        min={1}\r\n                                        max={10}\r\n                                        maxLength={10}\r\n\r\n                                        // onKeyUp={imposeMinMax()}\r\n                                        // min=1 max=4 onkeyup=imposeMinMax(this)\r\n\r\n                                        // disabled={type == 1}\r\n                                        placeholder=\"Select your number of NFTs (1-10)\"\r\n                                        {...register(\"number_of_nft\", { required: true, min: 1, max: 10 })}\r\n\r\n                                        // {...register(\"number_of_nft\", { maxLength: 12 })}\r\n                                        aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                    />\r\n                                    {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                    {errors.number_of_nft && errors.number_of_nft.type === \"max\" && (\r\n                                        <p style={{ color: 'red' }}>\r\n                                            10 NFTs Maximum per Campaign\r\n                                        </p>\r\n                                    )}\r\n                                    {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFTs per project is required with a limit of 10</p>}\r\n                                    {/* {errors.number_of_nft?.type === \"maxLength\" && <p style={{ color: 'red' }} role=\"alert\">Max length exceeded</p>} */}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n\r\n                        <div className=\"col-12 col-md-12 pr-0 pl-0\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"category_id\"\r\n                                    {...register(\"category_id\", { required: true })}\r\n                                >\r\n                                    aria-invalid={errors.category_id ? \"true\" : \"false\"}\r\n                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select category </option>\r\n                                    {cat?.map((option, key) => (\r\n\r\n                                        <option key={key.id} value={option.id} >\r\n                                            {option.title}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {errors.category_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Category is required</p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            {usertype == 2 ? (\r\n\r\n                                <label>Price per NFT (In MATIC tokens)</label>\r\n                            ) : (\r\n                                <label>Price (In MATIC tokens)</label>\r\n\r\n                            )}\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                step=\"0.01\"\r\n                                name=\"price\"\r\n                                placeholder=\"Price\"\r\n                                {...register(\"price\", { required: true })}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                                aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <div className=\"form-group pricing-detail\">\r\n                                <p><span>Price</span> <span>{price ? price : '--'} MATIC</span></p>\r\n                                <p><span>Karmatica Fee</span><span>1%</span></p>\r\n                                <p><span>You will receive </span><span>{99 * price / 100 ? 99 * price / 100 : \"--\"} MATIC</span></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {usertype == 2 && (\r\n\r\n                        <><div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Campaign Start date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    // placeholder='dd-mm-yy'\r\n                                    // hidden={data.type == 1}\r\n                                    className=\"form-control\"\r\n                                    name=\"start_date\"\r\n                                    defaultValue={defaultValue}\r\n                                    min={disablePastDate()}\r\n\r\n                                    // placeholder=\"Start date :\"\r\n                                    {...register(\"start_date\", { required: true })}\r\n                                    aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        // hidden={data.type == 1}\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        defaultValue={defaultValue1}\r\n                                        min={disablePastDate()}\r\n\r\n                                        // placeholder=\"End date\"\r\n                                        {...register(\"end_date\")}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    <div >\r\n\r\n                                        <span className='logo-dis'>End date should be greater then or equal to start date</span>\r\n                                    </div>\r\n                                    {/* {errors.end_date && errors?.end_date?.type === 'min' && <p style={{ color: 'red' }} role=\"alert\">End date should be greater or equal to startdate</p>} */}\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div></>\r\n                    )}\r\n                    <div className=\" col-12\">\r\n                        <div className=\"form-group\">\r\n                            <label>Banner image</label>\r\n                            <UploadImage\r\n                                imageSrc={image}\r\n                                // src={image}\r\n                                initalImag={data.imageUri}\r\n\r\n                                setImageSrc={setImage}\r\n                            />\r\n                            <div >\r\n\r\n                                <div className='logo-dis logo-dis-img'>\r\n                                    <span>Allowed types: JPG, PNG, GIF</span><span>Banner should be 500 px wide x 800 px high, 10MB max</span>\r\n                                </div>\r\n                            </div>\r\n                            {/* {errors.end_date && errors?.end_date?.type === 'min' && <p style={{ color: 'red' }} role=\"alert\">End date should be greater or equal to startdate</p>} */}\r\n                            {/* {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>} */}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-6\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={handleSubmit(handleSubmitDraft)}>\r\n                            Save as Draft\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Create;","export const TOKEN_KEY = localStorage.getItem('authToken')\r\n\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"authToken\");\r\n}\r\n\r\nexport const isLogin = () => {\r\n  return TOKEN_KEY ? true : false\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\r\nimport UploadImage from '../../shared/Upload';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction MyVerticallyCenteredModal(props) {\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const [image, setImage] = useState()\r\n    const OnSubmit = (dat) => {\r\n        // debugger\r\n        const imageBanner = dataURLtoBlob(image)\r\n        // \r\n        // data.preventDefault()\r\n        dispatch(CreateCollectionAction({ dat, imageBanner }))\r\n        // console.log(data?.statusCode)\r\n\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Create Collection\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className='row'>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Display name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    required\r\n                                    placeholder=\"Enter collection name\"\r\n                                    {...register('title')}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Symbol</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"symbol\"\r\n                                    required\r\n                                    placeholder=\"Enter token symbol\"\r\n                                    {...register('symbol')}\r\n                                // value={symbol}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setSymbol(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Description</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"description\"\r\n                                    required\r\n                                    {...register('description')}\r\n                                    // value={description}\r\n                                    // onChange={(e) => {\r\n\r\n                                    //     setDescription(e.target.value);\r\n                                    // }}\r\n                                    placeholder=\"Spread some words about your collection\"\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web URL</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    required\r\n                                    name=\"short_url\"\r\n                                    placeholder=\"Web URL\"\r\n                                    {...register('short_url')}\r\n                                // value={short_url}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setShortUrl(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Banner image</label>\r\n                                <UploadImage\r\n                                    imageSrc={image}\r\n                                    // initalImag={image}\r\n                                    setImageSrc={setImage}\r\n                                />\r\n\r\n                                <div >\r\n\r\n                                    <span className='logo-dis'>Allowed types: JPG, PNG, GIF<br />Banner should be 1500 px wide x 500 px high</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"modal-footer\"> */}\r\n                    <Button type=\"submit\" className=\"btn btn-primary\">Create</Button>\r\n                    {/* </div> */}\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default MyVerticallyCenteredModal","import { useState, useEffect, useRef } from \"react\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport { Source } from \"three\";\r\n\r\nfunction loadGLTFModel(scene, glbPath, options) {\r\n    const { receiveShadow, castShadow } = options;\r\n    return new Promise((resolve, reject) => {\r\n        const loader = new GLTFLoader();\r\n        loader.load(\r\n\r\n\r\n            glbPath,\r\n            (gltf) => {\r\n                const obj = gltf.scene;\r\n                obj.name = \"dinosaur\";\r\n                obj.position.y = 0;\r\n                obj.position.x = 0;\r\n                obj.receiveShadow = receiveShadow;\r\n                obj.castShadow = castShadow;\r\n                scene.add(obj);\r\n\r\n                obj.traverse(function (child) {\r\n                    if (child.isMesh) {\r\n                        child.castShadow = castShadow;\r\n                        child.receiveShadow = receiveShadow;\r\n                    }\r\n                });\r\n\r\n                resolve(obj);\r\n            },\r\n            undefined,\r\n            function (error) {\r\n                console.log(error);\r\n                reject(error);\r\n            }\r\n        );\r\n    });\r\n}\r\n\r\nfunction easeOutCirc(x) {\r\n    return Math.sqrt(1 - Math.pow(x - 1, 4));\r\n}\r\n\r\nconst DModal = ({ vdo }) => {\r\n    // debugger\r\n    // const { vdo } = props\r\n    const refContainer = useRef();\r\n    const [loading, setLoading] = useState(true);\r\n    const [renderer, setRenderer] = useState();\r\n    const [source, setSource] = useState('')\r\n    console.log('source', source)\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        const file = vdo;\r\n        // if (file?.name?.includes(\"gltf\")) {\r\n\r\n        //     const gltfToGlb = gltfPipeline.gltfToGlb;\r\n        //     const gltf = fsExtra.readJsonSync(file);\r\n        //     gltfToGlb(gltf).then(function (results) {\r\n        //         fsExtra.writeFileSync(file, results.glb);\r\n        //     });\r\n        //     console.log('yessss')\r\n        // }\r\n        // let url = URL.createObjectURL(file);\r\n        // url = window.URL.createObjectURL(new Blob([url]));\r\n        // // const url = window.URL.createObjectURL(new Blob([Response.data]));\r\n        // // this?.loaders?.gltfLoader?.load(url, (file) => {\r\n\r\n        // // });\r\n\r\n        // setSource(url);\r\n\r\n        const { current: container } = refContainer;\r\n        if (container && !renderer) {\r\n            const scW = container.clientWidth;\r\n            const scH = container.clientHeight;\r\n            const renderer = new THREE.WebGLRenderer({\r\n                antialias: true,\r\n                alpha: true\r\n            });\r\n            renderer.setPixelRatio(window.devicePixelRatio);\r\n            renderer.setSize(scW, scH);\r\n            renderer.outputEncoding = THREE.sRGBEncoding;\r\n            container.appendChild(renderer.domElement);\r\n            setRenderer(renderer);\r\n\r\n            const scene = new THREE.Scene();\r\n            const scale = 5.6;\r\n            const camera = new THREE.OrthographicCamera(\r\n                -scale,\r\n                scale,\r\n                scale,\r\n                -scale,\r\n                0.01,\r\n                50000\r\n            );\r\n            const target = new THREE.Vector3(-0.5, 1.2, 0);\r\n            const initialCameraPosition = new THREE.Vector3(\r\n                20 * Math.sin(0.2 * Math.PI),\r\n                10,\r\n                20 * Math.cos(0.2 * Math.PI)\r\n            );\r\n            const ambientLight = new THREE.AmbientLight(0xcccccc, 1);\r\n            scene.add(ambientLight);\r\n            const controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.autoRotate = false;\r\n            controls.enableZoom = true;\r\n            controls.minDistance = 0\r\n            controls.minZoom = 0\r\n            controls.target = target;\r\n\r\n            const loader = new GLTFLoader()\r\n\r\n            loader.load(\r\n                file,\r\n                function (gltf) {\r\n                    gltf.scene.traverse(function (child) {\r\n                        if (child.isMesh) {\r\n                            const m = child\r\n                            m.receiveShadow = true\r\n                            m.castShadow = true\r\n                        }\r\n                        if (child.isLight) {\r\n                            const l = child\r\n                            l.castShadow = true\r\n                            l.shadow.bias = -0.003\r\n                            l.shadow.mapSize.width = 2048\r\n                            l.shadow.mapSize.height = 2048\r\n                        }\r\n                    })\r\n                    scene.add(gltf.scene)\r\n                },\r\n                (xhr) => {\r\n                    animate();\r\n                    setLoading(false);\r\n                    // mdl(file)\r\n                    console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\r\n                },\r\n                (error) => {\r\n                    // debugger\r\n                    console.log(error)\r\n                }\r\n            )\r\n            // loadGLTFModel(url, function (gltf) {\r\n            //     const model = gltf.scene;\r\n            //     URL.revokeObjectURL(url);\r\n            // }, function () { }, function () {\r\n            //     URL.revokeObjectURL(url);\r\n            // }).\r\n\r\n            // loadGLTFModel(scene, url, {\r\n            //     receiveShadow: false,\r\n            //     castShadow: false\r\n            // })\r\n\r\n            let req = null;\r\n            let frame = 0;\r\n            const animate = () => {\r\n                req = requestAnimationFrame(animate);\r\n                frame = frame <= 100 ? frame + 1 : frame;\r\n\r\n                if (frame <= 100) {\r\n                    const p = initialCameraPosition;\r\n                    const rotSpeed = -easeOutCirc(frame / 120) * Math.PI * 20;\r\n\r\n                    camera.position.y = 10;\r\n                    camera.position.x =\r\n                        p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed);\r\n                    camera.position.z =\r\n                        p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed);\r\n                    camera.lookAt(target);\r\n                } else {\r\n                    controls.update();\r\n                }\r\n\r\n                renderer.render(scene, camera);\r\n            };\r\n\r\n            return () => {\r\n                cancelAnimationFrame(req);\r\n                renderer.dispose();\r\n            };\r\n        }\r\n    }, [vdo]);\r\n\r\n    return (\r\n\r\n        <div\r\n            style={{ height: \"270px\", width: \"300px\", position: \"relative\" }}\r\n            ref={refContainer}\r\n        >\r\n\r\n            {loading && (\r\n                <span style={{ position: \"absolute\", left: \"50%\", top: \"50%\" }}>\r\n                    Loading...\r\n                </span>\r\n            )}\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default DModal\r\n// export default function App() {\r\n//   return (\r\n//     <div style={{ width: \"100%\", margin: \"0 auto\" }}>\r\n//       <p>Click and hold to move around</p>\r\n//       <p>\r\n//         Credits for the model: \"Dinosaur\" (https://skfb.ly/6ZBXA) by\r\n//         jeilocreativedesignworld is licensed under Creative Commons Attribution\r\n//         (http://creativecommons.org/licenses/by/4.0/).\r\n//       </p>\r\n//       <Dinosaur />\r\n//     </div>\r\n//   );\r\n// }","\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router';\r\nimport DModal from './3dModal';\r\n\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n\r\n\r\nconst UploadNft = ({ current, prev }) => {\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n    console.log(data, 'dataaa')\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    // console.log(data, 'formdta')\r\n    const [count, setCount] = useState(1);\r\n    const [nft_description, setNft_description] = useState([])\r\n    console.log('count', count)\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: '1' });\r\n    const [nftFileType, setNFtFileType] = useState()\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    console.log(nftwidth, 'nftwidth')\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    console.log(nftHeight, 'nftheight')\r\n    console.log('nfterror', nft)\r\n    console.log('nftFile', nftFileType)\r\n    // console.log('colldata', coldata)\r\n    // console.log(nft_collection_id)\r\n    // const [coll_id,setCollId] = useState()\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    // console.log(\"collid\", coll_id)\r\n    const [source, setSource] = useState([])\r\n    const [sourceType, setSourceType] = useState()\r\n\r\n    // console.log('stype',stype)\r\n    console.log('sourcetype', sourceType)\r\n    console.log('source', source)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [modal, setModal] = useState()\r\n    const [NFtFileExtension, setNFtExtension] = useState()\r\n    const [preview, setPreview] = useState([])\r\n\r\n    console.log(nft_collection_id, \"nft collections\")\r\n\r\n\r\n    const handleIncrement = () => {\r\n        setCount(prevCount => prevCount + 1);\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n        setPreview(prevState => {\r\n            // debugger\r\n            prevState[index] = e?.target?.files[0]\r\n\r\n            return [...prevState]\r\n        })\r\n\r\n        // setPreview(pimage)\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n    // function onHandleClickNft(index, source) {\r\n    //     debugger\r\n\r\n    //     );\r\n    // };\r\n    // function descc(e) {\r\n    //     setNft_description(prev => [...prev, nft_description]);\r\n    // };\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    // this.setState(prev => ({\r\n    //     item: prev.item.map(item => item.name === 'xjz' ? { ...item, age: '10' } : item)\r\n    // }))\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n        defaultValues\r\n    });\r\n    useEffect(() => {\r\n\r\n        register(\"nft_description\");\r\n        // let sType = source?.map((element) => element);\r\n        // console.log('stype',sType)\r\n        // setSourceType(sType) \r\n\r\n    }, [register]);\r\n\r\n    // const ipfsClient = create('http://127.0.0.1:5001')\r\n    // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n    // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n    // console.log(imaeg, 'imgg')\r\n    // const { nodes, materials } = useGLTF(\"/img/adamHead.gltf\");\r\n    const OnSubmit = (values) => {\r\n        // e.preventDefault\r\n        // setColData(col)\r\n        // \r\n        setFormValues(values)\r\n\r\n    }\r\n    // program to get the dimensions of an image\r\n\r\n\r\n\r\n    // console.log('col', col)\r\n    const handleUpload = (e, index) => {\r\n        const filetype = e.target.files[0].type\r\n        setNFtExtension(filetype)\r\n        // debugger\r\n        setNft(e.target.files[0])\r\n\r\n\r\n\r\n        var fr = new FileReader;\r\n\r\n        fr.onload = function () { // file is loaded\r\n            var img = new Image;\r\n\r\n            img.onload = function () {\r\n                // alert(img.width); // image is loaded; sizes are available\r\n                setNftwidth(img.width)\r\n                setNftheight(img.height)\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n\r\n        let type = \"Image\"\r\n\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert('Filesize must 100mb or below');\r\n        } else {\r\n\r\n\r\n            switch (filetype) {\r\n                case 'image/png':\r\n                case 'image/jpg':\r\n                case 'image/gif':\r\n                case 'image/svg':\r\n                    type = \"Image\"\r\n                    break;\r\n                case 'audio/mpeg':\r\n                case 'audio/ogg':\r\n                case 'video/mp4':\r\n                case 'video/webm':\r\n                    type = 'Player'\r\n                    break;\r\n                case '':\r\n                    // if (nft?.name?.str.includes(\".glb\")) {\r\n                    type = 'modal'\r\n                    // }\r\n                    break;\r\n                default:\r\n                    type = 'Image'\r\n            }\r\n\r\n            // setNFtFileType(type)\r\n\r\n            setSource(prevState => {\r\n                // debugger\r\n                prevState[index] = { file: e.target.files[0], type: type }\r\n                setSourceType(type)\r\n\r\n                return [...prevState]\r\n            })\r\n\r\n\r\n            // switch (nft?.name?.str.includes(\".glb\")) {\r\n\r\n            //     case '':\r\n            //         setNFtFileType('modal')\r\n            //         break;\r\n            // }\r\n\r\n        }\r\n\r\n        // if (nftFileType === 'Image' && window.innerHeight > '500' && window.innerWidth > '500') {\r\n        //     alert(\"This is  matching\")\r\n        // }\r\n        // else {\r\n        //     setNftError('Minimum size should be 500x500')\r\n        //     alert('This is not matching')\r\n\r\n        // }\r\n    }\r\n    // useEffect(() => {\r\n\r\n    //     if (nftFileType === 'Image' && window.innerHeight <= 800 && window.innerWidth < 800) {\r\n    //         alert(\"This is not matching\")\r\n    //     }\r\n    //     // else {\r\n    //     //     alert('This is not matching')\r\n    //     //     setNftError('Minimum should be 800x800')\r\n\r\n    //     // }\r\n    // }, [])\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const onFinish = async (values) => {\r\n        // debugger\r\n        try {\r\n            setLoading(true)\r\n            // debugger\r\n            // const nftImagepromises = values?.nfts?.map(x => uploadNFT(x?.nft_image?.file))\r\n            const nftImagepromises = values?.nfts?.map(x => uploadNFT(nft))\r\n\r\n            const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n            // \r\n            // debugger\r\n            const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n            const addedImagetype = imagesRes?.map(x => x?.data?.data?.extension)\r\n            var str = addedImage;\r\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n            // console.log(check)\r\n            // console.log(addedImage.includes('undefined'), 'add')\r\n\r\n            const formData = new FormData()\r\n\r\n            // debugger\r\n            if (check === false) {\r\n                console.log('uploaded')\r\n                formData.append('title', data.title)\r\n                formData.append('description', data.description)\r\n                formData.append('address', data.address)\r\n\r\n                formData.append('country', data.country)\r\n                if (!data.state) {\r\n\r\n                    formData.append('state', '')\r\n                } else {\r\n                    formData.append('state', data.state)\r\n                }\r\n                if (!data.city) {\r\n                    formData.append('city', '')\r\n                } else {\r\n\r\n                    formData.append('city', data.city)\r\n                }\r\n                formData.append('latitude', lat)\r\n                formData.append('preview_imag', Pimage)\r\n                formData.append('logitude', log)\r\n                formData.append('price', data.price)\r\n                formData.append('number_of_nft', data.number_of_nft)\r\n                formData.append('image', data.image)\r\n                if (data.type == 1) {\r\n                    formData.append('start_date', '')\r\n                    formData.append('end_date', '')\r\n                } else {\r\n\r\n                    formData.append('start_date', data.start_date)\r\n                    formData.append('end_date', data.end_date)\r\n                }\r\n                formData.append('type', data.type)\r\n                formData.append('category_id', data.category_id)\r\n\r\n\r\n                formData.append('nft_image', addedImage)\r\n                formData.append('extention', sourceType)\r\n                formData.append('nft_name', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                // const newlist = newList.push(nft_collection_id);\r\n                formData.append('nft_collection_id', coll_id)\r\n                formData.append('nft_description', nft_description)\r\n                // formData.append('nft_description', values?.nfts?.map(x => x.nft_description))\r\n                // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n\r\n                // dispatch(uploadNFT())\r\n                dispatch(CreateProjectAction(formData, setLoading, history))\r\n            } else {\r\n                // debugger\r\n                console.log('fail')\r\n                setLoading(false)\r\n                swal('error!', 'Nft not uploaded', 'error')\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error, 'error')\r\n        }\r\n\r\n\r\n        // setLoading(false)\r\n\r\n        // console.log('Received values of form:', values, data)\r\n\r\n    };\r\n    // console.log('title', localStorage.getItem('title'))\r\n    const handleCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n    // const validateFileType = (\r\n    //     { type, name }\r\n    //     allowedTypes?\r\n    // ) => {\r\n    //     if (!allowedTypes) {\r\n    //         return true;\r\n    //     }\r\n\r\n    //     if (type) {\r\n    //         return allowedTypes.includes(type);\r\n    //     }\r\n    // };\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n\r\n        beforeUpload: file => {\r\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n            if (!isJpgOrPng) {\r\n\r\n                alert('You can only upload JPG/PNG file!');\r\n            }\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader?.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    // const getFile = (e) => {\r\n    //     // \r\n    //     console.log('Upload event:', e);\r\n\r\n    //     if (Array.isArray(e)) {\r\n    //         return e;\r\n    //     }\r\n    //     return e && e.fileList;\r\n    // };\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n        // <section className=\"author-area\">\r\n        <div className=\"main-create\">\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n                <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                    <Form\r\n                        form={form}\r\n                        name=\"dynamic_form_nest_item\"\r\n                        initialValues={{\r\n                            nfts: nfts,\r\n                        }}\r\n                        // onSubmit={(event) => handleSubmit(event)}\r\n                        onFinish={(event) => onFinish(event)}\r\n                        onSubmit={OnSubmit}\r\n                        autoComplete=\"off\"\r\n                        className=\"item-form card no-hover\"\r\n                    >\r\n                        <Form.List name=\"nfts\">\r\n                            {(fields, { add, remove }) => (\r\n                                <>\r\n                                    <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                        <svg\r\n                                            width=\"16px\"\r\n                                            height=\"16px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                            <path\r\n                                                fill=\"none\"\r\n                                                stroke=\"#fff\"\r\n                                                stroke-width=\"2\"\r\n                                                d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\r\n                                                transform=\"matrix(-1 0 0 1 24 0)\"\r\n                                            />\r\n                                        </svg>\r\n                                        Previous\r\n                                    </Button>\r\n                                    {/* <div className='steps-center'>\r\n    \r\n    \r\n                                                    <div className='orgicon1'>\r\n    \r\n                                                        <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n                                                    </div>\r\n    \r\n                                                    <div className='orgicon1line'>\r\n                                                        <span style={{}}> ----------------------------- </span>\r\n    \r\n                                                    </div>\r\n                                                    <div className='orgicon2'>\r\n    \r\n                                                        <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n                                                    </div>\r\n                                                </div> */}\r\n                                    <>\r\n                                        {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                            // setSourceType(source[index]?.file),\r\n                                            // <Space\r\n                                            //     key={key}\r\n                                            //     style={{\r\n                                            //         display: 'flex',\r\n                                            //         marginBottom: 8,\r\n                                            //     }}\r\n                                            //     align=\"baseline\"\r\n                                            // >\r\n                                            <Collapse\r\n                                                defaultActiveKey={[\"1\"]}\r\n                                                onChange={onChange}\r\n                                                expandIconPosition={expandIconPosition}\r\n                                            >\r\n                                                <Panel header=\"Details\" key=\"1\" className=\"p-0\">\r\n                                                    <Fragment>\r\n                                                        {/* <div>Artwork {index}</div> */}\r\n                                                        <div className=\"row relative\">\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: \"Name is required\",\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n                                                                    {/* <Controller\r\n                                                                            control={control}\r\n                                                                            name=\"nft_description\"\r\n                                                                            defaultValue=\"\"\r\n                                                                            rules={{ required: true, minLength: 300 }}\r\n                                                                            render={({ field }) => {\r\n                                                                                return <JoditEditor\r\n                                                                                    ref={field.ref}\r\n                                                                                    value={field.value}\r\n                                                                                    \r\n                                                                                    aria-invalid={errors.nft_description ? \"true\" : \"false\"}\r\n                                                                                    placeholder=\"start typing\"\r\n                                                                                    tabIndex={1} \r\n                                                                                    onBlur={newContent => setNft_description(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                                                    onChange={field.onChange}\r\n                                                                                />\r\n                                                                            }}\r\n    \r\n    \r\n                                                                        /> */}\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: \"Missing  description\",\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <Controller\r\n                                                                                control={control}\r\n                                                                                name=\"nft_description\"\r\n                                                                                defaultValue=\"\"\r\n                                                                                render={({ field: { value, onChange } }) => {\r\n                                                                                    return  */}\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={nft_description}\r\n                                                                            // config={config}\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                            onBlur={(newContent) =>\r\n                                                                                setNft_description(newContent)\r\n                                                                            } // preferred to use only this option to update the content for performance reasons\r\n                                                                            onChange={(newContent) => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                    {errors.nft_description?.type ===\r\n                                                                        \"required\" && (\r\n                                                                            <p style={{ color: \"red\" }} role=\"alert\">\r\n                                                                                Description is required\r\n                                                                            </p>\r\n                                                                        )}\r\n                                                                    {errors.nft_description &&\r\n                                                                        errors.nft_description.type ===\r\n                                                                        \"minLength\" && (\r\n                                                                            <p style={{ color: \"red\" }}>\r\n                                                                                min length of words is 300\r\n                                                                            </p>\r\n                                                                        )}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {/* <div className=\"col-md-5 col-12\">\r\n                                                                        <label>Nft</label>\r\n                                                                        <div>\r\n                                                                            <Form.Item\r\n                                                                                {...restField}\r\n                                                                                name={[name, \"nft_image\"]}\r\n                                                                                // getValueFromEvent={getFile}\r\n                                                                                rules={[\r\n                                                                                    {\r\n                                                                                        required: true,\r\n                                                                                        message: 'Please select a image',\r\n                                                                                    },\r\n                                                                                ]}\r\n    \r\n                                                                            >\r\n    \r\n                                                                                <Upload\r\n                                                                                    {...fileProps}\r\n                                                                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                                    listType=\"picture-card\"\r\n                                                                                    // fileList={fileList}\r\n                                                                                    // onChange={onChange}\r\n                                                                                    onPreview={handlePreview}\r\n                                                                                    maxCount={1}\r\n    \r\n                                                                                >\r\n                                                                                    + Upload\r\n                                                                                </Upload>\r\n    \r\n    \r\n                                                                            </Form.Item>\r\n                                                                            <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                                <img\r\n                                                                                    alt=\"example\"\r\n                                                                                    style={{\r\n                                                                                        width: '100%',\r\n                                                                                    }}\r\n                                                                                    src={previewImage} />\r\n                                                                            </Modal>\r\n                                                                        </div>\r\n                                                                    </div> */}\r\n\r\n                                                            <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                <MinusCircleOutlined\r\n                                                                    onClick={(e) => {\r\n                                                                        remove(name);\r\n                                                                        handleDecrement(e);\r\n                                                                    }}\r\n                                                                />\r\n                                                            </div>\r\n                                                            {/* </div> */}\r\n                                                            <div className=\"col-12\">\r\n                                                                <label className=\"mt-2 mb-3\">\r\n                                                                    Choose Collection\r\n                                                                </label>\r\n                                                            </div>\r\n\r\n\r\n                                                            {col?.map((item, idx) => (\r\n                                                                <div\r\n                                                                    key={`auc_${idx}`}\r\n                                                                    id={item.id}\r\n                                                                    className=\"col-md-6 col-lg-3 col-12 choose_div\"\r\n                                                                >\r\n                                                                    <div\r\n                                                                        id={item.id}\r\n                                                                        onClick={() =>\r\n                                                                            onHandleClick(index, item.id)\r\n                                                                        }\r\n                                                                        className=\"card\"\r\n                                                                        style={{\r\n                                                                            background: \"black\",\r\n                                                                            marginBottom: \"8px\",\r\n                                                                            border:\r\n                                                                                nft_collection_id[index] == item.id\r\n                                                                                    ? \"1px solid #fff\"\r\n                                                                                    : null,\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <div className=\"card-body\">\r\n                                                                            <div>{item.title}</div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    {/* </Form.Item> */}\r\n                                                                </div>\r\n                                                                // </div>\r\n                                                            ))}\r\n                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                {/* <div className=\"col-24\"> */}\r\n\r\n                                                                <div className=\"form-group\">\r\n                                                                    <div\r\n                                                                        className=\"card choose_div\"\r\n                                                                        style={{\r\n                                                                            background: \"black\",\r\n                                                                            marginBottom: \"8px\",\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <div className=\"card-body \">\r\n                                                                            <Button\r\n                                                                                variant=\"primary\"\r\n                                                                                className=\"collection_btn\"\r\n                                                                                onClick={() => setModalShow(true)}\r\n                                                                            >\r\n                                                                                <i className=\"f1a-regular fa-plus\"></i>{\" \"}\r\n                                                                                Create Collection\r\n                                                                            </Button>\r\n\r\n                                                                            <MyVerticallyCenteredModal\r\n                                                                                show={modalShow}\r\n                                                                                onHide={() => setModalShow(false)}\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                    <div\r\n                                                                        className=\"position-relative upload_nft\"\r\n                                                                        style={{\r\n                                                                            backgroundImage: \"url('')\",\r\n                                                                            backgroundSize: \"contain\",\r\n                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a image',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        > */}\r\n                                                                        {/* <div className='uploadnftpopup-input Icon_cam' > */}\r\n                                                                        <div\r\n                                                                            className={\r\n                                                                                source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\r\n                                                                                    ? \" inputdragVedio\"\r\n                                                                                    : \"inputtdrag\"\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <input\r\n                                                                                type=\"file\"\r\n                                                                                // onChange={handleUpload}\r\n                                                                                maxCount={1}\r\n                                                                                onChange={e => handleUpload(e, index)}\r\n                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                            />\r\n\r\n                                                                            {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\r\n                                                                                <div>\r\n                                                                                    {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\r\n                                                                                    {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? (\r\n\r\n\r\n                                                                                        <img\r\n                                                                                            src={URL.createObjectURL(source[index].file)}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                            Minimum size should be 500x500\r\n                                                                                        </p>\r\n                                                                                    )\r\n\r\n                                                                                    }\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n                                                                            {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\r\n                                                                                <div>\r\n                                                                                    {/* { source?.length && source?.[index] && source[index]?.type === \"Player\" && ( */}\r\n                                                                                    <video\r\n                                                                                        // className=\"VideoInput_video\"\r\n                                                                                        width=\"100%\"\r\n                                                                                        // height={height}\r\n                                                                                        controls\r\n                                                                                        src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                    // onChange={setSource}\r\n                                                                                    />\r\n                                                                                    {/* )} */}\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p>\r\n                                                                                            Because you’ve included\r\n                                                                                            multimedia, you’ll need to provide\r\n                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                            the card display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                        // onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                    <img\r\n                                                                                                        className=\"preview_image\"\r\n                                                                                                        src={URL.createObjectURL(preview[index])}\r\n\r\n\r\n                                                                                                    // onChange={setPimage}\r\n                                                                                                    />\r\n                                                                                                )}\r\n                                                                                            </div>\r\n                                                                                        }\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n                                                                            {/* )} */}\r\n                                                                            {/* <div className=\"VideoInput_footer\">{vdo || \"Nothing selectd\"}</div> */}\r\n\r\n                                                                            {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\r\n                                                                                <div>\r\n                                                                                    <DModal\r\n                                                                                        vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                    // mdl={setModal}\r\n                                                                                    />\r\n\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p className=\"\">\r\n                                                                                            Because you’ve included multimedia,\r\n                                                                                            you’ll need to provide an image\r\n                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                            display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                        />\r\n                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                    <img\r\n                                                                                                        className=\"preview_image\"\r\n                                                                                                        src={URL.createObjectURL(preview[index])} />\r\n                                                                                                )}\r\n                                                                                            </div>\r\n                                                                                        }\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                        </div>\r\n                                                                        {/* </Form.Item> */}\r\n                                                                        {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a MP4 File',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        >\r\n    \r\n                                                                            <VideoInput width={400} height={300} />\r\n    \r\n    \r\n                                                                        </Form.Item> */}\r\n\r\n                                                                        {/* <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>MP4 & MP3 </label>\r\n                                                                                <VideoInput width={400} height={300} />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>3D Modal </label>\r\n                                                                                <Dinosaur />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                               \r\n    \r\n                                                                            </div>\r\n                                                                        </div> */}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Fragment>\r\n                                                </Panel>\r\n                                            </Collapse>\r\n                                        ))}\r\n\r\n                                        {/* {!((data?.number_of_nft === count)) ? */}\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                type=\"dashed\"\r\n                                                onClick={(e) => {\r\n                                                    add(e);\r\n                                                    handleIncrement(e);\r\n\r\n\r\n                                                }}\r\n                                                block\r\n                                                icon={<PlusOutlined />}\r\n                                                disabled={data?.number_of_nft == count}\r\n                                            >\r\n                                                Add NFT\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                        {/* : null} */}\r\n                                    </>\r\n                                </>\r\n                            )}\r\n                        </Form.List>\r\n                        <Form.Item>\r\n                            <div className=\"col-12\">\r\n                                <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\r\n                                    Create\r\n                                </button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default UploadNft","import { useEffect, useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Create from \"./Create\";\r\nimport UploadNft from \"./uploadNft\";\r\nimport FormProvider, { useFormData } from \"./Context/context\";\r\n\r\nimport { Button, message, Steps } from 'antd';\r\nimport { set, useForm } from \"react-hook-form\";\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Create Project',\r\n    content: <Create />\r\n  },\r\n  {\r\n    title: 'Upload NFT',\r\n    content: <UploadNft />,\r\n  },\r\n];\r\nconst UploadNftIndex = () => {\r\n\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const { setValue } = useForm();\r\n\r\n  const prev = () => {\r\n    // \r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const items = steps.map((item) => ({ key: item.title, title: item.title }));\r\n  return (\r\n    <section className=\"author-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n\r\n\r\n          <div className=\"col-14 col-md-9\">\r\n            {/* Intro */}\r\n            <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n              <div className=\"intro-content\">\r\n                <span>Get Started</span>\r\n                {current === 0 ? (\r\n\r\n                  <h3 className=\"mt-3 mb-0\">Create Project</h3>\r\n                ) : (\r\n\r\n                  <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <FormProvider>\r\n\r\n              {/* <FormCard currentStep={formStep} prevFormStep={prevFormStep}> */}\r\n              <div className=\"steps-content\">\r\n                <Steps current={current} items={items} />\r\n                {current === 0 && (\r\n\r\n                  <Create current={current} next={next} prev={prev} />\r\n                )}\r\n\r\n                {current === 1 && <><UploadNft prev={prev} />\r\n                  {/* <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                    Previous\r\n                  </Button> */}\r\n                </>\r\n                }\r\n                {/* <div className=\"steps-action\">\r\n          {current < steps.length - 1 && (\r\n            <Button type=\"primary\" onClick={() => next()}>\r\n              Next\r\n            </Button>\r\n          )}\r\n\r\n          {current > 0 && (\r\n            <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n              Previous\r\n            </Button>\r\n          )}\r\n        </div> */}\r\n              </div>\r\n              {/* </FormCard> */}\r\n            </FormProvider>\r\n          </div>\r\n        </div >\r\n      </div >\r\n    </section >\r\n  );\r\n};\r\n\r\nexport default UploadNftIndex;\r\n","import React, { Component, useEffect } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Creates from '../components/Create/Create';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport { isLogin } from '../routers/utils';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UploadNftIndex from '../components/Create';\r\n\r\nconst Create = () => {\r\n  const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  //   if (!isLogin()) {\r\n  //     history.push('/login')\r\n  //   }\r\n  // }, [])\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n      <UploadNftIndex />\r\n      <Footer />\r\n      <ModalSearch />\r\n      <ModalMenu />\r\n      <Scrollup />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => {\r\n        // \r\n        // console.log(login.authToken, 'login')\r\n        return state.login\r\n    })\r\n    // console.log(user, 'user')\r\n\r\n    if (user?.status === 200) {\r\n        history.push('/')\r\n    }\r\n\r\n    const mesg = useSelector(state => {\r\n        // \r\n        return state.user.message\r\n    })\r\n    // if (login?.userToken) {\r\n    //     console.log('hello')\r\n    // }\r\n    // console.log(login?.status)\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        // \r\n        dispatch(LoginAction(data))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"Enter your Password\"\r\n                                            {...register(\"password\", { required: \"Password is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" defaultChecked />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Log In</button>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\"><Link to=\"/forgotpassword\">Forgot Password</Link></span>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\">If not registered? <Link to=\"/signup\"><b>Sign Up</b></Link></span>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LoginSection from '../components/Login/Login';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LoginSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","export default function FormCard({ children, currentStep, prevFormStep }) {\r\n    return (\r\n        <div >\r\n            {currentStep < 1 && (\r\n                <>\r\n                    {currentStep > 0 && (\r\n                        <button\r\n                            onClick={prevFormStep}\r\n                            type=\"button\"\r\n                        >\r\n                            back\r\n                        </button>\r\n                    )}\r\n\r\n                </>\r\n\r\n            )}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    // console.log(data, 'dataaa')\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector, } from 'react-redux'\r\nimport { Register } from '../../redux/Actions/authAction'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as Yup from 'yup'\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required(\"Email is required\"),\r\n    // wallet_id: Yup.string()\r\n    //     .wallet_id()\r\n    //     .required(\"Wallet address is required\"),\r\n    // goal: Yup.string()\r\n    //     .goal()\r\n    //     .required(\"Fundraising goal is required\"),\r\n\r\n    password: Yup.string()\r\n        .required(\"Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\"),\r\n    confirm_password: Yup.string()\r\n        .required(\"Confirm Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\")\r\n        .oneOf([Yup.ref(\"password\")], \"Passwords do not match\")\r\n});\r\n\r\n\r\nconst Signup = ({ formStep, nextFormStep }) => {\r\n    const { setFormValues } = useFormData();\r\n    const dispatch = useDispatch()\r\n    const { register, watch, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"all\",\r\n        resolver: yupResolver(formSchema)\r\n    });\r\n\r\n    // const [role, setRole] = useState()\r\n    // console.log('role', role)\r\n    const OnSubmit = (data) => {\r\n        // dispatch(Register(data))\r\n        setFormValues({ ...data });\r\n        // if (role == 3) {\r\n\r\n        nextFormStep();\r\n        // }\r\n        // if (role == 2) {\r\n        //     const formData = new FormData()\r\n        //     formData.append('email', data.email)\r\n        //     // formData.append('goal', data.goal)\r\n        //     formData.append('password', data.password)\r\n        //     formData.append('confirm_password', data.confirm_password)\r\n        //     // formData.append('wallet_id', data.wallet_id)\r\n        //     // formData.append('role', role)\r\n        //     dispatch(Register(formData))\r\n        // }\r\n    }\r\n\r\n    const { user } = useSelector(state => state.user)\r\n\r\n\r\n    const { errMessage } = useSelector(state => {\r\n        return state?.errmessage?.message\r\n    })\r\n\r\n    return (\r\n        < section className=\"author-area\" >\r\n            <div className=\"container\">\r\n\r\n                <>\r\n                    <div>\r\n                        {errMessage && <p>{errMessage}</p>}\r\n\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 co  l-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span></span>\r\n                                <h3 className=\"mt-3 mb-0\"></h3>\r\n                                <p></p>\r\n                            </div>\r\n                            {/* Item Form */}\r\n                            <div className={formStep === 0 ? styles.showForm : styles.hideForm}>\r\n                                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                    <div className=\"row\">\r\n                                        <div className='steps-center'>\r\n                                            <div className='step1icon'>\r\n\r\n                                                <i className=\"fa-solid fa-circle-check\"> Step 1 </i>\r\n                                            </div>\r\n                                            <div className='stepperline'>\r\n                                                <i style={{ color: '#452868' }}>  ----------------------------- </i>\r\n\r\n                                            </div>\r\n                                            <div className='step2icon'>\r\n\r\n                                                <i className=\"fa-regular fa-circle\" > Step 2 </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Email</label>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    {...register(\"email\", { required: 'Email address is required' })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.email ? \"true\" : \"false\"} />\r\n                                                {/* {errors.errMessage} */}\r\n                                                {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                                {/* {errMessage && <p>{errMessage}</p>} */}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"password\"\r\n                                                    placeholder=\"Password\"\r\n                                                    {...register(\"password\", { required: true })}\r\n                                                    aria-invalid={errors.password ? \"true\" : \"false\"} />\r\n                                                {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Confirm Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"confirm_password\"\r\n                                                    placeholder=\"Confirm password\"\r\n                                                    {...register(\"confirm_password\",\r\n                                                        {\r\n                                                            required: true,\r\n                                                            validate: (val) => {\r\n                                                                if (watch('password') != val) {\r\n                                                                    return \"Your passwords do no match\";\r\n                                                                }\r\n                                                            },\r\n                                                        })}\r\n                                                    aria-invalid={errors.confirm_password ? \"true\" : \"false\"} />\r\n                                                {errors.confirm_password && <p style={{ color: 'red' }} role=\"alert\">{errors.confirm_password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Fundraising Goal</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"goal\"\r\n                                                    placeholder=\"Fundraising goal (MATIC)\"\r\n                                                    {...register(\"goal\",\r\n                                                        {\r\n                                                            required: true,\r\n\r\n                                                        })}\r\n                                                    aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                                {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Wallet Address</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"wallet_id\"\r\n                                                    // defaultValue='1'\r\n                                                    placeholder=\"Wallet address\"\r\n                                                    {...register(\"wallet_id\", { required: true })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                                />\r\n                                                {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"3\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                                </div>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"2\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <div className=\"form-check form-check-inline\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n                                        <div className=\"col-12\">\r\n                                            {/* {role == 2 ? ( */}\r\n                                            {/* <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Signup</button> */}\r\n                                            {/* ) : ( */}\r\n\r\n                                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                                            {/* )} */}\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <span className=\"d-block text-center mt-4\">Already have an account? <Link to=\"/login\"><b>Login</b></Link></span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        </section >\r\n\r\n    )\r\n}\r\n\r\nexport default Signup\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnnualRevenueList, CountryList, HearAboutList, Register } from '../../redux/Actions/authAction'\r\nimport { Controller, useForm } from 'react-hook-form'\r\n\r\nimport { useHistory } from 'react-router'\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\r\nimport { useState } from 'react'\r\nimport JoditEditor from 'jodit-react';;\r\n\r\n// import { Widget } from \"@uploadcare/react-widget\";\r\n// import FileUpload from \"react-material-file-upload\";\r\n// import { uploadcare } from '../lib/uploadcare.min.js';\r\nconst CreateOrganization = ({ formStep, nextFormStep, goBack }) => {\r\n\r\n    const [description, setDescription] = useState()\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const organization = useSelector(state => {\r\n        return state.user.organization\r\n    })\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n    const { annualRevenue } = useSelector(state => state.annualRevenue)\r\n\r\n    // }\r\n    const { hereAbout } = useSelector(state => state.hereAbout)\r\n    // console.log(user, 'user')\r\n\r\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    const OnSubmit = (values) => {\r\n        setFormValues(values)\r\n        // FormData.append('email', data.email)\r\n        // FormData.append('password', data.password)\r\n        // FormData.append('confirm_password', data.confirm_password)\r\n        const formData = new FormData()\r\n        formData.append('banner_image', values.banner_image[0])\r\n        formData.append('logo', values.logo[0])\r\n        formData.append('email', data.email)\r\n        formData.append('password', data.password)\r\n        formData.append('wallet_id', values.wallet_id)\r\n        // formData.append('role', data.role)\r\n        formData.append('goal', values.goal)\r\n        formData.append('confirm_password', data.confirm_password)\r\n        formData.append('organization_name', values.organization_name)\r\n        formData.append('url', values.url)\r\n        formData.append('country', values.country)\r\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\r\n        formData.append('tax_id', values.tax_id)\r\n\r\n        formData.append('social', values.social)\r\n        formData.append('social_link', values.social_link)\r\n        formData.append('description', description)\r\n        // formData.append('method_heard_detail', values.method_heard_detail)\r\n\r\n        dispatch(Register(formData))\r\n        // if (formData) {\r\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\r\n        //     history.push('/login')\r\n        // }\r\n    }\r\n\r\n    const socialmedia = useSelector(state => {\r\n        return state?.getSocialmediaIcons?.getsocial\r\n    })\r\n    // console.log('social', socialmedia)\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n        dispatch(AnnualRevenueList())\r\n        dispatch(HearAboutList())\r\n        dispatch(GetSocialMediaIcons())\r\n    }, [])\r\n\r\n\r\n    if (organization) {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <div className={formStep === 1 ? styles.showForm : styles.hideForm}>\r\n                            <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                {/* <button\r\n                                    // className={styles.back}\r\n                                    onClick={prevFormStep}\r\n                                    type=\"button\"\r\n                                >\r\n                                    back\r\n                                </button> */}\r\n                                <div className=\"row\">\r\n                                    <div className='col-12 d-flex justify-content-center'>\r\n                                        <div className='orgicon1'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 1</i>\r\n                                        </div>\r\n\r\n                                        <div className='orgicon1line'>\r\n                                            <span style={{ color: '#452868' }}> ----------------------------- </span>\r\n\r\n                                        </div>\r\n                                        <div className='orgicon2'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 2</i>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Fundraising Goal</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"goal\"\r\n                                                step=\"0.01\"\r\n                                                placeholder=\"Fundraising goal (MATIC)\"\r\n                                                {...register(\"goal\",\r\n                                                    {\r\n                                                        required: true,\r\n\r\n                                                    })}\r\n                                                aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                            {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Funding Wallet </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"wallet_id\"\r\n                                                // defaultValue='1'\r\n                                                placeholder=\"Funding Wallet\"\r\n                                                {...register(\"wallet_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Name</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"organization_name\"\r\n                                                placeholder=\"Organization name\"\r\n                                                {...register(\"organization_name\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.organization_name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Website</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"url\"\r\n                                                placeholder=\"Website\"\r\n                                                {...register(\"url\", {\r\n                                                    required: true,\r\n                                                    pattern: {\r\n                                                        value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                                    }\r\n                                                })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.url ? \"true\" : \"false\"}\r\n                                            />\r\n\r\n                                            {errors.url && errors.url?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                                            {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Describe your project\"\r\n\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <Controller\r\n                                                control={control}\r\n                                                name=\"description\"\r\n                                                defaultValue=\"\"\r\n\r\n                                                // {...register(\"description\", { required: true })}\r\n                                                rules={{ required: true, min: 150 }}\r\n                                                // rules={{\r\n                                                //     required: true, pattern: {\r\n\r\n                                                //         message: \"Description is required\",\r\n                                                //     },\r\n                                                // }}\r\n                                                render={({ field }) => {\r\n                                                    return <JoditEditor\r\n                                                        ref={field.ref}\r\n                                                        value={field.value}\r\n                                                        // config={config}\r\n                                                        aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                                        placeholder=\"start typing\"\r\n                                                        tabIndex={1} // tabIndex of textarea\r\n                                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                        onChange={field.onChange}\r\n                                                    />\r\n                                                }}\r\n                                            />\r\n                                            {errors?.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Country</label>\r\n\r\n                                            <select name=\"country\"\r\n                                                {...register(\"country\", { required: true })}>\r\n                                                aria-invalid={errors.country ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                                {countries.data?.data?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.name}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"annual_revenue_range\"\r\n                                                {...register(\"annual_revenue_range\", { required: true })}>\r\n                                                {annualRevenue?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key.id} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>EIN Number/Tax Id</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"tax_id\"\r\n                                                placeholder=\"EIN Number/Tax Id(optional)\"\r\n                                                {...register(\"tax_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (required)</label>\r\n                                            <select name=\"social\"\r\n                                                {...register(\"social\", { required: true })}>\r\n                                                aria-invalid={errors.social ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\r\n                                                {socialmedia?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.title}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (secondary)</label>\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"social_link\"\r\n                                                    placeholder=\"social link(optional) \"\r\n                                                    {...register(\"social_link\")}\r\n                                                // {...register(\"email\")}\r\n                                                // aria-invalid={errors.social_link ? \"true\" : \"false\"}\r\n                                                />\r\n                                            </div>\r\n                                            {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"project\"\r\n                                                {...register(\"hear_about\", { required: true })}>\r\n                                                {hereAbout?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Banner</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n\r\n                                                name=\"banner_image\"\r\n                                                placeholder=\"Select file\"\r\n                                                disp\r\n                                                {...register(\"banner_image\", { required: true })}\r\n                                                aria-invalid={errors.banner_image ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\r\n\r\n                                            {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Logo</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n                                                name=\"logo\"\r\n                                                placeholder=\"Select file\"\r\n                                                {...register(\"logo\", { required: true })}\r\n                                                aria-invalid={errors.logo ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <div className='logo_one'>\r\n\r\n                                                <span className='logo-dis'>maximum height should be 250 pixels</span>\r\n                                            </div>\r\n                                            {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\r\n                                    </div>\r\n                                    {/* <div className=\"col-3\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => goBack()}>Previous</button>\r\n                                    </div> */}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CreateOrganization","import { useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Signup from './Signup'\r\nimport CreateOrganization from './createOrganization';\r\nimport FormProvider from \"./Context/context\";\r\n\r\n\r\nconst SignupIndex = () => {\r\n  const [formStep, setFormStep] = useState(0);\r\n\r\n  const nextFormStep = () => setFormStep((currentStep) => currentStep + 1);\r\n\r\n  const prevFormStep = () => setFormStep((currentStep) => currentStep - 1);\r\n\r\n  return (\r\n    <FormProvider>\r\n\r\n      <FormCard currentStep={formStep} prevFormStep={prevFormStep}>\r\n        {formStep === 0 && (\r\n          <Signup formStep={formStep} nextFormStep={nextFormStep} />\r\n        )}\r\n        {formStep === 1 && <CreateOrganization goBack={prevFormStep} />\r\n        }\r\n      </FormCard>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default SignupIndex;\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport SignupSection from '../components/Signup';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Signup = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <SignupSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contact',\r\n\r\n    initialState: {\r\n        contact: [],\r\n\r\n\r\n    },\r\n    reducers: {\r\n\r\n        postContact: (state, action) => {\r\n            state.contact = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const contactReducer = contactSlice.reducer\r\n\r\nexport const {\r\n    postContact\r\n} = contactSlice.actions;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ContactAction } from '../../redux/Actions/contactAction';\r\nimport Loader from '../Loader/loader';\r\n\r\n\r\nconst Contact = () => {\r\n    const [loading, setLoading] = useState()\r\n    const dispatch = useDispatch()\r\n    // useEffect(() => {\r\n    //     dispatch(ContactAction())\r\n    // })\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        setLoading(true)\r\n        const formData = new FormData()\r\n        formData.append('name', data.name)\r\n        formData.append('subject', data.subject)\r\n        formData.append('email', data.email)\r\n        formData.append('description', data.description)\r\n        dispatch(ContactAction(formData, setLoading))\r\n    }\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>Contact</span>\r\n                            <h3 className=\"mt-3 mb-0\">Get In Touch</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form id=\"contact-form\" className=\"item-form card no-hover\" onSubmit={handleSubmit(OnSubmit)} >\r\n                            {loading ? (\r\n                                <Loader />\r\n                            ) : (\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name\"  {...register(\"name\", { required: true })}\r\n                                                aria-invalid={errors.name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Name is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" {...register(\"email\", { required: true })}\r\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.email?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Email is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"subject\" placeholder=\"Subject\"  {...register(\"subject\", { required: true })}\r\n                                                aria-invalid={errors.subject ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.subject?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Subject is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <textarea className=\"form-control\" name=\"message\" placeholder=\"Message\" cols={30} rows={3} defaultValue={\"\"}  {...register(\"description\", { required: true })}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Message is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\"><i className=\"icon-paper-plane mr-2\" />Send Message</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </form>\r\n                        <p className=\"form-message\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Contact;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { postContact } from \"../Slices/contactSlice\";\r\nexport const ContactAction = (params, setLoading) => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/contact-us/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(postContact(res));\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", res.data.message, 'success')\r\n                .then(function () {\r\n                    window.location = \"/\";\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ContactSection from '../components/Contact/Contact';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                {/* <Breadcrumb title=\"Contact\" subpage=\"Pages\" page=\"Contact\" /> */}\r\n                <ContactSection />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ForgotPasswordAction, LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { forgotpassword, message, statusCode } = useSelector(state => {\r\n        // \r\n        return state.forgotpassword\r\n    })\r\n\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        dispatch(ForgotPasswordAction(data)).then(() => {\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors?.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div>{errors.username && errors.username.message}</div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Send Reset Link</button>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                    <hr />\r\n                                    <div className=\"other-option\">\r\n                                        Social Icons\r\n                                        <div className=\"social-icons d-flex justify-content-center\">\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <a key={`lsd_${idx}`} className={item.link} href=\"#\">\r\n                                                        <i className={item.icon} />\r\n                                                        <i className={item.icon} />\r\n                                                    </a>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LoginSection from '../components/Login/Login';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport ForgotPassword from '../components/ForgotPassword/forgotPassword';\r\n\r\nconst Forgot = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ForgotPassword />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forgot\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from './utils';\r\n\r\nconst PrivateRoute = ({ component: Component, restricted, ...rest }) => {\r\n    // const isLog = isLogin()\r\n    // \r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Redirect to=\"/\" />\r\n                : <Component {...props} />\r\n\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Geonames from \"geonames.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nconst geonames = new Geonames({\r\n    username: \"fullstackdeveloper91\",\r\n    lan: \"en\",\r\n    encoding: \"JSON\"\r\n});\r\n// const useStyles = makeStyles(theme => ({\r\n//     formControl: {\r\n//         minWidth: \"100%\",\r\n//         // background: 'black',\r\n//         // color: \"#FFF\"\r\n//     },\r\n//     selectEmpty: {\r\n//         marginTop: theme.spacing(2)\r\n//     }\r\n// }));\r\nexport default function GeoLocation(props) {\r\n    // const classes = useStyles();\r\n    const { locationTitle, geoId, onChange, isCountry } = props;\r\n    const [options, setOptions] = useState([]);\r\n    // console.log(options, 'opttt')\r\n    const [currentItem, setCurrentItem] = useState(\"\");\r\n    const [labelWidth, setLabelWidth] = useState(0);\r\n    useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n        {\r\n            !currentItem && (\r\n                setCurrentItem(props?.selected)\r\n            )\r\n        }\r\n    }, [props]);\r\n    // http://api.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en\r\n    // https://secure.geonames.org/countryInfoJSON?username=jhon_doe&lang=en\r\n    useEffect(() => {\r\n        try {\r\n            const data = async () => {\r\n                (await isCountry)\r\n                    ? axios?.get(`https://secure.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en`)?.then(res => {\r\n                        // \r\n                        setOptions(res);\r\n                        console.log(res, \"countries\")\r\n                    })\r\n                    // \"https://secure.geonames.org/childrenJSON?geonameId=\" + id\r\n                    : axios?.get(`https://secure.geonames.org/childrenJSON?username=fullstackdeveloper91&lang=en&geonameId=${geoId}`)?.then(res => {\r\n                        setOptions(res);\r\n                        console.log(res, \"cities\")\r\n                    });\r\n            };\r\n            data();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }, [geoId, isCountry]);\r\n    const inputLabel = useRef(null);\r\n    const handleChange = e => {\r\n        setCurrentItem(e.target.value);\r\n        onChange(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <form >\r\n            <label ref={inputLabel} id=\"demo-simple-select-outlined-label\" style={{ display: 'none' }}>\r\n                {locationTitle}\r\n            </label>\r\n            <select\r\n                label=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={currentItem}\r\n                onChange={handleChange}\r\n                labelWidth={labelWidth}\r\n            >\r\n                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select </option>\r\n                {options?.data?.geonames?.map((v, index) => (\r\n                    <option key={index} value={v?.geonameId}>\r\n                        {isCountry ? v?.countryName : v?.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </form>\r\n    );\r\n}\r\nGeoLocation.propTypes = {\r\n    locationTitle: PropTypes.string,\r\n    geoId: PropTypes.node,\r\n    isCountry: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\nGeoLocation.defaultProps = {\r\n    onChange: undefined\r\n};","// import { getValue } from '@mui/system';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { CategoriesAction, ProjectDetail, UpdateProject } from '../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\nimport GeoLocation from '../components/Create/geoLocation';\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../redux/Actions/authAction';\r\n\r\nconst EditProject = () => {\r\n    const editor = useRef(null);\r\n    const [country, setCountry] = useState();\r\n    console.log(country)\r\n    const [state, setState] = useState();\r\n    const [city, setCity] = useState();\r\n    const [description, setDescription] = useState();\r\n    // const [descriptionup, setDescriptionup] = useState();\r\n    // console.log(descriptionup, 'discup')\r\n    const [type, setType] = useState();\r\n    const { id } = useParams();\r\n    // console.log(id, \"idd\")\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    const dis = projdetail.description\r\n    // setDescriptionup(dis)\r\n    // console.log(dis, 'dis')\r\n    // console.log(projdetail, \"gfgfhghgghhgh\")\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n\r\n    }, [id])\r\n    const config = {\r\n        placeholderText: 'Edit Your Content Here!',\r\n        charCounterCount: false\r\n    }\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(first)\r\n\r\n    // console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            // const formData = new FormData()\r\n            // // formData.append('country_id', event?.currentTarget?.value)\r\n            // formData.append('country_id', projdetail.country)\r\n            // dispatch(StateList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n\r\n        dispatch(UpdateProject(id, formData))\r\n    }\r\n\r\n\r\n\r\n        const disablePastDate = () => {\r\n            const today = new Date();\r\n            const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n            const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n            const yyyy = today.getFullYear();\r\n            return yyyy + \"-\" + mm + \"-\" + dd;\r\n        };\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    // console.log(cat, 'cat')\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n    const handleChangeCountry = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n        const formData = new FormData()\r\n        // formData.append('country_id', event?.currentTarget?.value)\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    return (\r\n        // <Modal\r\n        //     {...props}\r\n        //     size=\"lg\"\r\n        //     aria-labelledby=\"contained-modal\"\r\n        //     centered\r\n        // >\r\n        //     <Modal.Header closeButton>\r\n        //         <Modal.Title id=\"contained-modal\">\r\n        //             Collection\r\n        //         </Modal.Title>\r\n        //     </Modal.Header>\r\n        //     <Modal.Body>\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n                    <div className=\"col-12 col-md-7\">\r\n                        <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Get Started</span>\r\n                                <h3 className=\"mt-3 mb-0\">Update Project</h3>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"2\" onChange={(e) => setType(e.target.value)} {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                        </div>\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"1\" onChange={(e) => setType(e.target.value)}  {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {/* {type == 1 && ( */}\r\n\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Project name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"title\"\r\n                                            placeholder=\"Project name\"\r\n                                            {...register(\"title\", { required: true })}\r\n                                            aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                                    </div>\r\n                                    {/* )} */}\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Web address</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"address\"\r\n                                            placeholder=\"Web Address\"\r\n                                            {...register(\"address\", { required: true })}\r\n                                            aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <label>Description</label>\r\n                                    <div className=\"form-group\">\r\n                                        {/* <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"textarea\"\r\n                                            // data-provide=\"markdown-editable\" rows=\"10\"\r\n                                            placeholder=\"Description\"\r\n                                            cols={30}\r\n                                            {...register(\"description\", { required: true })}\r\n                                            aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        /> */}\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n                                            render={({ field: { value, onChange } }) => {\r\n                                                return <JoditEditor\r\n                                                    ref={editor}\r\n                                                    value={value}\r\n                                                    // config={config}\r\n\r\n                                                    placeholder=\"start typing\"\r\n                                                    tabIndex={1} // tabIndex of textarea\r\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                    onChange={newContent => { }}\r\n                                                />\r\n                                            }}\r\n                                        />\r\n                                        {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                        {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"country\"\r\n                                                    {...register(\"country\", { required: true })}\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeCountry()\r\n                                                    }>\r\n\r\n                                                    aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                        Select your country</option>\r\n                                                    {countries?.data?.data?.map((option, key) => (\r\n                                                        <>\r\n                                                            <option key={key.id} value={option.id} >\r\n\r\n                                                                {option.name}\r\n\r\n                                                            </option>\r\n                                                        </>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"state\"\r\n\r\n                                                    {...register(\"state\", { required: true })}\r\n                                                    //  onChange={handleChangeState}\r\n\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeState\r\n                                                    } >\r\n                                                    aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state</option>\r\n                                                    {states?.data?.data?.map((option, key) => (\r\n\r\n                                                        <><option key={key.id} value={option.id}  >\r\n                                                            {option.name}\r\n                                                        </option></>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>City or Region</label>\r\n\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}>\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        {type == 2 ? (\r\n\r\n                                            <label>Price</label>\r\n                                        ) : (\r\n\r\n                                            <label>Price per NFT</label>\r\n                                        )}\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"price\"\r\n                                            placeholder=\"Price\"\r\n                                            {...register(\"price\", { required: true })}\r\n                                            aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Number of NFTs</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"number_of_nft\"\r\n                                            defaultValue={1}\r\n                                            disabled={type == 1}\r\n                                            placeholder=\"Select your number of NFTs (1-10)\"\r\n                                            min={1}\r\n                                            max={10}\r\n                                            {...register(\"number_of_nft\", { required: true })}\r\n                                            aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                        {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {type == 2 && (\r\n\r\n                                    <><div className=\"col-12 col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Campaign Start date</label>\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control\"\r\n                                                name=\"start_date\"\r\n                                                min={disablePastDate()}\r\n                                                // placeholder=\"Start date\"\r\n                                                {...register(\"start_date\", { required: true })}\r\n                                                aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                            {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                        </div>\r\n                                    </div><div className=\"col-12 col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Campaign End Date</label>\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"end_date\"\r\n                                                    min={disablePastDate()}\r\n                                                    // placeholder=\"End date\"\r\n                                                    {...register(\"end_date\", { required: true })}\r\n                                                    aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                                {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                            </div>\r\n                                        </div></>\r\n                                )}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category</label>\r\n                                        <select name=\"annual_revenue_range\"\r\n                                            // defaultValue={}\r\n                                            {...register(\"category_id\")}>\r\n                                            {cat?.map((option, key) => (\r\n\r\n                                                <option key={key.id} value={option.id}  >\r\n                                                    {option.title}\r\n\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        //     </Modal.Body>\r\n        // </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default EditProject;","import React, { Component } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport EditProject from '../Edit/editProject';\r\n\r\nconst ProjectUpdate = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <EditProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjectUpdate;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst TermsConditions = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter())\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{footer?.footer?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: footer?.footer?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default TermsConditions","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport SignupSection from '../components/Signup';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport TermsConditions from '../components/Footer/t&c';\r\n\r\n\r\nconst TermsCond = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <TermsConditions />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TermsCond\r\n","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { CategoriesAction, getPublicLiveProjects } from '../../redux/Actions/projectAction';\r\n\r\nconst projectTypesMap = {\r\n    \"LatestProjects\": 2,\r\n    \"RecentCampaigns\": 1\r\n}\r\n\r\nconst ExploreAll = () => {\r\n\r\n    const { type } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const liveProjects = useSelector(state => {\r\n        return state?.projectdetails?.liveProjects[type]\r\n    })\r\n    console.log(liveProjects?.nft_data?.image, 'live')\r\n    useEffect(() => {\r\n        // \r\n        dispatch(getPublicLiveProjects({\r\n            cursor: 1,\r\n            type: projectTypesMap[type],\r\n            projectType: type,\r\n\r\n        }))\r\n    }, [dispatch, type])\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n\r\n                        <div className=\"intro text-center mb-4\">\r\n\r\n                            <h3 className=\"mt-3 mb-0\">{type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}</h3>\r\n                            <p>Invest in NFTs that are based on real-life projects or events related to important causes</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {liveProjects && liveProjects.length ?\r\n                        [...new Map(liveProjects?.map(item =>\r\n                            [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <Link to={`/projects/${item.slug}`}>\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            {/* <a href=\"/item-details\"> */}\r\n                                                            <h5 className=\"mb-0\">{item.title.slice(0, 15)}...</h5>\r\n                                                            {/* </a> */}\r\n                                                            <a className=\"seller d-flex align-items-center mb-2\" href=\"#\">\r\n                                                                <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" />\r\n                                                                <h6 className=\"ml-2\">{item.user_data.username}</h6>\r\n                                                            </a>\r\n                                                            {/* <div className=\"seller d-flex align-items-center mb-2\">\r\n                                                                <span style={{ color: '#8E8E8E' }}>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\"> @{item?.user_data?.username}</h6>\r\n                                                                </a>\r\n                                                            </div> */}\r\n                                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{Math.round(item.price)} MATIC</span>\r\n                                                                {item?.number_of_nft == 1 ? (\r\n\r\n                                                                    <span>{item.number_of_nft} NFT</span>\r\n                                                                ) : (\r\n                                                                    <span>{item.number_of_nft} NFTs</span>\r\n                                                                )\r\n\r\n                                                                }\r\n                                                            </div>\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />dfg</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            }) :\r\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                            <h2 className='allproj2'>\r\n                                No latest project found\r\n                            </h2>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default ExploreAll;","import React, { Component } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport EditProject from '../Edit/editProject';\r\nimport ExploreAll from '../components/Explore/viewAllLatest';\r\nimport { Breadcrumb } from 'react-bootstrap';\r\n\r\nconst All = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <ExploreAll type=\"Latest Projects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default All;","import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst AllCollections = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state.collection.collection\r\n    })\r\n    // console.log(coll, \"coll\")\r\n    useEffect(() => {\r\n\r\n        dispatch(PopularCollectionAction())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center mb-4\">\r\n\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center text-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* Explore Menu */}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items explore-items h-auto\">\r\n                        {coll && coll.length ?\r\n                            [...new Map(coll?.map(item =>\r\n                                [item[\"title\"], item])).values()]?.map((item, idx) => {\r\n                                    return (\r\n                                        <Link key={`edth_${idx}`} to={`/popularcollection/details/${item.slug}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\" >\r\n                                            <div>\r\n                                                <div className=\"card position-relative \">\r\n                                                    <div className=\"image-over \">\r\n                                                        <img className=\"card-img-top\" src={item.image} />\r\n                                                    </div>\r\n\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <a>\r\n                                                                <h5 className=\"mb-0 mt-3\">{item.title.slice(0, 15)}...</h5>\r\n                                                            </a>\r\n\r\n                                                            <div class=\"\"><p>{item.description.slice(0, 50)}...</p></div>\r\n\r\n                                                            <div class=\"mb-2 align-items-center justify-content-between\">\r\n                                                                <div class=\"mt-2 mb-2 d-flex justify-content-between text-align-center fundraiser_sale\">\r\n                                                                    {item?.nft_data.length == 1 ? (\r\n\r\n                                                                        <span>{item.nft_data.length} NFT</span>\r\n                                                                    ) : (\r\n                                                                        <span>{item.nft_data.length} NFTs</span>\r\n                                                                    )\r\n\r\n                                                                    }\r\n                                                                    {/* <span>Total NFTs</span>\r\n                                                                    <span>{item.nft_data.length}</span> */}\r\n\r\n                                                                    {/* <div>\r\n                                                                        <span>Sale</span>\r\n                                                                        <div>100</div>\r\n                                                                    </div> */}\r\n                                                                </div>\r\n                                                                {/* <span class=\"share\">\r\n                                                                    <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\"></path></svg>\r\n                                                                </span> */}\r\n                                                            </div>\r\n                                                            {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span style={{ color: '#8E8E8E' }}>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\">{item?.user_data?.username}</h6>\r\n                                                                </a>\r\n                                                            </div> */}\r\n\r\n\r\n                                                            {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div> */}\r\n                                                            {/* <div>\r\n                                                                {item.status == '1' ?\r\n                                                                    <Button>Donation</Button>\r\n                                                                    :\r\n\r\n                                                                    <Button>Product Sale</Button>\r\n                                                                }\r\n                                                            </div> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                            <div className=\"col-12 col-sm-12 col-lg-12 no-data\">\r\n                                <h2>\r\n                                    No Popular Collections\r\n                                </h2>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default AllCollections; ","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AllCollections from '../components/Collections/exploreCollection';\r\n\r\nconst ColExplore = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <AllCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ColExplore;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AboutUsAction, getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst AboutUs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const about = useSelector(state => {\r\n        return state.footer.aboutus\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(AboutUsAction())\r\n    }, [])\r\n    // console.log(about, 'footerabout')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{about?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: about?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AboutUs","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Activities from '../components/Activity/Activity';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AboutUs from '../components/Footer/about';\r\n\r\nclass Aboutus extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                {/* <Breadcrumb title=\"Activity\" subpage=\"Pages\" page=\"Activity\" /> */}\r\n                <AboutUs />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Aboutus;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ReferalPopup(props) {\r\n    const location = useLocation();\r\n    const [copy, setCopy] = useState(false)\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n    const url = window.location.href + `?refid=${props.userRef}`\r\n    const userprojurl = `https://app.karmatica.io/projnftdetails/${props.id}` + `?refid=${props.userRef}`\r\n    console.log(userprojurl)\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header className=' align-items-start'>\r\n                {window.ethereum?.selectedAddress ? (\r\n\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Refer your friends\r\n                        <p>Earn Royalties When You Share: <br />30% of NFTs for first level and 5% for secondary referrals.</p>\r\n\r\n\r\n                    </Modal.Title>\r\n                ) : (\r\n                    <Modal.Title id=\"contained-modal-title-vcenter \">\r\n\r\n                        <p>Earn When You Share: <br />30% of NFT sales for first level referral </p>\r\n                        <p style={{ color: \"red\" }}>Connect your wallet to earn referral income in MATIC when you share projects</p>\r\n\r\n\r\n                    </Modal.Title>\r\n                )}\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className='refer-frnd'>\r\n                <form className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-10 p-0\">\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                {/* <label>Display name</label> */}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"display_name\"\r\n                                    value={location.pathname === `/projnftdetails/${props.id}` ? userprojurl : url}\r\n                                    disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}\r\n                                // required\r\n                                // placeholder=\"Enter collection name\"\r\n                                // {...register('title')}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n\r\n                            </div>\r\n                            {/* <FacebookShareCount url={\"shareUrl\"}>\r\n                            {shareCount => <span className=\"myShareCountWrapper\">{shareCount}</span>}\r\n                        </FacebookShareCount> */}\r\n\r\n\r\n                            <hr />\r\n                            <div className=\"refer-icons\">\r\n                                {location.pathname === `/projnftdetails/${props.id}` ? (\r\n                                    <>  <TwitterShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                        <FacebookShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                        <WhatsappShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                        <TelegramShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                        <InstapaperShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" >  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                        <LinkedinShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                        <EmailShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><EmailIcon size={32} round={true} /></EmailShareButton></>\r\n                                ) : (\r\n\r\n                                    <><TwitterShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                        <FacebookShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                        <WhatsappShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                        <TelegramShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                        <InstapaperShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\">  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                        <LinkedinShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                        <EmailShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><EmailIcon size={32} round={true} /></EmailShareButton></>\r\n                                )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 p-0 text-right\">\r\n                            {location.pathname === `/projnftdetails/${props.id}` ? (\r\n                                <CopyToClipboard text={userprojurl} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                            ) : (\r\n\r\n                                <CopyToClipboard text={url} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                            )}\r\n                            {copy == true &&\r\n                                <span className='copytext'>Copied!</span>\r\n\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ReferalPopup","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNft = (props) => {\r\n    // debugger\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id, props.id))\r\n    }, [props.nft_id, props.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\" >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div>\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                    <Fragment>\r\n\r\n                                                        <div className=\"row relative\">\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  name',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  description',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={'nft_description'}\r\n\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n\r\n                                                                            onChange={newContent => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            <div className='col-12'>\r\n                                                                <label className='mt-2 mb-3'>Choose Collection</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n\r\n\r\n                                                                <div className=\"form-group\">\r\n\r\n                                                                    <div className=\"card choose_div\" style={{\r\n                                                                        background: \"black\",\r\n                                                                        marginBottom: \"8px\",\r\n                                                                    }}>\r\n                                                                        <div className=\"card-body \">\r\n                                                                            <Button variant=\"primary\" className='collection_btn' onClick={() => setModalShowcoll(true)}>\r\n                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n                                                                            </Button>\r\n\r\n                                                                            <CollPopup\r\n                                                                                show={modalShowcoll}\r\n                                                                                onHide={() => setModalShowcoll(false)} />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            {col?.map((item, idx) => (\r\n\r\n                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-6 col-lg-3 col-12 choose_div\">\r\n\r\n\r\n\r\n                                                                    <div id={item.id} onClick={() => setNft_collection_id(item.id)} className=\"card\"\r\n                                                                        style={{\r\n                                                                            background: \"black\",\r\n                                                                            marginBottom: \"8px\",\r\n                                                                            border: nft_collection_id == item.id ? \"1px solid #fff\" : null\r\n                                                                        }}>\r\n                                                                        <div className=\"card-body\">\r\n                                                                            <div>\r\n\r\n\r\n                                                                                {item.title}\r\n                                                                            </div>\r\n\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n\r\n                                                            ))}\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                    <div\r\n                                                                        className=\"position-relative upload_nft\"\r\n                                                                        style={{\r\n                                                                            backgroundImage: \"url('')\",\r\n                                                                            backgroundSize: \"contain\",\r\n                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                        }}\r\n                                                                    >\r\n\r\n                                                                        <div\r\n                                                                            className={\r\n                                                                                nftFileType === \"Player\" || nftFileType === \"modal\"\r\n                                                                                    ? \" inputdragVedio\"\r\n                                                                                    : \"inputtdrag\"\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <input\r\n                                                                                type=\"file\"\r\n                                                                                onChange={handleUpload}\r\n                                                                                maxCount={1}\r\n                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                            />\r\n\r\n                                                                            {(nftFileType === \"Image\") &&\r\n                                                                                <div>\r\n\r\n                                                                                    {source ? (\r\n\r\n                                                                                        <img\r\n                                                                                            src={source}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <img\r\n                                                                                            src={image}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    )}\r\n\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n                                                                            {nftFileType === \"Player\" &&\r\n                                                                                <div>\r\n\r\n                                                                                    {source ? (\r\n\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={source}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={image}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p>\r\n                                                                                            Because you’ve included\r\n                                                                                            multimedia, you’ll need to provide\r\n                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                            the card display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft}\r\n\r\n                                                                                                />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview}\r\n\r\n                                                                                                />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n\r\n\r\n\r\n                                                                            {nftFileType === \"modal\" &&\r\n                                                                                <div>\r\n                                                                                    {!source ? (\r\n                                                                                        <DModal\r\n                                                                                            vdo={image}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <DModal\r\n                                                                                            vdo={source}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p className=\"\">\r\n                                                                                            Because you’ve included multimedia,\r\n                                                                                            you’ll need to provide an image\r\n                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                            display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft} />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview} />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                        </div>\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const slug = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    useEffect(() => {\r\n        dispatch(NftList(props.slug?.id))\r\n        // dispatch(ProjectDetail(slug))\r\n    }, [props.slug?.id])\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n                        <thead>\r\n                            {/* {latprojnftdetail?.map((items) => { \r\n                         return (  */}\r\n\r\n                            <><tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr><tr>\r\n                                    <th>Contract</th>\r\n                                    <td>{nftdetail.collectionData?.contract_id?.slice(0, 5)}.....{nftdetail.collectionData?.contract_id?.slice(39, 42)}</td>\r\n                                </tr><tr>\r\n                                    <th>Token ID</th>\r\n                                    <td>{nftdetail.token_id}</td>\r\n                                </tr><tr>\r\n                                    <th>Token Stranded</th>\r\n                                    <td>ERC721</td>\r\n                                </tr></>\r\n\r\n                            {/* )})} */}\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* {projdetail.nft_data?.map((items) => { */}\r\n                            {/* // return ( */}\r\n                            <tr>\r\n\r\n                                <td>\r\n                                    {/* {items.collectionData?.contract_id} */}\r\n                                </td>\r\n                                <td>\r\n                                    {/* {items.token_id} */}\r\n                                </td>\r\n                                {/* <td>ERC721</td> */}\r\n                                {/* <td>Polygon (Matic)</td> */}\r\n                            </tr>\r\n                            {/* // ) */}\r\n                            {/* })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n                {/* <div className='nothing'>\r\n                No matching records found\r\n                        </div> */}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftdataTable","import axios from \"axios\";\r\n\r\nexport const GetMatic = async (setMatic) => {\r\n\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\r\n            config\r\n        )\r\n        setMatic(res?.data)\r\n        console.log('res', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, LatestProjectDetail, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport { BuyNft } from '../Wallet/interact';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport MyVerticallyCenteredModal from './refralPopup';\r\nimport swal from 'sweetalert';\r\nimport Banner from '../Create/editBanner';\r\nimport EditNft from '../Create/editNft';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport latNftdataTable from './../Explore/latProjNftdata';\r\nimport LatNftdataTable from './../Explore/latProjNftdata';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReferalPopup from './refralPopup';\r\nimport ReadMore from '../../readMore';\r\nimport { GetMatic } from './GetMAtic';\r\nimport FormItem from 'antd/es/form/FormItem';\r\nimport { useLocation } from \"react-router-dom\";\r\nconst ProjDetails = () => {\r\n\r\n\r\n    const { slug } = useParams();\r\n    const search = useLocation().search;\r\n    const refid = new URLSearchParams(search).get('refid');\r\n    console.log(refid, 'refid')\r\n    const [tok, setTok] = useState('')\r\n    // console.log('tok', tok)\r\n    const dispatch = useDispatch()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    // const [matic, setmatic] = useState('')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    console.log('latproj', latprojdetail?.nft_data)\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n\r\n\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(LatestProjectDetail(slug))\r\n        dispatch(GetUserAction())\r\n\r\n    }, [slug])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className='col-12'>\r\n                        <span className=\"p-0 title_main\">{latprojdetail.title}</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <><div>\r\n                                    {latprojdetail?.user_data?.user_id === userdet?.user_id && localStorage.getItem('authToken') &&\r\n                                        <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() => setModalShow(true)}></i>\r\n\r\n\r\n                                    }\r\n                                    <Banner\r\n                                        id={slug}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div><img src={latprojdetail?.image} alt=\"first nft\" /></>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"fundraiser mt-4 \">\r\n                            <div className='lorem_done'>\r\n                                <img width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" src={latprojdetail?.user_data?.organization_detail?.logo} />\r\n                                {/* <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg> */}\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 col-12 mt-4 mt-lg-0\">\r\n                        <div className='proj-left user_icon'>\r\n                            <div className=\"progress_nft \">\r\n                                <div className='progress_main'><span>\r\n                                    {/* ({Number(latprojdetail.project_count) * Number(matic['matic-network']?.cad)} of {Number(latprojdetail.price) * Number(Math.round(matic['matic-network']?.cad))} MATIC ) */}\r\n                                    <span className='nft_price'>${Number(latprojdetail.project_count) * Number(matic['matic-network']?.cad)} raised of ${Math.round(Number(latprojdetail.price)) * Number(Math.round(matic['matic-network']?.cad))} Cdn Goal</span>\r\n                                    <div>\r\n\r\n                                        {/* ${Math.round(latprojdetail.project_count)} raised of ${Math.round(latprojdetail.price)} Cdn Goal */}\r\n                                        <span className='nft_price'>({Math.round(latprojdetail.project_count)} of {Math.round(latprojdetail.price)} MATIC) </span>\r\n                                    </div>\r\n                                    {/* <span className='nft_price'>{latprojdetail.project_count} raised of {latprojdetail.price} Cdn goal (150 of 758 MATIC)</span><small>  </small> */}\r\n                                    <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                    </div>\r\n                                    <p className='donation-count'>${latprojdetail.project_count} RAISED</p>\r\n                                </span>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex flex-wrap gap-5 justify-content-start\">\r\n\r\n\r\n                                    <>\r\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Invest\r\n                                        </Button>\r\n\r\n\r\n\r\n                                        </a>\r\n                                        <Button className=\"btn sm:ml-2 btn-bordered-white m-0\" variant=\"primary\" onClick={() => setModalShowrefer(true)}>\r\n\r\n\r\n                                            Share\r\n                                        </Button><ReferalPopup\r\n                                            id={slug}\r\n                                            userRef={userDetail}\r\n                                            show={modalShowrefer}\r\n                                            onHide={() => setModalShowrefer(false)} /></>\r\n\r\n\r\n                                </div>\r\n                                {latprojdetail?.user_invest && latprojdetail?.user_invest?.length ?\r\n                                    [...new Map(latprojdetail?.user_invest?.slice(0, 3)?.map(item =>\r\n                                        [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                            const date1 = new Date(item.updated_at)\r\n                                            const date2 = new Date()\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            console.log('days', days_difference)\r\n                                            return (\r\n                                                <ul className=\"m-0 custom_lis pl-0\">\r\n                                                    <li>\r\n                                                        <div className='lorem_done p-0'>\r\n                                                            <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                            </svg>\r\n                                                            </span>\r\n\r\n                                                            <span><div className=\"progress_name\">{item.username} </div> <div>${item.price} Cdn / {Math.round(Number(latprojdetail.price) * Number(matic['matic-network']?.cad))} MATIC ({days_difference} days ago)</div></span>\r\n                                                        </div>\r\n                                                    </li>\r\n\r\n\r\n                                                </ul>\r\n                                            )\r\n                                        }) :\r\n                                    <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\r\n\r\n                                        <span className='allproj2 w-100'>\r\n                                            No user has invested yet\r\n                                        </span>\r\n\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n\t\t\t\t\t\t<i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={latprojdetail.description} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-4'>\r\n\r\n\r\n                        <div className='table-main-detail position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-12'>\r\n                        <div className='mt-4'>\r\n                            <div className='table-detail'>\r\n                                <LatNftdataTable />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\" col-12 mt-4\">\r\n                        <div id=\"invest\" className=\"items mt-0 explore-items p-0\">\r\n                            <ProjNFTS\r\n                                refid={refid}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ProjDetails from '../components/ItemDetails/viewProdetails';\r\nimport ProjNFTS from '../components/Auctions/projectnfts';\r\n\r\nclass latprojDetails extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <ProjDetails />\r\n                {/* <ProjNFTS /> */}\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default latprojDetails;","import React, { useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { GetCollectionsAction } from '../../redux/Actions/projectAction'\r\n\r\nconst ShowCollections = () => {\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    // const val = localStorage.getItem(\"values\")\r\n    // console.log(val.address, 'vall')\r\n    // console.log(col, 'col')\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n    }, [])\r\n    // useEffect(() => {\r\n\r\n    // })\r\n    // var dat = localStorage.getItem(\"values\");\r\n    // dat = JSON.parse(dat);\r\n    // console.log('dat', dat?.nfts[0]?.image?.fileList[0]?.thumbUrl)\r\n    // console.log('valus', localStorage.getItem('values', 'address'))\r\n    // localStorage.setItem(\"values\", JSON.stringify({\r\n    //     ...data,\r\n    //     nfts: values.nfts.map(x => {\r\n    //         return {\r\n    //             name: x.name,\r\n    //             description: x.description,\r\n    //             image: x.image,\r\n    //         }\r\n    //     })\r\n    // }));\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <span>Explore</span>\r\n                            <h3 className=\"mt-3 mb-0\">My Collections</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {/* {val?.map((item, idx) => { */}\r\n                    {/* return ( */}\r\n                    <Link to={`/collection/${''}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                        <div>\r\n                            <div className=\"card\">\r\n                                <div className=\"image-over\">\r\n                                    {/* <Link to={`/collection/${''}`}> */}\r\n                                    <img className=\"card-img-top\" src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                                    {/* </Link> */}\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 p-0\">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-0\">{col.name}</h5>\r\n                                        </a>\r\n                                        <div className=\"seller d-flex align-items-center my-3\">\r\n                                            <span style={{ color: '#8E8E8E' }}>{col?.nfts?.[0]?.name}</span>\r\n                                            <a href=\"/author\">\r\n                                                <h6 className=\"ml-2 mb-0\"> </h6>\r\n                                            </a>\r\n                                        </div>\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n\r\n                                            <span> {col.price}</span>\r\n                                            <span> {col.number_of_nft}</span>\r\n                                        </div>\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />dfg</a> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                    {/* ) */}\r\n                    {/* })} */}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ShowCollections","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreFive';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\nimport ShowCollections from '../components/Create/showCollections';\r\n\r\nconst Showcollections = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <ShowCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Showcollections;","import React, { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\nconst CollItem = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch()\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    // console.log(projdetail, 'projdata')\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    {/* Explore Menu */}\r\n                    <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row items explore-items\">\r\n                {Object.keys(projdetail).map((item, idx) => {\r\n                    // {projdetail?.map((item, idx) => {\r\n                    return (\r\n                        <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" >\r\n                            <div className=\"card no-hover text-center\">\r\n                                <div className=\"image-over\">\r\n                                    <a href=\"/item-details\">\r\n                                        {/* <img className=\"card-img-top\" src={item.img} alt=\"\" /> */}\r\n                                    </a>\r\n                                    {/* Author */}\r\n                                    <a className=\"author\" href=\"/authors\">\r\n                                        <div className=\"author-thumb avatar-lg\">\r\n                                            <img className=\"rounded-circle\" src={item?.nft_data?.title} alt=\"\" />\r\n                                        </div>\r\n                                    </a>\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 \">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body mt-4\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-2\">{item?.nft_data?.title}</h5>\r\n                                        </a>\r\n                                        {/* <span>{item.content}</span> */}\r\n                                        <hr />\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                            {/* <span>{item.price}</span> */}\r\n                                            {/* <span><i className=\"icon-heart mr-2\" />{item.likes}</span> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CollItem;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetCollectionDetails, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Author from '../Author/Author';\r\nimport CollItem from './bread-crumb';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst CollectionDetails = () => {\r\n\r\n    const initData = {\r\n        itemImg: \"/img/avtar1.png\",\r\n        date: \"2022-03-30\",\r\n        tab_1: \"Bids\",\r\n        tab_2: \"History\",\r\n        tab_3: \"Details\",\r\n        ownerImg: \"/img/avtar1.png\",\r\n        itemOwner: \"Themeland\",\r\n        created: \"15 Jul 2021\",\r\n        title: \"Walking On Air\",\r\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n        price_1: \"1.5 ETH\",\r\n        price_2: \"$500.89\",\r\n        count: \"1 of 5\",\r\n        size: \"14000 x 14000 px\",\r\n        volume: \"64.1\",\r\n        highest_bid: \"2.9 BNB\",\r\n        bid_count: \"1 of 5\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n    const tabData_1 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"14 ETH\",\r\n            time: \"4 hours ago\",\r\n            author: \"@arham\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"10 ETH\",\r\n            time: \"8 hours ago\",\r\n            author: \"@junaid\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"12 ETH\",\r\n            time: \"3 hours ago\",\r\n            author: \"@yasmin\"\r\n        }\r\n    ]\r\n\r\n    const tabData_2 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"32 ETH\",\r\n            time: \"10 hours ago\",\r\n            author: \"@hasan\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"24 ETH\",\r\n            time: \"6 hours ago\",\r\n            author: \"@artnox\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"29 ETH\",\r\n            time: \"12 hours ago\",\r\n            author: \"@meez\"\r\n        }\r\n    ]\r\n\r\n    const sellerData = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            seller: \"@ArtNoxStudio\",\r\n            post: \"Creator\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            seller: \"Virtual Worlds\",\r\n            post: \"Collection\"\r\n        }\r\n    ]\r\n\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coldetail = useSelector(state => {\r\n        return state?.projectdetails?.getcollectiondetails\r\n    })\r\n    // console.log(coldetail, 'coldetail')\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionDetails(id))\r\n    }, [id])\r\n\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(id))\r\n    // }\r\n\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n                                <img src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                            </div>\r\n\r\n\r\n                            </>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            <div className='d-flex  align-items-center justify-content-between'>\r\n                                <h3 className=\"m-0\">{coldetail.title}</h3>\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center '>\r\n                                    <Button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" variant=\"primary\" onClick={() => setModalShow(true)} style={{ color: '#FFF' }}>\r\n                                        Add item\r\n                                    </Button>\r\n\r\n                                    {/* <MyVerticallyCenteredModal\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    /> */}\r\n                                    {/* <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"> <Link to={\"\"} style={{ color: '#FFF' }}>Add item</Link></a> */}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                          <ReadMore data={coldetail?.description} />\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <CollItem />\r\n                </div>\r\n            </div >\r\n\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default CollectionDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Create/collectionDetail';\r\nimport CollBreadCrumb from '../components/Create/bread-crumb';\r\nimport Author from './author';\r\n\r\nclass CollectionDetail extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                {/* <CollBreadCrumb /> */}\r\n                <CollectionDetails />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CollectionDetail;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { useParams } from 'react-router';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction DesPopup(props) {\r\n    const editor = useRef(null);\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const [country, setCountry] = useState()\r\n    const [type, setType] = useState()\r\n    const dispatch = useDispatch()\r\n    const slug = useParams()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n\r\n    // const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            setDescription(projdetail.description)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n        dispatch(UpdateProject(props.id, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12\">\r\n                            <label>Description</label>\r\n                            <div className=\"form-group\">\r\n\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"description\"\r\n                                    defaultValue=\"\"\r\n                                    render={({ field: { value, onChange } }) => {\r\n                                        return <JoditEditor\r\n                                            ref={editor}\r\n                                            value={value}\r\n                                            // config={config}\r\n\r\n                                            placeholder=\"start typing\"\r\n                                            tabIndex={1} // tabIndex of textarea\r\n                                            onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                            onChange={newContent => { }}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                                {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default DesPopup","import dayjs from 'dayjs';\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetCollectionDetails, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport latprojDetails from '../../themes/latproj-details';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport Banner from './editBanner';\r\nimport EditNft from './editNft';\r\nimport DesPopup from './desPopup';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReadMore from '../../readMore';\r\nimport { GetMatic } from '../ItemDetails/GetMAtic';\r\nimport ReferalPopup from '../ItemDetails/refralPopup';\r\nimport Swal from 'sweetalert2';\r\n\r\n// import ProgressBar from 'react-bootstrap';\r\n\r\nconst ProjNftDetails = () => {\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(slug))\r\n    // }\r\n\r\n    const { slug } = useParams()\r\n    // console.log(id, 'idd')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [matic, setmatic] = useState('')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [nftId, setNftID] = useState();\r\n    console.log('nftid', nftId)\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    const dispatch = useDispatch()\r\n    const [modalShowDes, setModalShowDes] = React.useState(false);\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail?.nft_data && projdetail?.nft_data && projdetail?.nft_data.length && projdetail?.nft_data[0]?.is_mint, 'projdata')\r\n\r\n\r\n    useEffect((event) => {\r\n        (GetMatic(setmatic))\r\n        // event.preventDefault()\r\n        dispatch(ProjectDetail(slug))\r\n    }, [slug])\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(id))\r\n    // }\r\n    // \r\n    const bannerHandler = () => {\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail \">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <span className=\"my-2 p-0 title_main\">{projdetail.title}</span>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-8'>\r\n                        <div className=\"item-info\" >\r\n                            <div className=\"item-thumb text-center\">\r\n                                {/* {projdetail && projdetail?.nft_data && projdetail?.nft_data?.length ? */}\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() =>\r\n                                        setModalShow(true)}></i>\r\n                                    <Banner\r\n                                        id={slug}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div>\r\n                                <img src={projdetail?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"fundraiser mt-4 p-0\">\r\n                            <div className='lorem_done'>\r\n\r\n                                <img src={latprojdetail?.user_data?.organization_detail?.logo} width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" />\r\n                                {/* <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg> */}\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12 col-lg-4 mt-3 mt-lg-0'>\r\n                        <div className='progress_nft_main'>\r\n                            <div >\r\n                                <div className=\"progress_nft mb-3\">\r\n                                    <div className='progress_main'><span>\r\n                                        {/* ({Number(projdetail.project_count) * Number(matic['matic-network']?.cad)} of {Number(projdetail.price) * Number(Math.round(matic['matic-network']?.cad))} MATIC ) */}\r\n                                        <span className='nft_price'> {Number(projdetail.project_count) * Number(matic['matic-network']?.cad)} raised of ${Number(projdetail.price) * Number(Math.round(matic['matic-network']?.cad))} Cdn </span>\r\n                                        <div>\r\n                                            {/* <span className='nft_price'>{projdetail.project_count} raised of ${projdetail.price} Cdn </span> */}\r\n                                            <span className='nft_price'>({projdetail.project_count} of {projdetail.price} MATIC )</span>\r\n\r\n                                        </div>\r\n                                        <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" now={projdetail.project_percentage} />\r\n                                            {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                        </div>\r\n                                        <p className='donation-count'>${projdetail.project_count} Cdn RAISED</p>\r\n                                    </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex justify-content-start\">\r\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Invest\r\n                                        </Button>\r\n                                        </a>\r\n\r\n\r\n\r\n\r\n                                        {projdetail?.nft_data && projdetail?.nft_data && projdetail?.nft_data.length > 0 && projdetail?.nft_data[0]?.is_mint == 0 ? (\r\n\r\n                                            <Button className=\" btn  btn-bordered-white m-0 ml-2\" variant=\"primary\" onClick={() => Swal.fire(\r\n                                                'Please mint your NFTs',\r\n\r\n                                            )}>\r\n                                                Share\r\n                                            </Button>\r\n                                        ) : (\r\n                                            <>\r\n                                                <Button className=\" btn  btn-bordered-white m-0 mr-2\" onClick={() => setModalShowrefer(true)} variant=\"primary\">\r\n                                                    Share\r\n                                                </Button>\r\n                                                <ReferalPopup\r\n                                                    id={slug}\r\n                                                    userRef={userDetail}\r\n                                                    show={modalShowrefer}\r\n                                                    onHide={() => setModalShowrefer(false)} />\r\n                                            </>\r\n\r\n                                        )}\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    {projdetail?.user_invest && projdetail?.user_invest?.length ?\r\n                                        [...new Map(projdetail?.user_invest?.slice(0, 3)?.map(item =>\r\n                                            [item[\"title\"], item])).values()].map((item, idx) => {\r\n\r\n                                                // {projdetail.user_invest?.slice(0, 3)?.map((items) => {\r\n                                                const date1 = new Date(item.updated_at)\r\n                                                const date2 = new Date()\r\n                                                const time_difference = date2.getTime() - date1.getTime();\r\n                                                const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                console.log('days', days_difference)\r\n                                                return (\r\n\r\n                                                    <ul className=\"m-0 custom_lis pl-0\">\r\n                                                        <li>\r\n                                                            <div className='lorem_done p-0'>\r\n                                                                <span>\r\n\r\n                                                                    <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                    </svg>\r\n                                                                </span>\r\n                                                                <span><div className=\"progress_name\">{item.username} </div> <div>${item.price} Cdn / 40 MATIC ({days_difference} days ago)</div></span>\r\n                                                            </div>\r\n                                                        </li>\r\n\r\n\r\n                                                    </ul>\r\n                                                )\r\n                                            }) :\r\n                                        <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\r\n\r\n                                            <span className='allproj2  w-100'>\r\n                                                No user has invested yet\r\n                                            </span>\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-8 mt-4'>\r\n                        <div class=\"user-description\">\r\n\r\n                            <h5 className='user_title justify-content-between'>\r\n\r\n                                <div className='d-flex align-items-center gap-5'> <div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div></div>\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                        <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n                                {/* {projdetail?.status == 1 && (\r\n                                                            <div >\r\n\r\n                                                                <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a>\r\n                                                                <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            )} */}\r\n                                <div >\r\n                                    <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                        setModalShowDes(true)}></i>\r\n                                    <DesPopup\r\n                                        id={slug}\r\n                                        show={modalShowDes}\r\n                                        onHide={() => setModalShowDes(false)} />\r\n                                </div>\r\n                            </h5>\r\n                            <ReadMore data={projdetail.description} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: projdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-4'>\r\n                        <div className='container table-main-detail position-relative'>\r\n\r\n                            <ProjdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div className='col-12 mt-4'>\r\n                    <div className='container table-detail'>\r\n\r\n                        <LatNftdataTable\r\n\r\n                        />\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mt-4\">\r\n\r\n\r\n                    <div className='nfts_main' id='invest'>\r\n\r\n\r\n\r\n                        <div className='intro row m-0 p-0'>\r\n                            <div className=\"intro-content\">\r\n                                <span >NFTs</span>\r\n                                <h3 className=\"w-full mb-0 pt-4\">NFTs</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row items mt-0 explore-items px-0\">\r\n                            <div className='col-12 col-sm-6 col-lg-3 item explore-item'>\r\n                                <div className='card no-hover m-0 add-nft '>\r\n                                    {projdetail.number_of_nft == projdetail?.nft_data?.length ? (\r\n\r\n                                        <div class=\"image-over relative\">\r\n\r\n\r\n\r\n\r\n                                            <span>No NFT left to add</span>\r\n\r\n\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div class=\"image-over relative\">\r\n\r\n\r\n\r\n                                            <Link to={`/addnft/${projdetail.slug}`}>\r\n\r\n                                                + Add NFT </Link>\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            {projdetail?.nft_data?.map((x, idx) => {\r\n                                // {projdetail?.map((item, idx) => {\r\n                                // const image_preview = URL.revokeObjectURL(x.preview_imag)\r\n                                return (\r\n                                    <div key={`eds_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item \">\r\n\r\n                                        <div className=\"card no-hover m-0\">\r\n\r\n\r\n\r\n                                            {/* <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                            <div className=\"image-over relative\">\r\n                                                <Link to={`/nft/details/${x.slug}?project=${slug}`}>\r\n                                                    {x.extention === 'Player' || x.extention === 'modal' ? (\r\n\r\n                                                        <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\r\n                                                    ) : (\r\n                                                        <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                    )}\r\n                                                </Link>\r\n                                                <div className='token'>\r\n                                                    <span>#{x?.token_id}</span>\r\n                                                    <span className='cards-icons'>\r\n                                                        {x.is_mint == 0 &&\r\n                                                            <Link to={`/nft/details/${x.slug}?project=${slug}`} ><i className=\"fa-solid fa-pen\" /></Link>\r\n                                                            // <div>\r\n                                                            //     <i className=\"fa-solid fa-pen\" \r\n                                                            //     onClick={(e) => {\r\n                                                            //         setNftID(x.slug)\r\n                                                            //         e.preventDefault();\r\n                                                            //         setModalShowedit(true)\r\n                                                            //     }\r\n                                                            //     } ></i>\r\n                                                            //     {modalShowedit &&\r\n\r\n                                                            //         <EditNft\r\n                                                            //             debugger\r\n                                                            //             id={slug}\r\n                                                            //             nft_id={nftId}\r\n                                                            //             show={modalShowedit}\r\n                                                            //             onHide={() => setModalShowedit(false)} />\r\n                                                            //     }\r\n                                                            // </div>\r\n                                                        }\r\n                                                    </span>\r\n                                                </div>\r\n                                                {/* Author */}\r\n\r\n                                            </div>\r\n                                            {/* Card Caption */}\r\n                                            <div className=\"card-caption px-0 col-12 \">\r\n                                                {/* Card Body */}\r\n                                                <div className=\"card-body\">\r\n\r\n                                                    <a href=\"#\" className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <h5 className=\"m-0 pb-2 p-0 text-capitalize\">{x.title.slice(0, 16)}...</h5>\r\n\r\n                                                    </a>\r\n                                                    {/* <div className='creater mt-1 mb-1'>\r\n                                                        <span >Creator:</span><span className='ml-2'>{x?.user_data?.username}</span>\r\n                                                    </div> */}\r\n                                                    <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1\">\r\n                                                        <span dangerouslySetInnerHTML={{ __html: x.description.slice(0, 52) }} />\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className='mint'>\r\n                                                        {x.is_mint == 0 ? (\r\n\r\n                                                            <button>\r\n                                                                <Link to={`/nft/details/${x.slug}`}>Sell</Link>\r\n                                                            </button>\r\n                                                        ) : (\r\n                                                            <button disabled>\r\n                                                                <a >Minted</a>\r\n                                                            </button>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                    <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                        {/* <span>{item.price}</span> */}\r\n                                                        {/* <span><i className=\"icon-heart mr-2\" />{item.likes}</span> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default ProjNftDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ProjectList';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport GetAllProjects from '../components/Explore/ProjectList';\r\nimport ProjDetails from '../components/Create/projdetails';\r\nimport ProjNftDetails from '../components/Create/projdetails';\r\n\r\nconst ProjNft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Projects\" subpage=\"Explore\" page=\"\" /> */}\r\n            <ProjNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjNft;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { set, useForm } from 'react-hook-form';\r\nimport 'antd/dist/antd.css';\r\nimport { Steps } from 'antd';\r\nimport { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined, CheckOutlined } from '@ant-design/icons'\r\nimport { useParams } from 'react-router';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n\r\nfunction NftPopup(props) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const { id } = useParams();\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n\r\n    const description = 'This is a description.';\r\n    function gettxhashAddress() {\r\n        // \r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n    // function getconfirmAddress() {\r\n    //     // \r\n    //     return web3.eth.getTransactionReceipt;\r\n    // }\r\n    // useEffect(() => {\r\n    // setTxhash(gettxhashAddress())\r\n    // setConfirm(getconfirmAddress())\r\n    // if (txhas) {\r\n    // setCurrent(1)\r\n    // setCurrent(2)\r\n    // setCurrent(3)\r\n    // }\r\n    // }, [])\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n    })\r\n    // console.log('latprojdetailpop', nftdetail)\r\n    // const mint = () => {\r\n    //     CreateMetaDataAndMint({\r\n    //         _name: nftdetail.title,\r\n    //         _des: nftdetail.description,\r\n    //         _imgBuffer: nftdetail.image\r\n    //     })\r\n    // }\r\n\r\n    const { Step } = Steps;\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Follow steps\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Steps current={props.current} direction='vertical'>\r\n                        <Step title=\"Deploying contract\" description='Uploading of all media assets and metadata to IPFS' />\r\n                        <Step icon={props.current == 0 && <LoadingOutlined type=\"loading\" />} title=\"Mint\" description='Send transaction to create your NFT' />\r\n                        <Step icon={props.current !== 2 ? <LoadingOutlined type=\"loading\" /> : props.current == 2 && <CheckOutlined type=\"finish\" />} title=\"Approve\" description='This transaction is conducted only once per collection' />\r\n\r\n                    </Steps>\r\n\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NftPopup","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst NftTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n\r\n\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getnftwoldetails\r\n    })\r\n    console.log('lattt', latprojnftdetail.nft_history)\r\n    useEffect(() => {\r\n        dispatch(GetNftwol(props.id))\r\n    }, [props.id])\r\n    const location = useLocation()\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n\r\n\r\n                        <tbody>\r\n                            {latprojnftdetail?.nft_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n\r\n\r\n\r\n\r\n                    </Table>\r\n                    <div className='nothing'>\r\n                        {latprojnftdetail?.nft_history?.length == 0 &&\r\n                            <span> No matching records found</span>\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftTransdataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst LatNftDataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     debugger\r\n    //     dispatch(NftList(id))\r\n    // }, [id])\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getnftwoldetails\r\n    })\r\n    console.log(latprojnftdetail, 'laptnft')\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n\r\n                        <thead>\r\n\r\n                            <tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Contract ID</th>\r\n                                <td> {latprojnftdetail?.collectionData?.contract_id?.slice(0, 5)}.....{latprojnftdetail?.collectionData?.contract_id?.slice(39, 42)}</td>\r\n                                {/* <td>{latprojnftdetail?.collectionData?.contract_id}</td> */}\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Token ID</th>\r\n                                <td>{latprojnftdetail?.token_id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Token Stranded</th>\r\n                                <td>ERC721</td>\r\n                            </tr>\r\n\r\n                            {/* <tr>\r\n\r\n                                <th>Contract Address</th>\r\n                                <th>Token ID</th>\r\n                                <th>Token Stranded</th>\r\n                                <th>Blockchain</th>\r\n                            </tr> */}\r\n\r\n\r\n                        </thead>\r\n\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftDataTable","\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BidNft } from '../Wallet/interact';\r\n\r\nfunction BidPopup(props) {\r\n    // debugger\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const onSubmit = () => {\r\n        // debugger\r\n        BidNft(props.id, props.projid)\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <div className='modal-title h4 '>Place a bid</div>\r\n                    {/* <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a> */}\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12 pb-2\">\r\n                            <label>You are about to place a bid for {props.projtitle?.toUpperCase()} from {props.projcoll?.toUpperCase()}.</label>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <label>Wallet address:</label>\r\n                            <div class=\"bidinput\">{window.ethereum?.selectedAddress}</div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Your bid</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    placeholder='Enter bid'\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Pay with wallet </button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default BidPopup","// import * as React from \"https://cdn.skypack.dev/react@17.0.1\";\r\n// import * as ReactDOM from \"https://cdn.skypack.dev/react-dom@17.0.1\";\r\nimport React, { useEffect } from \"react\";\r\n\r\n\r\n\r\nconst Timer = (props) => {\r\n    const [days, setDays] = React.useState(0);\r\n    const [hours, setHours] = React.useState(0);\r\n    const [minutes, setMinutes] = React.useState(0);\r\n    const [seconds, setSeconds] = React.useState(0);\r\n    // if (deadline < date) {\r\n    //     console.log('okay')\r\n    // } else {\r\n    //     console.log('notokay')\r\n    // }\r\n    const deadline = \"2023-03-05 00:00:00\"\r\n    const getTime = () => {\r\n        const time = Date.parse(`${props.time}`) - Date.now();\r\n\r\n        setDays(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n        setHours(Math.floor((time / (1000 * 60 * 60)) % 24));\r\n        setMinutes(Math.floor((time / 1000 / 60) % 60));\r\n        setSeconds(Math.floor((time / 1000) % 60));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => getTime(`${props.time}`), 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {days == 0 &&\r\n                <div className=\"timer\" role=\"timer\">\r\n\r\n                    {`${minutes}`.includes('-') ? (\r\n                        <div className=\"col-12\">\r\n                            <div className=\"box main-box_count\">\r\n\r\n                                <span className=\"box-count\">Sale Ended</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    ) : (\r\n                        <div className=\"col-12\">\r\n                            <div className=\"box main-box_count\">\r\n\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"day\">{`${days}`}</span>\r\n                                    <span className=\"text\">DAYS</span>\r\n                                </span>\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"hour\">{`${hours}`}</span>\r\n                                    <span className=\"text\">HRS</span>\r\n                                </span>\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"minute\">{`${minutes}`}</span>\r\n                                    <span className=\"text\">MINS</span>\r\n                                </span>\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"second\">{`${seconds}`}</span>\r\n                                    <span className=\"text\">SECS</span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )}\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default Timer","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport Loader from '../Loader/loader';\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction BuyPopup(props) {\r\n    const location = useLocation();\r\n    const [copy, setCopy] = useState(false)\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    // const [loading, setLoading] = useState(true)\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            className=\"loading\"\r\n        >\r\n\r\n\r\n\r\n            {props.loading &&\r\n\r\n                <><Loader />\r\n\r\n                    <div className=\"form-group m-0\">\r\n                        <span>Processing...</span>\r\n                    </div>\r\n\r\n\r\n\r\n                </>\r\n            }\r\n\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default BuyPopup","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Nftprice, Nftdeatil } from './nftprice'\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport ReadMore from '../../readMore';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport UserdataTable from '../AuthorProfile/userTransTable';\r\nimport NftTransdataTable from './nftTRansTable';\r\nimport LatNftDataTable from '../Explore/latnftTable';\r\nimport BidPopup from './bidPopup';\r\nimport DModal from '../Create/3dModal';\r\nimport Timer from './timer';\r\nimport BuyPopup from './buyPopup';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst LatprojNftDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const search = useLocation().search;\r\n    const refid = new URLSearchParams(search).get('refid');\r\n    console.log(refid, 'refid')\r\n    const [ownwallet, setOwnWallet] = useState('')\r\n    const [ownFee, setOwnFee] = useState('')\r\n    const [bidmodalShow, setBidModalShow] = React.useState(false);\r\n    const [buymodalShow, setBuyModalShow] = React.useState(false);\r\n    const [platformFee, setPlatformFee] = useState('')\r\n    console.log('own', ownwallet)\r\n    const id = useParams();\r\n    // console.log(id, 'idd')\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.getnftwoldetails\r\n    })\r\n    console.log(latprojnftdetail, 'latext')\r\n    // console.log('paymentflow', [latprojnftdetail.payment_flow?.project_data.wallets])\r\n\r\n\r\n    const getSett = useSelector(state => {\r\n        // \r\n        return state.projectdetails.settings\r\n    })\r\n    console.log('getSett', getSett)\r\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\r\n    console.log('sett', setValue)\r\n    useEffect(() => {\r\n        dispatch(GetNftwol(id))\r\n        dispatch(GetSettings())\r\n\r\n\r\n    }, [id])\r\n    const buyHandler = () => {\r\n        // setOwnWallet([latprojnftdetail.payment_flow?.project_data.wallets])\r\n        // setOwnFee([latprojnftdetail.payment_flow?.project_data.fees])\r\n        // setPlatformFee([latprojnftdetail.payment_flow?.karmatica_fee])\r\n\r\n        BuyNft({\r\n\r\n            contractAddress: latprojnftdetail?.collectionData?.contract_id,\r\n            tokenId: latprojnftdetail.token_id,\r\n            payFrom: latprojnftdetail.pay_from,\r\n            values: setValue.value,\r\n            sellingCount: latprojnftdetail.selling_count,\r\n            platformFee: ([latprojnftdetail.payment_flow?.karmatica_fee]),\r\n\r\n            ownerFee: ([latprojnftdetail.payment_flow?.project_data?.fees]),\r\n            ownerWallet: ([latprojnftdetail.payment_flow?.project_data?.wallets]),\r\n            flow: ([latprojnftdetail.payment_flow]),\r\n            refid: refid,\r\n            proj_id: latprojnftdetail.project_id,\r\n            nft_id: latprojnftdetail.id,\r\n            loadingg: setLoading,\r\n\r\n\r\n\r\n\r\n        })\r\n    }\r\n    // const bidHandler = () =>{\r\n    // if(window.ethereum?.selectedAddress){\r\n    //     debugger\r\n\r\n    //     dispatch(BidPopup())\r\n    // }else{\r\n    //     ConnectWallet()\r\n    // }\r\n    // }\r\n    // const yestTime = \"9:24:49 PM\"\r\n    // const timeNow = new Date()?.toLocaleTimeString() - yestTime()\r\n    // console.log(\"time now\", timeNow)\r\n    // const yesterday = new Date(new Date().getTime() - (24 * 60 * 60 * 1000));\r\n    // console.log('yestwe', yesterday)\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                        <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}  </span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n\r\n                                {/* {latprojdetail?.nft_data?.map((item, idx) => { */}\r\n                                {/*  */}\r\n                                {/* return ( */}\r\n                                {latprojnftdetail.extention === \"PLayer\" &&\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={latprojnftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n\r\n                                {latprojnftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={latprojnftdetail.image}\r\n\r\n                                    />\r\n                                }\r\n                                {latprojnftdetail.extention === 'Image' &&\r\n\r\n                                    <img src={latprojnftdetail.image} alt=\"\" />\r\n                                }\r\n                                {/* ) */}\r\n                                {/* })} */}\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\r\n                        {/* <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}  </span>\r\n\r\n\r\n                        </div> */}\r\n                        <div className=\"content \">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{latprojnftdetail.pay_from}</span>\r\n\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {latprojnftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled mb-0\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{latprojnftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Affiliate first sale royalties: </span>\r\n                                    <span> 30%</span>\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>NFT creator royalties: </span>\r\n                                    <span> 10%</span>\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Affiliate secondary royalties</span>\r\n                                    <span> 5%</span>\r\n\r\n                                </div>\r\n\r\n                                <div className='eddlbtton d-flex gap- align-items-center mt-2 justify-content-between'>\r\n\r\n                                    {/* <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <li><span class='boldertext'>Affiliate first sale royalties: 20%</span></li>\r\n                                       <li><span class='boldertext'>NFT creator royalties: 10% </span></li> \r\n                                        <li><span class='boldertext'>Affiliate secondary royalties: 5% </span></li>\r\n\r\n                                        \r\n                                    </ul>\r\n                                </div> */}\r\n                                    <div className='eddlbtton flex-wrap d-flex gap-10  align-items-center mt-2'>\r\n                                        {latprojnftdetail.type == 1 ? (\r\n\r\n                                            <><button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                id=\"nftdetail.id\" onClick={() => { buyHandler(); setBuyModalShow(true); setLoading(true) }}>Buy Now</button><BuyPopup\r\n                                                    show={buymodalShow}\r\n                                                    loading={loading}\r\n\r\n\r\n                                                    onHide={() => setBuyModalShow(false)} /></>\r\n                                        ) : (\r\n\r\n                                            <><button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                onClick={() => setBidModalShow(true)}>Place Bid</button><BidPopup\r\n\r\n                                                    id={latprojnftdetail.id}\r\n                                                    projid={latprojnftdetail.project_id}\r\n                                                    projtitle={latprojnftdetail.title}\r\n                                                    projcoll={latprojnftdetail?.collectionData?.title}\r\n                                                    show={bidmodalShow}\r\n                                                    onHide={() => setBidModalShow(false)} /></>\r\n                                        )}\r\n\r\n                                    </div>\r\n                                    <Timer\r\n                                        time={latprojnftdetail.end_date}\r\n                                    />\r\n                                    <div className='eddlbtton bitbtn d-flex  align-items-center mt-2'>\r\n\r\n                                        <div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <p dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4 '>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg>\r\n                                    <span>{latprojnftdetail.amount}</span>\r\n                                    {/* <span><small>$120</small></span> */}\r\n                                </div>\r\n\r\n                                <div className='sales'>\r\n                                    <span>\r\n                                        Creator royalties on secondary sales:\r\n                                    </span>\r\n                                    <span>5%</span>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=''>\r\n                            <div className=\"profile_detail mt-4\">\r\n\r\n                                <LatNftDataTable\r\n                                // id={id}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <NftTransdataTable\r\n                                id={id}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"col-12\">\r\n                        <div className=\"card no-hover countdown-times my-4 \">\r\n                            <span dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                        </div>\r\n\r\n                    </div> */}\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\nexport default LatprojNftDetails;","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { getBid, NftList, ProjectDetail, ProjectList, UpdateBId } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst NftAuctiondataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { slug } = useParams()\r\n    const [bidstatus, setBidStatus] = useState(2)\r\n    console.log('biddst', bidstatus)\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(NftList(props.slug.id))\r\n\r\n    }, [props.slug.id])\r\n\r\n    const acceptHandler = (id) => {\r\n\r\n        console.log(\"accept\", id)\r\n        getBid(props)\r\n        dispatch(UpdateBId({ id, status: bidstatus }))\r\n    }\r\n    return (\r\n        <div className='position-relative'>\r\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Latest Bids\" key=\"1\" >\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>User</th>\r\n                                <th>Bid Price</th>\r\n                                <th>Wallet</th>\r\n                                {/* <th>To</th> */}\r\n                                <th>Transaction</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody className='img_table'>\r\n                            {nftdetail.bids?.map((item) => {\r\n\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>{item.username}</td>\r\n                                        <td>{item.amount}</td>\r\n                                        <td>{item.pay_from?.slice(0, 4)}...{item.pay_from?.slice(35, 44)}</td>\r\n                                        {/* <td>{item.pay_to?.slice(0, 4)}...{item.pay_to?.slice(35, 44)}</td> */}\r\n                                        <td>{item.txd_id?.slice(0, 4)}...{item.txd_id?.slice(35, 44)}</td>\r\n                                        <td>\r\n                                            {item.status == 1 ? (\r\n\r\n                                                <button type=\"submit\" onClick={() => acceptHandler(item.id, setBidStatus(\"2\"))}>Accept</button>\r\n                                            ) : (\r\n                                                <a>Confirmed</a>\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                        {/* <div className='nothing col-spam-5' colspan=\"5\">\r\n                            No matching records found\r\n                        </div> */}\r\n                    </Table>\r\n                    {nftdetail?.bids?.length == 0 &&\r\n                        <div className='nothing'>\r\n\r\n                            No matching records found\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftAuctiondataTable","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport JoditEditor from 'jodit-react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport Web3 from 'web3';\r\nimport React from 'react';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { CreateMetaDataAndMint, UpdateStatus } from '../Wallet/interact';\r\nimport NftPopup from './nftPopup';\r\nimport { useFormData } from '../Create/Context/context';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nfunction SellPopup(props) {\r\n    const history = useHistory()\r\n    const [current, setCurrent] = React.useState(0)\r\n    const dispatch = useDispatch()\r\n    const slug = useParams()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const [auctiontype, setAuctionType] = useState(\"\")\r\n    const autionTypeChange = (event) => {\r\n        setAuctionType(event.target.value);\r\n\r\n    }\r\n    const [auctiondata, setAuctiondata] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [startdate, setStartdate] = useState(\"\")\r\n    console.log(startdate, 'startdata')\r\n    console.log(price, 'price')\r\n    const [enddate, setEnddate] = useState(\"\")\r\n    console.log(enddate, 'enddate')\r\n    console.log(auctiontype, 'auctiontype')\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const mint = (contractAddress, type, start_date, end_date, price) => {\r\n        // auctiondata.map((item) => {\r\n        //     setPrice(item.price)\r\n        // })\r\n        CreateMetaDataAndMint({\r\n            _name: nftdetail.title,\r\n            _des: nftdetail.description,\r\n            _imgBuffer: nftdetail.image,\r\n            contractAddress,\r\n            setCurrent,\r\n            collid: nftdetail?.collection_id,\r\n            nft_file_content: nftdetail?.nft_file_content,\r\n            slug,\r\n            setModalShow,\r\n\r\n            // auctiondata\r\n            type,\r\n            price,\r\n            start_date,\r\n            end_date,\r\n\r\n        })\r\n    }\r\n\r\n    const deployContract = async (type, start_date, end_date, price) => {\r\n\r\n        try {\r\n            if (nftdetail?.collectionData?.contract_id == null) {\r\n\r\n                await window.ethereum.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: web3.utils.toHex('80001') }],\r\n                })\r\n\r\n                // const { address } = await ConnectWallet()\r\n                const address = window?.ethereum?.selectedAddress\r\n                const MyNFTContract = new web3.eth.Contract(NFTContract.abi)\r\n                const gas = await web3.eth.getGasPrice();\r\n                // const gas = 500000\r\n\r\n                MyNFTContract.deploy({\r\n                    data: NFTContract.bytecode,\r\n                    arguments: [nftdetail?.collectionData?.title, nftdetail?.collectionData?.symbol],\r\n                }).send({\r\n                    from: address,\r\n                })\r\n                    .on('error', (error) => {\r\n                        // console.log(error)\r\n                    })\r\n                    .on('transactionHash', (transactionHash) => {\r\n                        // console.log(transactionHash, \"transactionHash\")\r\n                    })\r\n                    .on('receipt', (receipt) => {\r\n                        // receipt will contain deployed contract address\r\n                        // console.log(receipt, \"reciept\")\r\n                    })\r\n                    .on('confirmation', (confNumber, receipt) => {\r\n                        // console.log(receipt.contractAddress, \"confirmRecipet\")\r\n                        if (confNumber == 1) {\r\n                            mint(receipt?.contractAddress)\r\n                            // setContractAdd(receipt?.contractAddress)\r\n                            // UpdateContract(id)\r\n                        }\r\n\r\n                    })\r\n            } else {\r\n                mint(nftdetail?.collectionData?.contract_id, type, start_date, end_date, price)\r\n            }\r\n            return {\r\n                success: true,\r\n                // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n                status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n            }\r\n        } catch (error) {\r\n            // \r\n            alert(\"went wrong\")\r\n            return {\r\n                success: false,\r\n                status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // const deployAndMint = async () => {\r\n\r\n    //     setModalShow(true)\r\n    //     // mint()\r\n    //     await deployContract()\r\n    //     // nftdetail.id()\r\n    // }\r\n\r\n    const OnSubmit = async (data) => {\r\n        setModalShow(true)\r\n        // mint()\r\n        await deployContract({ type: data.auctiontype, end_date: data.end_date, start_date: data.start_date, price: data.price })\r\n        // nftdetail.id()\r\n        console.log(data, 'dtaaa')\r\n        // setEnddate(data.end_date)\r\n        // setPrice(data.price)\r\n        // setAuctionType(data.auctiontype)\r\n        // setStartdate(data.start_date)\r\n        // const formData = new FormData()\r\n        // formData.append('type', data.auctiontype)\r\n        // formData.append('price', data.price)\r\n        // formData.append('start_date', data.start_date)\r\n        // formData.append('end_date', data.end_date)\r\n        // dispatch(UpdateStatus({ ...data }))\r\n        // setAuctiondata({ ...data })\r\n    }\r\n\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate());\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div className='d-flex justify-content-between w-full'>\r\n                    <label className='modal-title h4 '>List for sale</label> <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover form-sell\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12 \">\r\n                            <div className=\"form-group\">\r\n                                <div className='mb-3'>Choose a type of sale</div>\r\n\r\n                                <div className=\"form-check form-check-inline mr-2\">\r\n                                    {/* {data.usertype == 2 ? ( */}\r\n                                    <>\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            name=\"radiobutton\"\r\n                                            id=\"1\"\r\n                                            onChange={autionTypeChange}\r\n                                            defaultChecked\r\n                                            value=\"1\"\r\n                                            {...register(\"auctiontype\", { required: true })}\r\n                                            aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\r\n\r\n                                        />\r\n                                        <label className=\"form-check-label mr-2\" htmlFor=\"buy\">Fixed Price</label>\r\n                                    </>\r\n\r\n\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"2\"\r\n                                        disabled\r\n                                        onChange={autionTypeChange}\r\n                                        value=\"2\"\r\n                                        {...register(\"auctiontype\", { required: true })}\r\n\r\n                                        aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\r\n\r\n                                    />\r\n                                        <label className=\"form-check-label\" htmlFor=\"auction\">English Auction</label></>\r\n                                    {/* )} */}\r\n                                </div>\r\n\r\n                                {errors.auctiontype?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Type is required</p>}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                <label>Set Price</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>} */}\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">price is required</p>}\r\n\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <>\r\n                            <label className='col-12 my-3'>Set Duration </label>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        // placeholder='dd-mm-yy'\r\n                                        // hidden={data.type == 1}\r\n                                        defaultValue={defaultValue}\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // value={defaultValue}\r\n                                        min={disablePastDate()}\r\n\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                    // aria-invalid={errors.start_date ? \"true\" : \"false\"} \r\n                                    />\r\n                                    {/* {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        min={disablePastDate()}\r\n                                        defaultValue={defaultValue1}\r\n                                        // value={defaultValue1}\r\n                                        {...register(\"end_date\")}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    <div >\r\n\r\n                                    </div>\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div>\r\n                            {auctiontype == 1 ? (\r\n\r\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days after which the listing may expire and be removed</span>\r\n                            ) : (\r\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days</span>\r\n                            )}\r\n                        </>\r\n                        <div className='w-full text-center'>\r\n                            <button type=\"submit\" className=\" mb-0 btn btn-bordered-white\" style={{ color: '#FFF' }}\r\n                                id=\"nftdetail.id\">Mint</button><NftPopup\r\n                                show={modalShow}\r\n                                current={current}\r\n                                onHide={() => setModalShow(false)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default SellPopup","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNftName = (props) => {\r\n\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props?.nft_id?.id))\r\n    }, [props?.nft_id?.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\" >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal \r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className='col-12 item-form card no-hover'>\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                    <Fragment>\r\n\r\n                                                        <div className=\"row relative\">\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  name',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftName;","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNftDesc = (props) => {\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id?.id))\r\n    }, [props.nft_id?.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\" >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter \">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className='col-12'>\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                    <Fragment>\r\n\r\n                                                        <div className=\"row relative\">\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  description',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={'nft_description'}\r\n\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n\r\n                                                                            onChange={newContent => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftDesc;","\r\n\r\n\r\nimport { Button, Form, Input, } from 'antd';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNftImage = (props) => {\r\n\r\n    const editor = useRef(null);\r\n\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n\r\n\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n\r\n\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n\r\n    const [form] = Form.useForm()\r\n\r\n\r\n\r\n    const [image, setImage] = useState()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id?.id))\r\n    }, [props.nft_id?.id])\r\n\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const handleUpload = (e) => {\r\n\r\n        const filetype = e.target.files[0].type;\r\n\r\n        var fr = new FileReader();\r\n\r\n        fr.onload = function () {\r\n\r\n            var img = new Image();\r\n            img.onload = function () {\r\n\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n\r\n\r\n                    setNFtFileType(\"modal\");\r\n\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n\r\n        })\r\n\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n\r\n    }, [form, nftdetail])\r\n\r\n    const onFinish = async (values) => {\r\n        // debugger\r\n\r\n        try {\r\n\r\n            setLoading(true)\r\n            if (source) {\r\n\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n\r\n\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n                    // setLoading(false)\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n\r\n                const formData = new FormData()\r\n\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n\r\n                formData.append('collection_id', nft_collection_id)\r\n\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n            // setLoading(false)\r\n        }\r\n\r\n    };\r\n\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"main-create\">\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter h-auto\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"col-12\">\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n                                                    <Fragment>\r\n\r\n                                                        <div className=\"row relative \">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"col-lg-12 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                    <div\r\n                                                                        className=\"position-relative upload_nft\"\r\n                                                                        style={{\r\n                                                                            backgroundImage: \"url('')\",\r\n                                                                            backgroundSize: \"contain\",\r\n                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                            margin: \"0 auto\",\r\n                                                                        }}\r\n                                                                    >\r\n\r\n                                                                        <div\r\n                                                                            className={\r\n                                                                                nftFileType === \"Player\" || nftFileType === \"modal\"\r\n                                                                                    ? \" inputdragVedio\"\r\n                                                                                    : \"inputtdrag\"\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <input\r\n                                                                                type=\"file\"\r\n                                                                                onChange={handleUpload}\r\n                                                                                maxCount={1}\r\n                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                            />\r\n\r\n                                                                            {(nftFileType === \"Image\") &&\r\n                                                                                <div>\r\n\r\n                                                                                    {source ? (\r\n\r\n                                                                                        <img\r\n                                                                                            src={source}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <img\r\n                                                                                            src={image}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    )}\r\n\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n                                                                            {nftFileType === \"Player\" &&\r\n                                                                                <div>\r\n\r\n                                                                                    {source ? (\r\n\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={source}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <video\r\n\r\n                                                                                            width=\"100%\"\r\n\r\n                                                                                            controls\r\n                                                                                            src={image}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p>\r\n                                                                                            Because you’ve included\r\n                                                                                            multimedia, you’ll need to provide\r\n                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                            the card display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft}\r\n\r\n                                                                                                />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview}\r\n\r\n                                                                                                />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n\r\n\r\n\r\n\r\n                                                                            {nftFileType === \"modal\" &&\r\n                                                                                <div>\r\n                                                                                    {!source ? (\r\n                                                                                        <DModal\r\n                                                                                            vdo={image}\r\n\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <DModal\r\n                                                                                            vdo={source}\r\n\r\n                                                                                        />\r\n                                                                                    )}\r\n\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p className=\"\">\r\n                                                                                            Because you’ve included multimedia,\r\n                                                                                            you’ll need to provide an image\r\n                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                            display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft} />\r\n                                                                                            ) : (\r\n\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview} />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                        </div>\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftImage;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport Web3 from 'web3';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport EditCollection from './updateCollection';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport { CreateMetaDataAndMint } from './../Wallet/interact';\r\nimport NftPopup from './nftPopup';\r\nimport axios from 'axios';\r\nimport { redirect } from 'next/dist/server/api-utils';\r\nimport LatprojNftDetails from '../Auctions/nftBuy';\r\nimport DModal from '../Create/3dModal';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport NftAuctiondataTable from './nftAuctiontable';\r\nimport SellPopup from './sellPopup';\r\nimport EditNftName from '../Create/editNftNamepopup';\r\nimport EditNftDesc from '../Create/editDescPopup';\r\nimport EditNftImage from '../Create/nftImageeditPopup';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\nconst NftDetails = (props) => {\r\n    const history = useHistory()\r\n    const [nftId, setNftID] = useState();\r\n    const search = useLocation().search;\r\n    const projslug = new URLSearchParams(search).get('project');\r\n    console.log(projslug, 'projslug')\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.getnftwoldetails\r\n    })\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [sellmodalShow, setSellModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [modalShoweditdes, setModalShoweditdes] = React.useState(false);\r\n    const [modalShoweditimg, setModalShoweditimg] = React.useState(false);\r\n    // const [mintmodalShow, setMintModalShow] = React.useState(false);\r\n\r\n    const [current, setCurrent] = React.useState(0)\r\n    const [contractAdd, setContractAdd] = useState('')\r\n    // const [collid, setCollid] = useState('')\r\n    // console.log('collid', collid)\r\n    // console.log('contAddre', contractAdd)\r\n    // console.log('current', current)\r\n    const slug = useParams();\r\n    // console.log(id, 'idd')\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'projdataaaa')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n\r\n    // console.log('collupdate', collupdate)\r\n    useEffect(() => {\r\n        dispatch(NftList(slug.id))\r\n        dispatch(ProjectDetail(slug.id))\r\n        // dispatch(GetSettings())\r\n    }, [slug])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n                            <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n\r\n                                <div >\r\n                                    <div className='position-absolute nft-edit-icon'><i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                        setNftID(slug)\r\n                                        e.preventDefault();\r\n                                        setModalShoweditimg(true)\r\n                                    }\r\n                                    } ></i>\r\n                                    </div>\r\n                                    <div className='loader-img'>{modalShoweditimg &&\r\n\r\n                                        <EditNftImage\r\n                                            // debugger\r\n                                            id={projslug}\r\n                                            nft_id={nftId}\r\n                                            show={modalShoweditimg}\r\n                                            onHide={() => setModalShoweditimg(false)} />\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n                                {nftdetail.extention === \"Player\" &&\r\n\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={nftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={nftdetail.image}\r\n                                    // mdl={setModal}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"Image\" &&\r\n\r\n                                    <img src={nftdetail.image} alt=\"\" />\r\n                                }\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-sm-0\">\r\n                        <div className=' card no-hover py-0 mt-2 mb-2 mt-lg-0 mb-lg-0 '>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{nftdetail?.title} </span>\r\n\r\n                            <div className='nft-edit-icon position-absolute mt-2'>\r\n                                <i className=\"fa-solid fa-pen \" onClick={(e) => {\r\n                                    setNftID(slug)\r\n                                    e.preventDefault();\r\n                                    setModalShowedit(true)\r\n                                }\r\n                                } ></i>\r\n                                {modalShowedit &&\r\n\r\n                                    <EditNftName\r\n                                        // debugger\r\n                                        id={projslug}\r\n                                        nft_id={nftId}\r\n                                        show={modalShowedit}\r\n                                        onHide={() => setModalShowedit(false)} />\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"content sm:mt-3 mt-lg-2\">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{nftdetail?.user_data?.username}</span>\r\n\r\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {nftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{nftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                {nftdetail.is_mint == 0 ? (\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            onClick={() => setSellModalShow(true)}>  Sell</button>\r\n                                            <SellPopup\r\n                                                show={sellmodalShow}\r\n\r\n                                                onHide={() => setSellModalShow(false)} />\r\n                                        </>\r\n\r\n                                    </div>\r\n                                ) : (\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            disabled>Ready to purchase</button>\r\n\r\n                                        </>\r\n\r\n                                    </div>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-12 md:col-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n\r\n                                <div className='nft-edit-icon position-absolute mt-2'>\r\n                                    <i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                        setNftID(slug)\r\n                                        e.preventDefault();\r\n                                        setModalShoweditdes(true)\r\n                                    }\r\n                                    } ></i>\r\n                                    {modalShoweditdes &&\r\n\r\n                                        <EditNftDesc\r\n                                            // debugger\r\n                                            id={projslug}\r\n                                            nft_id={nftId}\r\n                                            show={modalShoweditdes}\r\n                                            onHide={() => setModalShoweditdes(false)} />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft \" />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4'>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg>\r\n                                    <span>{latprojnftdetail.amount}</span>\r\n                                    <span><small>${nftdetail.amount}</small></span>\r\n                                </div>\r\n\r\n                                <div className='sales'>\r\n                                    <span>\r\n                                        Creator royalties on secondary sales:\r\n                                    </span>\r\n                                    <span>5%</span>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-8 col-12'>\r\n                        <div className=\"profile_detail mt-4\">\r\n\r\n                            <NftdataTable\r\n                                slug={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='container table-detail'>\r\n\r\n                            <NftAuctiondataTable\r\n                                slug={slug}\r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* <div className='col-12 description'>\r\n                    <h3 > Description</h3>\r\n                    <div className=\"card no-hover countdown-times my-4\">\r\n            \r\n                        <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft\" />\r\n                    </div>\r\n                     </div> */}\r\n                </div >\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default NftDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ProjectList';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport NftDetails from '../components/ItemDetails/nftDetails';\r\n\r\nconst Nft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Projects\" subpage=\"Explore\" page=\"\" /> */}\r\n            <NftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nconst FunddataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    // const { id } = useParams()\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n            <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon'  viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n  <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\"/>\r\n</svg>\r\n            {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\"/><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\"/></svg>    */}\r\n\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive>\r\n                        <tbody class=\"nfts_details\">\r\n                            <tr>\r\n                                <td><span>Organization Name </span> <span>{funddetail?.organization_detail?.organization_name}</span></td>\r\n                                <td><span>Country</span>  <span>{funddetail?.organization_detail?.country}</span></td>\r\n                                <td><span>Tax Number </span> <span>{funddetail?.organization_detail?.tax_number}</span></td>\r\n                                <td><span>Web URL</span>  <span>{funddetail?.organization_detail?.web_url}</span></td>\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default FunddataTable","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from './fundraiserdetail';\r\nimport FundTransdataTable from './fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\nimport { Button } from 'react-bootstrap';\r\nimport ReferalPopup from '../ItemDetails/refralPopup';\r\n\r\nconst FundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const id = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n    const [modalShowreferal, setModalShowreferal] = React.useState(false);\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n    console.log('userdettt', userDetail)\r\n    const log = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(fundprojdetail.user_data, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    return (\r\n        <section className=\"item-details-area fundraise-main\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src=\"/img/ph.jpg\" /> */}\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done mt-3'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n\r\n                        <div className=\"progress_nft mobile_nft mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                            </div>\r\n\r\n\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length ?\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        }) :\r\n                                    <div className=\"col-12 col-sm-12 col-lg-12\">\r\n\r\n                                        <span className='allproj2'>\r\n                                            No Projects\r\n                                        </span>\r\n\r\n                                    </div>\r\n                                }\r\n                            </ul>\r\n                            <Link className=\"\" to=\"/all/LatestProjects\"><p className='see_all'>See all</p></Link>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className='custam_col mt-3 mt-lg-0'>\r\n                            <h5 class=\"user_title \">\r\n\r\n                                <div className='d-flex align-item-center gap-5'>\r\n                                    <svg className='' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg>\r\n\r\n                                    <div>Description</div>\r\n\r\n                                </div>\r\n                            </h5>\r\n\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='funddeatil mt-3 '>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-4 desktop_nft\">\r\n                        <div className=\"progress_nft  mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"100%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                                {/* <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" />\r\n                                            <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                        </div> */}\r\n\r\n                                {/* <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                    </div> */}\r\n\r\n                            </div>\r\n\r\n                            <div className=\"d-flex gap-5 flex-wrap justify-content-start\">\r\n                                <div>\r\n                                    <Button variant=\"primary\" className=\" btn  btn-bordered-white m-0 mr-2\">\r\n                                        Invest\r\n                                    </Button>\r\n                                </div>\r\n                                {/* <div>\r\n\r\n                                    <Button className=\" mb-2 mb-sm-0  btn  btn-bordered-white m-0\" variant=\"primary\" onClick={() => setModalShowreferal(true)}>\r\n                                        Share\r\n                                    </Button>\r\n                                    <ReferalPopup\r\n                                        id={user_id}\r\n                                        userRef={userDetail}\r\n                                        show={modalShowreferal}\r\n                                        onHide={() => setModalShowreferal(false)} />\r\n\r\n                                </div> */}\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length &&\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        })}\r\n                            </ul>\r\n                            <Link className=\"\" to={`/all/fundraise/projects/${user_id}`}><p className='see_all'>See all</p></Link>\r\n                        </div>\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            {/* <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        \r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div> */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=''>\r\n                    {/* <div className='col-7'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div> */}\r\n                    <div className='col-12 mt-3 mb-3'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default FundraiserDetail;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport FundraiserDetail from '../components/TopSeller/fundraiserDetails';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\n\r\nconst FundDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main main-fund-detail\">\r\n\r\n            <Header />\r\n            <FundraiserDetail />\r\n            <Fundraiser />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default FundDetail;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ProjDetails from '../components/ItemDetails/viewProdetails';\r\nimport ProjNFTS from '../components/Auctions/projectnfts';\r\nimport LatprojNftDetails from '../components/Auctions/nftBuy';\r\n\r\nclass latnftprojDetails extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <LatprojNftDetails />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default latnftprojDetails;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\nexport default ScrollToTop","\r\n\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Upload } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddNftAction, CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport swal from 'sweetalert';\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\nimport DModal from './3dModal';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst AddNft = ({ current, prev }) => {\r\n    const editor = useRef(null);\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    // console.log(data, 'formdta')\r\n    const [count, setCount] = useState(0);\r\n    // const [nft_description, setNft_description] = useState([])\r\n    // console.log('nft_description', nft_description)\r\n    const [nftFileType, setNFtFileType] = useState()\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    console.log(nftwidth, 'nftwidth')\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    console.log(nftHeight, 'nftheight')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"1\" });\r\n    const [NFtFileExtension, setNFtExtension] = useState()\r\n    const [source, setSource] = useState([])\r\n    const [preview, setPreview] = useState([])\r\n    const [nft_description, setNft_description] = useState([])\r\n    // console.log('colldata', coldata)\r\n    const [sourceType, setSourceType] = useState()\r\n    // console.log(nft_collection_id)\r\n    // const [coll_id,setCollId] = useState()\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    // console.log(\"collid\", coll_id)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleIncrement = () => {\r\n        setCount(prevCount => prevCount + 1);\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n    const { slug } = useParams()\r\n    // function descc(e) {\r\n    //     setNft_description(prev => [...prev, nft_description]);\r\n    // };\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    // this.setState(prev => ({\r\n    //     item: prev.item.map(item => item.name === 'xjz' ? { ...item, age: '10' } : item)\r\n    // }))\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n        defaultValues\r\n    });\r\n    useEffect(() => {\r\n        register(\"nft_description\");\r\n    }, [register]);\r\n\r\n    // const ipfsClient = create('http://127.0.0.1:5001')\r\n    // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n    // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n    // console.log(imaeg, 'imgg')\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n\r\n        setPreview(prevState => {\r\n            // debugger\r\n            prevState[index] = e?.target?.files[0]\r\n\r\n            return [...prevState]\r\n        })\r\n\r\n        // setPreview(pimage)\r\n    };\r\n    const handleUpload = (e, index) => {\r\n        const filetype = e.target.files[0].type\r\n        setNFtExtension(filetype)\r\n        // debugger\r\n        setNft(e.target.files[0])\r\n\r\n\r\n\r\n        var fr = new FileReader;\r\n\r\n        fr.onload = function () { // file is loaded\r\n            var img = new Image;\r\n\r\n            img.onload = function () {\r\n                // alert(img.width); // image is loaded; sizes are available\r\n                setNftwidth(img.width)\r\n                setNftheight(img.height)\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n\r\n        let type = \"Image\"\r\n\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert('Filesize must 100mb or below');\r\n        } else {\r\n\r\n\r\n            switch (filetype) {\r\n                case 'image/png':\r\n                case 'image/jpg':\r\n                case 'image/gif':\r\n                case 'image/svg':\r\n                    type = \"Image\"\r\n                    break;\r\n                case 'audio/mpeg':\r\n                case 'audio/ogg':\r\n                case 'video/mp4':\r\n                case 'video/webm':\r\n                    type = 'Player'\r\n                    break;\r\n                case '':\r\n                    // if (nft?.name?.str.includes(\".glb\")) {\r\n                    type = 'modal'\r\n                    // }\r\n                    break;\r\n                default:\r\n                    type = 'Image'\r\n            }\r\n\r\n            // setNFtFileType(type)\r\n\r\n            setSource(prevState => {\r\n                // debugger\r\n                prevState[index] = { file: e.target.files[0], type: type }\r\n                setSourceType(type)\r\n\r\n                return [...prevState]\r\n            })\r\n\r\n\r\n            // switch (nft?.name?.str.includes(\".glb\")) {\r\n\r\n            //     case '':\r\n            //         setNFtFileType('modal')\r\n            //         break;\r\n            // }\r\n\r\n        }\r\n\r\n        // if (nftFileType === 'Image' && window.innerHeight > '500' && window.innerWidth > '500') {\r\n        //     alert(\"This is  matching\")\r\n        // }\r\n        // else {\r\n        //     setNftError('Minimum size should be 500x500')\r\n        //     alert('This is not matching')\r\n\r\n        // }\r\n    }\r\n\r\n    // console.log('col', col)\r\n\r\n\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n            const nftImagepromises = values?.nfts?.map(x => uploadNFT(nft))\r\n\r\n            const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n            // \r\n\r\n            const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n            // \r\n            var str = addedImage;\r\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n            const formData = new FormData()\r\n\r\n\r\n\r\n            if (check === false) {\r\n\r\n                formData.append('image', addedImage)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                // const newlist = newList.push(nft_collection_id);\r\n                formData.append('collection_id', coll_id)\r\n                // formData.append('nft_description', nft_description)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n                formData.append('preview_imag', Pimage)\r\n                formData.append('extention', sourceType)\r\n                // dispatch(uploadNFT())\r\n                dispatch(AddNftAction(formData, slug, setLoading))\r\n                // setLoading(false)\r\n            } else {\r\n                // debugger\r\n                console.log('fail')\r\n                setLoading(false)\r\n                swal('error!', 'Nft not uploaded', 'error')\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error, 'error')\r\n        }\r\n        // console.log('Received values of form:', values, data)\r\n\r\n    };\r\n    // console.log('title', localStorage.getItem('title'))\r\n    const handleCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n        beforeUpload: () => {\r\n            return false;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    // const getFile = (e) => {\r\n    //     // \r\n    //     console.log('Upload event:', e);\r\n\r\n    //     if (Array.isArray(e)) {\r\n    //         return e;\r\n    //     }\r\n    //     return e && e.fileList;\r\n    // };\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n\r\n                                <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n\r\n\r\n                                <div>\r\n\r\n                                    {loading ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                                            <Form\r\n                                                form={form}\r\n                                                name=\"dynamic_form_nest_item\"\r\n                                                initialValues={{\r\n                                                    nfts: nfts,\r\n                                                }}\r\n                                                // onSubmit={(event) => handleSubmit(event)}\r\n                                                onFinish={(event) => onFinish(event)}\r\n\r\n                                                autoComplete=\"off\"\r\n                                                className=\"item-form card no-hover\"\r\n                                            >\r\n                                                <Form.List name=\"nfts\">\r\n                                                    {(fields, { add, remove }) => (\r\n                                                        <>\r\n                                                            <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                                                <svg\r\n                                                                    width=\"16px\"\r\n                                                                    height=\"16px\"\r\n                                                                    viewBox=\"0 0 24 24\"\r\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                                >\r\n                                                                    <path\r\n                                                                        fill=\"none\"\r\n                                                                        stroke=\"#fff\"\r\n                                                                        stroke-width=\"2\"\r\n                                                                        d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\r\n                                                                        transform=\"matrix(-1 0 0 1 24 0)\"\r\n                                                                    />\r\n                                                                </svg>\r\n                                                                Previous\r\n                                                            </Button>\r\n\r\n                                                            <>\r\n                                                                {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n\r\n\r\n                                                                    <Fragment>\r\n                                                                        {/* <div>Artwork {index}</div> */}\r\n                                                                        <div className=\"row relative\">\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label>Name</label>\r\n                                                                                <div>\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_name\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: \"Name is required\",\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <label>Name</label> */}\r\n                                                                                        <Input placeholder=\"Name\" />\r\n                                                                                    </Form.Item>\r\n                                                                                </div>\r\n                                                                                <label>Description</label>\r\n                                                                                <div>\r\n\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_description\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: \"Missing  description\",\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <Controller\r\n                                                                                control={control}\r\n                                                                                name=\"nft_description\"\r\n                                                                                defaultValue=\"\"\r\n                                                                                render={({ field: { value, onChange } }) => {\r\n                                                                                    return  */}\r\n                                                                                        <JoditEditor\r\n                                                                                            ref={editor}\r\n                                                                                            value={nft_description}\r\n                                                                                            // config={config}\r\n\r\n                                                                                            placeholder=\"start typing\"\r\n                                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                                            onBlur={(newContent) =>\r\n                                                                                                setNft_description(newContent)\r\n                                                                                            } // preferred to use only this option to update the content for performance reasons\r\n                                                                                            onChange={(newContent) => { }}\r\n                                                                                        />\r\n                                                                                        {/* }} */}\r\n                                                                                        {/* /> */}\r\n                                                                                    </Form.Item>\r\n                                                                                    {errors.nft_description?.type ===\r\n                                                                                        \"required\" && (\r\n                                                                                            <p style={{ color: \"red\" }} role=\"alert\">\r\n                                                                                                Description is required\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                    {errors.nft_description &&\r\n                                                                                        errors.nft_description.type ===\r\n                                                                                        \"minLength\" && (\r\n                                                                                            <p style={{ color: \"red\" }}>\r\n                                                                                                min length of words is 300\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n\r\n                                                                            <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                                <MinusCircleOutlined\r\n                                                                                    onClick={(e) => {\r\n                                                                                        remove(name);\r\n                                                                                        handleDecrement(e);\r\n                                                                                    }}\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                            {/* </div> */}\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label className=\"mt-2 mb-3\">\r\n                                                                                    Choose Collection\r\n                                                                                </label>\r\n                                                                            </div>\r\n\r\n\r\n                                                                            {col?.map((item, idx) => (\r\n                                                                                <div\r\n                                                                                    key={`auc_${idx}`}\r\n                                                                                    id={item.id}\r\n                                                                                    className=\"col-md-6 col-lg-3 col-12 choose_div\"\r\n                                                                                >\r\n                                                                                    <div\r\n                                                                                        id={item.id}\r\n                                                                                        onClick={() =>\r\n                                                                                            onHandleClick(index, item.id)\r\n                                                                                        }\r\n                                                                                        className=\"card\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                            border:\r\n                                                                                                nft_collection_id[index] == item.id\r\n                                                                                                    ? \"1px solid #fff\"\r\n                                                                                                    : null,\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <div className=\"card-body\">\r\n                                                                                            <div>{item.title}</div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    {/* </Form.Item> */}\r\n                                                                                </div>\r\n                                                                                // </div>\r\n                                                                            ))}\r\n                                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                                {/* <div className=\"col-24\"> */}\r\n\r\n                                                                                <div className=\"form-group\">\r\n                                                                                    <div\r\n                                                                                        className=\"card choose_div\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <div className=\"card-body \">\r\n                                                                                            <Button\r\n                                                                                                variant=\"primary\"\r\n                                                                                                className=\"collection_btn\"\r\n                                                                                                onClick={() => setModalShow(true)}\r\n                                                                                            >\r\n                                                                                                <i className=\"f1a-regular fa-plus\"></i>{\" \"}\r\n                                                                                                Create Collection\r\n                                                                                            </Button>\r\n\r\n                                                                                            <MyVerticallyCenteredModal\r\n                                                                                                show={modalShow}\r\n                                                                                                onHide={() => setModalShow(false)}\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                                    <div\r\n                                                                                        className=\"position-relative upload_nft\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage: \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a image',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        > */}\r\n                                                                                        {/* <div className='uploadnftpopup-input Icon_cam' > */}\r\n                                                                                        <div\r\n                                                                                            className={\r\n                                                                                                source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\r\n                                                                                                    ? \" inputdragVedio\"\r\n                                                                                                    : \"inputtdrag\"\r\n                                                                                            }\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                // onChange={handleUpload}\r\n                                                                                                maxCount={1}\r\n                                                                                                onChange={e => handleUpload(e, index)}\r\n                                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                                            />\r\n\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\r\n                                                                                                <div>\r\n                                                                                                    {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\r\n                                                                                                    {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? (\r\n\r\n\r\n                                                                                                        <img\r\n                                                                                                            src={URL.createObjectURL(source[index].file)}\r\n                                                                                                            className=\"nft-image\"\r\n                                                                                                        />\r\n                                                                                                    ) : (\r\n                                                                                                        <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                            Minimum size should be 500x500\r\n                                                                                                        </p>\r\n\r\n\r\n\r\n                                                                                                    )}\r\n                                                                                                    {/* : (\r\n                                                                                        <p style={{ color: \"red\" }}>\r\n                                                                                            Minimum size should be 500x500\r\n                                                                                        </p>\r\n                                                                                    )\r\n                                                                                    s\r\n                                                                                    } */}\r\n                                                                                                </div>\r\n                                                                                            }\r\n\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\r\n                                                                                                <div>\r\n                                                                                                    {/* { source?.length && source?.[index] && source[index]?.type === \"Player\" && ( */}\r\n                                                                                                    <video\r\n                                                                                                        // className=\"VideoInput_video\"\r\n                                                                                                        width=\"100%\"\r\n                                                                                                        // height={height}\r\n                                                                                                        controls\r\n                                                                                                        src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                                    // onChange={setSource}\r\n                                                                                                    />\r\n                                                                                                    {/* )} */}\r\n                                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                                        <label>Preview Image</label>\r\n                                                                                                        <p>\r\n                                                                                                            Because you’ve included\r\n                                                                                                            multimedia, you’ll need to provide\r\n                                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                                            the card display of your item\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                    <div\r\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                                        style={{\r\n                                                                                                            backgroundImage:\r\n                                                                                                                \"url('')\",\r\n                                                                                                            backgroundSize: \"contain\",\r\n                                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                                            backgroundPosition: \"center\",\r\n                                                                                                        }}\r\n                                                                                                    >\r\n                                                                                                        <input\r\n                                                                                                            type=\"file\"\r\n                                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                                        // onChange={previewChange}\r\n                                                                                                        />\r\n                                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                                    <img\r\n                                                                                                                        className=\"preview_image\"\r\n                                                                                                                        src={URL.createObjectURL(preview[index])}\r\n\r\n\r\n                                                                                                                    // onChange={setPimage}\r\n                                                                                                                    />\r\n                                                                                                                )}\r\n                                                                                                            </div>\r\n                                                                                                        }\r\n                                                                                                    </div>\r\n\r\n                                                                                                </div>\r\n                                                                                            }\r\n\r\n                                                                                            {/* )} */}\r\n                                                                                            {/* <div className=\"VideoInput_footer\">{vdo || \"Nothing selectd\"}</div> */}\r\n\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\r\n                                                                                                <div>\r\n                                                                                                    <DModal\r\n                                                                                                        vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                                    // mdl={setModal}\r\n                                                                                                    />\r\n\r\n                                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                                        <label>Preview Image</label>\r\n                                                                                                        <p className=\"\">\r\n                                                                                                            Because you’ve included multimedia,\r\n                                                                                                            you’ll need to provide an image\r\n                                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                                            display of your item\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                    <div\r\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                                        style={{\r\n                                                                                                            backgroundImage:\r\n                                                                                                                \"url('')\",\r\n                                                                                                            backgroundSize: \"contain\",\r\n                                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                                            backgroundPosition: \"center\",\r\n                                                                                                        }}\r\n                                                                                                    >\r\n                                                                                                        <input\r\n                                                                                                            type=\"file\"\r\n                                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                                        />\r\n                                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                                    <img\r\n                                                                                                                        className=\"preview_image\"\r\n                                                                                                                        src={URL.createObjectURL(preview[index])} />\r\n                                                                                                                )}\r\n                                                                                                            </div>\r\n                                                                                                        }\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                        {/* </Form.Item> */}\r\n                                                                                        {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a MP4 File',\r\n    \r\n                                                                                },\r\n                                                                            ]}\r\n    \r\n                                                                        >\r\n    \r\n                                                                            <VideoInput width={400} height={300} />\r\n    \r\n    \r\n                                                                        </Form.Item> */}\r\n\r\n                                                                                        {/* <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>MP4 & MP3 </label>\r\n                                                                                <VideoInput width={400} height={300} />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                                <label>3D Modal </label>\r\n                                                                                <Dinosaur />\r\n    \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-12 col-md-12\">\r\n                                                                            <div className=\"form-group\">\r\n                                                                               \r\n    \r\n                                                                            </div>\r\n                                                                        </div> */}\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n\r\n                                                                ))}\r\n\r\n\r\n                                                            </>\r\n                                                        </>\r\n                                                    )}\r\n                                                </Form.List>\r\n                                                <Form.Item>\r\n                                                    <div className=\"col-12\">\r\n                                                        <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\r\n                                                            Add\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </Form.Item>\r\n                                            </Form>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\nexport default AddNft;","import React, { Component, useEffect } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Creates from '../components/Create/Create';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport { isLogin } from '../routers/utils';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UploadNftIndex from '../components/Create';\r\nimport AddNft from '../components/Create/addNft';\r\n\r\nconst AddNFT = () => {\r\n    const history = useHistory();\r\n\r\n    // useEffect(() => {\r\n    //   if (!isLogin()) {\r\n    //     history.push('/login')\r\n    //   }\r\n    // }, [])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AddNft />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddNFT;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { Button } from 'bootstrap';\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from '../TopSeller/fundraiserdetail';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst MyFundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    // console.log(fundprojdetail, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div class=\"row py-0\">\r\n                    <div className='col-12 p-0'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-between px-0\">\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div className='custam_col'>\r\n                            <h5 class=\"user_title\"><div>Description</div></h5>\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n                                    <div className=\"card no-hover detail_single_nfts\">\r\n\r\n                                        <li className='nft_price'>\r\n                                            ${funddetail?.total_fundraised} raised from all projects\r\n\r\n                                        </li>\r\n\r\n\r\n                                        {/* <li className=\"price d-flex justify-content-between\">\r\n                                                <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"> 71% </span>\r\n    \r\n                                            </li> */}\r\n\r\n                                    </div>\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        {/* <li className='card-inner-heading'>\r\n                                            <span style={{}}>Projects</span>\r\n                                        </li> */}\r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    // console.log('todat', date2)\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    // const totaldays = days_difference.slice(0,1)\r\n                                                    // console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                    {/* {(item.created_at).diff(new Date, 'day', true)} */}\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-12'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default MyFundraiserDetail;","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { GetfundraiserProject, ProjectList } from '../../redux/Actions/projectAction';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllFundraiseProjects = (props) => {\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n    const { user_id } = useParams()\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    console.log(fundprojdetail, 'fundprojdetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetfundraiserProject(user_id))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    <h3 className=\"mt-3 mb-0\">Fundraiser Projects</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {/* {fund && fund.length ?\r\n                                [...new Map(fund.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\r\n                            {fundprojdetail?.map((item, idx) => {\r\n\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} to={`/projdetails/${item.id}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <div className=\"card project_cards\">\r\n                                                <div className=\"image-over relative \">\r\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                    <img className=\"card-img-top\" src={item?.nft_data[0]?.image} alt={item.nft_data.description} />\r\n                                                </div>\r\n                                                <div className='token'>\r\n                                                    <span></span>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <a>\r\n                                                            <h5 className=\"mb-0\">{item.title.slice(0, 20)}</h5>\r\n                                                        </a>\r\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                            <span>Owned By</span>\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\"></h6>\r\n                                                            </a>\r\n                                                        </div> */}\r\n                                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                            <span>{item.price} MATIC</span>\r\n                                                            <span>{item.nft_data.length} NFTS </span>\r\n                                                            <span> + {item.number_of_nft} NFTS </span>\r\n                                                        </div>\r\n\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                            {/* }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    <h2 className='allproj2'>\r\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                    </h2>\r\n                                </div>\r\n                            } */}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllFundraiseProjects; ","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ReadMore from '../../readMore';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport FundDetail from '../../themes/fund-detail';\r\nimport latprojDetails from '../../themes/latproj-details';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllFundraise = () => {\r\n\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    <h3 className=\"mt-3 mb-0\">All Fundraiser's</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {/* {fund && fund.length ?\r\n                                [...new Map(fund.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\r\n                            {fund?.map((item, idx) => {\r\n\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} to={`/fundraiser/detail/${item.user_id}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <div className=\"card project_cards position-relative \">\r\n                                                {/* matic */}\r\n                                                {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span className='matics'>{item.amount} MATIC</span>\r\n                                                  \r\n                                                </div> */}\r\n                                                <div className=\"image-over position-relative \">\r\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                    <img className=\"card-img-top\" src={item?.organization_detail?.banner_image} />\r\n                                                </div>\r\n                                                <div className='token'>\r\n                                                    <span></span>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\r\n                                                        <a>\r\n                                                            <h5 className=\"mb-0 mt-3\">{item?.organization_detail?.organization_name} </h5>\r\n                                                        </a>\r\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                    <span>Owned By</span>\r\n                                                                    <a href=\"/author\">\r\n                                                                        <h6 className=\"ml-2 mb-0\">You</h6>\r\n                                                                    </a>\r\n                                                                </div> */}\r\n                                                        <div className=''>\r\n                                                            <p dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 50) }} />\r\n                                                            {/* <p> It is a long established fact that a reader</p> */}\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className='mb-2 d-flex align-items-center justify-content-between'>\r\n                                                            <div className='mt-2 mb-2 d-flex text-align-center fundraiser_sale'>\r\n                                                                <div>\r\n                                                                    <span>Created</span>\r\n                                                                    <div>148</div>\r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    <span>Sale</span>\r\n                                                                    <div>100</div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                                            </svg></span>\r\n                                                        </div>\r\n\r\n                                                        {/* <div className='donate-btn'>\r\n                                                                <button className='btn ml-lg-auto btn-bordered-white'>Donate Now</button>\r\n                                                            </div> */}\r\n                                                        \r\n\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                            {/* }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    <h2 className='allproj2'>\r\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                    </h2>\r\n                                </div>\r\n                            } */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllFundraise; ","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreFive';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\nimport MyFundraiserDetail from '../components/Explore/my_fundraise';\r\n// import GetAllFundraiseProjects from '../components/Explore/fundraiserProjects';\r\n// import GetAllFundraise from '../components/Explore/fundraiserProjects';\r\nimport GetAllFundraiseProjects from '../components/Explore/fundProj';\r\nimport GetAllFundraise from '../components/Explore/fundraiserProjects';\r\n\r\nconst AllFundraiser = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <GetAllFundraise />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllFundraiser;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreFive';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\nimport MyFundraiserDetail from '../components/Explore/my_fundraise';\r\nimport GetAllFundraiseProjects from '../components/Explore/fundProj';\r\n\r\nconst AllFundraiserProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <GetAllFundraiseProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllFundraiserProjects;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreFive';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\nimport MyFundraiserDetail from '../components/Explore/my_fundraise';\r\n\r\nconst FundraiserProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <MyFundraiserDetail />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FundraiserProjects;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst Rewards = () => {\r\n\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>How Creator and Referral MATIC Rewards Work</h3>\r\n                        <span className='termsandconditions'><li>Affiliates get 30% on first level NFT referred sales</li>\r\n                            <li>Creators get 10% of secondary NFT sales for the lifetime of the project.</li>\r\n                            <li>Affiliates receive 5% of secondary purchases.</li>\r\n                            <br />\r\n                            <h5>NFT sale to BUYER 1 </h5>\r\n                            69% goes to Creator <br />\r\n                            30% goes to Affiliate<br />\r\n                            1% to Karmatica<br />\r\n                            <br />\r\n                            <h5>NFT resold from BUYER 1 to BUYER 2 via Affiliate</h5>\r\n                            84% goes to BUYER 1<br />\r\n                            10% goes to NFT Creator<br />\r\n                            5% goes to Affiliate <br />\r\n                            1% to Karmatica<br />\r\n                        </span>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default Rewards","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ProjectList';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport NftDetails from '../components/ItemDetails/nftDetails';\r\nimport Rewards from '../components/Footer/reward';\r\n\r\nconst NftReward = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Projects\" subpage=\"Explore\" page=\"\" /> */}\r\n            <Rewards />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NftReward;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AllNoti, GetUserAction, NotiDelete } from '../../redux/Actions/authAction'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\nimport moment from \"moment\";\r\nconst AllNotifications = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const nooti = useSelector(state => {\r\n\r\n        return state?.user?.noti\r\n    })\r\n    useEffect(() => {\r\n        dispatch(AllNoti())\r\n        dispatch(GetUserAction())\r\n    }, [])\r\n    const deleteHandler = (id) => {\r\n        dispatch(NotiDelete(id))\r\n    }\r\n    console.log(nooti, 'noti')\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-7\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <ul className='termsandconditions' >\r\n                            {nooti.map((item) => {\r\n                                return (\r\n                                    <><li>{item.title}</li>\r\n                                        <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\r\n                                            <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n\r\n                        {/* <h3>{footer?.footer?.title}</h3> */}\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AllNotifications","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreFour from './latestProjects';\r\nimport AllNotifications from './../components/Header/Allnotifications';\r\n\r\nconst Notifi = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AllNotifications />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Notifi;","import React from \"react\";\r\nimport { BrowserRouter, BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// importing all the themes\r\nimport ThemeOne from \"../themes/theme-one\";\r\nimport ExploreOne from \"../themes/explore-one\";\r\nimport ExploreTwo from \"../themes/project-list\";\r\nimport ReadProject from \"../components/Explore/ProjectList\";\r\nimport ExploreFour from \"../themes/latestProjects\";\r\nimport Auctions from \"../themes/auctions\";\r\nimport ItemDetails from \"../themes/item-details\";\r\nimport Activity from \"../themes/activity\";\r\nimport Blog from \"../themes/blog\";\r\nimport BlogSingle from \"../themes/blog-single\";\r\nimport HelpCenter from \"../themes/help-center\";\r\nimport Authors from \"../themes/authors\";\r\nimport Author from \"../themes/author\";\r\nimport WalletConnect from \"../themes/wallet-connect\";\r\nimport Create from \"../themes/create\";\r\nimport Login from \"../themes/login\";\r\nimport Signup from \"../themes/signup\";\r\nimport Contact from \"../themes/contact\";\r\nimport Forgot from \"../themes/forgotpassword\";\r\nimport PrivateRoute from \"./privateRoutes\";\r\nimport ProjectUpdate from \"../themes/update\";\r\nimport TermsCond from \"../themes/term&cond\";\r\nimport All from \"../themes/viewalllatest\";\r\nimport ColExplore from \"../themes/exploreCollections\";\r\nimport Aboutus from \"../themes/Aboutus\";\r\nimport LiveAuctions from \"../components/Auctions/AuctionsTwo\";\r\nimport NewestProj from \"../themes/newestproj\";\r\nimport latprojDetails from \"../themes/latproj-details\";\r\nimport Showcollections from \"../themes/showcollections\";\r\nimport Collectiondetails from \"../themes/collectn-details\";\r\nimport CollectionDetail from \"../themes/collectn-details\";\r\nimport ProjNft from \"../themes/projnft-details\";\r\nimport Nft from './../themes/nft-list';\r\nimport FundDetail from \"../themes/fund-detail\";\r\nimport { useEffect } from \"react\";\r\nimport latnftprojDetails from \"../themes/Latnft\";\r\nimport ScrollToTop from \"../ScrollToTop\";\r\nimport EditNft from \"../components/Create/editNft\";\r\nimport AddNFT from \"../themes/addnftTheme\";\r\nimport AllFundraiser from \"../themes/allFundproj\";\r\nimport AllFundraiserProjects from \"../themes/fund-projects\";\r\nimport FundraiserProjects from \"../themes/fundraise\";\r\nimport NftReward from \"../themes/rwrd\";\r\nimport Notifi from \"../themes/allnot\";\r\n// import { NavLink } from \"react-router-dom\";\r\n\r\nconst MyRouts = () => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <ScrollToTop />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ThemeOne} />\r\n          <Route exact path=\"/explore-1\" component={ExploreOne} />\r\n          <Route exact path=\"/projectlist\" component={ExploreTwo} />\r\n          <Route exact path=\"/allnotifications\" component={Notifi} />\r\n          <Route exact path=\"/updateproject/:id\" component={ProjectUpdate} />\r\n          {/* <Route exact path=\"/projectlist\" component={ExploreThree} /> */}\r\n          <Route exact path=\"/explore-4\" component={ExploreFour} />\r\n          <Route exact path=\"/rewards\" component={NftReward} />\r\n          <Route exact path=\"/auctions\" component={Auctions} />\r\n          <Route exact path=\"/popularcollection/details/:slug\" component={ItemDetails} />\r\n          <Route exact path=\"/projects/:slug\" component={latprojDetails} />\r\n          <Route exact path=\"/nftprojdetails/:slug\" component={latnftprojDetails} />\r\n          <Route exact path=\"/fundraiser/detail/:user_id\" component={FundDetail} />\r\n          <Route exact path=\"/myfundraiser/detail/:user_id\" component={FundraiserProjects} />\r\n          <Route exact path=\"/projnftdetails/:slug\" component={ProjNft} />\r\n          <Route exact path=\"/allfundraise\" component={AllFundraiser} />\r\n          <Route exact path=\"/all/fundraise/projects/:user_id\" component={AllFundraiserProjects} />\r\n          <Route exact path=\"/nft/details/:id\" component={Nft} />\r\n          <Route exact path=\"/nftedit/:id/:id\" component={EditNft} />\r\n          <Route exact path=\"/addnft/:id\" component={AddNFT} />\r\n          <Route exact path=\"/activity\" component={Activity} />\r\n          <Route exact path=\"/blog\" component={Blog} />\r\n          <Route exact path=\"/blog-single\" component={BlogSingle} />\r\n          <Route exact path=\"/help-center\" component={HelpCenter} />\r\n          <Route exact path=\"/authors\" component={Authors} />\r\n          <Route exact path=\"/profile\" component={Author} />\r\n          <Route exact path=\"/terms&conditions\" component={TermsCond} />\r\n          <Route exact path=\"/all/:type\" component={All} />\r\n          <Route exact path=\"/aboutus\" component={Aboutus} />\r\n          <Route exact path=\"/allcollections\" component={ColExplore} />\r\n          <Route exact path=\"/wallet-connect\" component={WalletConnect} />\r\n          <Route exact path=\"/my-collections\" component={Showcollections} />\r\n          <Route exact path=\"/collection/:id\" component={CollectionDetail} />\r\n          {/* <Route exact path=\"/newest-projects\" component={NewestProj} /> */}\r\n\r\n          <Route exact path=\"/create\" component={Create} />\r\n\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          {/* <PrivateRoute exact path=\"/create-organization\" component={createOrganization} /> */}\r\n          <PrivateRoute exact path=\"/forgotpassword\" component={Forgot} />\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyRouts\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\n// importing MyRouts where we located all of our theme\r\nimport MyRouts from './routers/routes'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MyRouts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport { authReducer, userDetail } from '../redux/Slices/authSlice'\r\nimport { combineReducers } from '@reduxjs/toolkit'\r\nimport { projectReducer } from './Slices/projectSlice'\r\nimport { footerReducer } from './Slices/footerSlice'\r\nimport { fundraiserReducer } from './Slices/fundraiserSlice'\r\nimport { collectionReducer } from './Slices/popularCollectionSlice'\r\nimport { contactReducer } from './Slices/contactSlice';\r\n\r\nconst reducer = combineReducers({\r\n    user: authReducer,\r\n    countries: authReducer,\r\n    annualRevenue: authReducer,\r\n    hereAbout: authReducer,\r\n    login: authReducer,\r\n    forgotpassword: authReducer,\r\n    errmessage: authReducer,\r\n    createproject: projectReducer,\r\n    // getproject: projectReducer,\r\n    projectdetails: projectReducer,\r\n    latestprojects: projectReducer,\r\n    fundraiser: fundraiserReducer,\r\n    footer: footerReducer,\r\n    collection: collectionReducer,\r\n    getcollections: collectionReducer,\r\n    getcollectiondetails: collectionReducer,\r\n    getSocialmediaIcons: projectReducer,\r\n    contact: contactReducer,\r\n    // userDetail: authReducer,\r\n\r\n    // Nftlist: projectReducer\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer,\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css'\r\nimport App from './App';\r\nimport store from '../src/redux/store';\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3EpRl\",\"formCard\":\"styles_formCard__128GU\",\"formRow\":\"styles_formRow__31I_A\",\"back\":\"styles_back__2acxp\",\"input-error\":\"styles_input-error__1SwWq\",\"error\":\"styles_error__10-bT\",\"disabledBtn\":\"styles_disabledBtn__3b7hK\",\"steps\":\"styles_steps__29JeH\",\"errorText\":\"styles_errorText__Ha8IR\",\"hideForm\":\"styles_hideForm__3in2Q\",\"showForm\":\"styles_showForm__105xC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__DKvey\",\"formCard\":\"styles_formCard__Vehpw\",\"formRow\":\"styles_formRow__13Stn\",\"back\":\"styles_back__3AVbA\",\"input-error\":\"styles_input-error__3FssS\",\"error\":\"styles_error__1A4Gx\",\"disabledBtn\":\"styles_disabledBtn__qMaBa\",\"steps\":\"styles_steps__2TgQb\",\"errorText\":\"styles_errorText__9D9Jp\",\"hideForm\":\"styles_hideForm__19FPq\",\"showForm\":\"styles_showForm__2S4hD\"};"],"sourceRoot":""}