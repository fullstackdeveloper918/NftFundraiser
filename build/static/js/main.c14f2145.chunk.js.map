{"version":3,"sources":["components/Create/styles/styles.module.scss","components/Signup/styles/styles.module.scss","redux/Slices/authSlice.js","components/Wallet/interact.js","redux/Actions/authAction.js","components/Header/Header.js","components/Hero/Hero.js","redux/Slices/projectSlice.js","redux/Actions/projectAction.js","components/Auctions/AuctionsOne.js","redux/Slices/fundraiserSlice.js","redux/Actions/fundraiserAction.js","components/TopSeller/topfundraiser.js","redux/Slices/popularCollectionSlice.js","redux/Actions/popularAction.js","components/Collections/Collections.js","components/Explore/ExploreOne.js","components/Work/Work.js","redux/Slices/footerSlice.js","redux/Actions/footerAction.js","components/Footer/Footer.js","components/Modal/ModalSearch.js","components/Modal/ModalMenu.js","components/Scrollup/Scrollup.js","themes/theme-one.js","components/Breadcrumb/Breadcrumb.js","components/Explore/ExploreTwo.js","themes/explore-one.js","components/Explore/ProjectList.js","themes/project-list.js","components/Explore/ExploreFive.js","components/Explore/LatestProjects.js","themes/latestProjects.js","themes/auctions.js","components/Explore/popularDetails.js","themes/item-details.js","components/Activity/Activity.js","themes/activity.js","components/Blog/Blog.js","themes/blog.js","components/Sidebar/Sidebar.js","components/BlogSingle/BlogSingle.js","themes/blog-single.js","components/HelpCenter/HelpCenter.js","components/Faq/Faq.js","themes/help-center.js","components/Authors/Authors.js","components/TopSeller/TopSellerTwo.js","themes/authors.js","components/Create/projectDetailpopup.js","components/AuthorProfile/userTransTable.js","components/AuthorProfile/userDetails.js","shared/Upload.js","utils/blobfromurl.js","components/Create/editBanner.js","components/AuthorProfile/AuthorProfile.js","components/Explore/ExploreSix.js","components/Author/Author.js","themes/author.js","components/Wallet/Wallet.js","themes/wallet-connect.js","components/Create/geoLocation.js","components/Create/Context/context.js","components/Create/Create.js","routers/utils.js","components/Create/createCollection.js","components/Loader/loader.js","components/Create/uploadNft.js","components/Create/index.js","themes/create.js","components/Login/Login.js","themes/login.js","components/Signup/FormCard.js","components/Signup/Context/context.js","components/Signup/Signup.js","components/Signup/createOrganization.js","components/Signup/index.js","themes/signup.js","redux/Slices/contactSlice.js","components/Contact/Contact.js","redux/Actions/contactAction.js","themes/contact.js","components/ForgotPassword/forgotPassword.js","themes/forgotpassword.js","routers/privateRoutes.js","Edit/editProject.js","themes/update.js","components/Footer/t&c.js","themes/term&cond.js","components/Explore/viewAllLatest.js","themes/viewalllatest.js","components/Collections/exploreCollection.js","themes/exploreCollections.js","components/Footer/about.js","themes/Aboutus.js","components/Auctions/projectnfts.js","components/ItemDetails/refralPopup.js","components/Create/editNft.js","components/Explore/nftdataTable.js","components/Explore/latProjNftdata.js","components/Explore/projDetailtable.js","readMore.js","components/ItemDetails/viewProdetails.js","themes/latproj-details.js","components/Create/showCollections.js","themes/showcollections.js","components/Create/bread-crumb.js","components/Create/collectionDetail.js","themes/collectn-details.js","components/Create/desPopup.js","components/Create/projdetails.js","themes/projnft-details.js","components/ItemDetails/nftPopup.js","components/ItemDetails/nftDetails.js","themes/nft-list.js","components/TopSeller/fundraiserdetail.js","components/TopSeller/fundPaymenttable.js","components/TopSeller/fundraiserDetails.js","themes/fund-detail.js","components/Auctions/nftBuy.js","themes/Latnft.js","ScrollToTop.js","components/Create/addNft.js","themes/addnftTheme.js","routers/routes.js","App.js","redux/store.js","index.js"],"names":["module","exports","userToken","localStorage","getItem","authSlice","createSlice","name","initialState","user","userdetail","role","logout","message","countries","states","city","annualRevenue","hereAbout","updpro","wallesign","organization","reducers","registerSuccess","state","action","payload","data","auth_token","setItem","registerFail","response","updateprofile","userDetail","loginSuccess","logoutSuccess","removeItem","forgotpasswordSuccess","createOrganizationSuccess","wallsignin","getCountryList","getStateList","getCityList","getAnnualRevenueList","getHearAboutList","authReducer","reducer","actions","createAlchemyWeb3","require","contractABI","isMetaMaskInstalled","Boolean","window","ethereum","web3","Roles","creatorWalletUpdate","formData","FormData","append","selectedAddress","config","headers","axios","post","process","UpdateWalletAddress","ConnectWallet","chainId","networkVersion","request","method","params","utils","toHex","code","chainName","nativeCurrency","decimals","symbol","rpcUrls","swal","addressArray","obj","status","address","res","target","href","getCurrentWalletConnected","length","UpdateStatus","id","token_id","transaction_hash","pay_from","pay_to","token","UpdateContract","collid","contractAddress","CreateMetaDataAndMint","_imgBuffer","_des","_name","setCurrent","nft_file_content","eth","Contract","abi","contract","sendTransaction","to","from","methods","mint","encodeABI","on","hash","receipt","confNumber","tokid","hexToNumber","logs","topics","transactionHash","error","success","alert","BuyNft","tokenId","payFrom","values","platformFee","sellingCount","ownerFee","flow","ownerWallet","nftContract","getTransactionCount","amountToSendPlatform","amountToSendowner","memory_clients","memory_amounts","toWei","transferowner","buyNft","console","log","then","Register","createAsyncThunk","thunkAPI","Authorization","transformRequest","dispatch","location","GetUserAction","get","CountryList","StateList","CityList","Header","useDispatch","useState","setAddress","add1","slice","toUpperCase","add2","userRole","useSelector","history","useHistory","getSelectedAddress","useEffect","accounts","userdet","WalletHandler","is_new_user","title","text","icon","buttons","continue","skip","value","push","className","src","alt","onClick","Swal","fire","html","showCloseButton","focusConfirm","confirmButtonText","confirmButtonAriaLabel","style","color","type","class","left","username","email","Hero","options","enableHighAccuracy","timeout","maximumAge","pos","crd","coords","latitude","longitude","errors","err","warn","navigator","geolocation","permissions","query","result","getCurrentPosition","onchange","xmlns","viewBox","version","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fill","fillRule","points","dur","repeatCount","attributeName","projectSlice","project","projects","nftlist","projectdetails","latestprojectdetails","categories","collections","getcollections","getcollectiondetails","collectiondetails","getSocialmediaIcons","getfundProjDetails","getnftwoldetails","settings","nftadd","nftres","nftupdate","updbanner","liveProjects","LatestProjects","RecentCampaigns","createProjectSuccess","createCollectionSuccess","getCollections","getsocial","getCollectionDetails","getNftwolDetails","nftUpd","nftAdd","getfundprojdetails","getProjectList","getCategoriesList","getSettings","getLatestProjectList","createFail","getProjectDetail","getCollectionDetail","Nftres","getNftList","getLatestProjectDetail","updatebanner","publicLiveProjects","deleteProject","filter","item","projectReducer","CreateProjectAction","setLoading","ProjectDetail","LatestProjectDetail","NftList","uploadNFT","catch","getPublicLiveProjects","projectType","UpdateProject","props","CategoriesAction","GetCollectionsAction","UpdateNft","nft_id","AddNftAction","projectTypesMap","AuctionsOne","key","cursor","match","join","map","idx","nft_data","image","date","user_data","avatar","price","number_of_nft","fundraiserSlice","fundraiser","fundraiserdetail","getTopFundraiser","getTopFundraiserDetail","fundraiserReducer","TopFundraiserAction","Fundraiser","fund","user_id","amount","collectionSlice","collection","collectiondetail","getPopularCollection","getPopularCollectiondetails","collectionReducer","PopularCollectionAction","PopularCollectionActionDetails","Collections","coll","initData","pre_heading","heading","btn_1","btn_2","img","owner","count","btnText","Component","preHeading","workData","Work","footerSlice","footer","aboutus","getfooter","getabout","footerReducer","getFooter","AboutUsAction","Footer","ModalSearch","placeholder","ModalMenu","Scrollup","Home","Breadcrumb","this","subpage","page","ExploreTwo","exploreData","setState","ExploreOne","GetAllProjects","Map","description","content","LatestProject","Auctions","PopularDetails","useParams","populardetail","dangerouslySetInnerHTML","__html","ItemDetails","Activity","tabData_1","tabData_2","tabData_3","filterData","tabTitle_1","tabTitle_2","tabTitle_3","time","seller","widgetTitle","Blog","blogData","author","Sidebar","widgetData_1","widgetData_2","widgetData_3","widgetTitle_1","widgetTitle_2","widgetTitle_3","BlogSingle","content_1","quote","content_2","content_3","rel","dateTime","commentTitle","commentContent","required","rows","defaultValue","commentBtn","HelpCenter","btnClass","contentId","contentClass","Faq","Authors","authorData","TopSeller","sellerData","ProjDetailPopup","useRef","useForm","register","handleSubmit","formState","setValue","control","watch","setDescription","setType","country","setCountry","setCity","handleChangeCountry","event","preventDefault","currentTarget","handleChangeState","handleChangeCity","cities","projdetail","cat","Object","keys","start_date","end_date","category_id","Modal","size","centered","onHide","Body","onSubmit","render","field","onChange","onBlur","ref","disabled","selected","option","min","max","today","Date","dd","String","getDate","padStart","mm","getMonth","getFullYear","disablePastDate","UserdataTable","Panel","Collapse","React","expandIconPosition","defaultActiveKey","header","Table","responsive","wallet_id","reffers","total_fundraised","UserTransdataTable","payment_history","items","project_id","txd_id","UploadImage","initalImag","setImageSrc","imageSrc","initialImage","show","borderRadius","language","width","height","objectFit","compressInitial","hideDownloadBtn","imageSrcProp","imageChanged","newDataUri","dataURLtoBlob","dataurl","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","Banner","Title","Upload","Button","UpdateBanner","AuthorProfile","setModalSho","focusable","d","filter_1","filter_2","filter_3","filter_4","filter_5","group","likes","Author","Wallet","handleConnect","walletData","WalletConnect","Geonames","lan","encoding","FormContext","createContext","FormProvider","children","setData","Provider","setFormValues","prevValues","useFormData","useContext","Create","current","next","prev","editor","mode","styles","showForm","hideForm","e","defaultChecked","htmlFor","pattern","tabIndex","newContent","step","TOKEN_KEY","MyVerticallyCenteredModal","dat","Loader","Spinner","animation","margin","display","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","UploadNft","previewOpen","setPreviewOpen","previewImage","setPreviewImage","previewTitle","setPreviewTitle","setCount","modalShow","setModalShow","nft_collection_id","setNft_collection_id","coll_id","loading","defaultValues","setNft_description","col","lat","onFinish","nftImagepromises","nfts","x","nft_image","all","imagesRes","addedImage","image_hash","nft_name","nft_description","handleCancel","handlePreview","url","preview","originFileObj","substring","lastIndexOf","fileProps","multiple","beforeUpload","info","Form","form","initialValues","autoComplete","List","fields","add","remove","index","restField","Item","rules","MinusCircleOutlined","prevCount","background","marginBottom","variant","previ","onHandleClick","border","listType","onPreview","maxCount","open","onCancel","block","PlusOutlined","transform","steps","UploadNftIndex","Login","login","password","FormCard","currentStep","prevFormStep","formSchema","Yup","shape","confirm_password","oneOf","Signup","formStep","nextFormStep","resolver","yupResolver","errMessage","errmessage","validate","val","CreateOrganization","goBack","socialmedia","banner_image","logo","goal","organization_name","tax_id","social","social_link","disp","SignupIndex","setFormStep","contactSlice","contact","postContact","Contact","subject","ContactAction","cols","ForgotPassword","forgotpassword","statusCode","Forgot","PrivateRoute","component","rest","restricted","EditProject","ProjectUpdate","TermsConditions","TermsCond","ExploreAll","All","AllCollections","ColExplore","AboutUs","about","Aboutus","ProjNFTS","latprojdetail","marginLeft","userRef","TwitterShareButton","TwitterIcon","round","FacebookShareButton","FacebookIcon","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","EmailIcon","EditNft","modalShowcoll","setModalShowcoll","setImage","nftdetail","setFieldsValue","collection_id","NftdataTable","collectionData","contract_id","LatNftdataTable","project_activity","nft_title","ProjdataTable","modalShowproj","setModalShowproj","country_name","debugger","dayjs","created_at","format","state_name","city_name","ReadMore","isReadMore","setIsReadMore","ProjDetails","modalShowrefer","setModalShowrefer","referrer_id","organization_detail","selling_amount","ProgressBar","varient","now","project_percentage","latprojDetails","ShowCollections","Showcollections","CollItem","CollectionDetails","coldetail","GetCollectionDetails","CollectionDetail","DesPopup","ProjNftDetails","modalShowedit","setModalShowedit","modalShowDes","setModalShowDes","is_mint","ProjNft","NftPopup","Step","Steps","closeButton","direction","LoadingOutlined","CheckOutlined","NftDetails","Web3","providers","HttpProvider","deployContract","MyNFTContract","NFTContract","getGasPrice","deploy","bytecode","arguments","send","deployAndMint","project_status","Nft","FunddataTable","funddetail","tax_number","web_url","FundTransdataTable","FundraiserDetail","fundprojdetail","TopFundraiserDetail","GetfundraiserProject","date1","time_difference","getTime","days_difference","Math","ceil","FundDetail","LatprojNftDetails","ownwallet","latprojnftdetail","find","GetNftwol","Class","selling_count","payment_flow","karmatica_fee","project_data","fees","wallets","buyHandler","latnftprojDetails","ScrollToTop","useLocation","scrollTo","AddNft","AddNFT","MyRouts","exact","path","ThemeOne","ExploreFour","App","combineReducers","createproject","latestprojects","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c14f2145.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__DKvey\",\"formCard\":\"styles_formCard__Vehpw\",\"formRow\":\"styles_formRow__13Stn\",\"back\":\"styles_back__3AVbA\",\"input-error\":\"styles_input-error__3FssS\",\"error\":\"styles_error__1A4Gx\",\"disabledBtn\":\"styles_disabledBtn__qMaBa\",\"steps\":\"styles_steps__2TgQb\",\"errorText\":\"styles_errorText__9D9Jp\",\"hideForm\":\"styles_hideForm__19FPq\",\"showForm\":\"styles_showForm__2S4hD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3EpRl\",\"formCard\":\"styles_formCard__128GU\",\"formRow\":\"styles_formRow__31I_A\",\"back\":\"styles_back__2acxp\",\"input-error\":\"styles_input-error__1SwWq\",\"error\":\"styles_error__10-bT\",\"disabledBtn\":\"styles_disabledBtn__3b7hK\",\"steps\":\"styles_steps__29JeH\",\"errorText\":\"styles_errorText__Ha8IR\",\"hideForm\":\"styles_hideForm__3in2Q\",\"showForm\":\"styles_showForm__105xC\"};","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\nconst userToken = localStorage.getItem('authToken')\r\n    // ? JSON.parse(localStorage.getItem('user'))\r\n    ? localStorage.getItem('authToken')\r\n    : null\r\n\r\nconst authSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: {},\r\n        userdetail: [],\r\n        userToken,\r\n        role: null,\r\n        // wallToken,\r\n        logout: {},\r\n        message: {},\r\n        countries: [],\r\n        states: [],\r\n        city: [],\r\n        annualRevenue: [],\r\n        hereAbout: [],\r\n        updpro: [],\r\n        wallesign: [],\r\n        organization: false\r\n    },\r\n    reducers: {\r\n        registerSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.userToken = action.payload.data.data.auth_token;\r\n            state.role = action.payload.data.data.role;\r\n            localStorage.setItem('authToken', action.payload.data.data.auth_token)\r\n        },\r\n        registerFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        updateprofile: (state, action) => {\r\n            // \r\n            state.updpro = action?.payload?.data?.data;\r\n        },\r\n        userDetail: (state, action) => {\r\n            // \r\n            state.userdetail = action.payload.data.data\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.role = action.payload?.data?.data?.role;\r\n            state.message = action.payload?.data?.message\r\n            state.userToken = action.payload?.data?.data?.auth_token;\r\n            localStorage.setItem('authToken', action.payload?.data?.data?.auth_token)\r\n        },\r\n        logoutSuccess: (state) => {\r\n            localStorage.removeItem('authToken')\r\n            state.user.role = null\r\n            state.userToken = null\r\n        },\r\n        forgotpasswordSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.message = action.payload.data.message\r\n\r\n        },\r\n        createOrganizationSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.organization = true\r\n        },\r\n        wallsignin: (state, action) => {\r\n            state.wallesign = action.payload?.data?.data;\r\n        },\r\n        getCountryList: (state, action) => {\r\n            state.countries = action.payload;\r\n        },\r\n        getStateList: (state, action) => {\r\n            state.states = action.payload;\r\n        },\r\n        getCityList: (state, action) => {\r\n            state.city = action.payload;\r\n        },\r\n\r\n        getAnnualRevenueList: (state, action) => {\r\n            state.annualRevenue = action.payload;\r\n        },\r\n\r\n        getHearAboutList: (state, action) => {\r\n            state.hereAbout = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer\r\n\r\nexport const {\r\n    registerSuccess,\r\n    createOrganizationSuccess,\r\n    getCountryList,\r\n    getStateList,\r\n    getCityList,\r\n    getAnnualRevenueList,\r\n    getHearAboutList,\r\n    loginSuccess,\r\n    forgotpasswordSuccess,\r\n    logoutSuccess,\r\n    registerFail,\r\n    userDetail,\r\n    wallsignin,\r\n    updateprofile\r\n} = authSlice.actions;","import { create } from 'ipfs-http-client'\r\nimport { useHistory } from 'react-router-dom'\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport { walletSignin } from '../../redux/Actions/authAction';\r\nimport { object } from 'yup';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// const contractABI = require('../../src/backend/contracts/artWork.sol/NFTContract.json')\r\nconst contractABI = require('../../backend/contracts/artWork.sol/NFTContract.json')\r\n\r\n// const contractAddress = \"0xE915A57e52A1f5a432b15727EA79e2542d435087\";\r\n// connect to a different API\r\n// const ipfsClient = create('http://127.0.0.1:5001')\r\n\r\nfunction isMetaMaskInstalled() {\r\n  return Boolean(window.ethereum);\r\n}\r\n\r\nconst ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n// const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n// const ipfsBaseUrl = ('http://208.113.134.142:8080/')\r\n// const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\n\r\nexport const Roles = {\r\n  \"ADMIN\":1,\r\n  \"BUYER\":2,\r\n  \"CREATOR\":3\r\n}\r\n\r\nexport const creatorWalletUpdate = async (auth_token) => {\r\n  try {\r\n    \r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/wallet/connect`,\r\n      formData, config\r\n    )\r\n    \r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n}\r\n\r\nexport const UpdateWalletAddress = async (role,auth_token = null) => {\r\n  try {\r\n    \r\n    const formData = new FormData();\r\n \r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    formData.append('role',Roles[role])\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/sign_in`,\r\n      formData, config\r\n    )\r\n    \r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n};\r\n\r\nexport const ConnectWallet = async (role) => {\r\n\r\n  const chainId = 80001// Polygon Mainnet\r\n\r\n  if (window?.ethereum?.networkVersion !== chainId) {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: web3.utils.toHex(chainId) }]\r\n      });\r\n\r\n    } catch (err) {\r\n      // This error code indicates that the chain has not been added to MetaMask\r\n      if (err.code === 4902) {\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainName: 'Mumbai Testnet',\r\n              chainId: web3.utils.toHex(chainId),\r\n              nativeCurrency: { name: 'MATIC', decimals: 18, symbol: 'MATIC' },\r\n              rpcUrls: ['https://rpc-mumbai.maticvigil.com/']\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  }\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n\r\n    if (window.ethereum) {\r\n      try {\r\n        const addressArray = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: web3.utils.toHex('80001') }],\r\n        })\r\n\r\n        const obj = {\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n          address: addressArray[0],\r\n        };\r\n\r\n        const res = await UpdateWalletAddress(role) \r\n        return {\r\n          ...obj,\r\n          res\r\n        }\r\n\r\n      } catch (err) {\r\n        return {\r\n          address: \"\",\r\n          status: \"😥 \" + err.message,\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        address: \"\",\r\n        status: (\r\n          <span>\r\n            <p>\r\n              {\" \"}\r\n              🦊{\" \"}\r\n              <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n                You must install Metamask, a virtual Ethereum wallet, in your\r\n                browser.\r\n              </a>\r\n            </p>\r\n          </span>\r\n        ),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      // \r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      // console.log(addressArray, 'address')\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n          status: \"🦊 Connect to Metamask using the top right button.\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\n\r\n\r\nconst UpdateStatus = async ({ id, token_id, transaction_hash, pay_from, pay_to }) => {\r\n\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('is_mint', '1');\r\n    formData.append('token_id', token_id);\r\n    formData.append('transaction_hash', transaction_hash);\r\n    formData.append('pay_from', pay_from);\r\n    formData.append('pay_to', pay_to);\r\n\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/NftUpdate/${id}`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nconst UpdateContract = async (collid, contractAddress) => {\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('contract_id', contractAddress);\r\n\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${collid}`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const sendFileToIPFS = async (fileImg) => {\r\n  if (fileImg) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", fileImg);\r\n\r\n      const resFile = await axios({\r\n        method: \"post\",\r\n        url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\r\n        data: formData,\r\n        headers: {\r\n          'pinata_api_key': `${process.env.REACT_APP_PINATA_API_KEY}`,\r\n          'pinata_secret_api_key': `${process.env.REACT_APP_PINATA_API_SECRET}`,\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        },\r\n      });\r\n\r\n      const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n\r\n      return ImgHash\r\n\r\n    } catch (error) {\r\n      // console.log(\"Error sending File to IPFS: \")\r\n      // console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const CreateMetaDataAndMint = async ({ id, _imgBuffer, _des, _name, setCurrent, contractAddress, collid, nft_file_content }) => {\r\n\r\n  // const metaDataObj = {\r\n  //   name: _name,\r\n  //   description: _des,\r\n  //   image: _imgBuffer,\r\n  // }\r\n\r\n  // const addedMetaData = await nft_file_content(JSON.stringify(metaDataObj));\r\n\r\n  const contract = await\r\n    new web3.eth.Contract(contractABI.abi, contractAddress);//loadContract();\r\n  // new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\");//loadContract();\r\n\r\n  try {\r\n    let txHash = null\r\n\r\n    // const web3 = new Web3(window.ethereum);\r\n\r\n    await web3.eth.sendTransaction({\r\n      to: contractAddress, // Required except during contract publications.\r\n      // to: \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\", // Required except during contract publications.\r\n      from: window.ethereum.selectedAddress,\r\n      data: contract.methods.mint(nft_file_content).encodeABI() //make call to NFT smart contract\r\n    })\r\n      .on('transactionHash', function (hash) {\r\n        txHash = hash\r\n\r\n        // console.log('txhash11', txHash)\r\n\r\n        setCurrent(1)\r\n      })\r\n      .on('receipt', function (receipt) {\r\n        // console.log(receipt, 'recipt')\r\n        // console.log(receipt.logs[0].topics[3])\r\n        setCurrent(1)\r\n      })\r\n      .on('confirmation', async (confNumber, receipt) => {\r\n        if (confNumber == 1) {\r\n          await UpdateContract(collid, contractAddress)\r\n          // await UpdateContract(collid, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n          const tokid = web3.utils.hexToNumber(receipt.logs[0].topics[3])\r\n\r\n          await UpdateStatus({ id, token_id: tokid, transaction_hash: receipt.transactionHash, pay_from: receipt.from, pay_to: receipt.to })\r\n          setCurrent(2)\r\n\r\n          // console.log('tokid', tokid)\r\n        }\r\n      })\r\n      .on('error', function (error) {\r\n\r\n      })\r\n\r\n    // \r\n    // console.log('txHash', txHash)\r\n    return {\r\n      success: true,\r\n      // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n      status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n    }\r\n  } catch (error) {\r\n    // \r\n    alert(\"went wrong\")\r\n    return {\r\n      success: false,\r\n      status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n    }\r\n  }\r\n}\r\n\r\nexport const BuyNft = async ({ contractAddress, tokenId, payFrom, values, platformFee, sellingCount, ownerFee, flow, ownerWallet }) => {\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n    try {\r\n\r\n\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      const obj = {\r\n        status: \"👆🏽 Write a message in the text-field above.\",\r\n        address: addressArray[0],\r\n      };\r\n\r\n      const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n      const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n      const amountToSendPlatform = ((`${platformFee[0]}` / 100) * 0.03)\r\n      const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n      // // const amountToSend = (amountToSendPlatform - amount, \"either\")\r\n      // const amountToSend = (0.0005)\r\n      // const amountToSend = ; // Convert to wei value\r\n      const memory_clients = ['0x2Aaab1bd336819948C3286cE92034CdB95137D8b', ownerWallet[0]]\r\n      const memory_amounts = [web3.utils.toWei(`${amountToSendPlatform}`, \"ether\"), web3.utils.toWei(`${amountToSendowner}`, \"ether\")]\r\n\r\n      const transferowner = {\r\n        'from': window.ethereum?.selectedAddress,\r\n        'to': contractAddress,\r\n        // 'to': \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\",\r\n        // 'value': web3.utils.toWei(`${values}`),\r\n        'value': web3.utils.toWei('0.03', 'ether'),\r\n        // 'input': nftContract.methods.buyNft(contractAddress, tokenId).encodeABI()\r\n        'input': nftContract.methods.buyNft(contractAddress, tokenId, memory_clients, memory_amounts).encodeABI()\r\n      };\r\n\r\n      // const txHash = await web3.eth.sendTransaction(tx)\r\n\r\n      // console.log('txhash', txHash)\r\n      await web3.eth.sendTransaction(transferowner)\r\n        .on('transactionHash', function (hash) {\r\n          let txHash = hash\r\n          // console.log('tx', txHash)\r\n\r\n\r\n        })\r\n        .on('receipt', function (receipt) {\r\n          // console.log(receipt, 'recipt')\r\n        })\r\n        .on('confirmation', async (confNumber, receipt) => {\r\n          // \r\n          console.log(receipt, 'conf')\r\n          // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n          // setModeShow(false)\r\n\r\n          // modalShow(false)\r\n        })\r\n        .on('error', function (error) {\r\n\r\n        })\r\n        .then(function (receipt) {\r\n          // will be fired once the receipt is mined\r\n        })\r\n    } catch (error) {\r\n      // \r\n      alert(error)\r\n\r\n    }\r\n  }\r\n}","import axios from \"axios\";\r\nimport { createOrganizationSuccess, getAnnualRevenueList, getCityList, getCountryList, getHearAboutList, getStateList, loginSuccess, registerFail, registerSuccess, updateprofile, userDetail, wallsignin, } from \"../Slices/authSlice\";\r\nimport swal from \"sweetalert\";\r\n// import { useNavigate } from 'react-router-dom';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { creatorWalletUpdate } from \"../../components/Wallet/interact\";\r\n\r\nexport const Register = createAsyncThunk(\r\n    \"auth/register\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const token = localStorage.getItem('authToken')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                transformRequest: formData => formData\r\n            }\r\n\r\n            //create oraginization creator login\r\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/signup`,\r\n                params, config)\r\n\r\n            await creatorWalletUpdate(res?.data?.data?.auth_token)\r\n\r\n            thunkAPI.dispatch(loginSuccess(res));\r\n\r\n            if (res.status === 200) {\r\n                swal(\"success\", res.data.message, 'success').then(function () {\r\n                    window.location = \"/\";\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data) {\r\n                if (e?.response?.data.message) {\r\n\r\n                    swal('error', e?.response?.data?.message, 'error')\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\nexport const LoginAction = (params, history) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/organization_signin`,\r\n            params, config)\r\n\r\n        dispatch(loginSuccess(res));\r\n\r\n    } catch (e) {\r\n\r\n        if (e?.response?.data.message) {\r\n\r\n            swal('error', e?.response?.data?.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ForgotPasswordAction = (params) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/forgot_pssword`,\r\n            params, config)\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = \"/login\";\r\n            });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetUserAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getUserDetails`,\r\n            config)\r\n        // console.log('userres', res)\r\n        dispatch(userDetail(res));\r\n\r\n    } catch (e) {\r\n        // \r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CreateOrganizationAction = (params) => async dispatch => {\r\n    // \r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\r\n            params, config)\r\n\r\n        dispatch(createOrganizationSuccess(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error').then(function () {\r\n                // dispatch(ProjectDetail(params))\r\n                window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const CountryList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCountryList`,\r\n            config)\r\n        dispatch(getCountryList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const StateList = (formData) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getStateById`,\r\n            formData, config)\r\n        // debugger\r\n        dispatch(getStateList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CityList = (formData) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getCityById`,\r\n            formData, config)\r\n        dispatch(getCityList(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AnnualRevenueList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAnnualRevenueList`,\r\n            config)\r\n        dispatch(getAnnualRevenueList(res));\r\n    } catch (e) {\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const HearAboutList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getHearAboutList`,\r\n            config)\r\n        dispatch(getHearAboutList(res));\r\n    } catch (e) {\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const walletSignin = (params, history) => async dispatch => {\r\n\r\n    // \r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', params);\r\n    // \r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    try {\r\n        // const token = localStorage.getItem('authToken')\r\n        // const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                // Authorization: `Bearer ${token}`\r\n            },\r\n\r\n            // transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/sign_in`,\r\n            formData, config)\r\n        console.log(res, 'signres')\r\n        dispatch(wallsignin(res));\r\n        if (res.status == 200) {\r\n            localStorage.setItem('auth_token', res.data.data.auth_token)\r\n\r\n            if (res.data.data.role == 3) {\r\n                history.push('/projectlist')\r\n            } else {\r\n                if (res.data.data.role == 2) {\r\n                    history.push('/profile')\r\n\r\n                }\r\n            }\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const UpdateProfileAction = (formData) => async dispatch => {\r\n\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/profileUpdate`,\r\n            formData, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        await dispatch(updateprofile(res));\r\n\r\n        if (res.status === 200) {\r\n            swal(\"success\", \"updated\", 'success')\r\n            // .then(function () {\r\n            // dispatch(ProjectDetail(params))\r\n            // window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport swal from 'sweetalert';\r\nimport { loginSuccess, logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\nimport { isCancel } from 'axios';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const [address, setAddress] = useState(null)\r\n\r\n    const add1 = address?.slice(0, 4).toUpperCase()\r\n    const add2 = address?.slice(35, 44).toUpperCase()\r\n\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n        setAddress(null)\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n        getCurrentWalletConnected()\r\n        setAddress(getSelectedAddress)\r\n\r\n        if (window.ethereum) {\r\n            window.ethereum.on('accountsChanged', function (accounts) {\r\n                if (!accounts.length) {\r\n                    setAddress(null)\r\n                    //  setIsLoggedIn(false)\r\n                    localStorage.removeItem('auth_token')\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [dispatch, address])\r\n\r\n    function getSelectedAddress() {\r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    const WalletHandler = async () => {\r\n        const response = await ConnectWallet(\"BUYER\")\r\n        const { res } = response\r\n\r\n        // debugger\r\n        if (!res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            history.push('/all/LatestProjects')\r\n        }\r\n        else if (res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n\r\n            // swal({\r\n            //     title: \"Are you sure?\",\r\n            //     text: \"You will  be able to add it back again!\",\r\n            //     type: \"warning\",\r\n            //     showCancelButton: true,\r\n            //     confirmButtonColor: \"#DD6B55\",\r\n            //     confirmButtonText: \"Yes, delete it!\",\r\n            //     cancelButtonText: \"Cancel\",\r\n            //     closeOnConfirm: false,\r\n            //     closeOnCancel: false\r\n            // },\r\n            //     function (isConfirm) {\r\n            //         if (isConfirm) {\r\n            //             window.location = '/profile'\r\n            //         } else {\r\n            //             if (isCancel) {\r\n            //                 window.location = '/projectlist'\r\n            //             }\r\n            //         }\r\n            //     });\r\n            swal({\r\n                title: \"Welcome to Karmatica!!!\",\r\n                text: \"Karmatica would like to know more about yourself. Update your profile\",\r\n                icon: \"success\",\r\n                buttons: {\r\n                    continue: '',\r\n                    skip: '',\r\n                }\r\n            }).then((value) => {\r\n                switch (value) {\r\n                    case \"continue\":\r\n                        window.location = '/profile'\r\n                        break;\r\n\r\n                    case \"skip\":\r\n                        window.location = '/projectlist'\r\n                        break;\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n        else if (!res?.data?.data?.is_new_user && Roles[\"CREATOR\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        else if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: true,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n        else if (!userToken) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: true,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <header id=\"header\">\r\n            {/* Navbar */}\r\n            <nav data-aos=\"zoom-out\" data-aos-delay={800} className=\"navbar navbar-expand\">\r\n                <div className=\"container header\">\r\n                    {/* Navbar Brand*/}\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        <img className=\"navbar-brand-sticky desktop_logo\" src=\"/img/karmatica.png\" alt=\"karmatica\" />\r\n                        <img className=\"mobile-logo\" src=\"/img/logo.png\" alt=\"\" />\r\n                    </Link>\r\n                    <div className=\"ml-auto\" />\r\n                    {/* Navbar */}\r\n                    <ul className=\"navbar-nav items mx-auto\">\r\n                        <li className=\"nav-item dropdown\">\r\n                            <Link className=\"nav-link\" to=\"/\">Explore</Link>\r\n                        </li>\r\n                        {/* {log !== null && ( */}\r\n                        <li className=\"nav-item\">\r\n                            <a onClick={handleCreate} className=\"nav-link\">Create</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to={`/all/${\"LatestProjects\"}`} className=\"nav-link\">Latest Projects</Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Navbar Toggler */}\r\n                    <ul className=\"navbar-nav toggle\">\r\n                        <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#menu\">\r\n                                <i className=\"fas fa-bars toggle-icon m-0\" />\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Navbar Action Button */}\r\n                    {/* Navbar Action Button */}\r\n                    <ul className=\"navbar-nav action\">\r\n                        {address &&\r\n                            <li className=\"nav-item mr-2\">\r\n                                <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />{add1}...{add2}</a>\r\n                            </li>\r\n                        }\r\n                        {!address &&\r\n                            <li className=\"nav-item ml-3\">\r\n                                <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />CONNECT WALLET</a>\r\n                            </li>\r\n                        }\r\n                    </ul>\r\n                    {userToken ? (\r\n                        <>\r\n                            <div className=\"dropdown\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <i className=\"fa fa-solid fa-user\"></i>\r\n                                </button>\r\n                                <ul class=\"creator-dropdown dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\" style={{ left: '-37%' }}>\r\n                                    <li>{userdet?.username}</li>\r\n                                    <li>{userdet?.email}</li>\r\n                                    <li><button type='button' class=\"dropdown-item\"><a href='/profile'>My Profile</a></button></li>\r\n                                    <li><button type='button' class=\"dropdown-item\"><a href='/projectlist'>My Projects</a></button></li>\r\n                                    <li><button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'>Logout</a></button></li>\r\n                                </ul>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <ul className=\"navbar-nav action\">\r\n                            <li className=\"nav-item ml-3\">\r\n                                <a className=\"creator-button btn ml-md-auto btn-bordered-white\"\r\n                                    onClick={() => history.push('/wallet-connect')}><i className=\"fa fa-user\" />\r\n                                    <div>CREATOR</div></a>\r\n                                {/* <Link to=\"/login\" className=\"creator-button btn ml-md-auto btn-bordered-white\">\r\n                                    <i className=\"fa fa-user\" />\r\n                                    <div>CREATOR</div>\r\n                                </Link> */}\r\n                            </li>\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { Roles } from '../Wallet/interact';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Hero = () => {\r\n    const history = useHistory()\r\n\r\n    var options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0,\r\n    };\r\n\r\n    function success(pos) {\r\n        var crd = pos.coords;\r\n\r\n        // console.log(\"Your current position is:\");\r\n        // console.log(`Latitude : ${crd.latitude}`);\r\n        // console.log(`Longitude: ${crd.longitude}`);\r\n        // console.log(`More or less ${crd.accuracy} meters.`);\r\n        localStorage.setItem('latitude', `${crd.latitude}`);\r\n        localStorage.setItem('longitude', `${crd.longitude}`);\r\n        // setLatitude(`${crd.latitude}`)\r\n        // setLongitude(`${crd.longitude}`)\r\n    }\r\n\r\n    function errors(err) {\r\n        console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const currentLocation = () => {\r\n        // \r\n        if (navigator.geolocation) {\r\n            navigator.permissions\r\n                .query({ name: \"geolocation\" })\r\n                .then(function (result) {\r\n                    if (result.state === \"granted\") {\r\n                        // console.log(result.state);\r\n                        //If granted then you can directly call your function here\r\n                        navigator.geolocation.getCurrentPosition(success);\r\n                    } else if (result.state === \"prompt\") {\r\n                        navigator.geolocation.getCurrentPosition(success, errors, options);\r\n                    } else if (result.state === \"denied\") {\r\n                        //If denied then you have to show instructions to enable location\r\n                    }\r\n                    result.onchange = function () {\r\n                        // console.log(result.state);\r\n                    };\r\n                });\r\n        } else {\r\n            alert(\"Sorry Not available!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        currentLocation()\r\n    }, [])\r\n\r\n    const handleCreate = () => {\r\n        if (Roles[\"CREATOR\"] == userRole) {\r\n            history.push('/create')\r\n        }\r\n        if (Roles[\"BUYER\"] == userRole) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: true,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        } \r\n        else if(!userToken) {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                  'You need to Signup as a Creator to Create a Project',\r\n                showCloseButton: true,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                  '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section className=\"hero-section\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6 col-lg-7\">\r\n\r\n                        <h1 className=\"mt-4\">Invest in NFTs to help fund projects and earn income.</h1>\r\n                        {/* <p>Earn rewards by referring your friends.</p> */}\r\n                        {/* Buttons */}\r\n                        <div className=\"button-group\">\r\n                            <a className=\"btn btn-bordered-white\" href={`/all/${\"LatestProjects\"}`}><i className=\"icon-rocket mr-2\" />Explore</a>\r\n                            <a className=\"btn btn-bordered-white\" onClick={handleCreate}><i className=\"icon-note mr-2\" />Create </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Shape */}\r\n            <div className=\"shape\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                    <defs>\r\n                        <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                            <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                            <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                        <polygon points fill=\"url(#linearGradient-1)\">\r\n                            <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                        </polygon>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Hero;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\nconst userToken = localStorage.getItem('authToken')\r\n    // ? JSON.parse(localStorage.getItem('user'))\r\n    ? localStorage.getItem('authToken')\r\n    : null\r\nconst projectSlice = createSlice({\r\n    name: 'project',\r\n\r\n    initialState: {\r\n        project: [],\r\n        projects: [],\r\n        nftlist: [],\r\n        projectdetails: [],\r\n        latestprojectdetails: [],\r\n        categories: [],\r\n        collections: [],\r\n        getcollections: [],\r\n        getcollectiondetails: [],\r\n        collectiondetails: [],\r\n        getSocialmediaIcons: [],\r\n        getfundProjDetails: [],\r\n        getnftwoldetails: [],\r\n        settings: [],\r\n        nftadd: [],\r\n        nftres: [],\r\n        nftupdate: [],\r\n        updbanner: [],\r\n        // liveProjects: [],\r\n        liveProjects: {\r\n            LatestProjects: [],\r\n            RecentCampaigns: []\r\n        },\r\n        message: {},\r\n    },\r\n    reducers: {\r\n        createProjectSuccess: (state, action) => {\r\n            state.project = action.payload;\r\n        },\r\n        createCollectionSuccess: (state, action) => {\r\n            state.collections = action.payload;\r\n        },\r\n        getCollections: (state, action) => {\r\n            // \r\n            state.getcollections = action?.payload?.data?.data;\r\n        },\r\n        getSocialmediaIcons: (state, action) => {\r\n            // \r\n            state.getsocial = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetails: (state, action) => {\r\n            // \r\n            state.getcollectiondetails = action?.payload?.data?.data;\r\n        },\r\n        getNftwolDetails: (state, action) => {\r\n            // \r\n            state.getnftwoldetails = action?.payload?.data?.data;\r\n        },\r\n        nftUpd: (state, action) => {\r\n            // \r\n            state.nftupdate = action?.payload?.data?.data;\r\n        },\r\n        nftAdd: (state, action) => {\r\n            // \r\n            state.nftadd = action?.payload?.data?.data;\r\n        },\r\n        getfundprojdetails: (state, action) => {\r\n            // \r\n            state.getfundProjDetails = action?.payload?.data?.data;\r\n        },\r\n        getProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        getCategoriesList: (state, action) => {\r\n            state.categories = action?.payload?.data?.data;\r\n        },\r\n        getSettings: (state, action) => {\r\n            state.settings = action?.payload?.data?.data;\r\n        },\r\n\r\n        getLatestProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        createFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        getProjectDetail: (state, action) => {\r\n            // \r\n            state.projectdetails = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetail: (state, action) => {\r\n            // \r\n            state.collectiondetails = action?.payload?.data?.data;\r\n        },\r\n        Nftres: (state, action) => {\r\n            // \r\n            state.nftres = action?.payload?.data?.data;\r\n        },\r\n        getNftList: (state, action) => {\r\n            // \r\n            state.nftlist = action?.payload?.data?.data;\r\n        },\r\n        getLatestProjectDetail: (state, action) => {\r\n            // \r\n            state.latestprojectdetails = action?.payload?.data?.data;\r\n        },\r\n        updatebanner: (state, action) => {\r\n            // \r\n            state.updbanner = action?.payload?.data?.data;\r\n        },\r\n        publicLiveProjects: (state, action) => {\r\n            state.liveProjects[action.payload.type] = action.payload.res.data.data.data\r\n            // state.liveProjects = action.payload.data.data.data\r\n            // state.liveProjects['R'] = action.payload.data.data.data\r\n        },\r\n        deleteProject: (state, action) => {\r\n            const { id } = action.payload?.data?.data;\r\n            state.projects = state.projects.filter(item => item.id !== id)\r\n        }\r\n    },\r\n});\r\n\r\nexport const projectReducer = projectSlice.reducer\r\n\r\nexport const {\r\n    createProjectSuccess,\r\n    getProjectList,\r\n    getProjectDetail,\r\n    getLatestProjectDetail,\r\n    publicLiveProjects,\r\n    createCollectionSuccess,\r\n    deleteProject,\r\n    createFail,\r\n    getLatestProjectList,\r\n    getCategoriesList,\r\n    getCollections,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getCollectionDetail,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    Nftres,\r\n    updatebanner,\r\n    nftUpd,\r\n    nftAdd\r\n} = projectSlice.actions;","import axios from \"axios\";\r\nimport {\r\n    createProjectSuccess,\r\n    deleteProduct,\r\n    getProjectDetail,\r\n    getProjectList,\r\n    createFail,\r\n    publicLiveProjects,\r\n    deleteProject,\r\n    getLatestProjectList,\r\n    getTopFundraiser,\r\n    getLatestProjectDetail,\r\n    getCategoriesList,\r\n    createCollectionSuccess,\r\n    getCollections,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    Nftres,\r\n    updatebanner,\r\n    nftUpd,\r\n    nftAdd\r\n} from \"../Slices/projectSlice\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { Redirect } from 'react-router-dom';\r\nimport swal from \"sweetalert\";\r\n\r\nexport const CreateProjectAction = (params, setLoading) => async dispatch => {\r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        // \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(createProjectSuccess(res));\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", res.data.message, 'success')\r\n                .then(function () {\r\n                    window.location = \"/projectlist\";\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectDetail = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/details/${id}`,\r\n            config)\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        // console.log('details', res)\r\n        dispatch(getProjectDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const LatestProjectDetail = (id) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjectDetails/${id}`,\r\n            config)\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getLatestProjectDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectList = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/list`,\r\n            config)\r\n\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        await dispatch(getProjectList(res.data?.data));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const NftList = (id) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdx/${id}`,\r\n            config)\r\n\r\n        // console.log(res, 'proj')\r\n        await dispatch(getNftList(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const uploadNFT = (params) => {\r\n    const token = localStorage.getItem('authToken')\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            'Authorization': `Bearer ${token}`\r\n        },\r\n        // transformRequest: formData.append('image', params)\r\n    }\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"image\", params);\r\n    return axios\r\n        .post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n            formData, config)\r\n        .then(function (response) {\r\n            // console.log(response, 'resss')\r\n            return {\r\n                success: true,\r\n                data: response.data,\r\n            };\r\n        })\r\n        .catch(function (error) {\r\n            return { success: false };\r\n        });\r\n    // formData.append('image',params)\r\n\r\n    // const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n    //     params, config)\r\n    // \r\n    // console.log('rasasses', res)\r\n    // return res\r\n    // await dispatch(Nftres(res))\r\n\r\n}\r\n\r\n\r\nexport const getPublicLiveProjects = createAsyncThunk(\r\n    \"auth/liveProjects\",\r\n\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const { type, projectType } = params\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjects?page=&latitude=&longitude=&search_keyword=&category_id=&type`, config)\r\n            // console.log(res, 'projres')\r\n            thunkAPI.dispatch(publicLiveProjects({\r\n                res: res,\r\n                type: projectType,\r\n            }));\r\n            // thunkAPI.dispatch(publicLiveProjects(res));\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n\r\nexport const UpdateProject = (props, params) => async dispatch => {\r\n    debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/update/${props}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'proj')\r\n        await dispatch(getProjectDetail(res));\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = `/projnftdetails/${props}`;\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const DeleteProject = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/projects/destroy/${id}`,\r\n            config)\r\n        // \r\n        // console.log(res.status, 'proj')\r\n        await dispatch(deleteProject(res));\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CategoriesAction = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCategories`, config)\r\n        // console.log(res, 'catres')\r\n        dispatch(getCategoriesList(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const GetCollectionsAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollection`,\r\n            config)\r\n        // console.log('colres', res)\r\n        await dispatch(getCollections(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CreateCollectionAction = (params) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createCollection`,\r\n            params, config)\r\n        // dispatch(GetCollectionsAction)\r\n        await dispatch(createCollectionSuccess(res));\r\n        if (res?.status === 200) {\r\n\r\n            await dispatch(GetCollectionsAction());\r\n            swal(\"success\", 'Collection Created', 'success')\r\n            // .then(function () {\r\n            //     onClick={() => props.onHide()}\r\n            // });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\nexport const GetCollectionDetails = (id) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollectionById/${id}`,\r\n            config)\r\n\r\n        await dispatch(getCollectionDetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSocialMediaIcons = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSocialMediaIcon`,\r\n            config)\r\n        // console.log('social', res)\r\n        await dispatch(getSocialmediaIcons(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateCollection = (id, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${id}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(getLatestProjectDetail(res));\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSettings = () => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSettings`,\r\n            config)\r\n        // \r\n        // console.log(res, 'sett rres')\r\n        await dispatch(getSettings(res));\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetNftwol = ({ id }) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdxWithoutLogin/${id}`,\r\n            config)\r\n\r\n        await dispatch(getNftwolDetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetfundraiserProject = (user_id) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getProjectByfundraiserIdx/${user_id}`,\r\n            config)\r\n\r\n        await dispatch(getfundprojdetails(res));\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateBanner = (formData, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/image_update/${params}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(updatebanner(res));\r\n\r\n        if (res.status === 200) {\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                dispatch(ProjectDetail(params))\r\n                dispatch(LatestProjectDetail(params))\r\n                // window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const UpdateNft = (formData, props) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/update/${props.id}/${props.nft_id}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftUpd(res));\r\n\r\n        if (res.status === 200) {\r\n            // setLoading(false)\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                dispatch(ProjectDetail(props.id))\r\n                // dispatch(LatestProjectDetail(params))\r\n                // window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const AddNftAction = (formData, id, setLoading) => async dispatch => {\r\n    debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/create/${id}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftAdd(res));\r\n\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                // dispatch(ProjectDetail(props.id))\r\n                // dispatch(LatestProjectDetail(params))\r\n                // window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\n\r\nconst projectTypesMap = {\r\n    \"LatestProjects\": 2,\r\n    \"RecentCampaigns\": 1\r\n}\r\n\r\n\r\nconst AuctionsOne = ({ key, type }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const liveProjects = useSelector(state => {\r\n        return state?.projectdetails?.liveProjects[type]\r\n    })\r\n    console.log(liveProjects, 'liveeproj')\r\n    useEffect(() => {\r\n        dispatch(getPublicLiveProjects({\r\n            cursor: 1,\r\n            type: projectTypesMap[type],\r\n            projectType: type,\r\n        }))\r\n\r\n    }, [dispatch])\r\n\r\n    return (\r\n\r\n\r\n        <section className=\"live-auctions-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Project</span>\r\n                                <h3 className=\"mt-3 mb-0\">{type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                <a className=\"btn content-btn\" href={`/all/${type}`}>View All</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auctions-slides\">\r\n                    <div className=\"swiper-container slider-mid items\">\r\n                        <div className=\"swiper-wrapper\">\r\n                            {/* Single Slide */}\r\n                            {liveProjects?.map((item, idx) => {\r\n                                return (\r\n                                    <div key={`auc_${idx}`} className=\"swiper-slide item\">\r\n                                        <Link to={`/projdetails/${item.id}`} className=\"card\">\r\n                                            {/* {item?.nft_data?.map((item, idx) => { */}\r\n                                            {/* return ( */}\r\n                                            <div className=\"image-over\">\r\n                                                <Link to={`/projdetails/${item.id}`}>\r\n                                                    <img className=\"card-img-top\" src={item?.nft_data[0]?.image} alt=\"\" />\r\n                                                </Link>\r\n                                                <div className='token'>\r\n                                                    <span>#1123</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* ) */}\r\n                                            {/* })} */}\r\n                                            {/* Card Caption */}\r\n                                            <div className=\"card-caption col-12 p-0\">\r\n                                                {/* Card Body */}\r\n                                                <div className=\"card-body\">\r\n                                                    <div className=\"countdown-times mb-3\">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div>\r\n                                                    <a href=\"#\">\r\n                                                        <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                                                    </a>\r\n                                                    <a className=\"seller d-flex align-items-center my-3\" href=\"#\">\r\n                                                        <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" />\r\n                                                        <span className=\"ml-2\">{item.user_data.username}</span>\r\n                                                    </a>\r\n                                                    <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                        <span>{item.price} MATIC</span>\r\n                                                        <span>{item.number_of_nft} NFTS</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"swiper-pagination\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default AuctionsOne;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst fundraiserSlice = createSlice({\r\n    name: 'fundraiser',\r\n\r\n    initialState: {\r\n        fundraiser: [],\r\n        fundraiserdetail: [],\r\n    },\r\n    reducers: {\r\n        getTopFundraiser: (state, action) => {\r\n            // \r\n            state.fundraiser = action.payload;\r\n\r\n        },\r\n        getTopFundraiserDetail: (state, action) => {\r\n            // \r\n            state.fundraiserdetail = action?.payload?.data?.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const fundraiserReducer = fundraiserSlice.reducer\r\n\r\nexport const {\r\n    getTopFundraiser,\r\n    getTopFundraiserDetail\r\n} = fundraiserSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getTopFundraiser, getTopFundraiserDetail } from \"../Slices/fundraiserSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const TopFundraiserAction = createAsyncThunk(\r\n    \"auth/topfundraiser\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // \r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers`, config)\r\n            // console.log(res, 'fund res')\r\n            thunkAPI.dispatch(getTopFundraiser(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n// export const TopFundraiserDetail = createAsyncThunk(\r\n//     \"auth/topfundraiserdetail\",\r\n//     async (id, thunkAPI) => {\r\n//         // \r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//             }\r\n//             const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${id}`, config)\r\n\r\n//             thunkAPI.dispatch(getTopFundraiserDetail(res?.data?.data));\r\n\r\n//         } catch (e) {\r\n//             if (e?.response?.data.message) {\r\n//                 swal('error', e.response.data.message, 'error')\r\n//             }\r\n//         }\r\n//     })\r\nexport const TopFundraiserDetail = (user_id) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${user_id}`,\r\n            config)\r\n\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getTopFundraiserDetail(res));\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getTopFundraiser } from '../../redux/Slices/projectSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Fundraiser = () => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    // console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <section className=\"top-seller-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Fundraisers</span>\r\n                                <h3 className=\"mt-3 mb-0\">Top Fundraisers</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {fund?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Seller */}\r\n                                <Link to={`/fundraiser/detail/${item.user_id}`}>\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n\r\n                                            <img className=\"avatar-md rounded-circle\" src={item.avatar} alt=\"\" />\r\n\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3\">\r\n                                                <a className=\"seller mb-2\">@{item.username}</a>\r\n                                                <span>{item.amount}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Fundraiser;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst collectionSlice = createSlice({\r\n    name: 'collection',\r\n\r\n    initialState: {\r\n        collection: [],\r\n        collectiondetail: [],\r\n    },\r\n    reducers: {\r\n        getPopularCollection: (state, action) => {\r\n            // \r\n            state.collection = action.payload;\r\n        },\r\n        getPopularCollectiondetails: (state, action) => {\r\n            // \r\n            state.collectiondetail = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const collectionReducer = collectionSlice.reducer\r\n\r\nexport const {\r\n    getPopularCollection,\r\n    getPopularCollectiondetails\r\n} = collectionSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getPopularCollection, getPopularCollectiondetails } from \"../Slices/popularCollectionSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const PopularCollectionAction = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnection`, config)\r\n            console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollection(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const PopularCollectionActionDetails = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ id }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnectionByIdx/${id}`, config)\r\n            // console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollectiondetails(res));\r\n\r\n        } catch (e) {\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Collections = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collection\r\n    })\r\n    console.log(coll, \"coll\")\r\n    useEffect(() => {\r\n\r\n        dispatch(PopularCollectionAction({}))\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"popular-collections-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>POPULAR</span>\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                <Link className=\"btn content-btn text-left\" to=\"/allcollections\">Explore More</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {coll.slice(0, 8)?.map((item, idx) => {\r\n\r\n\r\n\r\n                        return (\r\n                            <div key={`cd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/popularcollection/details/${item.id}`}>\r\n                                            <img className=\"card-img-top\" src={item?.image} alt=\"\" />\r\n                                        </Link>\r\n                                        {/* Seller */}\r\n                                        <a className=\"seller\">\r\n\r\n                                            {/* <Link to={`/item-details/${item.id}`} className=\"seller\"> */}\r\n                                            <div className=\"seller-thumb avatar-lg\">\r\n                                                <img className=\"rounded-circle\" src={item?.user_data?.avatar} alt=\"\" />\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            <Link to={`/item-details/${item.id}`}>\r\n                                                <h5 className=\"mb-2\">{item.title}</h5>\r\n                                            </Link>\r\n                                            <span>{item.price}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        )\r\n                    })}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Collections;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Exclusive Assets\",\r\n    heading: \"Explore\",\r\n    btn_1: \"View All\",\r\n    btn_2: \"Load More\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        img: \"/img/auction_1.jpg\",\r\n        title: \"Walking On Air\",\r\n        owner: \"Richard\",\r\n        price: \"1.5 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        img: \"/img/auction_2.jpg\",\r\n        title: \"Domain Names\",\r\n        owner: \"John Deo\",\r\n        price: \"2.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        img: \"/img/auction_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        owner: \"Arham\",\r\n        price: \"2.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        img: \"/img/auction_4.jpg\",\r\n        title: \"Industrial Revolution\",\r\n        owner: \"Yasmin\",\r\n        price: \"1.8 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        img: \"/img/auction_5.jpg\",\r\n        title: \"Utility\",\r\n        owner: \"Junaid\",\r\n        price: \"1.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        img: \"/img/auction_6.jpg\",\r\n        title: \"Sports\",\r\n        owner: \"ArtNox\",\r\n        price: \"1.9 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"7\",\r\n        img: \"/img/auction_7.jpg\",\r\n        title: \"Cartoon Heroes\",\r\n        owner: \"Junaid\",\r\n        price: \"3.2 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"8\",\r\n        img: \"/img/auction_8.jpg\",\r\n        title: \"Gaming Chair\",\r\n        owner: \"Johnson\",\r\n        price: \"0.69 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"9\",\r\n        img: \"/img/auction_9.jpg\",\r\n        title: \"Photography\",\r\n        owner: \"Sara\",\r\n        price: \"2.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"10\",\r\n        img: \"/img/auction_10.jpg\",\r\n        title: \"Zed Run\",\r\n        owner: \"SpaceMan\",\r\n        price: \"3.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"11\",\r\n        img: \"/img/auction_11.jpg\",\r\n        title: \"Rare Tyres\",\r\n        owner: \"Monas\",\r\n        price: \"2.2 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"12\",\r\n        img: \"/img/auction_12.jpg\",\r\n        title: \"World of Women\",\r\n        owner: \"Victor\",\r\n        price: \"4.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n]\r\n\r\nclass ExploreOne extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area load-more p-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.initData.pre_heading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/explore-3\">{this.state.initData.btn_1}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`exo_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/item-details\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                </a>\r\n                                                <div className=\"seller d-flex align-items-center my-3\">\r\n                                                    <span>Owned By</span>\r\n                                                    <a href=\"/author\">\r\n                                                        <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span>{item.price}</span>\r\n                                                    <span>{item.count}</span>\r\n                                                </div>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/login\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <a id=\"load-btn\" className=\"btn btn-bordered-white mt-5\" href=\"#\">{this.state.initData.btn_2}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreOne;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst data = {\r\n    preHeading: \"How It Works\",\r\n    heading: \"Create and sell your NFTs\",\r\n    workData: [\r\n        {\r\n            \"id\": 1,\r\n            \"icon\": \"icons icon-wallet text-effect\",\r\n            \"title\": \"Setup your wallet\",\r\n            \"text\": \"Click Connect Wallet in the top right corner to login and get started.\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"icon\": \"icons icon-grid text-effect\",\r\n            \"title\": \"Create your collection\",\r\n            \"text\": \"Click Creator and set up your organization profile, description, fundraising goal and more.\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"icon\": \"icons icon-drawer text-effect\",\r\n            \"title\": \"Add your NFTs\",\r\n            \"text\": \"Upload your project art or images and description.\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"icon\": \"icons icon-bag text-effect\",\r\n            \"title\": \"List them for sale\",\r\n            \"text\": \"Choose how you want to price and sell your NFTs!\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst Work = () => {\r\n\r\n\r\n    return (\r\n        <section className=\"work-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro mb-4\">\r\n                            <div className=\"intro-content\">\r\n                                <span>{data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {data?.workData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Work */}\r\n                                <div className=\"single-work\">\r\n                                    <i className={item.icon} />\r\n                                    <h4>{item.title}</h4>\r\n                                    <p>{item.text}</p>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Work;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst footerSlice = createSlice({\r\n    name: 'footer',\r\n\r\n    initialState: {\r\n        footer: [],\r\n        aboutus: []\r\n\r\n    },\r\n    reducers: {\r\n\r\n        getfooter: (state, action) => {\r\n            state.footer = action.payload;\r\n        },\r\n        getabout: (state, action) => {\r\n            state.aboutus = action.payload;\r\n        },\r\n\r\n    },\r\n});\r\n\r\nexport const footerReducer = footerSlice.reducer\r\n\r\nexport const {\r\n    getfooter,\r\n    getabout,\r\n} = footerSlice.actions;","import axios from \"axios\";\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getabout, getfooter } from \"../Slices/footerSlice\";\r\nimport swal from \"sweetalert\";\r\nexport const getFooter = createAsyncThunk(\r\n    \"auth/footer\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/term-condition`, config)\r\n            thunkAPI.dispatch(getfooter(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const AboutUsAction = createAsyncThunk(\r\n    \"auth/about\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAbouts`, config)\r\n            thunkAPI.dispatch(getabout(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getFooter } from '../../redux/Actions/footerAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter())\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    return (\r\n\r\n\r\n        <footer className=\"footer-area\">\r\n            {/* Footer Top */}\r\n            <div className=\"footer-top\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Logo */}\r\n                                <a className=\"navbar-brand\" href=\"/\">\r\n                                    <img src=\"/img/logo.png\" alt=\"\" />\r\n                                </a>\r\n                                <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                                {/* Social Icons */}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Useful Links</h4>\r\n                                <ul>\r\n                                    <li><Link to=\"/create\">Create Project</Link></li>\r\n                                    <li><a href={`/all/${\"LatestProjects\"}`}>Explore NFTs</a></li>\r\n                                    <li><Link to=\"/terms&conditions\">Terms of Service</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Community</h4>\r\n                                <ul>\r\n                                    <li><a target=\"_blank\" href=\"https://www.canopycrypto.io/our-team/\">About Us</a></li>\r\n                                    {/* <li><Link to='/https://www.canopycrypto.io/our-team/'>About Us</Link></li> */}\r\n                                    <li><Link to='/contact'>Get Support</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Footer Bottom */}\r\n            <div className=\"footer-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Copyright Area */}\r\n                            <div className=\"copyright-area d-flex flex-wrap justify-content-center justify-content-sm-between text-center py-4\">\r\n                                {/* Copyright Left */}\r\n                                <div className=\"copyright-left\">© 2022 Canopy Labs Ltd.</div>\r\n                                {/* Copyright Right */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ModalSearch = () => {\r\n    const dispatch = useDispatch()\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n    }\r\n    return (\r\n        <div id=\"search\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        {/* {this.state.data.menuName} <i className={this.state.data.menuIcon} /> */}\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form className=\"row\">\r\n                            <div className=\"col-12 align-self-center\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 pb-3\">\r\n                                        <Link to='/author'>Profile</Link>\r\n                                        <Link to='/projectlist'>My Projects</Link>\r\n                                        {/* <button type='button' class=\"dropdown-item\"><a href='/author'>Profile</a></button>\r\n                <button type='button' class=\"dropdown-item\"><a href='/projectlist'>My Projects</a></button> */}\r\n                                        <button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'>Logout</a></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group mt-4\">\r\n                                        <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group align-self-center\">\r\n                                        {/* <button className=\"btn btn-bordered-white mt-3\">{this.state.data.btnText}</button> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ModalSearch;","import React from 'react';\r\n\r\nconst ModalMenu = () => {\r\n    return (\r\n        <div id=\"menu\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        Menu <i className=\"far fa-times-circle icon-close\" />\r\n                    </div>\r\n                    <div className=\"menu modal-body\">\r\n                        <div className=\"row w-100\">\r\n                            <div className=\"items p-0 col-12 text-center\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalMenu;","import React from 'react';\r\n\r\nconst Scrollup = () => {\r\n    return (\r\n        <div id=\"scroll-to-top\" className=\"scroll-to-top\">\r\n            <a href=\"#header\" className=\"smooth-anchor\">\r\n                <i className=\"fas fa-arrow-up\" />\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scrollup;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Hero from '../components/Hero/Hero';\r\nimport Auctions from '../components/Auctions/AuctionsOne';\r\nimport TopSeller from '../components/TopSeller/topfundraiser';\r\nimport Collections from '../components/Collections/Collections';\r\nimport Explore from '../components/Explore/ExploreOne';\r\nimport Work from '../components/Work/Work';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Hero />\r\n            <Auctions key=\"latestProjects\" type={\"LatestProjects\"} />\r\n            {/* <Auctions type={\"Top Fundraisers\"} /> */}\r\n            {/* <Auctions key=\"recentCampaigns\" type={\"RecentCampaigns\"} /> */}\r\n            {/* <Auctions type={\"Popular Connections\"} /> */}\r\n            <Fundraiser />\r\n            <Collections />\r\n            {/* <Explore /> */}\r\n            <Work />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Breadcrumb extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"breadcrumb-area overlay-dark d-flex align-items-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Breamcrumb Content */}\r\n                            <div className=\"breadcrumb-content text-center\">\r\n                                <h2 className=\"m-0\">{this.props.title}</h2>\r\n                                <ol className=\"breadcrumb d-flex justify-content-center\">\r\n                                    <li className=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\r\n                                    <li className=\"breadcrumb-item\"><a href=\"#\">{this.props.subpage}</a></li>\r\n                                    <li className=\"breadcrumb-item active\">{this.props.page}</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/explore\";\r\n\r\nclass ExploreTwo extends Component {\r\n    state = {\r\n        data: {},\r\n        exploreData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    exploreData: res.data.exploreData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/explore-1\">{this.state.data.btnText}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.exploreData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`edt_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/item-details\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                </a>\r\n                                                <div className=\"seller d-flex align-items-center my-3\">\r\n                                                    <span>Owned By</span>\r\n                                                    <a href=\"/author\">\r\n                                                        <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span>{item.price}</span>\r\n                                                    {/* <span>{item.count}</span> */}\r\n                                                </div>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreTwo;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass ExploreOne extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 1\" />\r\n                <Explore />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreOne;","import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllProjects = () => {\r\n    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const projects = useSelector(state => {\r\n        return state.projectdetails.projects\r\n    })\r\n\r\n    console.log(projects, 'projects')\r\n\r\n    useEffect(() => {\r\n        dispatch(ProjectList())\r\n    }, [dispatch])\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(DeleteProject(id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center mb-4\">\r\n                                {/* <span>Explore</span> */}\r\n                                <h3 className=\"mt-3 mb-0\">My Projects</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row items explore-items h-auto\">\r\n                        {projects && projects.length ?\r\n                            [...new Map(projects.map(item =>\r\n                                [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                    return (\r\n                                        <Link key={`edth_${idx}`} to={`/projnftdetails/${item.id}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                            <div>\r\n                                                <div className=\"card project_cards\">\r\n                                                    <div className=\"image-over relative \">\r\n                                                        {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                        <img className=\"card-img-top\" src={item?.nft_data[0]?.image} alt={item.nft_data.description} />\r\n                                                    </div>\r\n                                                    <div className='token'>\r\n                                                        <span></span>\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <a>\r\n                                                                <h5 className=\"mb-0\">{item.title.slice(0, 20)}</h5>\r\n                                                            </a>\r\n                                                            <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\">You</h6>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.nft_data.length} NFTS </span>\r\n                                                                <span> + {item.number_of_nft} NFTS </span>\r\n                                                            </div>\r\n\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                            <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                <h2 className='allproj2'>\r\n                                    You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                </h2>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllProjects; ","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ProjectList';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport GetAllProjects from '../components/Explore/ProjectList';\r\n\r\nconst ExploreTwo = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Projects\" subpage=\"Explore\" page=\"\" /> */}\r\n            <GetAllProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExploreTwo;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Explore\",\r\n    heading: \"Exclusive Digital Assets\",\r\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        img: \"/img/auction_1.jpg\",\r\n        title: \"Walking On Air\",\r\n        owner: \"Richard\",\r\n        price: \"1.5 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        img: \"/img/auction_2.jpg\",\r\n        title: \"Domain Names\",\r\n        owner: \"John Deo\",\r\n        price: \"2.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        img: \"/img/auction_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        owner: \"Arham\",\r\n        price: \"2.3 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        img: \"/img/auction_4.jpg\",\r\n        title: \"Industrial Revolution\",\r\n        owner: \"Yasmin\",\r\n        price: \"1.8 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        img: \"/img/auction_5.jpg\",\r\n        title: \"Utility\",\r\n        owner: \"Junaid\",\r\n        price: \"1.7 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        img: \"/img/auction_6.jpg\",\r\n        title: \"Sports\",\r\n        owner: \"ArtNox\",\r\n        price: \"1.9 ETH\",\r\n        count: \"1 of 1\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n]\r\n\r\nclass ExploreFive extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"explore-slides\">\r\n                        <div className=\"swiper-container slider-mid items\">\r\n                            <div className=\"swiper-wrapper\">\r\n                                {/* Single Slide */}\r\n                                {this.state.data.map((item, idx) => {\r\n                                    return (\r\n                                        <div key={`exfi_${idx}`} className=\"swiper-slide item\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"image-over\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <div className=\"seller d-flex align-items-center my-3\">\r\n                                                            <span>Owned By</span>\r\n                                                            <a href=\"/author\">\r\n                                                                <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                            <span>{item.price}</span>\r\n                                                            <span>{item.count}</span>\r\n                                                        </div>\r\n                                                        <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/create\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div className=\"swiper-pagination\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreFive;","import React, { Component } from 'react';\r\nimport AuctionsOne from '../Auctions/AuctionsOne';\r\n\r\n\r\n\r\nconst LatestProject = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <AuctionsOne />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default LatestProject;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreFive';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\n\r\nconst LatestProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" />\r\n            <AuctionsOne type=\"LatestProjects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LatestProjects;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreFour from './latestProjects';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\n\r\nconst Auctions = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LatestProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Auctions;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\n\r\nimport { useState } from 'react';\r\nimport { getPopularCollectiondetails } from '../../redux/Slices/popularCollectionSlice';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\n\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst PopularDetails = () => {\r\n\r\n\r\n\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const populardetail = useSelector(state => {\r\n        // \r\n        return state?.collection.collectiondetail\r\n    })\r\n    console.log(populardetail, 'populardetail')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        dispatch(PopularCollectionActionDetails({ id }))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-md-8 \">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n                                <img src={populardetail.image} alt=\"\" />\r\n                            </div><div className=\"card no-hover countdown-times my-4\">\r\n                                    {/* ksdjfksdjbfjsdbf */}\r\n                                    {/* {nftdetail.description} */}\r\n                                    {/* <div className=\"countdown d-flex justify-content-center\" /> */}\r\n                                    <p dangerouslySetInnerHTML={{ __html: populardetail.description }} className=\"nft-detail-nft\" />\r\n                                </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <div className=\"card no-hover content sm:mt-5 mt-lg-0\">\r\n                            <div className='d-flex  align-items-center justify-content-between'>\r\n                                <h3 className=\"m-0\">{populardetail?.title}</h3>\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center '>\r\n                                    {/* <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"> <Link to={`/updateproject/${projdetail.projectdetails.id}`} style={{ color: '#FFF' }}>Edit</Link></a>\r\n                                        <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-2\" onClick={() => deleteHandler(projdetail.projectdetails.id)} style={{ color: '#FFF' }}>Delete</a> */}\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default PopularDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport PopularDetails from '../components/Explore/popularDetails';\r\n\r\nclass ItemDetails extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <PopularDetails />\r\n                {/* <LiveAuctions /> */}\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemDetails;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/activity\";\r\n\r\nclass Activity extends Component {\r\n    state = {\r\n        data: {},\r\n        tabData_1: [],\r\n        tabData_2: [],\r\n        tabData_3: [],\r\n        filterData: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    tabData_1: res.data.tabData_1,\r\n                    tabData_2: res.data.tabData_2,\r\n                    tabData_3: res.data.tabData_3,\r\n                    filterData: res.data.filterData \r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"activity-area load-more\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro mb-4\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        <div className=\"col-12 col-md-6 col-lg-8\">\r\n                            {/* Netstorm Tab */}\r\n                            <ul className=\"netstorm-tab nav nav-tabs\" id=\"nav-tab\">\r\n                                <li>\r\n                                    <a className=\"active\" id=\"nav-home-tab\" data-toggle=\"pill\" href=\"#nav-home\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_1}</h5>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a id=\"nav-profile-tab\" data-toggle=\"pill\" href=\"#nav-profile\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_2}</h5>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a id=\"nav-contact-tab\" data-toggle=\"pill\" href=\"#nav-contact\">\r\n                                        <h5 className=\"m-0\">{this.state.data.tabTitle_3}</h5>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                            {/* Tab Content */}\r\n                            <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                                <div className=\"tab-pane fade show active\" id=\"nav-home\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_1.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`ato_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"nav-profile\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_2.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`att_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"tab-pane fade\" id=\"nav-contact\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {/* Single Tab List */}\r\n                                        {this.state.tabData_3.map((item, idx) => {\r\n                                            return (\r\n                                                <li key={`atth_${idx}`} className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <a href=\"/item-details\">\r\n                                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                                    </a>\r\n                                                    {/* Activity Content */}\r\n                                                    <div className=\"activity-content ml-4\">\r\n                                                        <a href=\"/item-details\">\r\n                                                            <h5 className=\"mt-0 mb-2\">{item.title}</h5>\r\n                                                        </a>\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{item.seller}</a></p>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 col-lg-4\">\r\n                            {/* Activity Content */}\r\n                            <div className=\"activity-content mt-5 mt-lg-0\">\r\n                                {/* Single Widget */}\r\n                                <div className=\"single-widget\">\r\n                                    {/* Search Widget */}\r\n                                    <div className=\"widget-content search-widget\">\r\n                                        <form action=\"#\">\r\n                                            <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Single Widget */}\r\n                                <div className=\"single-widget\">\r\n                                    {/* Filter Widget */}\r\n                                    <div className=\"widget filter-widget\">\r\n                                        <h4 className=\"title\">{this.state.data.widgetTitle}</h4>\r\n                                        {/* Filter Widget Content */}\r\n                                        <div className=\"widget-content\">\r\n                                            {/* Tags Widget Items */}\r\n                                            <div className=\"widget-content filter-widget-items mt-3\">\r\n                                                {this.state.filterData.map((item, idx) => {\r\n                                                    return (\r\n                                                        <a key={`fd_${idx}`} href=\"#\" className=\"badge tag\">{item.title}</a>\r\n                                                    );\r\n                                                })}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Activities from '../components/Activity/Activity';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Activity extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Activity\" subpage=\"Pages\" page=\"Activity\" />\r\n                <Activities />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activity;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/blog\";\r\n\r\nclass Blog extends Component {\r\n    state = {\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data.blogData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"blog-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`bd_${idx}`} className=\"col-12 col-md-4 item\">\r\n                                    {/* Single Blog */}\r\n                                    <div className=\"card blog-card\">\r\n                                        {/* Blog Thumb */}\r\n                                        <div className=\"blog-thumb\">\r\n                                            <a href=\"/blog-single\"><img src={item.img} alt=\"\" /></a>\r\n                                        </div>\r\n                                        {/* Blog Content */}\r\n                                        <div className=\"blog-content\">\r\n                                            {/* Meta Info */}\r\n                                            <ul className=\"meta-info d-flex justify-content-between list-unstyled mt-4\">\r\n                                                <li>By <a href=\"#\">{item.author}</a></li>\r\n                                                <li><a href=\"#\">{item.date}</a></li>\r\n                                            </ul>\r\n                                            {/* Blog Title */}\r\n                                            <a href=\"/blog-single\">\r\n                                                <h4>{item.title}</h4>\r\n                                            </a>\r\n                                            <p>{item.content}</p>\r\n                                            {/* Blog Button */}\r\n                                            <a className=\"btn content-btn\" href=\"/blog-single\">{item.btnText}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport BlogSection from '../components/Blog/Blog';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Blog extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Blog\" subpage=\"Community\" page=\"Blog\" />\r\n                <BlogSection />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/sidebar\";\r\n\r\nclass Sidebar extends Component {\r\n    state = {\r\n        data: {},\r\n        widgetData_1: [],\r\n        widgetData_2: [],\r\n        widgetData_3: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    widgetData_1: res.data.widgetData_1,\r\n                    widgetData_2: res.data.widgetData_2,\r\n                    widgetData_3: res.data.widgetData_3\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <aside className=\"col-12 col-lg-4 pl-lg-5 p-0 float-right sidebar\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 align-self-center text-left\">\r\n                        {/* Widget [categories] */}\r\n                        <div className=\"item widget-categories\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_1}</h4>\r\n                            <ul className=\"list-group list-group-flush\">\r\n                                {this.state.widgetData_1.map((item, idx) => {\r\n                                    return (\r\n                                        <li key={`wdo_${idx}`} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                            <a href=\"#\">{item.title}</a>\r\n                                            <span className=\"badge circle\">{item.content}</span>\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                        {/* Widget [tags] */}\r\n                        <div className=\"item widget-tags\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_2}</h4>\r\n                            {this.state.widgetData_2.map((item, idx) => {\r\n                                return (\r\n                                    <a key={`wdt_${idx}`} href=\"\" className=\"badge tag\">{item.title}</a>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        {/* Widget [share-this] */}\r\n                        <div className=\"item widget-share-this\">\r\n                            <h4 className=\"title\">{this.state.data.widgetTitle_3}</h4>\r\n                            <ul className=\"navbar-nav social share-list\">\r\n                                {this.state.widgetData_3.map((item, idx) => {\r\n                                    return (\r\n                                        <li key={`wdth_${idx}`} className=\"nav-item\">\r\n                                            <a href=\"#\" className=\"nav-link\"><i className={item.icon} /></a>\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </aside>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-2/blogSingle\";\r\n\r\nclass BlogSingle extends Component {\r\n    state = {\r\n        data: {}\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"single featured post-details\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {/* Main */}\r\n                        <div className=\"col-12 col-lg-8 p-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 align-self-center\">\r\n                                    {/* Image */}\r\n                                    <div className=\"blog-thumb\">\r\n                                        <img className=\"w-100\" src={this.state.data.image} alt=\"\" />\r\n                                    </div>\r\n                                    <h2 className=\"featured ml-0\">{this.state.data.title}</h2>\r\n                                    <p>{this.state.data.content_1}</p>\r\n                                    <p>\r\n                                    </p>\r\n                                    <blockquote>{this.state.data.quote}</blockquote>\r\n                                    <p>{this.state.data.content_2}</p>\r\n                                    <p>{this.state.data.content_3}</p>\r\n                                    {/* Post Holder */}\r\n                                    <ul className=\"mb-5 post-holder\">\r\n                                        <li className=\"post-meta-item\">\r\n                                            <div className=\"date\">\r\n                                                <span className=\"posted-on\">Posted On <a href=\"#\" rel=\"bookmark\"><time className=\"entry-date published updated\" dateTime=\"2018-11-01T06:18:46+00:00\">{this.state.data.date}</time></a></span>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                    {/* Comments */}\r\n                                    <h3 className=\"comments-reply-text mb-3\">{this.state.data.commentTitle}</h3>\r\n                                    <p className=\"mt-3\">{this.state.data.commentContent}</p>\r\n                                    <form>\r\n                                        <fieldset>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 col-lg-6 input-group p-0 pr-lg-3 mb-3\">\r\n                                                    <input type=\"text\" name=\"name\" data-minlength={3} placeholder=\"Name\" required />\r\n                                                </div>\r\n                                                <div className=\"col-12 col-lg-6 input-group p-0 mb-3\">\r\n                                                    <input type=\"email\" name=\"email\" data-minlength={3} placeholder=\"Email\" required />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 input-group p-0 mb-3\">\r\n                                                    <textarea name=\"message\" data-minlength={3} rows={4} placeholder=\"Message\" required defaultValue={\"\"} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12 input-group p-0\">\r\n                                                <a className=\"btn btn-bordered-white text-white\">{this.state.data.commentBtn}<i className=\"icon-login ml-2\" /></a>\r\n                                            </div>\r\n                                        </fieldset>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Sidebar */}\r\n                        <Sidebar />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogSingle;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Blog from '../components/BlogSingle/BlogSingle';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass BlogSingle extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Blog Single\" subpage=\"Community\" page=\"Blog Single\" />\r\n                <Blog />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogSingle;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Help Center\",\r\n    heading: \"How can we help you?\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        icon: \"icon icon-plane text-effect\",\r\n        title: \"Getting Started\",\r\n        content: \"Learn how to create an account, set up your wallet, and what you can do on NetStorm\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        icon: \"icon icon-note text-effect\",\r\n        title: \"Creating\",\r\n        content: \"Learn how to create your very first NFT and how to create your NFT collections so you can begin selling and sharing\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        icon: \"icon icon-handbag text-effect\",\r\n        title: \"Buying\",\r\n        content: \"Learn how to purchase your first NFT and understand gas fees and what's gas free on NetStorm\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        icon: \"icon icon-chart text-effect\",\r\n        title: \"Selling\",\r\n        content: \"Learn how list your NFTs for sale and understand the different ways to list your NFTs\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        icon: \"icon icon-link text-effect\",\r\n        title: \"Partners\",\r\n        content: \"Learn how you can partner with us to showcase your NFT drops\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        icon: \"icon icon-flag text-effect\",\r\n        title: \"Developers\",\r\n        content: \"Learn how you can develop with NetStorm &amp; sell them on Marketplace\"\r\n    }\r\n]\r\n\r\nclass HelpCenter extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"help-center-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`hd_${idx}`} className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                    {/* Help Card */}\r\n                                    <div className=\"card help-card\">\r\n                                        <a className=\"d-block text-center\" href=\"#\">\r\n                                            <i className={item.icon} />\r\n                                            <h4>{item.title}</h4>\r\n                                            <p>{item.content}</p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"FAQ\",\r\n    heading: \"Frequently Asked Questions\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        btnClass: \"btn d-block text-left w-100 py-4\",\r\n        target: \"#collapseOne\",\r\n        quote: \"How do I create an NetStorm account?\",\r\n        contentId: \"collapseOne\",\r\n        contentClass: \"collapse show\",\r\n        content: \"The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text.\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseTwo\",\r\n        quote: \"Where can I see transaction details?\",\r\n        contentId: \"collapseTwo\",\r\n        contentClass: \"collapse\",\r\n        content: \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source.\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseThree\",\r\n        quote: \"How do royalties work on NetStorm?\",\r\n        contentId: \"collapseThree\",\r\n        contentClass: \"collapse\",\r\n        content: \"It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFour\",\r\n        quote: \"How do I list an NFT to sell?\",\r\n        contentId: \"collapseFour\",\r\n        contentClass: \"collapse\",\r\n        content: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFive\",\r\n        quote: \"How do I create an NFT?\",\r\n        contentId: \"collapseFive\",\r\n        contentClass: \"collapse\",\r\n        content: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"\r\n    }\r\n]\r\n\r\nclass Faq extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"faq-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* FAQ Content */}\r\n                            <div className=\"faq-content\">\r\n                                {/* Netstorm Accordion */}\r\n                                <div className=\"accordion\" id=\"netstorm-accordion\">\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <div className=\"col-12 col-md-10\">\r\n                                            {/* Single Accordion Item */}\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <div key={`fd_${idx}`} className=\"single-accordion-item p-3\">\r\n                                                        {/* Card Header */}\r\n                                                        <div className=\"card-header bg-inherit border-0 p-0\">\r\n                                                            <h2 className=\"m-0\">\r\n                                                                <button className={item.btnClass} type=\"button\" data-toggle=\"collapse\" data-target={item.target}>\r\n                                                                    {item.quote}\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id={item.contentId} className={item.contentClass} data-parent=\"#netstorm-accordion\">\r\n                                                            {/* Card Body */}\r\n                                                            <div className=\"card-body py-3\">\r\n                                                                {item.content}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Faq;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Help from '../components/HelpCenter/HelpCenter';\r\nimport Faq from '../components/Faq/Faq';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass HelpCenter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Help Center\" subpage=\"Community\" page=\"Help Center\" />\r\n                <Help />\r\n                <Faq />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/authors\";\r\n\r\nclass Authors extends Component {\r\n    state = {\r\n        data: {},\r\n        authorData: []\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    authorData: res.data.authorData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                <p>{this.state.data.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.authorData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`ad_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card no-hover text-center\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/author\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                            {/* Seller */}\r\n                                            <a className=\"seller\" href=\"/author\">\r\n                                                <div className=\"seller-thumb avatar-lg\">\r\n                                                    <img className=\"rounded-circle\" src={item.avatar} alt=\"\" />\r\n                                                </div>\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body mt-4\">\r\n                                                <a href=\"/author\">\r\n                                                    <h5>{item.author}</h5>\r\n                                                </a>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authors;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/seller\";\r\n\r\nclass TopSeller extends Component {\r\n    state = {\r\n        data: {},\r\n        sellerData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    sellerData: res.data.sellerData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"top-seller-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/authors\">View All</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.sellerData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-4 item\">\r\n                                    {/* Single Seller */}\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n                                            <a href=\"/author\">\r\n                                                <img className=\"avatar-md rounded-circle\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3\">\r\n                                                <a className=\"seller mb-2\" href=\"/author\">{item.seller}</a>\r\n                                                <span>{item.price}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopSeller;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Author from '../components/Authors/Authors';\r\nimport TopSeller from '../components/TopSeller/TopSellerTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Authors extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Authors\" subpage=\"Pages\" page=\"Authors\" />\r\n                <Author />\r\n                <TopSeller />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authors;","// import Button from 'react-bootstrap/Button';\r\n// import Modal from 'react-bootstrap/Modal';\r\n// import { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useEffect, useRef, useState } from 'react';\r\n// import { Controller, useForm } from 'react-hook-form';\r\n// import { CopyToClipboard } from 'react-copy-to-clipboard'\r\n// import {\r\n//     EmailShareButton,\r\n//     FacebookIcon,\r\n//     FacebookShareButton,\r\n//     InstapaperShareButton,\r\n//     InstapaperIcon,\r\n//     LineShareButton,\r\n//     LinkedinShareButton,\r\n//     PinterestShareButton,\r\n//     RedditShareButton,\r\n//     TelegramIcon,\r\n//     TelegramShareButton,\r\n//     TwitterIcon,\r\n//     TwitterShareButton,\r\n//     WhatsappIcon,\r\n//     WhatsappShareButton,\r\n//     LinkedinIcon,\r\n//     EmailIcon,\r\n// } from \"react-share\";\r\n// import {\r\n//     FacebookShareCount,\r\n//     HatenaShareCount,\r\n//     OKShareCount,\r\n//     PinterestShareCount,\r\n//     RedditShareCount,\r\n//     TumblrShareCount,\r\n//     VKShareCount\r\n// } from \"react-share\";\r\n// import JoditEditor from 'jodit-react';\r\n// import { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\n// import { useParams } from 'react-router';\r\n// // import 'bootstrap/dist/css/bootstrap.min.css';\r\n// function ProjDetailPopup(props) {\r\n//     const editor = useRef(null);\r\n//     // const [title, setTitle] = useState(\"\");\r\n//     // const [description, setDescription] = useState(\"\");\r\n//     // const [short_url, setShortUrl] = useState(\"\");\r\n//     // const [symbol, setSymbol] = useState(\"\");\r\n//     const dispatch = useDispatch()\r\n//     const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n//     const [description, setDescription] = useState();\r\n//     const id = useParams()\r\n//     const [type, setType] = useState()\r\n//     // const url = window.location.href + '/' + props.userRef\r\n//     // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n//     const { countries } = useSelector(state => state.countries)\r\n//     const [country, setCountry] = useState('')\r\n//     console.log('country', country)\r\n//     const [state, setState] = useState('')\r\n//     const [city, setCity] = useState('')\r\n//     console.log(countries?.data?.data, 'cntry')\r\n//     const states = useSelector(state => {\r\n//         // debugger\r\n//         return state.countries.states\r\n//     })\r\n//     // console.log(countries?.data?.data)\r\n//     useEffect(() => {\r\n//         dispatch(CategoriesAction())\r\n//         dispatch(CountryList())\r\n//         // dispatch(StateList('101'))\r\n\r\n//         // dispatch(StateList(projdetail.country))\r\n//     }, [])\r\n\r\n//     const handleChangeCountry = (event) => {\r\n//         debugger\r\n//         event?.preventDefault()\r\n//         // 👇 Get input value from \"event\"\r\n//         setCountry(event?.currentTarget?.value);\r\n\r\n//         const formData = new FormData()\r\n//         formData.append('country_id', event?.currentTarget?.value)\r\n//         dispatch(StateList(formData))\r\n\r\n//         // if (country) {\r\n\r\n//         //     debugger\r\n//         // }\r\n//     };\r\n//     const handleChangeState = (event) => {\r\n//         // debugger\r\n//         event.preventDefault()\r\n//         // 👇 Get input value from \"event\"\r\n//         setState(event.currentTarget.value);\r\n//         const formData = new FormData()\r\n//         formData.append('country_id', country)\r\n//         formData.append('state_id', event?.currentTarget?.value)\r\n//         dispatch(CityList(formData))\r\n\r\n\r\n//         //     debugger\r\n//         // }\r\n//     };\r\n//     const handleChangeCity = (event) => {\r\n//         // debugger\r\n//         // 👇 Get input value from \"event\"\r\n//         setCity(event?.currentTarget?.value);\r\n\r\n//     };\r\n\r\n//     const cities = useSelector(state => {\r\n//         // debugger\r\n//         return state.countries.city\r\n//     })\r\n\r\n\r\n//     const projdetail = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.projectdetails\r\n//     })\r\n//     console.log(projdetail.nft_data, 'projdatanft')\r\n//     const cat = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.categories\r\n//     })\r\n//     const disablePastDate = () => {\r\n//         const today = new Date();\r\n//         const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n//         const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n//         const yyyy = today.getFullYear();\r\n//         return yyyy + \"-\" + mm + \"-\" + dd;\r\n//     };\r\n//     useEffect(() => {\r\n//         if (projdetail && Object.keys(projdetail).length) {\r\n\r\n//             setValue(\"title\", projdetail.title)\r\n//             setValue(\"address\", projdetail.address)\r\n//             setValue(\"description\", projdetail.description)\r\n//             setValue('state', projdetail.state)\r\n//             setValue('country', projdetail.country)\r\n//             setValue('city', projdetail.city)\r\n//             setValue(\"price\", projdetail.price)\r\n//             setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n//             setValue(\"start_date\", projdetail.start_date)\r\n//             setValue(\"end_date\", projdetail.end_date)\r\n//             setValue(\"type\", projdetail.type)\r\n//             setValue('category_id', projdetail.category_id)\r\n\r\n//             setType(projdetail.type)\r\n//             setCountry(projdetail.country)\r\n//             setDescription(projdetail.description)\r\n//             // setState(projdetail.state)\r\n//             // setCity(projdetail.city)\r\n//             console.log(projdetail.state, 'edit state')\r\n//             console.log(projdetail.city, 'edit city')\r\n//             setValue(\"image\", projdetail.image)\r\n//             const formData = new FormData()\r\n//             // formData.append('country_id', event?.currentTarget?.value)\r\n//             formData.append('country_id', projdetail.country)\r\n//             formData.append('state_id', projdetail.state)\r\n//             dispatch(StateList(formData))\r\n//             dispatch(CityList(formData))\r\n\r\n//         }\r\n//     }, [projdetail]);\r\n\r\n//     const OnSubmit = (data) => {\r\n//         const formData = new FormData()\r\n\r\n//         // formData.append('image', data.image[0])\r\n//         formData.append('title', data.title)\r\n//         formData.append('description', description)\r\n//         formData.append('state', data.state)\r\n//         formData.append('country', data.country)\r\n//         formData.append('city', data.city)\r\n//         formData.append('address', data.address)\r\n//         formData.append('price', data.price)\r\n//         formData.append('number_of_nft', data.number_of_nft)\r\n//         if (data?.type == 1) {\r\n\r\n//             formData.append('start_date', '')\r\n//             formData.append('end_date', '')\r\n//         } else {\r\n\r\n//             formData.append('start_date', data.start_date)\r\n//             formData.append('end_date', data.end_date)\r\n//         }\r\n//         formData.append('type', data.type)\r\n//         formData.append('category_id', data.category_id)\r\n//         debugger\r\n\r\n//         dispatch(UpdateProject(props.id, formData))\r\n//     }\r\n\r\n//     return (\r\n//         <Modal\r\n//             {...props}\r\n//             size=\"lg\"\r\n//             aria-labelledby=\"contained-modal-title-vcenter\"\r\n//             centered\r\n//         >\r\n//             <Modal.Header >\r\n\r\n//                 <div>\r\n//                     <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n//                 </div>\r\n//             </Modal.Header>\r\n//             <Modal.Body>\r\n//                 <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n//                     <div className=\"row\">\r\n\r\n//                         <div className=\"col-6\">\r\n//                             {/* {type == 1 && ( */}\r\n\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Project name</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"title\"\r\n//                                     placeholder=\"Project name\"\r\n//                                     {...register(\"title\", { required: true })}\r\n//                                     aria-invalid={errors.title ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n//                             </div>\r\n//                             {/* )} */}\r\n//                         </div>\r\n//                         <div className=\"col-6\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Web address</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"address\"\r\n//                                     placeholder=\"Web Address\"\r\n//                                     {...register(\"address\", { required: true })}\r\n//                                     aria-invalid={errors.address ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n//                             </div>\r\n//                         </div>\r\n\r\n\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Country</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"country\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"country\"\r\n//                                             {...register(\"country\", { required: true })}\r\n//                                             // value={value}\r\n//                                             // defaultValue={value}\r\n\r\n//                                             onChange={handleChangeCountry}\r\n\r\n//                                         >\r\n\r\n//                                             aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n//                                                 Select your country</option>\r\n//                                             {countries?.data?.data?.map((option, key) => (\r\n//                                                 <>\r\n//                                                     <option key={key.id} value={option.id}  >\r\n\r\n//                                                         {option.name}\r\n\r\n//                                                     </option>\r\n//                                                 </>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>State or Province</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"state\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"state\"\r\n\r\n//                                             {...register(\"state\", { required: true })}\r\n//                                             // defaultValue={value}\r\n//                                             // value={value}\r\n//                                             onChange={handleChangeState} >\r\n//                                             aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n//                                             {states?.data?.data?.map((option, key) => (\r\n\r\n//                                                 <><option key={key.id} value={option.id} >\r\n//                                                     {option.name}\r\n//                                                 </option></>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"col-md-6 col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>City or Region</label>\r\n//                                 <Controller\r\n//                                     control={control}\r\n//                                     name=\"city\"\r\n//                                     // selected={country}\r\n//                                     render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                         <select name=\"city\"\r\n//                                             {...register(\"city\", { required: true })}\r\n//                                             // value={value}\r\n//                                             onChange={handleChangeCity}\r\n//                                         >\r\n//                                             aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n//                                             <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n//                                             {cities?.data?.data?.map((option, key) => (\r\n//                                                 <><option key={key.id} value={option.id}>\r\n//                                                     {option.name}\r\n//                                                 </option></>\r\n//                                             ))}\r\n//                                         </select>\r\n//                                     )}\r\n//                                 />\r\n//                                 {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         {/* <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>Country</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"country\"\r\n//                                             // selected={country}\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n//                                                 // onChange={onChange}\r\n\r\n//                                                 <GeoLocation\r\n//                                                     // locationTitle=\"Country\"\r\n//                                                     isCountry\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n//                                                     onChange={setCountry}\r\n//                                                     required={true}\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>State or Province</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"state\"\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n//                                                 <GeoLocation\r\n\r\n//                                                     onChange={setState}\r\n//                                                     geoId={country}\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n\r\n\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div>\r\n//                                 <div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>City or Region</label>\r\n//                                         <Controller\r\n//                                             control={control}\r\n//                                             name=\"city\"\r\n//                                             render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n//                                                 <GeoLocation\r\n\r\n//                                                     onChange={setCity}\r\n//                                                     geoId={state}\r\n//                                                     onBlur={onBlur}\r\n//                                                     selected={value}\r\n\r\n//                                                 />\r\n//                                             )}\r\n//                                         />\r\n\r\n//                                     </div>\r\n//                                 </div> */}\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 {projdetail.type == 2 ? (\r\n\r\n//                                     <label>Price</label>\r\n//                                 ) : (\r\n\r\n//                                     <label>Price per NFT</label>\r\n//                                 )}\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"price\"\r\n//                                     placeholder=\"Price\"\r\n//                                     {...register(\"price\", { required: true })}\r\n//                                     aria-invalid={errors.price ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 <label>Number of NFTs</label>\r\n//                                 <input\r\n//                                     type=\"number\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"number_of_nft\"\r\n//                                     defaultValue={1}\r\n//                                     // disabled={type == 1}\r\n//                                     placeholder=\"Select your number of NFTs (1-10)\"\r\n//                                     min={1}\r\n//                                     max={10}\r\n//                                     {...register(\"number_of_nft\", { required: true })}\r\n//                                     aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n//                                 {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n//                             </div>\r\n//                         </div>\r\n//                         {projdetail.type == 2 && (\r\n\r\n//                             <><div className=\"col-12 col-md-6\">\r\n//                                 <div className=\"form-group\">\r\n//                                     <label>Campaign Start date</label>\r\n//                                     <input\r\n//                                         type=\"date\"\r\n//                                         className=\"form-control\"\r\n//                                         name=\"start_date\"\r\n//                                         // min={disablePastDate()}\r\n//                                         // placeholder=\"Start date\"\r\n//                                         {...register(\"start_date\", { required: true })}\r\n//                                         aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n//                                     {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n//                                 </div>\r\n//                             </div><div className=\"col-12 col-md-6\">\r\n//                                     <div className=\"form-group\">\r\n//                                         <label>Campaign End Date</label>\r\n//                                         <input\r\n//                                             type=\"date\"\r\n//                                             className=\"form-control\"\r\n//                                             name=\"end_date\"\r\n//                                             min={disablePastDate()}\r\n//                                             // placeholder=\"End date\"\r\n//                                             {...register(\"end_date\", { required: true })}\r\n//                                             aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n//                                         {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n//                                     </div>\r\n//                                 </div></>\r\n//                         )}\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 <label>Category</label>\r\n//                                 <select name=\"annual_revenue_range\"\r\n//                                     // defaultValue={}\r\n//                                     {...register(\"category_id\")}>\r\n//                                     {cat?.map((option, key) => (\r\n\r\n//                                         <option key={key.id} value={option.id}>\r\n//                                             {option.title}\r\n\r\n//                                         </option>\r\n//                                     ))}\r\n//                                 </select>\r\n//                             </div>\r\n//                         </div>\r\n\r\n\r\n//                         <div className=\"col-12\">\r\n//                             <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n//                         </div>\r\n//                     </div>\r\n\r\n\r\n\r\n//                 </form>\r\n//             </Modal.Body>\r\n//             {/* <Modal.Footer>\r\n//                 <Button onClick={props.onHide}>Close</Button>\r\n//             </Modal.Footer> */}\r\n//         </Modal >\r\n//     );\r\n// }\r\n\r\n// export default ProjDetailPopup\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\nimport { useParams } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ProjDetailPopup(props) {\r\n    const editor = useRef(null);\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n    const id = useParams()\r\n    const [type, setType] = useState()\r\n    // const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    const { countries } = useSelector(state => state.countries)\r\n    const [country, setCountry] = useState('')\r\n    console.log('country', country)\r\n    const [state, setState] = useState('')\r\n    const [city, setCity] = useState('')\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(countries?.data?.data)\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList('101'))\r\n\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n\r\n    const handleChangeCountry = (event) => {\r\n        event?.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n\r\n        const formData = new FormData()\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // debugger\r\n        event.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeCity = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCity(event?.currentTarget?.value);\r\n\r\n    };\r\n\r\n    const cities = useSelector(state => {\r\n        // debugger\r\n        return state.countries.city\r\n    })\r\n\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            setDescription(projdetail.description)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n        dispatch(UpdateProject(props.id, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-6 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Project name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Project name\"\r\n                                    {...register(\"title\", { required: true })}\r\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <div className=\"col-6 col-12\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    placeholder=\"Web Address\"\r\n                                    {...register(\"address\", { required: true })}\r\n                                    aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Country</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"country\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"country\"\r\n                                            {...register(\"country\", { required: true })}\r\n                                            // value={value}\r\n                                            // defaultValue={value}\r\n\r\n                                            onChange={handleChangeCountry}\r\n\r\n                                        >\r\n\r\n                                            aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                Select your country</option>\r\n                                            {countries?.data?.data?.map((option, key) => (\r\n                                                <>\r\n                                                    <option key={key.id} value={option.id}  >\r\n\r\n                                                        {option.name}\r\n\r\n                                                    </option>\r\n                                                </>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>State or Province</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"state\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"state\"\r\n\r\n                                            {...register(\"state\", { required: true })}\r\n                                            // defaultValue={value}\r\n                                            // value={value}\r\n                                            onChange={handleChangeState} >\r\n                                            aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n                                            {states?.data?.data?.map((option, key) => (\r\n\r\n                                                <><option key={key.id} value={option.id} >\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>City or Region</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"city\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}\r\n                                            // value={value}\r\n                                            onChange={handleChangeCity}\r\n                                        >\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                {projdetail.type == 2 ? (\r\n\r\n                                    <label>Price</label>\r\n                                ) : (\r\n\r\n                                    <label>Price per NFT</label>\r\n                                )}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    placeholder=\"Price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    defaultValue={1}\r\n                                    // disabled={type == 1}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    min={1}\r\n                                    max={10}\r\n                                    {...register(\"number_of_nft\", { required: true })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {projdetail.type == 2 && (\r\n\r\n                            <><div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // min={disablePastDate()}\r\n                                        // placeholder=\"Start date\"\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                        aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                    {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                </div>\r\n                            </div><div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Campaign End Date</label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n                                            name=\"end_date\"\r\n                                            min={disablePastDate()}\r\n                                            // placeholder=\"End date\"\r\n                                            {...register(\"end_date\", { required: true })}\r\n                                            aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                        {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                    </div>\r\n                                </div></>\r\n                        )}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"annual_revenue_range\"\r\n                                    // defaultValue={}\r\n                                    {...register(\"category_id\")}>\r\n                                    {cat?.map((option, key) => (\r\n\r\n                                        <option key={key.id} value={option.id}>\r\n                                            {option.title}\r\n\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default ProjDetailPopup","// import React, { useEffect, useState } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { Collapse } from 'antd';\r\n// import { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\n// import { useParams } from 'react-router';\r\n// import { Table } from 'react-bootstrap';\r\n\r\n// const UserTransdataTable = () => {\r\n//     const dispatch = useDispatch()\r\n\r\n//     const { Panel } = Collapse;\r\n//     const onChange = (key) => {\r\n//         console.log(key);\r\n//     };\r\n//     const { id } = useParams()\r\n//     const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n//     const onPositionChange = (newExpandIconPosition) => {\r\n//         setExpandIconPosition(newExpandIconPosition);\r\n//     };\r\n\r\n//     const userdet = useSelector(state => {\r\n//         return state?.user?.userdetail\r\n//     })\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n//                 <Panel header=\"Item Activity\" key=\"1\">\r\n//                     <Table responsive >\r\n//                         <thead>\r\n\r\n\r\n//                             <tr>\r\n\r\n//                                 <th>NFT</th>\r\n//                                 <th>Project</th>\r\n//                                 <th>Price</th>\r\n//                                 <th>From</th>\r\n//                                 <th>To</th>\r\n//                                 <th>Token</th>\r\n\r\n//                                 <th>Transaction</th>\r\n//                             </tr>\r\n\r\n\r\n//                         </thead>\r\n//                         <tbody>\r\n//                             {userdet?.payment_history?.map((items) => {\r\n//                                 return (\r\n//                                     <tr>\r\n\r\n//                                         <td>#{items.nft_id}</td>\r\n//                                         <td>#{items.project_id}</td>\r\n//                                         <td>{items.price}</td>\r\n//                                         <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n//                                         <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n//                                         <td>#{items.token_id}</td>\r\n//                                         <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n//                                     </tr>\r\n//                                 )\r\n//                             })}\r\n\r\n//                         </tbody>\r\n//                     </Table>\r\n//                 </Panel>\r\n//             </Collapse>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default UserTransdataTable\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nconst UserdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    // const { id } = useParams()\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive >\r\n\r\n                        <tbody>\r\n\r\n                            <tr>\r\n\r\n                                <td>Name  {userdet.username}</td>\r\n                                <td>Wallet ID  {userdet.wallet_id}</td>\r\n                                <td>Reffers  {userdet.reffers}</td>\r\n                                <td>Fundraised  {userdet.total_fundraised}</td>\r\n\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserdataTable","// import React, { useEffect, useState } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { Collapse } from 'antd';\r\n// import { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\n// import { useParams } from 'react-router';\r\n// import { Table } from 'react-bootstrap';\r\n// import ProjDetailPopup from '../Create/projectDetailpopup';\r\n// const UserdataTable = (props) => {\r\n//     const dispatch = useDispatch()\r\n//     const { Panel } = Collapse;\r\n//     const onChange = (key) => {\r\n//         console.log(key);\r\n//     };\r\n//     const [modalShowproj, setModalShowproj] = React.useState(false);\r\n//     const { id } = useParams()\r\n//     const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n//     const onPositionChange = (newExpandIconPosition) => {\r\n//         setExpandIconPosition(newExpandIconPosition);\r\n//     };\r\n//     // const { id } = useParams()\r\n\r\n//     const userdet = useSelector(state => {\r\n//         return state?.user?.userdetail\r\n//     })\r\n\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n//                 <Panel header=\"Details\" key=\"1\" >\r\n//                     <Table responsive >\r\n\r\n//                         <tbody>\r\n\r\n//                             <tr>\r\n\r\n//                                 <tr>Name  {userdet.username}</tr>\r\n//                                 <tr>Wallet ID  {userdet.wallet_id}</tr>\r\n//                                 <tr>Reffers  {userdet.reffers}</tr>\r\n//                                 <tr>Fundraised  {userdet.total_fundraised}</tr>\r\n\r\n//                             </tr>\r\n//                             {/* )\r\n//                             })} */}\r\n\r\n//                         </tbody>\r\n//                     </Table>\r\n//                 </Panel>\r\n//             </Collapse>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default UserdataTable\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst UserTransdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {userdet?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserTransdataTable","import React, { useState } from 'react';\r\nimport ReactImagePickerEditor, { ImagePickerConf } from 'react-image-picker-editor';\r\n\r\nimport 'react-image-picker-editor/dist/index.css'\r\n\r\nconst UploadImage = ({ initalImag, imageSrc, setImageSrc, show = true }) => {\r\n  const config2 = {\r\n    borderRadius: '8px',\r\n    language: 'en',\r\n    width: '330px',\r\n    height: '250px',\r\n    objectFit: 'contain',\r\n    compressInitial: null,\r\n    hideDownloadBtn: true\r\n  };\r\n\r\n  const initialImage = initalImag;\r\n\r\n  return <div className='image-container'>\r\n    < ReactImagePickerEditor\r\n      config={config2}\r\n      // initialImage={im}\r\n      imageSrcProp={initialImage}\r\n      imageChanged={(newDataUri) => { setImageSrc(newDataUri) }} />\r\n    {/* <br /> <br />\r\n    <hr />\r\n    <br /> */}\r\n    {/* <p>Image preview:</p> */}\r\n    {/* {imageSrc && <img src={imageSrc} alt=\"example\" style={{ maxHeight: '900px', maxWidth: '100%', objectFit: 'contain', background: 'black' }} />}\r\n    {!imageSrc && <h2 style={{ textAlign: 'center', color: '#FFF' }}>No image loaded yet</h2>} */}\r\n\r\n  </div>\r\n}\r\n\r\nexport default UploadImage;\r\n\r\n\r\n","export const dataURLtoBlob = (dataurl) => {\r\n    var arr = dataurl?.split(','), mime = arr[0]?.match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr?.length, u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new Blob([u8arr], { type: mime });\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {  UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage  from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\n\r\nfunction Banner(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const image = dataURLtoBlob(imageSrc)\r\n        formData.append('image', image)\r\n        dispatch(UpdateBanner(formData, props.id))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Project Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default Banner","// // import React, { Component, useEffect } from 'react';\r\n// // import axios from 'axios';\r\n// // import { useDispatch, useSelector } from 'react-redux';\r\n// // import { useForm } from 'react-hook-form';\r\n// // import { GetUserAction } from '../../redux/Actions/authAction';\r\n\r\n\r\n\r\n// // const AuthorProfile = () => {\r\n// //     const userdet = useSelector(state => {\r\n// //         return state?.user?.userdetail\r\n// //     })\r\n// //     const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n// //     const dispatch = useDispatch()\r\n// //     useEffect(() => {\r\n// //         dispatch(GetUserAction())\r\n\r\n// //     })\r\n// //     useEffect(() => {\r\n// //         if (userdet && Object.keys(userdet).length) {\r\n\r\n// //             setValue(\"avatar\", userdet.avatar)\r\n// //             setValue(\"username\", userdet.username)\r\n// //             setValue(\"email\", userdet.email)\r\n\r\n// //         }\r\n\r\n// //     }, [userdet])\r\n// //     return (\r\n// //         <div className=\"card no-hover text-center\">\r\n// //             <form onSubmit={handleSubmit} className=\"item-form card no-hover\">\r\n// //                 <div className=\"image-over\">\r\n// //                     {/* <img className=\"card-img-top\" src={\"\"} alt=\"\" /> */}\r\n// //                     {/* Author */}\r\n// //                     <div className=\"author\">\r\n// //                         <div className=\"author-thumb avatar-lg\">\r\n// //                             <img className=\"rounded-circle\" src={userdet.avatar} alt=\"\" />\r\n// //                         </div>\r\n// //                     </div>\r\n// //                 </div>\r\n// //                 {/* Card Caption */}\r\n// //                 <div className=\"card-caption col-12 p-0\">\r\n// //                     {/* Card Body */}\r\n// //                     <div className=\"card-body mt-4\">\r\n// //                         <h5 className=\"mb-3\">Author</h5>\r\n// //                         <p className=\"my-3\">Author content</p>\r\n// //                         <div className=\"col-12\">\r\n// //                             {/* {type == 1 && ( */}\r\n\r\n// //                             <div className=\"form-group mt-3\">\r\n// //                                 <label>Avatar</label>\r\n// //                                 <input\r\n// //                                     type=\"file\"\r\n// //                                     className=\"form-control\"\r\n// //                                     name=\"avatar\"\r\n// //                                     placeholder=\"avatar\"\r\n// //                                     {...register(\"avatar\", { required: true })}\r\n// //                                     aria-invalid={errors.avatar ? \"true\" : \"false\"}\r\n// //                                 />\r\n// //                                 {errors.avatar?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">avatar is required</p>}\r\n\r\n// //                             </div>\r\n// //                             {/* )} */}\r\n// //                         </div>\r\n// //                         <div className=\"col-12\">\r\n// //                             {/* {type == 1 && ( */}\r\n\r\n// //                             <div className=\"form-group mt-3\">\r\n// //                                 <label>Username</label>\r\n// //                                 <input\r\n// //                                     type=\"text\"\r\n// //                                     className=\"form-control\"\r\n// //                                     name=\"username\"\r\n// //                                     placeholder=\"username\"\r\n// //                                     {...register(\"username\", { required: true })}\r\n// //                                     aria-invalid={errors.username ? \"true\" : \"false\"}\r\n// //                                 />\r\n// //                                 {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n\r\n// //                             </div>\r\n// //                             {/* )} */}\r\n// //                         </div>\r\n// //                         <div className=\"col-12\">\r\n// //                             <div className=\"form-group mt-3\">\r\n// //                                 <label>Email</label>\r\n// //                                 <input\r\n// //                                     type=\"email\"\r\n// //                                     className=\"form-control\"\r\n// //                                     name=\"email\"\r\n// //                                     value={userdet.email}\r\n// //                                 // {...register(\"address\", { required: true })}\r\n// //                                 // aria-invalid={errors.address ? \"true\" : \"false\"}\r\n// //                                 />\r\n// //                                 {/* {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>} */}\r\n\r\n// //                             </div>\r\n// //                         </div>\r\n// //                         <div className=\"input-group\">\r\n// //                             <input type=\"email\" disabled={true} className=\"form-control\" placeholder=\"\" />\r\n\r\n// //                         </div>\r\n// //                         {/* Social Icons */}\r\n\r\n// //                         <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">update</a>\r\n// //                     </div>\r\n// //                 </div>\r\n// //             </form>\r\n// //         </div>\r\n// //     );\r\n// // }\r\n\r\n\r\n// // export default AuthorProfile;\r\n// import React, { Component } from 'react';\r\n// import axios from 'axios';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useForm } from 'react-hook-form';\r\n// import { GetUserAction } from '../../redux/Actions/authAction';\r\n// import { useEffect } from 'react';\r\n// import UserTransdataTable from './userTransTable';\r\n// import UserdataTable from './userDetails';\r\n// // const BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/author\";\r\n\r\n// const AuthorProfile = () => {\r\n//     const userdet = useSelector(state => {\r\n//         return state?.user?.userdetail\r\n//     })\r\n//     const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n//     const dispatch = useDispatch()\r\n//     useEffect(() => {\r\n//         dispatch(GetUserAction())\r\n\r\n//     }, [])\r\n//     useEffect(() => {\r\n//         if (userdet && Object.keys(userdet).length) {\r\n\r\n//             setValue(\"avatar\", userdet.avatar)\r\n//             setValue(\"username\", userdet.username)\r\n//             setValue(\"email\", userdet.email)\r\n\r\n//         }\r\n\r\n//     }, [userdet])\r\n//     return (\r\n//         <div className=\"card no-hover text-center\">\r\n//             <div className=\"image-over\">\r\n//                 {/* <img className=\"card-img-top\"  alt=\"\" /> */}\r\n//                 {/* Author */}\r\n//                 <div className=\"author\">\r\n//                     <div className=\"author-thumb avatar-lg\">\r\n//                         <img className=\"rounded-circle\" src={userdet.avatar} alt=\"\" />\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//             {/* Card Caption */}\r\n//             <div className=\"card-caption col-12 p-0\">\r\n//                 {/* Card Body */}\r\n//                 <div className=\"card-body mt-4\">\r\n//                     <h5 className=\"mb-3\">{userdet.username}</h5>\r\n//                     <div className=\"input-group author_detail\">\r\n//                         <div>\r\n//                             <label> Username  </label>\r\n//                             <input\r\n//                                 type=\"text\"\r\n//                                 // className=\"form-control\"\r\n//                                 name=\"username\"\r\n//                                 // placeholder=\"username\"\r\n//                                 {...register(\"username\", { required: true })}\r\n//                                 aria-invalid={errors.username ? \"true\" : \"false\"}\r\n//                             />\r\n//                             {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n//                         </div>\r\n//                         <div>\r\n//                             <label> Email  </label>\r\n//                             <input\r\n//                                 type=\"email\"\r\n//                                 // className=\"form-control\"\r\n//                                 name=\"email\"\r\n//                                 disabled={true}\r\n//                                 // placeholder=\"username\"\r\n//                                 {...register(\"email\", { required: true })}\r\n//                                 aria-invalid={errors.email ? \"true\" : \"false\"}\r\n\r\n//                             />\r\n//                             {errors.email?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">email is required</p>}\r\n//                         </div>\r\n\r\n//                     </div>\r\n//                     {/* Social Icons */}\r\n//                     {/* <div className=\"social-icons d-flex justify-content-center my-3\">\r\n//                         {this.state.socialData.map((item, idx) => {\r\n//                             return (\r\n//                                 <a key={`asd_${idx}`} className={item.link} href=\"#\">\r\n//                                     <i className={item.icon} />\r\n//                                     <i className={item.icon} />\r\n//                                 </a>\r\n//                             );\r\n//                         })}\r\n//                     </div> */}\r\n//                     <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">update</a>\r\n//                 </div>\r\n//             </div>\r\n//             <div>\r\n//                 <UserTransdataTable />\r\n//             </div>\r\n//             <div>\r\n//                 <UserdataTable />\r\n//             </div>\r\n//             {/* <div>\r\n//                 <UserTransdataTable />\r\n//             </div> */}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\n// export default AuthorProfile;\r\n// import React, { Component, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useForm } from 'react-hook-form';\r\n// import { GetUserAction } from '../../redux/Actions/authAction';\r\n\r\n// const AuthorProfile = () => {\r\n//     const userdet = useSelector(state => {\r\n//         return state?.user?.userdetail\r\n//     })\r\n//     const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n//     const dispatch = useDispatch()\r\n//     useEffect(() => {\r\n//         dispatch(GetUserAction())\r\n\r\n//     })\r\n//     useEffect(() => {\r\n//         if (userdet && Object.keys(userdet).length) {\r\n\r\n//             setValue(\"avatar\", userdet.avatar)\r\n//             setValue(\"username\", userdet.username)\r\n//             setValue(\"email\", userdet.email)\r\n\r\n//         }\r\n\r\n//     }, [userdet])\r\n//     return (\r\n//         <div className=\"card no-hover text-center\">\r\n//             <form onSubmit={handleSubmit} className=\"item-form card no-hover\">\r\n//                 <div className=\"image-over\">\r\n//                     {/* <img className=\"card-img-top\" src={\"\"} alt=\"\" /> */}\r\n//                     {/* Author */}\r\n//                     <div className=\"author\">\r\n//                         <div className=\"author-thumb avatar-lg\">\r\n//                             <img className=\"rounded-circle\" src={userdet.avatar} alt=\"\" />\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//                 {/* Card Caption */}\r\n//                 <div className=\"card-caption col-12 p-0\">\r\n//                     {/* Card Body */}\r\n//                     <div className=\"card-body mt-4\">\r\n//                         <h5 className=\"mb-3\">Author</h5>\r\n//                         <p className=\"my-3\">Author content</p>\r\n//                         <div className=\"col-12\">\r\n//                             {/* {type == 1 && ( */}\r\n\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Avatar</label>\r\n//                                 <input\r\n//                                     type=\"file\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"avatar\"\r\n//                                     placeholder=\"avatar\"\r\n//                                     {...register(\"avatar\", { required: true })}\r\n//                                     aria-invalid={errors.avatar ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.avatar?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">avatar is required</p>}\r\n\r\n//                             </div>\r\n//                             {/* )} */}\r\n//                         </div>\r\n//                         <div className=\"col-12\">\r\n//                             {/* {type == 1 && ( */}\r\n\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Username</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"username\"\r\n//                                     placeholder=\"username\"\r\n//                                     {...register(\"username\", { required: true })}\r\n//                                     aria-invalid={errors.username ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n\r\n//                             </div>\r\n//                             {/* )} */}\r\n//                         </div>\r\n//                         <div className=\"col-12\">\r\n//                             <div className=\"form-group mt-3\">\r\n//                                 <label>Email</label>\r\n//                                 <input\r\n//                                     type=\"email\"\r\n//                                     className=\"form-control\"\r\n//                                     name=\"email\"\r\n//                                     value={userdet.email}\r\n//                                 // {...register(\"address\", { required: true })}\r\n//                                 // aria-invalid={errors.address ? \"true\" : \"false\"}\r\n//                                 />\r\n//                                 {/* {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>} */}\r\n\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"input-group\">\r\n//                             <input type=\"email\" disabled={true} className=\"form-control\" placeholder=\"\" />\r\n\r\n//                         </div>\r\n//                         {/* Social Icons */}\r\n\r\n//                         <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">update</a>\r\n//                     </div>\r\n//                 </div>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default AuthorProfile;\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GetUserAction } from \"../../redux/Actions/authAction\";\r\nimport { useEffect } from \"react\";\r\nimport UserTransdataTable from \"./userTransTable\";\r\nimport UserdataTable from \"./userDetails\";\r\nimport Banner from \"../Create/editBanner\";\r\n// const BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json-1/author\";\r\n\r\nconst AuthorProfile = () => {\r\n    const [modalSho, setModalSho] = React.useState(false);\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        if (userdet && Object.keys(userdet).length) {\r\n\r\n            setValue(\"avatar\", userdet.avatar)\r\n            setValue(\"username\", userdet.username)\r\n            setValue(\"email\", userdet.email)\r\n\r\n        }\r\n\r\n    }, [userdet])\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction());\r\n    }, []);\r\n    useEffect(() => {\r\n        if (userdet && Object.keys(userdet).length) {\r\n            setValue(\"avatar\", userdet.avatar);\r\n            setValue(\"username\", userdet.username);\r\n            setValue(\"email\", userdet.email);\r\n        }\r\n    }, [userdet]);\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"container\">\r\n                {/* <h3 class=\"p-0\">Author Name </h3> */}\r\n                <div className=\"row pt-0\">\r\n                    <div className='col-md-8 p-0'>\r\n                        <div className=\"banner item-thumb text-center\">\r\n                            <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                onClick={() => setModalSho(true)}\r\n                            ></i>\r\n                            <img src=\"/img/ph.jpg\" alt=\"first nft\" />\r\n                        </div>\r\n                        <div className=\"profile_detail mt-3\">\r\n                            <UserdataTable />\r\n                            <UserTransdataTable />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <div className=\"card wrap_card no-hover text-center\">\r\n                            <div className=\"image-over\">\r\n                                <img className=\"card-img-top\" src={userdet.avatar} alt=\"\" />\r\n                                {/* Author */}\r\n                                {/* <div className=\"author\">\r\n                        <div className=\"author-thumb avatar-lg\">\r\n                            <img className=\"rounded-circle\" src={\"\"} alt=\"\" />\r\n                        </div>\r\n                    </div> */}\r\n                            </div>\r\n                            {/* Card Caption */}\r\n                            <div className=\"card-caption col-12 p-0\">\r\n                                {/* Card Body */}\r\n\r\n\r\n                            </div>\r\n                            <form onSubmit={handleSubmit} className=\"item-form card no-hover\">\r\n                                <div className=\"card-body\">\r\n                                    <from className=\"Edite_able\">\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"username\"\r\n                                                placeholder=\"username\"\r\n                                                {...register(\"username\", { required: true })}\r\n                                                aria-invalid={errors.username ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n                                            <i class=\"fa-solid fa-pen\"></i>\r\n                                        </label>\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control\"\r\n                                                name=\"email\"\r\n                                                value={userdet.email}\r\n                                                {...register(\"address\", { required: true })}\r\n                                                aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n                                            <i class=\"fa-solid fa-pen\"></i>\r\n                                        </label>\r\n\r\n                                        {/* Social Icons */}\r\n                                        <div className=\"social-icons d-flex justify-content-center my-3\">\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-facebook-f fa-w-10\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"facebook-f\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 320 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 52.24-50.06h40.42V6.26S260.43 0 225.36 0c-73.22 0-121.08 44.38-121.08 124.72v70.62H22.89V288h81.39v224h100.17V288z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-twitter fa-w-16\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"twitter\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 512 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-google-plus-g fa-w-20\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"google-plus-g\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 640 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M386.061 228.496c1.834 9.692 3.143 19.384 3.143 31.956C389.204 370.205 315.599 448 204.8 448c-106.084 0-192-85.915-192-192s85.916-192 192-192c51.864 0 95.083 18.859 128.611 50.292l-52.126 50.03c-14.145-13.621-39.028-29.599-76.485-29.599-65.484 0-118.92 54.221-118.92 121.277 0 67.056 53.436 121.277 118.92 121.277 75.961 0 104.513-54.745 108.965-82.773H204.8v-66.009h181.261zm185.406 6.437V179.2h-56.001v55.733h-55.733v56.001h55.733v55.733h56.001v-55.733H627.2v-56.001h-55.733z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                            <svg\r\n                                                class=\"svg-inline--fa fa-vine fa-w-12\"\r\n                                                aria-hidden=\"true\"\r\n                                                focusable=\"false\"\r\n                                                data-prefix=\"fab\"\r\n                                                data-icon=\"vine\"\r\n                                                role=\"img\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                viewBox=\"0 0 384 512\"\r\n                                                data-fa-i2svg=\"\"\r\n                                            >\r\n                                                <path\r\n                                                    fill=\"currentColor\"\r\n                                                    d=\"M384 254.7v52.1c-18.4 4.2-36.9 6.1-52.1 6.1-36.9 77.4-103 143.8-125.1 156.2-14 7.9-27.1 8.4-42.7-.8C137 452 34.2 367.7 0 102.7h74.5C93.2 261.8 139 343.4 189.3 404.5c27.9-27.9 54.8-65.1 75.6-106.9-49.8-25.3-80.1-80.9-80.1-145.6 0-65.6 37.7-115.1 102.2-115.1 114.9 0 106.2 127.9 81.6 181.5 0 0-46.4 9.2-63.5-20.5 3.4-11.3 8.2-30.8 8.2-48.5 0-31.3-11.3-46.6-28.4-46.6-18.2 0-30.8 17.1-30.8 50 .1 79.2 59.4 118.7 129.9 101.9z\"\r\n                                                ></path>\r\n                                            </svg>\r\n                                        </div>\r\n                                        <a className=\"btn btn-bordered-white btn-smaller\" href=\"#\">\r\n                                            Update\r\n                                        </a>\r\n                                    </from>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {\" \"}\r\n            </div>\r\n            {\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthorProfile;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Explore\",\r\n    heading: \"Exclusive Digital Assets\",\r\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n    filter_1: \"All\",\r\n    filter_2: \"Art\",\r\n    filter_3: \"Music\",\r\n    filter_4: \"Collectibles\",\r\n    filter_5: \"Sports\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_1.jpg\",\r\n        author: \"/img/avatar_1.jpg\",\r\n        title: \"Virtual Worlds\",\r\n        content: \"ERC-729\",\r\n        price: \"4.37 BNB\",\r\n        likes: \"154\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        group: '[\"music\"]',\r\n        img: \"/img/auction_2.jpg\",\r\n        author: \"/img/avatar_2.jpg\",\r\n        title: \"Walking On Air\",\r\n        content: \"ERC-543\",\r\n        price: \"2.37 BNB\",\r\n        likes: \"74\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        group: '[\"music\",\"collectibles\"]',\r\n        img: \"/img/auction_3.jpg\",\r\n        author: \"/img/avatar_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        content: \"ERC-932\",\r\n        price: \"1.89 BNB\",\r\n        likes: \"\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        group: '[\"music\",\"sports\",\"art\",\"collectibles\"]',\r\n        img: \"/img/auction_4.jpg\",\r\n        author: \"/img/avatar_4.jpg\",\r\n        title: \"Sports\",\r\n        content: \"ERC-250\",\r\n        price: \"0.74 BNB\",\r\n        likes: \"184\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        group: '[\"sports\",\"art\",\"music\"]',\r\n        img: \"/img/auction_5.jpg\",\r\n        author: \"/img/avatar_5.jpg\",\r\n        title: \"Cartoon Heroes\",\r\n        content: \"ERC-167\",\r\n        price: \"4.23 BNB\",\r\n        likes: \"126\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_6.jpg\",\r\n        author: \"/img/avatar_6.jpg\",\r\n        title: \"Domain Names\",\r\n        content: \"ERC-037\",\r\n        price: \"3.41 BNB\",\r\n        likes: \"23\"\r\n    }\r\n]\r\n\r\nclass ExploreSix extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                    <div className=\"col-12\">\r\n                        {/* Explore Menu */}\r\n                        <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n                            <label className=\"btn active d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"all\" defaultChecked className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_1}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"art\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_2}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"music\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_3}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"collectibles\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_4}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_5}</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items explore-items\">\r\n                    {this.state.data.map((item, idx) => {\r\n                        return (\r\n                            <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" data-groups={item.group}>\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <a href=\"/item-details\">\r\n                                            <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                        </a>\r\n                                        {/* Author */}\r\n                                        <a className=\"author\" href=\"/authors\">\r\n                                            <div className=\"author-thumb avatar-lg\">\r\n                                                <img className=\"rounded-circle\" src={item.author} alt=\"\" />\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            <a href=\"/item-details\">\r\n                                                <h5 className=\"mb-2\">{item.title}</h5>\r\n                                            </a>\r\n                                            <span>{item.content}</span>\r\n                                            <hr />\r\n                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                <span>{item.price}</span>\r\n                                                <span><i className=\"icon-heart mr-2\" />{item.likes}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreSix;","import React, { Component } from 'react';\r\nimport AuthorProfile from '../AuthorProfile/AuthorProfile';\r\nimport Explore from '../Explore/ExploreSix';\r\n\r\nclass Author extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"author-area explore-area author-details-area  popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-10\">\r\n                            <AuthorProfile />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Author;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport AuthorProfile from '../components/Author/Author';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Author extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <AuthorProfile />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Author;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ConnectWallet, Roles } from './interact';\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginSuccess } from '../../redux/Slices/authSlice';\r\n\r\nconst data = {\r\n    \"preHeading\": \"Wallet Connect\",\r\n    \"heading\": \"Connect your Wallet\",\r\n    \"content\": \"Connect your wallet to continue browsing our website\",\r\n    \"walletData\": [\r\n        {\r\n            \"id\": 1,\r\n            \"img\": \"/img/metamask.png\",\r\n            \"title\": \"MetaMask\",\r\n            \"content\": \"A browser extension with great flexibility. The web's most popular wallet\"\r\n        },\r\n    ]\r\n}\r\n\r\nconst Wallet = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleConnect = async () => {\r\n        const res = await ConnectWallet(\"CREATOR\")\r\n\r\n        if (res?.res?.response?.status === 401) {\r\n           history.push('/signup')\r\n        }\r\n        else {\r\n          dispatch(loginSuccess(res?.res))\r\n          localStorage.setItem('authToken',res?.res?.data?.data?.auth_token)\r\n          history.push('/projectlist')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"wallet-connect-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>{data.preHeading}</span>\r\n                            <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            <p>{data.content}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center items\">\r\n                    {data?.walletData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} onClick={handleConnect}\r\n                                className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                {/* Single Wallet */}\r\n                                <div className=\"card single-wallet\">\r\n                                    <a className=\"d-block text-center\">\r\n                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                        <h4 className=\"mb-0\">{item.title}</h4>\r\n                                        <p>{item.content}</p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Wallet;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Wallet from '../components/Wallet/Wallet';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass WalletConnect extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Wallet />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WalletConnect;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Geonames from \"geonames.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nconst geonames = new Geonames({\r\n    username: \"fullstackdeveloper91\",\r\n    lan: \"en\",\r\n    encoding: \"JSON\"\r\n});\r\n// const useStyles = makeStyles(theme => ({\r\n//     formControl: {\r\n//         minWidth: \"100%\",\r\n//         // background: 'black',\r\n//         // color: \"#FFF\"\r\n//     },\r\n//     selectEmpty: {\r\n//         marginTop: theme.spacing(2)\r\n//     }\r\n// }));\r\nexport default function GeoLocation(props) {\r\n    // const classes = useStyles();\r\n    const { locationTitle, geoId, onChange, isCountry } = props;\r\n    const [options, setOptions] = useState([]);\r\n    // console.log(options, 'opttt')\r\n    const [currentItem, setCurrentItem] = useState(\"\");\r\n    const [labelWidth, setLabelWidth] = useState(0);\r\n    useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n        {\r\n            !currentItem && (\r\n                setCurrentItem(props?.selected)\r\n            )\r\n        }\r\n    }, [props]);\r\n    // http://api.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en\r\n    // https://secure.geonames.org/countryInfoJSON?username=jhon_doe&lang=en\r\n    useEffect(() => {\r\n        try {\r\n            const data = async () => {\r\n                (await isCountry)\r\n                    ? axios?.get(`https://secure.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en`)?.then(res => {\r\n                        // \r\n                        setOptions(res);\r\n                        console.log(res, \"countries\")\r\n                    })\r\n                    // \"https://secure.geonames.org/childrenJSON?geonameId=\" + id\r\n                    : axios?.get(`https://secure.geonames.org/childrenJSON?username=fullstackdeveloper91&lang=en&geonameId=${geoId}`)?.then(res => {\r\n                        setOptions(res);\r\n                        console.log(res, \"cities\")\r\n                    });\r\n            };\r\n            data();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }, [geoId, isCountry]);\r\n    const inputLabel = useRef(null);\r\n    const handleChange = e => {\r\n        setCurrentItem(e.target.value);\r\n        onChange(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <form >\r\n            <label ref={inputLabel} id=\"demo-simple-select-outlined-label\" style={{ display: 'none' }}>\r\n                {locationTitle}\r\n            </label>\r\n            <select\r\n                label=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={currentItem}\r\n                onChange={handleChange}\r\n                labelWidth={labelWidth}\r\n            >\r\n                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select </option>\r\n                {options?.data?.geonames?.map((v, index) => (\r\n                    <option key={index} value={v?.geonameId}>\r\n                        {isCountry ? v?.countryName : v?.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </form>\r\n    );\r\n}\r\nGeoLocation.propTypes = {\r\n    locationTitle: PropTypes.string,\r\n    geoId: PropTypes.node,\r\n    isCountry: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\nGeoLocation.defaultProps = {\r\n    onChange: undefined\r\n};","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    console.log(data, 'dataaacreate')\r\n    // localStorage.setItem(\"data\", JSON.stringify(data))\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport React, { Component, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { CategoriesAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\nimport GeoLocation from './geoLocation';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport styles from \"./styles/styles.module.scss\"\r\nimport { useFormData } from './Context/context';\r\nimport JoditEditor from 'jodit-react'; import { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\n;\r\n\r\nconst Create = ({ current, next, prev }) => {\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues, prevValues } = useFormData();\r\n    console.log(data.city)\r\n    const [description, setDescription] = useState()\r\n    console.log('disss', description)\r\n    const [country, setCountry] = useState(\"\");\r\n    console.log('country', country)\r\n    const [state, setState] = useState(\"\");\r\n    console.log('state', state)\r\n    const [city, setCity] = useState(\"\");\r\n    console.log('city', city)\r\n\r\n    const [collection_id, setCollectionId] = useState(0);\r\n    const [type, setType] = useState();\r\n\r\n    function onHandleClick(event) {\r\n        setCollectionId(event.currentTarget.id);\r\n    };\r\n\r\n    console.log(data, \"_________DATA_IN_CREATE______\")\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n\r\n    console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n\r\n    }, [])\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n\r\n\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({\r\n        mode: \"all\",\r\n\r\n\r\n    });\r\n\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    // console.log(col, 'col')\r\n    const OnSubmit = (data) => {\r\n        setFormValues({ ...data, type, description });\r\n        // localStorage.setItem('country', JSON.stringify(country))\r\n        next();\r\n    }\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(CategoriesAction())\r\n        if (prev) {\r\n            // \r\n            setValue('title', data.title)\r\n            setValue('address', data.address)\r\n            setValue('category_id', data.category_id)\r\n            setValue('country', data.country)\r\n            setValue('state', data.state)\r\n            setValue('city', data.city)\r\n            setValue('description', data.description)\r\n            setValue('number_of_nft', data.number_of_nft)\r\n            setValue('price', data.price)\r\n            setValue('start_date', data.start_date)\r\n            setValue('type', data.type)\r\n\r\n            setType(data.type)\r\n            setCountry(data.country)\r\n            setDescription(data.description)\r\n\r\n            setState(data.state)\r\n            setCity(data.city)\r\n\r\n            setValue('end_date', data.end_date)\r\n        }\r\n\r\n    }, [data])\r\n\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    const handleChangeCountry = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', event.currentTarget.value)\r\n        dispatch(StateList(formData))        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setCountry(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event.currentTarget.value)\r\n        dispatch(CityList(formData))\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    // const [dateError,setErrordate] = useState(\"\")\r\n    // function checkDateValidation(start_date, end_date) {\r\n    //     // check the dates\r\n    //     if ((new Date(start_date) > new Date(end_date)) || (new Date(end_date) < new Date(start_date))) {\r\n    //         // set date error validation true \r\n    //         setErrordate(\"should be gtr\")\r\n    //     } else {\r\n    //         // null or false date error validation \r\n    //     }\r\n    // }\r\n    return (\r\n\r\n        <div className={current === 0 ? styles.showForm : styles.hideForm}>\r\n            <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12 \">\r\n                        <div className=\"form-group mt-3\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                {data.type == 2 ? (\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"donation\"\r\n                                        value=\"2\"\r\n                                        // defaultChecked={data.type ? true : false}\r\n                                        {...register(\"type\", { required: true })}\r\n                                        aria-invalid={errors.type ? \"true\" : \"false\"}\r\n                                        onChange={(e) => setType(e.target.value)}\r\n                                        defaultChecked={data.type}\r\n                                    />\r\n                                        <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                    </>\r\n                                ) : (\r\n\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"donation\"\r\n                                        value=\"2\"\r\n                                        {...register(\"type\", { required: true })}\r\n                                        onChange={(e) => setType(e.target.value)}\r\n                                        aria-invalid={errors.type ? \"true\" : \"false\"}\r\n                                    />\r\n                                        <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label></>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                {data.type == 1 ? (\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\" name=\"radiobutton\"\r\n                                        id=\"product_sale\"\r\n                                        value=\"1\"\r\n                                        defaultChecked={data.type}\r\n                                        {...register(\"type\", { required: true })}\r\n                                        onChange={(e) => setType(e.target.value)}\r\n                                        aria-invalid={errors.type ? \"true\" : \"false\"}\r\n                                    // defaultChecked={data.type ? true : false}\r\n                                    /><label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label></>\r\n                                ) : (\r\n\r\n\r\n\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"product_sale\"\r\n                                        value=\"1\"\r\n                                        // checked\r\n                                        {...register(\"type\", { required: true })}\r\n                                        // defaultChecked={type === null ? true : false}\r\n\r\n                                        onChange={(e) => setType(e.target.value)}\r\n                                        aria-invalid={errors.type ? \"true\" : \"false\"}\r\n\r\n                                    />\r\n                                        <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label></>\r\n\r\n\r\n                                )}\r\n                            </div>\r\n                            {errors.type?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Type is required</p>}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-md-6 col-12\">\r\n                        {/* {type == 1 && ( */}\r\n\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Project name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"title\"\r\n                                placeholder=\"Project name\"\r\n                                {...register(\"title\", { required: true, pattern: { value: /[A-Za-z]/ } })}\r\n                                aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>}\r\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                        </div>\r\n                        {/* )} */}\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Web address</label>\r\n                            <input\r\n                                type=\"url\"\r\n                                className=\"form-control\"\r\n                                name=\"address\"\r\n                                placeholder=\"Web address\"\r\n                                {...register(\"address\", {\r\n                                    required: true, pattern: {\r\n                                        value: /^((ftp|http|https):\\/\\/)?www\\.([A-z]+)\\.([A-z]{2,})/,\r\n                                        message: 'Please enter a valid url'\r\n                                    }\r\n                                })}\r\n                                aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                            />\r\n\r\n\r\n                            {errors.address && errors.address?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                            {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <label>Description</label>\r\n                        <div className=\"form-group\">\r\n\r\n\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"description\"\r\n                                defaultValue=\"\"\r\n\r\n\r\n                                render={({ field: { value, onChange } }) => {\r\n                                    return <JoditEditor\r\n                                        ref={editor}\r\n                                        // value={description}\r\n                                        // {...register(\"description\", { required: true })}\r\n                                        // config={config}\r\n                                        value={description}\r\n                                        placeholder=\"start typing\"\r\n                                        // aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        tabIndex={1} // tabIndex of textarea\r\n                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                        onChange={setDescription}\r\n                                    />\r\n\r\n                                }}\r\n                            // { errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p> }\r\n                            />\r\n\r\n                            {/* {errors.description && errors?.description?.type === \"min\" && <p style={{ color: 'red' }} role=\"alert\">Description limit is 150 words</p>} */}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Country</label>\r\n\r\n                            <select name=\"country\"\r\n\r\n                                {...register(\"country\", { required: true })} onChange={handleChangeCountry}>\r\n                                aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                {countries?.data?.data?.map((option, key) => (\r\n                                    <>\r\n\r\n\r\n                                        <option key={key.id} value={option.id}>\r\n\r\n                                            {option.name}\r\n\r\n                                        </option>\r\n\r\n\r\n                                    </>\r\n\r\n                                ))}\r\n                            </select>\r\n                            {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>State or province</label>\r\n\r\n                            <select name=\"state\"\r\n                                {...register(\"state\")} onChange={handleChangeState}>\r\n                                aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state</option>\r\n                                {states?.data?.data?.map((option, key) => (\r\n\r\n                                    <><option key={key.id} value={option.id}  >\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                            {/* {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>} */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>City or Region</label>\r\n\r\n                            <select name=\"city\"\r\n                                {...register(\"city\")}>\r\n                                aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                {cities?.data?.data?.map((option, key) => (\r\n                                    <><option key={key.id} value={option.id}>\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                            {/* {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>} */}\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>State or Province</label>\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"state\"\r\n                                render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                    <GeoLocation\r\n                                       \r\n\r\n                                        onChange={setState}\r\n                                        geoId={country}\r\n                                        onBlur={onBlur}\r\n                                        selected={value}\r\n                                    \r\n                                    />\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>City or Region</label>\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"city\"\r\n                                render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                    <GeoLocation\r\n                                        // locationTitle=\"City\"\r\n                                        // isCity\r\n                                        // setValue={data.city}\r\n                                        onChange={setCity}\r\n                                        geoId={state}\r\n\r\n                                        onBlur={onBlur}\r\n                                        selected={value}\r\n                                        required={true}\r\n                                        // onChange={onChange}\r\n\r\n\r\n                                        // {...register(\"city\", { required: true })}\r\n                                        aria-invalid={errors.city ? \"true\" : \"false\"}\r\n                                    />\r\n                                )}\r\n                            />\r\n                            {errors.city?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">city is required</p>}\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            {type == 2 ? (\r\n\r\n                                <label>Price per NFT (revise from Price)</label>\r\n                            ) : (\r\n                                <label>Price (MATIC)</label>\r\n\r\n                            )}\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                step=\"0.01\"\r\n                                name=\"price\"\r\n                                placeholder=\"Price\"\r\n                                {...register(\"price\", { required: true })}\r\n                                aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {type == 1 ? (\r\n\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    // value='1'\r\n                                    // defaultValue={1}\r\n                                    // defaultValue={1}\r\n                                    // disabled={true}\r\n                                    min={1}\r\n\r\n                                    placeholder=\"number of NFT (1 allowed)\"\r\n                                    {...register(\"number_of_nft\", { required: true, min: 1, max: 1 })}\r\n                                    // {...register(\"number_of_nft\", { maxLength: 12 })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.number_of_nft && errors.number_of_nft.type === \"max\" && (\r\n                                    <p style={{ color: 'red' }}>\r\n                                        Only 1 nft allowed\r\n                                    </p>\r\n                                )}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required and limit is upto 1</p>}\r\n                                {/* {errors.number_of_nft?.type === \"maxLength\" && <p style={{ color: 'red' }} role=\"alert\">Max one length </p>} */}\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n\r\n                                    // defaultValue={1}\r\n                                    min={1}\r\n                                    // disabled={type == 1}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    {...register(\"number_of_nft\", { required: true, min: 1, max: 10 })}\r\n                                    // {...register(\"number_of_nft\", { maxLength: 12 })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                {errors.number_of_nft && errors.number_of_nft.type === \"max\" && (\r\n                                    <p style={{ color: 'red' }}>\r\n                                        Only 10 nfts allowed\r\n                                    </p>\r\n                                )}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFTs per project is required with a limit of 10</p>}\r\n                                {/* {errors.number_of_nft?.type === \"maxLength\" && <p style={{ color: 'red' }} role=\"alert\">Max length exceeded</p>} */}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {type == 2 && (\r\n\r\n                        <><div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Campaign Start date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    // placeholder='dd-mm-yy'\r\n                                    // hidden={data.type == 1}\r\n                                    className=\"form-control\"\r\n                                    name=\"start_date\"\r\n                                    min={disablePastDate()}\r\n\r\n                                    // placeholder=\"Start date :\"\r\n                                    {...register(\"start_date\", { required: true })}\r\n                                    aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                            </div>\r\n                        </div><div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        // hidden={data.type == 1}\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        min={disablePastDate()}\r\n\r\n                                        // placeholder=\"End date\"\r\n                                        {...register(\"end_date\")}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    {/* {errors.end_date && errors?.end_date?.type === 'min' && <p style={{ color: 'red' }} role=\"alert\">End date should be greater or equal to startdate</p>} */}\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div></>\r\n                    )}\r\n                    {/* {data.type == 2 && (\r\n\r\n\r\n                                        <><div className=\"col-12 col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Campaign Start date</label>\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    // placeholder='dd-mm-yy'\r\n                                                    className=\"form-control\"\r\n                                                    value={data.start_date}\r\n\r\n                                                    name=\"start_date\"\r\n                                                    min={disablePastDate()}\r\n\r\n                                                    // placeholder=\"Start date :\"\r\n                                                    {...register(\"start_date\", { required: true })}\r\n                                                    aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                                {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                            </div>\r\n                                        </div><div className=\"col-12 col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label>Campaign End Date</label>\r\n                                                    <input\r\n                                                        type=\"date\"\r\n                                                        className=\"form-control\"\r\n                                                        name=\"end_date\"\r\n                                                        value={data.end_date}\r\n\r\n                                                        min={disablePastDate()}\r\n                                                        // placeholder=\"End date\"\r\n                                                        {...register(\"end_date\", { required: true })}\r\n                                                        aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                                </div>\r\n                                            </div></>\r\n                                    )} */}\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Category</label>\r\n                            <select name=\"category_id\"\r\n                                {...register(\"category_id\", { required: true })}\r\n                            >\r\n                                aria-invalid={errors.category_id ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select category </option>\r\n                                {cat?.map((option, key) => (\r\n\r\n                                    <option key={key.id} value={option.id} >\r\n                                        {option.title}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            {errors.category_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Category is required</p>}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Create;","export const TOKEN_KEY = localStorage.getItem('authToken')\r\n\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"authToken\");\r\n}\r\n\r\nexport const isLogin = () => {\r\n  return TOKEN_KEY ? true : false\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction MyVerticallyCenteredModal(props) {\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (dat) => {\r\n        // \r\n        // data.preventDefault()\r\n        dispatch(CreateCollectionAction(dat))\r\n        // console.log(data?.statusCode)\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Collection\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Display name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"display_name\"\r\n                                required\r\n                                placeholder=\"Enter collection name\"\r\n                                {...register('title')}\r\n                            // value={title}\r\n                            // onChange={(e) => {\r\n\r\n                            //     setTitle(e.target.value);\r\n                            // }} \r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Symbol</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"symbol\"\r\n                                required\r\n                                placeholder=\"Enter token symbol\"\r\n                                {...register('symbol')}\r\n                            // value={symbol}\r\n                            // onChange={(e) => {\r\n\r\n                            //     setSymbol(e.target.value);\r\n                            // }} \r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Description</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"description\"\r\n                                required\r\n                                {...register('description')}\r\n                                // value={description}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setDescription(e.target.value);\r\n                                // }}\r\n                                placeholder=\"Spread some words about your collection\"\r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Short url</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                required\r\n                                name=\"short_url\"\r\n                                placeholder=\"Enter short url\"\r\n                                {...register('short_url')}\r\n                            // value={short_url}\r\n                            // onChange={(e) => {\r\n\r\n                            //     setShortUrl(e.target.value);\r\n                            // }} \r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"modal-footer\"> */}\r\n                    <Button type=\"submit\" className=\"btn btn-primary\">Create</Button>\r\n                    {/* </div> */}\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default MyVerticallyCenteredModal","/**\r\n * Loader Spinner\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n\r\n\r\n\r\n    return (\r\n        // <div style={{position: 'absolute', backgroundColor: '#0002', width: '100%', height: '100%'}}>\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                height: \"100px\",\r\n                width: \"100px\",\r\n                margin: \"auto\",\r\n                display: \"block\",\r\n                // position: 'absolute',\r\n                // left: 'calc(50% - 50px)',\r\n                // top: 'calc(50% - 50px)'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Upload } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst UploadNft = ({ current, prev }) => {\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    // console.log(data, 'formdta')\r\n    const [count, setCount] = useState(0);\r\n    // const [nft_description, setNft_description] = useState([])\r\n    // console.log('nft_description', nft_description)\r\n\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    // console.log('colldata', coldata)\r\n    // console.log(nft_collection_id)\r\n    // const [coll_id,setCollId] = useState()\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    // console.log(\"collid\", coll_id)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleIncrement = () => {\r\n        setCount(prevCount => prevCount + 1);\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n    // function descc(e) {\r\n    //     setNft_description(prev => [...prev, nft_description]);\r\n    // };\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    // this.setState(prev => ({\r\n    //     item: prev.item.map(item => item.name === 'xjz' ? { ...item, age: '10' } : item)\r\n    // }))\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n        defaultValues\r\n    });\r\n    useEffect(() => {\r\n        register(\"nft_description\");\r\n    }, [register]);\r\n\r\n    // const ipfsClient = create('http://127.0.0.1:5001')\r\n    // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n    // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n    // console.log(imaeg, 'imgg')\r\n\r\n    const OnSubmit = (values) => {\r\n        // e.preventDefault\r\n        // setColData(col)\r\n        // \r\n        setFormValues(values)\r\n\r\n    }\r\n\r\n\r\n    // console.log('col', col)\r\n\r\n\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        setLoading(true)\r\n        const nftImagepromises = values?.nfts?.map(x => uploadNFT(x?.nft_image?.file))\r\n\r\n        const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n        // \r\n\r\n        const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n        // \r\n\r\n        const formData = new FormData()\r\n\r\n\r\n        formData.append('title', data.title)\r\n        formData.append('description', data.description)\r\n        formData.append('address', data.address)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('latitude', lat)\r\n        formData.append('logitude', log)\r\n        formData.append('city', data.city)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        formData.append('start_date', data.start_date)\r\n        formData.append('end_date', data.end_date)\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n\r\n        formData.append('nft_image', addedImage)\r\n        formData.append('nft_name', values?.nfts?.map(x =>\r\n            x.nft_name\r\n        ))\r\n        // const newlist = newList.push(nft_collection_id);\r\n        formData.append('nft_collection_id', coll_id)\r\n        // formData.append('nft_description', nft_description)\r\n        formData.append('nft_description', values?.nfts?.map(x => x.nft_description))\r\n        // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n\r\n        // dispatch(uploadNFT())\r\n        dispatch(CreateProjectAction(formData, setLoading))\r\n        // setLoading(false)\r\n\r\n        // console.log('Received values of form:', values, data)\r\n\r\n    };\r\n    // console.log('title', localStorage.getItem('title'))\r\n    const handleCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n        beforeUpload: () => {\r\n            return false;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    // const getFile = (e) => {\r\n    //     // \r\n    //     console.log('Upload event:', e);\r\n\r\n    //     if (Array.isArray(e)) {\r\n    //         return e;\r\n    //     }\r\n    //     return e && e.fileList;\r\n    // };\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n    return (\r\n        // <section className=\"author-area\">\r\n        <div>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                    <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                        nfts: nfts\r\n                    }}\r\n                        // onSubmit={(event) => handleSubmit(event)}\r\n                        onFinish={(event) => onFinish(event)}\r\n                        onSubmit={OnSubmit} autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                        <Form.List name=\"nfts\">\r\n\r\n                            {(fields, { add, remove }) => (\r\n                                <>\r\n                                    {/* <div className='steps-center'>\r\n\r\n\r\n                                                <div className='orgicon1'>\r\n\r\n                                                    <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n                                                </div>\r\n\r\n                                                <div className='orgicon1line'>\r\n                                                    <span style={{}}> ----------------------------- </span>\r\n\r\n                                                </div>\r\n                                                <div className='orgicon2'>\r\n\r\n                                                    <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n                                                </div>\r\n                                            </div> */}\r\n                                    <>\r\n                                        {fields.map(({ key, name, ...restField }, index) => (\r\n                                            // <Space\r\n                                            //     key={key}\r\n                                            //     style={{\r\n                                            //         display: 'flex',\r\n                                            //         marginBottom: 8,\r\n                                            //     }}\r\n                                            //     align=\"baseline\"\r\n                                            // >\r\n                                            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                                                <Panel header=\"Details\" key=\"1\">\r\n                                                    <Fragment>\r\n                                                        {/* <div>Artwork {index}</div> */}\r\n                                                        <div className=\"row\">\r\n\r\n                                                            <div className=\"col-md-10 col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  name',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  description',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <Controller\r\n                                                                            control={control}\r\n                                                                            name=\"nft_description\"\r\n                                                                            defaultValue=\"\"\r\n                                                                            render={({ field: { value, onChange } }) => {\r\n                                                                                return  */}\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={'nft_description'}\r\n                                                                            // config={config}\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                            // onBlur={newContent => 'nft_description'(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                                            onChange={newContent => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {/* <div className=\"col-md-5 col-12\">\r\n                                                                    <label>Nft</label>\r\n                                                                    <div>\r\n                                                                        <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a image',\r\n                                                                                },\r\n                                                                            ]}\r\n\r\n                                                                        >\r\n\r\n                                                                            <Upload\r\n                                                                                {...fileProps}\r\n                                                                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                                listType=\"picture-card\"\r\n                                                                                // fileList={fileList}\r\n                                                                                // onChange={onChange}\r\n                                                                                onPreview={handlePreview}\r\n                                                                                maxCount={1}\r\n\r\n                                                                            >\r\n                                                                                + Upload\r\n                                                                            </Upload>\r\n\r\n\r\n                                                                        </Form.Item>\r\n                                                                        <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                            <img\r\n                                                                                alt=\"example\"\r\n                                                                                style={{\r\n                                                                                    width: '100%',\r\n                                                                                }}\r\n                                                                                src={previewImage} />\r\n                                                                        </Modal>\r\n                                                                    </div>\r\n                                                                </div> */}\r\n                                                            <div className=\"col-md-1 col-12\">\r\n                                                                <MinusCircleOutlined onClick={(e) => { remove(name); handleDecrement(e); }} />\r\n                                                            </div>\r\n                                                            {/* </div> */}\r\n                                                            <div className=\"col-md-3 col-12\">\r\n\r\n                                                                {/* <div className=\"col-24\"> */}\r\n\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label className='mt-2'>Choose Collection</label>\r\n                                                                    <div className=\"card choose_div\" style={{\r\n                                                                        background: \"black\",\r\n                                                                        marginBottom: \"8px\",\r\n                                                                    }}>\r\n                                                                        <div className=\"card-body \">\r\n                                                                            <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n                                                                            </Button>\r\n\r\n                                                                            <MyVerticallyCenteredModal\r\n                                                                                show={modalShow}\r\n                                                                                onHide={() => setModalShow(false)} />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            {col?.map((item, idx) => (\r\n\r\n                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-3 col-12 choose_div\">\r\n                                                                    {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_collection_id\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select nft collection',\r\n                                                                                },\r\n                                                                            ]}\r\n\r\n                                                                        > */}\r\n                                                                    <label className='hidden-word'>jsaswjdwjd</label>\r\n\r\n                                                                    <div id={item.id} onClick={() => onHandleClick(index, item.id)} className=\"card\"\r\n                                                                        style={{\r\n                                                                            background: \"black\",\r\n                                                                            marginBottom: \"8px\",\r\n                                                                            border: nft_collection_id[index] == item.id ? \"1px solid #fff\" : null\r\n                                                                        }}>\r\n                                                                        <div className=\"card-body\">\r\n                                                                            <div>\r\n\r\n\r\n                                                                                {item.title}\r\n                                                                            </div>\r\n\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    {/* </Form.Item> */}\r\n\r\n                                                                </div>\r\n                                                                // </div>\r\n                                                            ))}\r\n                                                            <div className=\"col-md-12 col-12\">\r\n                                                                <label>Upload Nft</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_image\"]}\r\n                                                                        // getValueFromEvent={getFile}\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Please select a image',\r\n                                                                            },\r\n                                                                        ]}\r\n\r\n                                                                    >\r\n\r\n                                                                        <Upload\r\n                                                                            {...fileProps}\r\n                                                                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                            listType=\"picture-card\"\r\n                                                                            // fileList={fileList}\r\n                                                                            // onChange={onChange}\r\n                                                                            onPreview={handlePreview}\r\n                                                                            maxCount={1}\r\n\r\n                                                                        >\r\n                                                                            + Upload\r\n                                                                        </Upload>\r\n\r\n\r\n                                                                    </Form.Item>\r\n                                                                    <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                        <img\r\n                                                                            alt=\"example\"\r\n                                                                            style={{\r\n                                                                                width: '100%',\r\n                                                                            }}\r\n                                                                            src={previewImage} />\r\n                                                                    </Modal>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n                                                </Panel>\r\n                                            </Collapse>\r\n                                        ))}\r\n\r\n\r\n                                        {(!(data?.number_of_nft == count)) ?\r\n                                            <Form.Item>\r\n                                                <Button type=\"dashed\" onClick={(e) => { add(e); handleIncrement(e); }} block icon={<PlusOutlined />} disabled={data?.number_of_nft == count}>\r\n                                                    Add NFT\r\n                                                </Button>\r\n                                            </Form.Item>\r\n                                            : null}\r\n                                    </></>\r\n                            )}\r\n\r\n                        </Form.List>\r\n                        <Form.Item>\r\n                            <div className=\"col-12\">\r\n                                <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">Create</button>\r\n                            </div>\r\n                            <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M2,12 L22,12 M13,3 L22,12 L13,21\" transform=\"matrix(-1 0 0 1 24 0)\" />\r\n                                </svg>\r\n                                Previous\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default UploadNft;","import { useEffect, useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Create from \"./Create\";\r\nimport UploadNft from \"./uploadNft\";\r\nimport FormProvider, { useFormData } from \"./Context/context\";\r\n\r\nimport { Button, message, Steps } from 'antd';\r\nimport { set, useForm } from \"react-hook-form\";\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Create Project',\r\n    content: <Create />\r\n  },\r\n  {\r\n    title: 'Upload NFT',\r\n    content: <UploadNft />,\r\n  },\r\n];\r\nconst UploadNftIndex = () => {\r\n\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const { setValue } = useForm();\r\n \r\n  const prev = () => {\r\n    // \r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const items = steps.map((item) => ({ key: item.title, title: item.title }));\r\n  return (\r\n    <section className=\"author-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n\r\n\r\n          <div className=\"col-14 col-md-9\">\r\n            {/* Intro */}\r\n            <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n              <div className=\"intro-content\">\r\n                <span>Get Started</span>\r\n                {current === 0 ? (\r\n\r\n                  <h3 className=\"mt-3 mb-0\">Create Project</h3>\r\n                ) : (\r\n\r\n                  <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <FormProvider>\r\n\r\n              {/* <FormCard currentStep={formStep} prevFormStep={prevFormStep}> */}\r\n              <div className=\"steps-content\">\r\n                <Steps current={current} items={items} />\r\n                {current === 0 && (\r\n\r\n                  <Create current={current} next={next} prev={prev} />\r\n                )}\r\n\r\n                {current === 1 && <><UploadNft prev={prev} />\r\n                  {/* <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                    Previous\r\n                  </Button> */}\r\n                </>\r\n                }\r\n                {/* <div className=\"steps-action\">\r\n          {current < steps.length - 1 && (\r\n            <Button type=\"primary\" onClick={() => next()}>\r\n              Next\r\n            </Button>\r\n          )}\r\n\r\n          {current > 0 && (\r\n            <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n              Previous\r\n            </Button>\r\n          )}\r\n        </div> */}\r\n              </div>\r\n              {/* </FormCard> */}\r\n            </FormProvider>\r\n          </div>\r\n        </div >\r\n      </div >\r\n    </section >\r\n  );\r\n};\r\n\r\nexport default UploadNftIndex;\r\n","import React, { Component, useEffect } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Creates from '../components/Create/Create';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport { isLogin } from '../routers/utils';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UploadNftIndex from '../components/Create';\r\n\r\nconst Create = () => {\r\n  const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  //   if (!isLogin()) {\r\n  //     history.push('/login')\r\n  //   }\r\n  // }, [])\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n      <UploadNftIndex />\r\n      <Footer />\r\n      <ModalSearch />\r\n      <ModalMenu />\r\n      <Scrollup />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => {\r\n        // \r\n        // console.log(login.authToken, 'login')\r\n        return state.login\r\n    })\r\n    // console.log(user, 'user')\r\n\r\n    if (user?.status === 200) {\r\n        history.push('/')\r\n    }\r\n\r\n    const mesg = useSelector(state => {\r\n        // \r\n        return state.user.message\r\n    })\r\n    // if (login?.userToken) {\r\n    //     console.log('hello')\r\n    // }\r\n    // console.log(login?.status)\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        // \r\n        dispatch(LoginAction(data))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"Enter your Password\"\r\n                                            {...register(\"password\", { required: \"Password is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" defaultChecked />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Log In</button>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\"><Link to=\"/forgotpassword\">Forgot Password</Link></span>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\">If not registered? <Link to=\"/signup\"><b>Sign Up</b></Link></span>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LoginSection from '../components/Login/Login';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LoginSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","export default function FormCard({ children, currentStep, prevFormStep }) {\r\n    return (\r\n        <div >\r\n            {currentStep < 1 && (\r\n                <>\r\n                    {currentStep > 0 && (\r\n                        <button\r\n                            onClick={prevFormStep}\r\n                            type=\"button\"\r\n                        >\r\n                            back\r\n                        </button>\r\n                    )}\r\n\r\n                </>\r\n\r\n            )}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    // console.log(data, 'dataaa')\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector, } from 'react-redux'\r\nimport { Register } from '../../redux/Actions/authAction'\r\nimport { useHistory } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as Yup from 'yup'\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required(\"Email is required\"),\r\n    // wallet_id: Yup.string()\r\n    //     .wallet_id()\r\n    //     .required(\"Wallet address is required\"),\r\n    // goal: Yup.string()\r\n    //     .goal()\r\n    //     .required(\"Fundraising goal is required\"),\r\n\r\n    password: Yup.string()\r\n        .required(\"Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\"),\r\n    confirm_password: Yup.string()\r\n        .required(\"Confirm Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\")\r\n        .oneOf([Yup.ref(\"password\")], \"Passwords do not match\")\r\n});\r\n\r\n\r\nconst Signup = ({ formStep, nextFormStep }) => {\r\n    const { setFormValues } = useFormData();\r\n    const dispatch = useDispatch()\r\n    const { register, watch, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"all\",\r\n        resolver: yupResolver(formSchema)\r\n    });\r\n\r\n    // const [role, setRole] = useState()\r\n    // console.log('role', role)\r\n    const OnSubmit = (data) => {\r\n        // dispatch(Register(data))\r\n        setFormValues({ ...data });\r\n        // if (role == 3) {\r\n\r\n        nextFormStep();\r\n        // }\r\n        // if (role == 2) {\r\n        //     const formData = new FormData()\r\n        //     formData.append('email', data.email)\r\n        //     // formData.append('goal', data.goal)\r\n        //     formData.append('password', data.password)\r\n        //     formData.append('confirm_password', data.confirm_password)\r\n        //     // formData.append('wallet_id', data.wallet_id)\r\n        //     // formData.append('role', role)\r\n        //     dispatch(Register(formData))\r\n        // }\r\n    }\r\n\r\n    const { user } = useSelector(state => state.user)\r\n\r\n\r\n    const { errMessage } = useSelector(state => {\r\n        return state?.errmessage?.message\r\n    })\r\n\r\n    return (\r\n        < section className=\"author-area\" >\r\n            <div className=\"container\">\r\n\r\n                <>\r\n                    <div>\r\n                        {errMessage && <p>{errMessage}</p>}\r\n\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 co  l-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span></span>\r\n                                <h3 className=\"mt-3 mb-0\"></h3>\r\n                                <p></p>\r\n                            </div>\r\n                            {/* Item Form */}\r\n                            <div className={formStep === 0 ? styles.showForm : styles.hideForm}>\r\n                                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                    <div className=\"row\">\r\n                                        <div className='steps-center'>\r\n                                            <div className='step1icon'>\r\n\r\n                                                <i className=\"fa-solid fa-circle-check\"> Step 1 </i>\r\n                                            </div>\r\n                                            <div className='stepperline'>\r\n                                                <i style={{ color: '#452868' }}>  ----------------------------- </i>\r\n\r\n                                            </div>\r\n                                            <div className='step2icon'>\r\n\r\n                                                <i className=\"fa-regular fa-circle\" > Step 2 </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Email</label>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    {...register(\"email\", { required: 'Email address is required' })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.email ? \"true\" : \"false\"} />\r\n                                                {/* {errors.errMessage} */}\r\n                                                {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                                {/* {errMessage && <p>{errMessage}</p>} */}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"password\"\r\n                                                    placeholder=\"Password\"\r\n                                                    {...register(\"password\", { required: true })}\r\n                                                    aria-invalid={errors.password ? \"true\" : \"false\"} />\r\n                                                {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Confirm Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"confirm_password\"\r\n                                                    placeholder=\"Confirm password\"\r\n                                                    {...register(\"confirm_password\",\r\n                                                        {\r\n                                                            required: true,\r\n                                                            validate: (val) => {\r\n                                                                if (watch('password') != val) {\r\n                                                                    return \"Your passwords do no match\";\r\n                                                                }\r\n                                                            },\r\n                                                        })}\r\n                                                    aria-invalid={errors.confirm_password ? \"true\" : \"false\"} />\r\n                                                {errors.confirm_password && <p style={{ color: 'red' }} role=\"alert\">{errors.confirm_password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Fundraising Goal</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"goal\"\r\n                                                    placeholder=\"Fundraising goal (MATIC)\"\r\n                                                    {...register(\"goal\",\r\n                                                        {\r\n                                                            required: true,\r\n\r\n                                                        })}\r\n                                                    aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                                {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Wallet Address</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"wallet_id\"\r\n                                                    // defaultValue='1'\r\n                                                    placeholder=\"Wallet address\"\r\n                                                    {...register(\"wallet_id\", { required: true })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                                />\r\n                                                {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"3\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                                </div>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"2\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <div className=\"form-check form-check-inline\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n                                        <div className=\"col-12\">\r\n                                            {/* {role == 2 ? ( */}\r\n                                            {/* <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Signup</button> */}\r\n                                            {/* ) : ( */}\r\n\r\n                                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                                            {/* )} */}\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <span className=\"d-block text-center mt-4\">Already have an account? <Link to=\"/login\"><b>Login</b></Link></span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        </section >\r\n\r\n    )\r\n}\r\n\r\nexport default Signup\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnnualRevenueList, CountryList, HearAboutList, Register } from '../../redux/Actions/authAction'\r\nimport { Controller, useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router'\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\r\nimport { useState } from 'react'\r\nimport JoditEditor from 'jodit-react';;\r\n\r\n// import { Widget } from \"@uploadcare/react-widget\";\r\n// import FileUpload from \"react-material-file-upload\";\r\n// import { uploadcare } from '../lib/uploadcare.min.js';\r\nconst CreateOrganization = ({ formStep, nextFormStep,goBack }) => {\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n    const [description, setDescription] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const organization = useSelector(state => {\r\n        return state.user.organization\r\n    })\r\n    \r\n    const { countries } = useSelector(state => state.countries)\r\n    const { annualRevenue } = useSelector(state => state.annualRevenue)\r\n\r\n    // }\r\n    const { hereAbout } = useSelector(state => state.hereAbout)\r\n    // console.log(user, 'user')\r\n\r\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\r\n        mode: 'all'\r\n    });\r\n\r\n\r\n    const OnSubmit = (values) => {\r\n        setFormValues(values)\r\n        // FormData.append('email', data.email)\r\n        // FormData.append('password', data.password)\r\n        // FormData.append('confirm_password', data.confirm_password)\r\n        const formData = new FormData()\r\n        formData.append('banner_image', values.banner_image[0])\r\n        formData.append('logo', values.logo[0])\r\n        formData.append('email', data.email)\r\n        formData.append('password', data.password)\r\n        formData.append('wallet_id', values.wallet_id)\r\n        // formData.append('role', data.role)\r\n        formData.append('goal', values.goal)\r\n        formData.append('confirm_password', data.confirm_password)\r\n        formData.append('organization_name', values.organization_name)\r\n        formData.append('url', values.url)\r\n        formData.append('country', values.country)\r\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\r\n        formData.append('tax_id', values.tax_id)\r\n\r\n        formData.append('social', values.social)\r\n        formData.append('social_link', values.social_link)\r\n        formData.append('description', description)\r\n        // formData.append('method_heard_detail', values.method_heard_detail)\r\n\r\n        dispatch(Register(formData))\r\n        // if (formData) {\r\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\r\n        //     history.push('/login')\r\n        // }\r\n    }\r\n\r\n    const socialmedia = useSelector(state => {\r\n        return state?.getSocialmediaIcons?.getsocial\r\n    })\r\n    // console.log('social', socialmedia)\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n        dispatch(AnnualRevenueList())\r\n        dispatch(HearAboutList())\r\n        dispatch(GetSocialMediaIcons())\r\n    }, [])\r\n\r\n\r\n    if (organization) {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <div className={formStep === 1 ? styles.showForm : styles.hideForm}>\r\n                            <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                {/* <button\r\n                                    // className={styles.back}\r\n                                    onClick={prevFormStep}\r\n                                    type=\"button\"\r\n                                >\r\n                                    back\r\n                                </button> */}\r\n                                <div className=\"row\">\r\n                                    <div className='col-12 d-flex justify-content-center'>\r\n                                        <div className='orgicon1'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 1</i>\r\n                                        </div>\r\n\r\n                                        <div className='orgicon1line'>\r\n                                            <span style={{ color: '#452868' }}> ----------------------------- </span>\r\n\r\n                                        </div>\r\n                                        <div className='orgicon2'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 2</i>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Fundraising Goal</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"goal\"\r\n                                                placeholder=\"Fundraising goal (MATIC)\"\r\n                                                {...register(\"goal\",\r\n                                                    {\r\n                                                        required: true,\r\n\r\n                                                    })}\r\n                                                aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                            {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Funding Wallet </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"wallet_id\"\r\n                                                // defaultValue='1'\r\n                                                placeholder=\"Funding Wallet\"\r\n                                                {...register(\"wallet_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Name</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"organization_name\"\r\n                                                placeholder=\"Organization name\"\r\n                                                {...register(\"organization_name\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.organization_name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Website</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"url\"\r\n                                                placeholder=\"Website\"\r\n                                                {...register(\"url\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.url ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Describe your project\"\r\n\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <Controller\r\n                                                control={control}\r\n                                                name=\"description\"\r\n                                                defaultValue=\"\"\r\n                                                render={({ field: { value, onChange } }) => {\r\n                                                    return <JoditEditor\r\n                                                        ref={editor}\r\n                                                        value={description}\r\n                                                        // config={config}\r\n\r\n                                                        placeholder=\"start typing\"\r\n                                                        tabIndex={1} // tabIndex of textarea\r\n                                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                        onChange={newContent => { }}\r\n                                                    />\r\n                                                }}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Country</label>\r\n\r\n                                            <select name=\"country\"\r\n                                                {...register(\"country\", { required: true })}>\r\n                                                aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                                {countries.data?.data?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.name}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"annual_revenue_range\"\r\n                                                {...register(\"annual_revenue_range\", { required: true })}>\r\n                                                {annualRevenue?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key.id} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>EIN Number/Tax Id</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"tax_id\"\r\n                                                placeholder=\"EIN Number/Tax Id(optional)\"\r\n                                                {...register(\"tax_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (required)</label>\r\n                                            <select name=\"social\"\r\n                                                {...register(\"social\", { required: true })}>\r\n                                                aria-invalid={errors.social ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\r\n                                                {socialmedia?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.title}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (secondary)</label>\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"social_link\"\r\n                                                    placeholder=\"social link(optional) \"\r\n                                                    {...register(\"social_link\")}\r\n                                                // {...register(\"email\")}\r\n                                                // aria-invalid={errors.social_link ? \"true\" : \"false\"}\r\n                                                />\r\n                                            </div>\r\n                                            {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"project\"\r\n                                                {...register(\"hear_about\", { required: true })}>\r\n                                                {hereAbout?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Banner</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n\r\n                                                name=\"banner_image\"\r\n                                                placeholder=\"Select file\"\r\n                                                disp\r\n                                                {...register(\"banner_image\", { required: true })}\r\n                                                aria-invalid={errors.banner_image ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\r\n\r\n                                            {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Logo</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n                                                name=\"logo\"\r\n                                                placeholder=\"Select file\"\r\n                                                {...register(\"logo\", { required: true })}\r\n                                                aria-invalid={errors.logo ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <div className='logo'>\r\n\r\n                                                <span className='logo-dis'>maximum height should be 250 pixels</span>\r\n                                            </div>\r\n                                            {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\r\n                                    </div>\r\n                                    <div className=\"col-3\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={()=>goBack()}>Previous</button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CreateOrganization","import { useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Signup from './Signup'\r\nimport CreateOrganization from './createOrganization';\r\nimport FormProvider from \"./Context/context\";\r\n\r\n\r\nconst SignupIndex = () => {\r\n  const [formStep, setFormStep] = useState(0);\r\n\r\n  const nextFormStep = () => setFormStep((currentStep) => currentStep + 1);\r\n\r\n  const prevFormStep = () => setFormStep((currentStep) => currentStep - 1);\r\n\r\n  return (\r\n    <FormProvider>\r\n\r\n      <FormCard currentStep={formStep} prevFormStep={prevFormStep}>\r\n        {formStep === 0 && (\r\n          <Signup formStep={formStep} nextFormStep={nextFormStep} />\r\n        )}\r\n        {formStep === 1 && <CreateOrganization goBack={prevFormStep} />\r\n        }\r\n      </FormCard>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default SignupIndex;\r\n","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport SignupSection from '../components/Signup';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Signup = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <SignupSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contact',\r\n\r\n    initialState: {\r\n        contact: [],\r\n\r\n\r\n    },\r\n    reducers: {\r\n\r\n        postContact: (state, action) => {\r\n            state.contact = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const contactReducer = contactSlice.reducer\r\n\r\nexport const {\r\n    postContact\r\n} = contactSlice.actions;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ContactAction } from '../../redux/Actions/contactAction';\r\nimport Loader from '../Loader/loader';\r\n\r\n\r\nconst Contact = () => {\r\n    const [loading, setLoading] = useState()\r\n    const dispatch = useDispatch()\r\n    // useEffect(() => {\r\n    //     dispatch(ContactAction())\r\n    // })\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        setLoading(true)\r\n        const formData = new FormData()\r\n        formData.append('name', data.name)\r\n        formData.append('subject', data.subject)\r\n        formData.append('email', data.email)\r\n        formData.append('description', data.description)\r\n        dispatch(ContactAction(formData, setLoading))\r\n    }\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>Contact</span>\r\n                            <h3 className=\"mt-3 mb-0\">Get In Touch</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form id=\"contact-form\" className=\"item-form card no-hover\" onSubmit={handleSubmit(OnSubmit)} >\r\n                            {loading ? (\r\n                                <Loader />\r\n                            ) : (\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name\"  {...register(\"name\", { required: true })}\r\n                                                aria-invalid={errors.name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Name is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" {...register(\"email\", { required: true })}\r\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.email?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Email is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"subject\" placeholder=\"Subject\"  {...register(\"subject\", { required: true })}\r\n                                                aria-invalid={errors.subject ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.subject?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Subject is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <textarea className=\"form-control\" name=\"message\" placeholder=\"Message\" cols={30} rows={3} defaultValue={\"\"}  {...register(\"description\", { required: true })}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Message is required</p>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\"><i className=\"icon-paper-plane mr-2\" />Send Message</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </form>\r\n                        <p className=\"form-message\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Contact;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { postContact } from \"../Slices/contactSlice\";\r\nexport const ContactAction = (params, setLoading) => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/contact-us/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(postContact(res));\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", res.data.message, 'success')\r\n                .then(function () {\r\n                    window.location = \"/\";\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ContactSection from '../components/Contact/Contact';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                {/* <Breadcrumb title=\"Contact\" subpage=\"Pages\" page=\"Contact\" /> */}\r\n                <ContactSection />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ForgotPasswordAction, LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { forgotpassword, message, statusCode } = useSelector(state => {\r\n        // \r\n        return state.forgotpassword\r\n    })\r\n\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        dispatch(ForgotPasswordAction(data)).then(() => {\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors?.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div>{errors.username && errors.username.message}</div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Send Reset Link</button>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                    <hr />\r\n                                    <div className=\"other-option\">\r\n                                        Social Icons\r\n                                        <div className=\"social-icons d-flex justify-content-center\">\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <a key={`lsd_${idx}`} className={item.link} href=\"#\">\r\n                                                        <i className={item.icon} />\r\n                                                        <i className={item.icon} />\r\n                                                    </a>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LoginSection from '../components/Login/Login';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport ForgotPassword from '../components/ForgotPassword/forgotPassword';\r\n\r\nconst Forgot = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ForgotPassword />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forgot\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from './utils';\r\n\r\nconst PrivateRoute = ({ component: Component, restricted, ...rest }) => {\r\n    // const isLog = isLogin()\r\n    // \r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Redirect to=\"/\" />\r\n                : <Component {...props} />\r\n\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","// import { getValue } from '@mui/system';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { CategoriesAction, ProjectDetail, UpdateProject } from '../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\nimport GeoLocation from '../components/Create/geoLocation';\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../redux/Actions/authAction';\r\n\r\nconst EditProject = () => {\r\n    const editor = useRef(null);\r\n    const [country, setCountry] = useState();\r\n    console.log(country)\r\n    const [state, setState] = useState();\r\n    const [city, setCity] = useState();\r\n    const [description, setDescription] = useState();\r\n    // const [descriptionup, setDescriptionup] = useState();\r\n    // console.log(descriptionup, 'discup')\r\n    const [type, setType] = useState();\r\n    const { id } = useParams();\r\n    // console.log(id, \"idd\")\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    const dis = projdetail.description\r\n    // setDescriptionup(dis)\r\n    // console.log(dis, 'dis')\r\n    // console.log(projdetail, \"gfgfhghgghhgh\")\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n\r\n    }, [id])\r\n    const config = {\r\n        placeholderText: 'Edit Your Content Here!',\r\n        charCounterCount: false\r\n    }\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(first)\r\n\r\n    // console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            // const formData = new FormData()\r\n            // // formData.append('country_id', event?.currentTarget?.value)\r\n            // formData.append('country_id', projdetail.country)\r\n            // dispatch(StateList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n\r\n        dispatch(UpdateProject(id, formData))\r\n    }\r\n\r\n\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    // console.log(cat, 'cat')\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n    const handleChangeCountry = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n        const formData = new FormData()\r\n        // formData.append('country_id', event?.currentTarget?.value)\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    return (\r\n        // <Modal\r\n        //     {...props}\r\n        //     size=\"lg\"\r\n        //     aria-labelledby=\"contained-modal\"\r\n        //     centered\r\n        // >\r\n        //     <Modal.Header closeButton>\r\n        //         <Modal.Title id=\"contained-modal\">\r\n        //             Collection\r\n        //         </Modal.Title>\r\n        //     </Modal.Header>\r\n        //     <Modal.Body>\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n                    <div className=\"col-12 col-md-7\">\r\n                        <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Get Started</span>\r\n                                <h3 className=\"mt-3 mb-0\">Update Project</h3>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"2\" onChange={(e) => setType(e.target.value)} {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                        </div>\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"1\" onChange={(e) => setType(e.target.value)}  {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {/* {type == 1 && ( */}\r\n\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Project name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"title\"\r\n                                            placeholder=\"Project name\"\r\n                                            {...register(\"title\", { required: true })}\r\n                                            aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                                    </div>\r\n                                    {/* )} */}\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Web address</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"address\"\r\n                                            placeholder=\"Web Address\"\r\n                                            {...register(\"address\", { required: true })}\r\n                                            aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <label>Description</label>\r\n                                    <div className=\"form-group\">\r\n                                        {/* <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"textarea\"\r\n                                            // data-provide=\"markdown-editable\" rows=\"10\"\r\n                                            placeholder=\"Description\"\r\n                                            cols={30}\r\n                                            {...register(\"description\", { required: true })}\r\n                                            aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        /> */}\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n                                            render={({ field: { value, onChange } }) => {\r\n                                                return <JoditEditor\r\n                                                    ref={editor}\r\n                                                    value={value}\r\n                                                    // config={config}\r\n\r\n                                                    placeholder=\"start typing\"\r\n                                                    tabIndex={1} // tabIndex of textarea\r\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                    onChange={newContent => { }}\r\n                                                />\r\n                                            }}\r\n                                        />\r\n                                        {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                        {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"country\"\r\n                                                    {...register(\"country\", { required: true })}\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeCountry()\r\n                                                    }>\r\n\r\n                                                    aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                        Select your country</option>\r\n                                                    {countries?.data?.data?.map((option, key) => (\r\n                                                        <>\r\n                                                            <option key={key.id} value={option.id} >\r\n\r\n                                                                {option.name}\r\n\r\n                                                            </option>\r\n                                                        </>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"state\"\r\n\r\n                                                    {...register(\"state\", { required: true })}\r\n                                                    //  onChange={handleChangeState}\r\n\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeState\r\n                                                    } >\r\n                                                    aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state</option>\r\n                                                    {states?.data?.data?.map((option, key) => (\r\n\r\n                                                        <><option key={key.id} value={option.id}  >\r\n                                                            {option.name}\r\n                                                        </option></>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>City or Region</label>\r\n\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}>\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        {type == 2 ? (\r\n\r\n                                            <label>Price</label>\r\n                                        ) : (\r\n\r\n                                            <label>Price per NFT</label>\r\n                                        )}\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"price\"\r\n                                            placeholder=\"Price\"\r\n                                            {...register(\"price\", { required: true })}\r\n                                            aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Number of NFTs</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"number_of_nft\"\r\n                                            defaultValue={1}\r\n                                            disabled={type == 1}\r\n                                            placeholder=\"Select your number of NFTs (1-10)\"\r\n                                            min={1}\r\n                                            max={10}\r\n                                            {...register(\"number_of_nft\", { required: true })}\r\n                                            aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                        {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {type == 2 && (\r\n\r\n                                    <><div className=\"col-12 col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Campaign Start date</label>\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control\"\r\n                                                name=\"start_date\"\r\n                                                min={disablePastDate()}\r\n                                                // placeholder=\"Start date\"\r\n                                                {...register(\"start_date\", { required: true })}\r\n                                                aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                            {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                        </div>\r\n                                    </div><div className=\"col-12 col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Campaign End Date</label>\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"end_date\"\r\n                                                    min={disablePastDate()}\r\n                                                    // placeholder=\"End date\"\r\n                                                    {...register(\"end_date\", { required: true })}\r\n                                                    aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                                {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                            </div>\r\n                                        </div></>\r\n                                )}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category</label>\r\n                                        <select name=\"annual_revenue_range\"\r\n                                            // defaultValue={}\r\n                                            {...register(\"category_id\")}>\r\n                                            {cat?.map((option, key) => (\r\n\r\n                                                <option key={key.id} value={option.id}  >\r\n                                                    {option.title}\r\n\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        //     </Modal.Body>\r\n        // </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default EditProject;","import React, { Component } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport EditProject from '../Edit/editProject';\r\n\r\nconst ProjectUpdate = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <EditProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjectUpdate;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst TermsConditions = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter())\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{footer?.footer?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: footer?.footer?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default TermsConditions","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport SignupSection from '../components/Signup';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport TermsConditions from '../components/Footer/t&c';\r\n\r\n\r\nconst TermsCond = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <TermsConditions />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TermsCond\r\n","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { CategoriesAction, getPublicLiveProjects } from '../../redux/Actions/projectAction';\r\n\r\nconst projectTypesMap = {\r\n    \"LatestProjects\": 2,\r\n    \"RecentCampaigns\": 1\r\n}\r\n\r\nconst ExploreAll = () => {\r\n\r\n    const { type } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const liveProjects = useSelector(state => {\r\n        return state?.projectdetails?.liveProjects[type]\r\n    })\r\n    console.log(liveProjects?.nft_data?.image, 'live')\r\n    useEffect(() => {\r\n        // \r\n        dispatch(getPublicLiveProjects({\r\n            cursor: 1,\r\n            type: projectTypesMap[type],\r\n            projectType: type,\r\n\r\n        }))\r\n    }, [dispatch, type])\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(CategoriesAction())\r\n    // }, [])\r\n\r\n    // const cate = useSelector(state => {\r\n    //     // \r\n    //     return []\r\n    // })\r\n    // console.log(cate, 'category')\r\n    return (\r\n\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mb-4\">\r\n                            {/* <span>Explore</span> */}\r\n                            <h3 className=\"mt-3 mb-0\">{type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"row justify-content-center text-center\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n                           \r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"all\" defaultChecked className=\"explore-btn\" />\r\n                                <span>Arts</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Education</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Gaming</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"art\" className=\"explore-btn\" />\r\n                                <span>Music</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Medical</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Other</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Photography</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"music\" className=\"explore-btn\" />\r\n                                <span>Sports</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Tradings Cards</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Travel</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>Utility</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"collectibles\" className=\"explore-btn\" />\r\n                                <span>Virtual Worlds</span>\r\n                            </label>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {liveProjects && liveProjects.length ?\r\n                        [...new Map(liveProjects?.map(item =>\r\n                            [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <Link to={`/projdetails/${item.id}`}>\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.nft_data[0].image} alt=\"\" />\r\n\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 pt-3 p-0\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <a href=\"/item-details\">\r\n                                                                <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                            </a>\r\n                                                            <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span style={{ color: '#8E8E8E' }}>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\"> @{item?.user_data?.username}</h6>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div>\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />dfg</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            }) :\r\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                            <h2 className='allproj2'>\r\n                                No latest project found\r\n                            </h2>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default ExploreAll;","import React, { Component } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport EditProject from '../Edit/editProject';\r\nimport ExploreAll from '../components/Explore/viewAllLatest';\r\nimport { Breadcrumb } from 'react-bootstrap';\r\n\r\nconst All = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <ExploreAll type=\"Latest Projects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default All;","import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst AllCollections = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state.collection.collection\r\n    })\r\n    // console.log(coll, \"coll\")\r\n    useEffect(() => {\r\n\r\n        dispatch(PopularCollectionAction())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center mb-4\">\r\n\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center text-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* Explore Menu */}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items explore-items h-auto\">\r\n                        {coll && coll.length ?\r\n                            [...new Map(coll?.map(item =>\r\n                                [item[\"title\"], item])).values()]?.map((item, idx) => {\r\n                                    return (\r\n                                        <Link key={`edth_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\" >\r\n                                            <div>\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} />\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <a>\r\n                                                                <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                            </a>\r\n                                                            <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                <span style={{ color: '#8E8E8E' }}>Owned By</span>\r\n                                                                <a href=\"/author\">\r\n                                                                    <h6 className=\"ml-2 mb-0\">{item?.user_data?.username}</h6>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                <span>{item.number_of_nft} NFTS</span>\r\n                                                            </div>\r\n                                                            <div>\r\n                                                                {item.status == '1' ?\r\n                                                                    <Button>Donation</Button>\r\n                                                                    :\r\n\r\n                                                                    <Button>Product Sale</Button>\r\n                                                                }\r\n                                                            </div>\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                            <div className=\"col-12 col-sm-6 col-lg-3\">\r\n                                <h2>\r\n                                    No Popular Collections\r\n                                </h2>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default AllCollections; ","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AllCollections from '../components/Collections/exploreCollection';\r\n\r\nconst ColExplore = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <AllCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ColExplore;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AboutUsAction, getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst AboutUs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const about = useSelector(state => {\r\n        return state.footer.aboutus\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(AboutUsAction())\r\n    }, [])\r\n    // console.log(about, 'footerabout')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{about?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: about?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AboutUs","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Activities from '../components/Activity/Activity';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AboutUs from '../components/Footer/about';\r\n\r\nclass Aboutus extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                {/* <Breadcrumb title=\"Activity\" subpage=\"Pages\" page=\"Activity\" /> */}\r\n                <AboutUs />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Aboutus;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPublicLiveProjects, LatestProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\nconst ProjNFTS = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams();\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(LatestProjectDetail(id))\r\n\r\n    }, [id])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container\">\r\n                <div className='intro row m-0'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"15px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row items\">\r\n\r\n                    {latprojdetail?.nft_data?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* <div className=\"intro text-center\">\r\n                                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati <br /> dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.</p>\r\n                                </div> */}\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.id}`}>\r\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"countdown-times mb-3\">\r\n                                                <div className=\"countdown d-flex\" data-date={item.end_date} />\r\n                                            </div>\r\n                                            <a href=\"/item-details\">\r\n                                                <h5 className=\"mb-0\">{item.title.toUpperCase()} {item.token_id}</h5>\r\n                                            </a>\r\n                                            {/* <a className=\"seller d-flex align-items-center my-3\">\r\n                                                <img className=\"avatar-sm rounded-circle\"\r\n                                                    src='https://images.unsplash.com/photo-1547555999-14e818e09e33?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1032&q=80' alt=\"\" />\r\n                                                <span className=\"ml-2\">{item.from}</span>\r\n                                            </a> */}\r\n                                            <div className=\"card-bottom d-flex\">\r\n                                                <span dangerouslySetInnerHTML={{ __html: item.description.slice(0, 28).toUpperCase() }} /><span></span>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                {/* {\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <a className=\"btn btn-bordered-white mt-5\">Load More</a>\r\n                    </div>\r\n                </div>\r\n               } */}\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default ProjNFTS;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction MyVerticallyCenteredModal(props) {\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n    const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Refer your friends\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-10 p-0\">\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                {/* <label>Display name</label> */}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"display_name\"\r\n                                    value={url}\r\n                                // required\r\n                                // placeholder=\"Enter collection name\"\r\n                                // {...register('title')}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n\r\n                            </div>\r\n                            {/* <FacebookShareCount url={\"shareUrl\"}>\r\n                            {shareCount => <span className=\"myShareCountWrapper\">{shareCount}</span>}\r\n                        </FacebookShareCount> */}\r\n\r\n\r\n                            <hr />\r\n                            <div className=\"refer-icons\">\r\n                                <TwitterShareButton url={'www.twitter.com' + '/' + url} title=\"Reffral code \"> <TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                <FacebookShareButton url={'www.facebook.com' + '/' + url} title=\"Reffral code \"> <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                <WhatsappShareButton url={'https://web.whatsapp.com/' + '/' + url} title=\"Reffral code \"><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                <TelegramShareButton url={'www.telegram.com' + '/' + url} title=\"Reffral code \"><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                <InstapaperShareButton url={'www.instagram.com' + '/' + url} title=\"Reffral code \">  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                <LinkedinShareButton url={'www.linkedin.com' + '/' + url} title=\"Reffral code \">  <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                <EmailShareButton url={'www.gmail.com' + '/' + url} title=\"Reffral code \" ><EmailIcon size={32} round={true} /></EmailShareButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 p-0 text-right\">\r\n                            <CopyToClipboard text={url}>\r\n                                <div className='copy'>\r\n\r\n                                    <a> <i className=\"fa-sharp fa-solid fa-copy\"></i></a>\r\n                                </div>\r\n                            </CopyToClipboard>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default MyVerticallyCenteredModal","\r\n// import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n// import { Button, Form, Input, Space, Upload } from 'antd';\r\n// import TextArea from 'antd/lib/input/TextArea';\r\n// import Modal from 'react-bootstrap/Modal';\r\n// import React, { Fragment, useEffect, useState, useRef, useMemo } from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n// import { create } from 'ipfs-http-client'\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\n// import { useFormData } from './Context/context'\r\n// import MyVerticallyCenteredModal from './createCollection';\r\n// import styles from './styles/styles.module.scss'\r\n// import 'antd/lib/form/style/css';\r\n// import 'antd/lib/upload/style/css';\r\n// import { Collapse } from 'antd';\r\n// import 'antd/lib/modal/style/css';\r\n// import 'antd/lib/button/style/css'\r\n// import JoditEditor from 'jodit-react'\r\n// import Loader from '../Loader/loader';\r\n// import { useParams } from 'react-router';\r\n// import UploadImage from '../../shared/Upload';\r\n// import { dataURLtoBlob } from '../../utils/blobfromurl';\r\n\r\n// const getBase64 = (file) =>\r\n//     new Promise((resolve, reject) => {\r\n//         const reader = new FileReader();\r\n//         reader.readAsDataURL(file);\r\n//         reader.onload = () => resolve(reader.result);\r\n//         reader.onerror = (error) => reject(error);\r\n//     });\r\n// // import ImgCrop from 'antd-img-crop';\r\n\r\n// const EditNft = (props) => {\r\n\r\n//     const editor = useRef(null);\r\n//     const [fileList, setFileList] = useState([])\r\n//     // const { data, setFormValues } = useFormData();\r\n//     const [previewOpen, setPreviewOpen] = useState(false);\r\n//     const [previewImage, setPreviewImage] = useState('');\r\n//     const [previewTitle, setPreviewTitle] = useState('');\r\n//     // console.log(data, 'formdta')\r\n//     const [count, setCount] = useState(0);\r\n//     // const [nft_description, setNft_description] = useState([])\r\n//     // console.log('nft_description', nft_description)\r\n\r\n//     const [modalShow, setModalShow] = React.useState(false);\r\n//     const [modalShoww, setModalShoww] = React.useState(false);\r\n//     const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n//     console.log(nft_collection_id, \"sdfasf\")\r\n//     const [items, setItems] = useState([]);\r\n//     const [coldata, setColData] = useState();\r\n//     const [allcol, setAllColl] = useState()\r\n//     const [form] = Form.useForm()\r\n\r\n//     const [image, setImage] = useState('')\r\n\r\n//     const [loading, setLoading] = useState(false)\r\n//     const handleDecrement = () => {\r\n//         setCount(prevCount => prevCount - 1);\r\n//     };\r\n\r\n\r\n//     const defaultValues = {\r\n//         setNft_description: '',\r\n//     }\r\n\r\n//     const id = useParams()\r\n//     const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n//     const dispatch = useDispatch()\r\n//     const col = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.getcollections\r\n//     })\r\n\r\n\r\n//     const nftdetail = useSelector(state => {\r\n//         // \r\n//         return state.projectdetails.nftlist\r\n\r\n//     })\r\n\r\n//     useEffect(() => {\r\n//         dispatch(NftList(props.nft_id, props.id))\r\n//     }, [props.nft_id, props.id])\r\n\r\n//     console.log(\"nftdet\", nftdetail)\r\n\r\n\r\n//     useEffect(() => {\r\n//         form.setFieldsValue({\r\n//             nfts: [{\r\n//                 nft_name: nftdetail.title,\r\n//                 nft_description: nftdetail.description,\r\n//                 nft_collection_id: nftdetail.collection_id,\r\n//                 nft_image: nftdetail.image,\r\n//             }]\r\n\r\n//         })\r\n//         console.log(nftdetail.image, \"Image\")\r\n//         setImage(nftdetail.image)\r\n//         setNft_collection_id(nftdetail.collection_id)\r\n\r\n//     }, [form, nftdetail])\r\n\r\n//     useEffect(() => {\r\n\r\n//         dispatch(GetCollectionsAction())\r\n\r\n//     }, []);\r\n\r\n\r\n//     const onFinish = async (values) => {\r\n\r\n\r\n//         // setLoading(true)\r\n//         const nftImagepromises = [uploadNFT(dataURLtoBlob(image))]\r\n//         // const nftImagepromises = nfts?.map(x => uploadNFT(x?.image))\r\n//         const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n//         // const imagesRes = await (nftImagepromises).then(res => res)\r\n//         // \r\n\r\n//         const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n//         // const addedImage = ipfsBaseUrl + image\r\n\r\n\r\n//         const formData = new FormData()\r\n\r\n\r\n\r\n\r\n\r\n//         formData.append('image', addedImage)\r\n//         formData.append('title', values?.nfts?.map(x =>\r\n//             x.nft_name\r\n//         ))\r\n//         // const newlist = newList.push(nft_collection_id);\r\n//         formData.append('collection_id', nft_collection_id)\r\n//         // formData.append('nft_description', nft_description)\r\n//         formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n//         // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n\r\n//         // dispatch(uploadNFT())\r\n//         dispatch(UpdateNft(formData, props))\r\n//         // setLoading(false)\r\n\r\n//         // console.log('Received values of form:', values, data)\r\n\r\n//     };\r\n//     const handleCancel = () => setPreviewOpen(false);\r\n\r\n//     const handlePreview = async (file) => {\r\n//         if (!file.url && !file.preview) {\r\n//             file.preview = await getBase64(file.originFileObj);\r\n//         }\r\n//         setPreviewImage(file.url || file.preview);\r\n//         setPreviewOpen(true);\r\n//         setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n//     };\r\n\r\n//     const fileProps = {\r\n//         name: \"file\",\r\n//         multiple: false,\r\n//         beforeUpload: () => {\r\n//             return false;\r\n//         },\r\n//         onChange(info) {\r\n//             if (info.file.status !== \"uploading\") {\r\n//                 let reader = new FileReader();\r\n//                 reader.readAsDataURL(info.file);\r\n//                 // setUploadedImage(info.file);\r\n//             } else {\r\n//             }\r\n//         }\r\n//     };\r\n\r\n\r\n\r\n//     const { Panel } = Collapse;\r\n//     const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n\r\n//     const onPositionChange = (newExpandIconPosition) => {\r\n//         setExpandIconPosition(newExpandIconPosition);\r\n//     };\r\n//     const onChange = (key) => {\r\n//         console.log(key);\r\n//     };\r\n//     const nfts = [\r\n//         {\r\n//             key: 0,\r\n//             name: 'Wheat Flour',\r\n//             amount: 1000\r\n//         },\r\n\r\n//     ];\r\n\r\n//     return (\r\n//         // <section className=\"author-area\">\r\n//         <div>\r\n//             {loading ? (\r\n//                 <Loader />\r\n//             ) : (\r\n//                 <Modal\r\n//                     {...props}\r\n//                     size=\"lg\"\r\n//                     aria-labelledby=\"contained-modal-title-vcenter\"\r\n//                 // centered\r\n//                 >\r\n//                     <Modal.Header >\r\n//                         <Modal.Title id=\"contained-modal-title-vcenter\">\r\n//                             Update NFT\r\n//                         </Modal.Title>\r\n//                         <div>\r\n//                             <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n//                         </div>\r\n//                     </Modal.Header>\r\n//                     <Modal.Body>\r\n//                         <div>\r\n//                             <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n//                                 nfts: nfts, defaultValues\r\n//                             }}\r\n//                                 // onSubmit={(event) => handleSubmit(event)}\r\n//                                 onFinish={(event) => onFinish(event)}\r\n//                                 autoComplete=\"off\" className=\"item-form card no-hover\">\r\n//                                 <Form.List name=\"nfts\">\r\n\r\n//                                     {(fields, { add, remove }) => (\r\n//                                         <>\r\n//                                             {/* <div className='steps-center'>\r\n\r\n\r\n//                                                 <div className='orgicon1'>\r\n\r\n//                                                     <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n//                                                 </div>\r\n\r\n//                                                 <div className='orgicon1line'>\r\n//                                                     <span style={{}}> ----------------------------- </span>\r\n\r\n//                                                 </div>\r\n//                                                 <div className='orgicon2'>\r\n\r\n//                                                     <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n//                                                 </div>\r\n//                                             </div> */}\r\n//                                             <>\r\n//                                                 {fields.map(({ key, name, ...restField }, index) => (\r\n//                                                     // <Space\r\n//                                                     //     key={key}\r\n//                                                     //     style={{\r\n//                                                     //         display: 'flex',\r\n//                                                     //         marginBottom: 8,\r\n//                                                     //     }}\r\n//                                                     //     align=\"baseline\"\r\n//                                                     // >\r\n//                                                     <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n//                                                         <Panel header=\"Details\" key=\"1\">\r\n//                                                             <Fragment>\r\n//                                                                 {/* <div>Artwork {index}</div> */}\r\n//                                                                 <div className=\"row\">\r\n\r\n//                                                                     <div className=\"col-md-10 col-12\">\r\n//                                                                         <label>Name</label>\r\n//                                                                         <div>\r\n\r\n\r\n//                                                                             <Form.Item\r\n//                                                                                 {...restField}\r\n//                                                                                 name={[name, \"nft_name\"]}\r\n//                                                                                 // label=\"Enter name\"\r\n//                                                                                 // name=\"name\"\r\n//                                                                                 rules={[\r\n//                                                                                     {\r\n//                                                                                         required: true,\r\n//                                                                                         message: 'Missing  name',\r\n//                                                                                     },\r\n//                                                                                 ]}\r\n//                                                                             >\r\n\r\n//                                                                                 {/* <label>Name</label> */}\r\n//                                                                                 <Input placeholder=\"Name\" />\r\n//                                                                             </Form.Item>\r\n//                                                                         </div>\r\n//                                                                         <label>Description</label>\r\n//                                                                         <div>\r\n\r\n//                                                                             <Form.Item\r\n//                                                                                 {...restField}\r\n//                                                                                 name={[name, \"nft_description\"]}\r\n//                                                                                 // label=\"Enter name\"\r\n//                                                                                 // name=\"name\"\r\n//                                                                                 rules={[\r\n//                                                                                     {\r\n//                                                                                         required: true,\r\n//                                                                                         message: 'Missing  description',\r\n//                                                                                     },\r\n//                                                                                 ]}\r\n//                                                                             >\r\n//                                                                                 {/* <Controller\r\n//                                                                             control={control}\r\n//                                                                             name=\"nft_description\"\r\n//                                                                             defaultValue=\"\"\r\n//                                                                             render={({ field: { value, onChange } }) => {\r\n//                                                                                 return  */}\r\n//                                                                                 <JoditEditor\r\n//                                                                                     ref={editor}\r\n//                                                                                     value={'nft_description'}\r\n//                                                                                     // config={config}\r\n\r\n//                                                                                     placeholder=\"start typing\"\r\n//                                                                                     tabIndex={1} // tabIndex of textarea\r\n//                                                                                     // onBlur={newContent => 'nft_description'(newContent)} // preferred to use only this option to update the content for performance reasons\r\n//                                                                                     onChange={newContent => { }}\r\n//                                                                                 />\r\n//                                                                                 {/* }} */}\r\n//                                                                                 {/* /> */}\r\n//                                                                             </Form.Item>\r\n//                                                                         </div>\r\n//                                                                     </div>\r\n\r\n//                                                                     <div className=\"col-md-1 col-12\">\r\n//                                                                         <MinusCircleOutlined onClick={(e) => { remove(name); handleDecrement(e); }} />\r\n//                                                                     </div>\r\n//                                                                     {/* </div> */}\r\n//                                                                     <div className=\"col-md-3 col-12\">\r\n\r\n//                                                                         {/* <div className=\"col-24\"> */}\r\n\r\n//                                                                         <div className=\"form-group\">\r\n//                                                                             <label className='mt-2'>Choose Collection</label>\r\n//                                                                             <div className=\"card choose_div\" style={{\r\n//                                                                                 background: \"black\",\r\n//                                                                                 marginBottom: \"8px\",\r\n//                                                                             }}>\r\n//                                                                                 <div className=\"card-body \">\r\n//                                                                                     <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n//                                                                                         <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n//                                                                                     </Button>\r\n\r\n//                                                                                     <MyVerticallyCenteredModal\r\n//                                                                                         show={modalShow}\r\n//                                                                                         onHide={() => setModalShow(false)} />\r\n//                                                                                 </div>\r\n//                                                                             </div>\r\n//                                                                         </div>\r\n//                                                                     </div>\r\n\r\n\r\n//                                                                     {col?.map((item, idx) => (\r\n\r\n//                                                                         <div key={`auc_${idx}`} id={item.id} className=\"col-md-3 col-12 choose_div\">\r\n//                                                                             {/* <Form.Item\r\n//                                                                             {...restField}\r\n//                                                                             name={[name, \"nft_collection_id\"]}\r\n//                                                                             // getValueFromEvent={getFile}\r\n//                                                                             rules={[\r\n//                                                                                 {\r\n//                                                                                     required: true,\r\n//                                                                                     message: 'Please select nft collection',\r\n//                                                                                 },\r\n//                                                                             ]}\r\n\r\n//                                                                         > */}\r\n//                                                                             <label className='hidden-word'>jsaswjdwjd</label>\r\n\r\n//                                                                             <div id={item.id} onClick={() => setNft_collection_id(item.id)} className=\"card\"\r\n//                                                                                 style={{\r\n//                                                                                     background: \"black\",\r\n//                                                                                     marginBottom: \"8px\",\r\n//                                                                                     border: nft_collection_id == item.id ? \"1px solid #fff\" : null\r\n//                                                                                 }}>\r\n//                                                                                 <div className=\"card-body\">\r\n//                                                                                     <div>\r\n\r\n\r\n//                                                                                         {item.title}\r\n//                                                                                     </div>\r\n\r\n\r\n//                                                                                 </div>\r\n//                                                                             </div>\r\n//                                                                             {/* </Form.Item> */}\r\n\r\n//                                                                         </div>\r\n//                                                                         // </div>\r\n//                                                                     ))}\r\n//                                                                     <div className=\"col-md-12 col-12\">\r\n//                                                                         <label>Upload Nft</label>\r\n//                                                                         <div>\r\n//                                                                             <Form.Item\r\n//                                                                                 {...restField}\r\n//                                                                                 name={[name, \"nft_image\"]}\r\n//                                                                                 // getValueFromEvent={getFile}\r\n//                                                                                 rules={[\r\n//                                                                                     {\r\n//                                                                                         required: true,\r\n//                                                                                         message: 'Please select a image',\r\n//                                                                                     },\r\n//                                                                                 ]}\r\n\r\n//                                                                             >\r\n\r\n//                                                                                 {/* <Upload\r\n//                                                                                     {...fileProps}\r\n//                                                                                     action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n//                                                                                     listType=\"picture-card\"\r\n//                                                                                     // fileList={fileList}\r\n//                                                                                     // onChange={onChange}\r\n//                                                                                     src={'/img/nft.png'}\r\n//                                                                                     onPreview={handlePreview}\r\n//                                                                                     maxCount={1}\r\n\r\n//                                                                                 >\r\n//                                                                                     + Upload\r\n//                                                                                 </Upload> */}\r\n//                                                                                 <UploadImage\r\n//                                                                                     imageSrc={image}\r\n//                                                                                     // src={image}\r\n//                                                                                     initalImag={image}\r\n//                                                                                     setImageSrc={setImage}\r\n//                                                                                 />\r\n//                                                                             </Form.Item>\r\n//                                                                             {/* <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n//                                                                                 <img\r\n//                                                                                     alt=\"example\"\r\n//                                                                                     style={{\r\n//                                                                                         width: '100%',\r\n//                                                                                     }}\r\n//                                                                                     src={previewImage} />\r\n//                                                                             </Modal> */}\r\n//                                                                         </div>\r\n//                                                                     </div>\r\n\r\n//                                                                 </div>\r\n//                                                             </Fragment>\r\n//                                                         </Panel>\r\n//                                                     </Collapse>\r\n//                                                 ))}\r\n\r\n\r\n//                                             </></>\r\n//                                     )}\r\n\r\n//                                 </Form.List>\r\n//                                 <Form.Item>\r\n//                                     <div className=\"col-12\">\r\n//                                         <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">Update </button>\r\n//                                     </div>\r\n\r\n//                                 </Form.Item>\r\n//                             </Form>\r\n//                         </div>\r\n//                     </Modal.Body>\r\n//                 </Modal>\r\n\r\n//             )\r\n//             }\r\n//         </div >\r\n//     );\r\n// };\r\n// export default EditNft;\r\n\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Space, Upload } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { create } from 'ipfs-http-client'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\nimport UploadImage from '../../shared/Upload';\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl';\r\nimport CollPopup from './createCollection';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst EditNft = (props) => {\r\n\r\n    const editor = useRef(null);\r\n    const [fileList, setFileList] = useState([])\r\n    // const { data, setFormValues } = useFormData();\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    // console.log(data, 'formdta')\r\n    const [count, setCount] = useState(0);\r\n    // const [nft_description, setNft_description] = useState([])\r\n    // console.log('nft_description', nft_description)\r\n\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n    const [items, setItems] = useState([]);\r\n    const [coldata, setColData] = useState();\r\n    const [allcol, setAllColl] = useState()\r\n    const [form] = Form.useForm()\r\n\r\n    const [image, setImage] = useState('')\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n    const id = useParams()\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(NftList(props.nft_id, props.id))\r\n    }, [props.nft_id, props.id])\r\n\r\n    console.log(\"nftdet\", nftdetail)\r\n\r\n\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n            }]\r\n\r\n        })\r\n        console.log(nftdetail.image, \"Image\")\r\n        setImage(nftdetail.image)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n\r\n    }, [form, nftdetail])\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n    }, []);\r\n\r\n\r\n    const onFinish = async (values) => {\r\n\r\n\r\n        // setLoading(true)\r\n        const nftImagepromises = [uploadNFT(dataURLtoBlob(image))]\r\n        // const nftImagepromises = nfts?.map(x => uploadNFT(x?.image))\r\n        const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n        // const imagesRes = await (nftImagepromises).then(res => res)\r\n        // \r\n\r\n        const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n        // const addedImage = ipfsBaseUrl + image\r\n\r\n\r\n        const formData = new FormData()\r\n\r\n\r\n\r\n\r\n\r\n        formData.append('image', addedImage)\r\n        formData.append('title', values?.nfts?.map(x =>\r\n            x.nft_name\r\n        ))\r\n        // const newlist = newList.push(nft_collection_id);\r\n        formData.append('collection_id', nft_collection_id)\r\n        // formData.append('nft_description', nft_description)\r\n        formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n        // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n\r\n        // dispatch(uploadNFT())\r\n        dispatch(UpdateNft(formData, props))\r\n        // setLoading(false)\r\n\r\n        // console.log('Received values of form:', values, data)\r\n\r\n    };\r\n    const handleCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n        beforeUpload: () => {\r\n            return false;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            } else {\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n        // <section className=\"author-area\">\r\n        <div >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div>\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n                                // onSubmit={(event) => handleSubmit(event)}\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n                                            {/* <div className='steps-center'>\r\n\r\n\r\n                                                <div className='orgicon1'>\r\n\r\n                                                    <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n                                                </div>\r\n\r\n                                                <div className='orgicon1line'>\r\n                                                    <span style={{}}> ----------------------------- </span>\r\n\r\n                                                </div>\r\n                                                <div className='orgicon2'>\r\n\r\n                                                    <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n                                                </div>\r\n                                            </div> */}\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n                                                    // <Space\r\n                                                    //     key={key}\r\n                                                    //     style={{\r\n                                                    //         display: 'flex',\r\n                                                    //         marginBottom: 8,\r\n                                                    //     }}\r\n                                                    //     align=\"baseline\"\r\n                                                    // >\r\n                                                    // <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                                                    // <Panel header=\"Details\" key=\"1\">\r\n                                                    <Fragment>\r\n                                                        {/* <div>Artwork {index}</div> */}\r\n                                                        <div className=\"row relative\">\r\n\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  name',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  description',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <Controller\r\n                                                                            control={control}\r\n                                                                            name=\"nft_description\"\r\n                                                                            defaultValue=\"\"\r\n                                                                            render={({ field: { value, onChange } }) => {\r\n                                                                                return  */}\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={'nft_description'}\r\n                                                                            // config={config}\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                            // onBlur={newContent => 'nft_description'(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                                            onChange={newContent => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            {/* <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                        <MinusCircleOutlined onClick={(e) => { remove(name); handleDecrement(e); }} />\r\n                                                                    </div> */}\r\n                                                            {/* </div> */}\r\n                                                            <div className='col-12'>\r\n                                                                <label className='mt-2 mb-3'>Choose Collection</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n\r\n                                                                {/* <div className=\"col-24\"> */}\r\n\r\n                                                                <div className=\"form-group\">\r\n\r\n                                                                    <div className=\"card choose_div\" style={{\r\n                                                                        background: \"black\",\r\n                                                                        marginBottom: \"8px\",\r\n                                                                    }}>\r\n                                                                        <div className=\"card-body \">\r\n                                                                            <Button variant=\"primary\" className='collection_btn' onClick={() => setModalShowcoll(true)}>\r\n                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n                                                                            </Button>\r\n\r\n                                                                            <CollPopup\r\n                                                                                show={modalShowcoll}\r\n                                                                                onHide={() => setModalShowcoll(false)} />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                            {col?.map((item, idx) => (\r\n\r\n                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-6 col-lg-3 col-12 choose_div\">\r\n                                                                    {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_collection_id\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select nft collection',\r\n                                                                                },\r\n                                                                            ]}\r\n\r\n                                                                        > */}\r\n\r\n\r\n                                                                    <div id={item.id} onClick={() => setNft_collection_id(item.id)} className=\"card\"\r\n                                                                        style={{\r\n                                                                            background: \"black\",\r\n                                                                            marginBottom: \"8px\",\r\n                                                                            border: nft_collection_id == item.id ? \"1px solid #fff\" : null\r\n                                                                        }}>\r\n                                                                        <div className=\"card-body\">\r\n                                                                            <div>\r\n\r\n\r\n                                                                                {item.title}\r\n                                                                            </div>\r\n\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    {/* </Form.Item> */}\r\n\r\n                                                                </div>\r\n                                                                // </div>\r\n                                                            ))}\r\n                                                            <div className=\"col-md-12 col-12\">\r\n                                                                <label>Upload Nft</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_image\"]}\r\n                                                                        // getValueFromEvent={getFile}\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Please select a image',\r\n                                                                            },\r\n                                                                        ]}\r\n\r\n                                                                    >\r\n\r\n                                                                        {/* <Upload\r\n                                                                                    {...fileProps}\r\n                                                                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                                    listType=\"picture-card\"\r\n                                                                                    // fileList={fileList}\r\n                                                                                    // onChange={onChange}\r\n                                                                                    src={'/img/nft.png'}\r\n                                                                                    onPreview={handlePreview}\r\n                                                                                    maxCount={1}\r\n\r\n                                                                                >\r\n                                                                                    + Upload\r\n                                                                                </Upload> */}\r\n                                                                        <UploadImage\r\n                                                                            imageSrc={image}\r\n                                                                            // src={image}\r\n                                                                            initalImag={image}\r\n                                                                            setImageSrc={setImage}\r\n                                                                        />\r\n                                                                    </Form.Item>\r\n                                                                    {/* <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                                <img\r\n                                                                                    alt=\"example\"\r\n                                                                                    style={{\r\n                                                                                        width: '100%',\r\n                                                                                    }}\r\n                                                                                    src={previewImage} />\r\n                                                                            </Modal> */}\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </Fragment>\r\n                                                    // </Panel>\r\n                                                    // </Collapse>\r\n                                                ))}\r\n\r\n\r\n                                            </></>\r\n                                    )}\r\n\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )\r\n            }\r\n        </div >\r\n    );\r\n};\r\nexport default EditNft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftdataTable = () => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>Contract Address</th>\r\n                                <th>Token ID</th>\r\n                                <th>Token Stranded</th>\r\n                                <th>Blockchain</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {projdetail.nft_data?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>{items.collectionData?.contract_id}</td>\r\n                                        <td>{items.token_id}</td>\r\n                                        <td>ERC721</td>\r\n                                        <td>Polygon (Matic)</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftdataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst LatNftdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>Item</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {projdetail?.project_activity?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td><img\r\n                                            src={items.image}\r\n                                            className=\"rounded-circle\"\r\n                                            alt=\"Avatar\"\r\n                                        />{items.nft_title.slice(0, 15)}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftdataTable","// import React, { useEffect, useState } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import { Collapse } from 'antd';\r\n// import { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\n// import { useParams } from 'react-router';\r\n// import { ProgressBar, Table } from 'react-bootstrap';\r\n// import ProjDetailPopup from '../Create/projectDetailpopup';\r\n// import dayjs from 'dayjs';\r\n// const ProjdataTable = (props) => {\r\n//     const dispatch = useDispatch()\r\n//     const { Panel } = Collapse;\r\n//     const onChange = (key) => {\r\n//         console.log(key);\r\n//     };\r\n//     const [modalShowproj, setModalShowproj] = React.useState(false);\r\n//     const id = useParams()\r\n//     const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n//     const onPositionChange = (newExpandIconPosition) => {\r\n//         setExpandIconPosition(newExpandIconPosition);\r\n//     };\r\n//     const projdetail = useSelector(state => {\r\n\r\n//         // \r\n//         return state?.projectdetails?.projectdetails\r\n//     })\r\n//     console.log(projdetail, 'projd')\r\n\r\n\r\n//     useEffect(() => {\r\n//         // \r\n//         dispatch(ProjectDetail(id))\r\n//     }, [id])\r\n\r\n//     // console.log(projdetail?.project_percentage, \"percet\")\r\n\r\n//     return (\r\n//         <div>\r\n//             <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n//                 <Panel header=\"Details\" key=\"1\" >\r\n//                     <Table responsive className='nfts_details'>\r\n//                         <div >\r\n//                             <i class=\"fa-solid fa-pen\" onClick={() =>\r\n//                                 setModalShowproj(true)}></i>\r\n//                             <ProjDetailPopup\r\n//                                 debugger\r\n//                                 id={props.id}\r\n//                                 show={modalShowproj}\r\n//                                 onHide={() => setModalShowproj(false)} />\r\n//                             {/* <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a> */}\r\n\r\n//                             {/* <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n//                             {/* </a> */}\r\n//                         </div>\r\n//                         <tbody className=''>\r\n//                             {/* {projdetail.nft_data?.map((items) => {\r\n//                                 return ( */}\r\n//                             <tr>\r\n\r\n//                                 {/* {projdetail?.country_name?.map((item) => {\r\n//                                     return (\r\n\r\n//                                         <tr>Country : {item.name}</tr>\r\n//                                     )\r\n//                                 })} */}\r\n//                                 <tr><span>Owned By:</span> <span>{projdetail?.user_data?.username}</span></tr>\r\n//                                 <tr><span>Total NFT's:</span> <span>{projdetail?.number_of_nft}</span></tr>\r\n//                                 <tr><span>Chain: </span> <span>Polygon (Matic)</span></tr>\r\n//                                 <tr><span>Created : </span> <span> {dayjs(projdetail?.created_at).format(\"DD MMM YYYY\")} </span></tr>\r\n//                                 <tr><span>Country </span> <span>{projdetail.country_name?.name}</span></tr>\r\n//                                 <tr><span>State</span>  <span>{projdetail.state_name?.name}</span> </tr>\r\n//                                 <tr><span>City</span>  <span>{projdetail.city_name?.name}</span> </tr>\r\n//                                 <tr><span>Number of NFTs</span>  <span>{projdetail.number_of_nft}</span> </tr>\r\n//                                 <tr><span>Start Date</span>  <span>{projdetail.start_date}</span> </tr>\r\n//                                 <tr><span>End Date </span> <span>{projdetail.end_date}</span> </tr>\r\n//                                 <tr><span>Price </span> <span> {projdetail.price} </span> </tr>\r\n//                             </tr>\r\n//                             {/* )\r\n//                             })} */}\r\n\r\n//                         </tbody>\r\n//                     </Table>\r\n//                 </Panel>\r\n//             </Collapse>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default ProjdataTable\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { ProgressBar, Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nimport dayjs from 'dayjs';\r\nconst ProjdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail.country_name?.name, 'projdatanft')\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details'>\r\n                        <div >\r\n                            <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                setModalShowproj(true)}></i>\r\n                            <ProjDetailPopup\r\n                                debugger\r\n                                id={props.id}\r\n                                show={modalShowproj}\r\n                                onHide={() => setModalShowproj(false)} />\r\n                            {/* <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a> */}\r\n\r\n                            {/* <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                            {/* </a> */}\r\n                        </div>\r\n                        <tbody className=''>\r\n                            {/* {projdetail.nft_data?.map((items) => {\r\n                                return ( */}\r\n                            <tr>\r\n\r\n                                {/* {projdetail?.country_name?.map((item) => {\r\n                                    return (\r\n\r\n                                        <tr>Country : {item.name}</tr>\r\n                                    )\r\n                                })} */}\r\n                                <tr><span>Owned By:</span> <span>{projdetail?.user_data?.username}</span></tr>\r\n                                <tr><span>Total NFT's:</span> <span>{projdetail?.number_of_nft}</span></tr>\r\n                                <tr><span>Chain: </span> <span>Polygon (Matic)</span></tr>\r\n                                <tr><span>Created : </span> <span> {dayjs(projdetail?.created_at).format(\"DD MMM YYYY\")} </span></tr>\r\n                                <tr><span>Country </span> <span>{projdetail.country_name?.name}</span></tr>\r\n                                <tr><span>State</span>  <span>{projdetail.state_name?.name}</span> </tr>\r\n                                <tr><span>City</span>  <span>{projdetail.city_name?.name}</span> </tr>\r\n                                <tr><span>Number of NFTs</span>  <span>{projdetail.number_of_nft}</span> </tr>\r\n                                <tr><span>Start Date</span>  <span>{projdetail.start_date}</span> </tr>\r\n                                <tr><span>End Date </span> <span>{projdetail.end_date}</span> </tr>\r\n                                <tr><span>Price </span> <span> {projdetail.price} </span> </tr>\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjdataTable","\r\nimport React, { useState } from \"react\";\r\n\r\nconst ReadMore = ({ data }) => {\r\n\r\n    const [isReadMore, setIsReadMore] = useState(true);\r\n    const toggleReadMore = () => {\r\n        setIsReadMore(!isReadMore);\r\n    };\r\n\r\n    return (\r\n        <p className=\"text\">\r\n            <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: isReadMore ? data?.slice(0, 400) : data }} />\r\n            <span onClick={toggleReadMore} className=\"read-or-hide\">\r\n                {isReadMore ? \"...read more\" : \" show less\"}\r\n            </span>\r\n        </p>\r\n    );\r\n};\r\nexport default ReadMore","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, LatestProjectDetail, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport { BuyNft } from '../Wallet/interact';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport MyVerticallyCenteredModal from './refralPopup';\r\nimport swal from 'sweetalert';\r\nimport Banner from '../Create/editBanner';\r\nimport EditNft from '../Create/editNft';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport latNftdataTable from './../Explore/latProjNftdata';\r\nimport LatNftdataTable from './../Explore/latProjNftdata';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReferalPopup from './refralPopup';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst ProjDetails = () => {\r\n\r\n\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const [tok, setTok] = useState('')\r\n    // console.log('tok', tok)\r\n    const dispatch = useDispatch()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    console.log('latproj', latprojdetail)\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n    // console.log('userdet', userDetail)\r\n    const log = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n    useEffect(() => {\r\n        // \r\n        dispatch(LatestProjectDetail(id))\r\n        dispatch(GetUserAction())\r\n\r\n    }, [id])\r\n\r\n    const deleteHandler = (id) => {\r\n        dispatch(DeleteProject(id))\r\n    }\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className='col-12'>\r\n                        <h3 className=\"p-0\">{latprojdetail.title}</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                {/* {projdetail && projdetail?.nft_data && projdetail?.nft_data?.length ? */}\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() => setModalShow(true)}></i>\r\n\r\n\r\n                                    <Banner\r\n                                        id={id}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div>\r\n                                <img src={latprojdetail?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"fundraiser mt-3\">\r\n                            <div className='lorem_done'>\r\n                                <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg>\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 col-12\">\r\n                        <div>\r\n                            <div className=\"progress_nft mb-3\">\r\n                                <div className='progress_main'><span>\r\n                                    <span className='nft_price'>{latprojdetail.selling_amount} raised of {latprojdetail.price}</span><small> USD raised of $200,000 goal </small>\r\n                                    <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                    </div>\r\n                                    <p className='donation-count'>2K donations</p>\r\n                                </span>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex justify-content-start\">\r\n                                    <><Button className=\" btn  btn-bordered-white m-0 mr-2\" variant=\"primary\" onClick={() => setModalShowrefer(true)}>\r\n                                        Share\r\n                                    </Button><ReferalPopup\r\n                                            id={id}\r\n                                            userRef={userDetail}\r\n                                            show={modalShowrefer}\r\n                                            onHide={() => setModalShowrefer(false)} /></>\r\n\r\n                                    <Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                        Donate\r\n                                    </Button>\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n                                <ul className=\"m-0 custom_lis pl-0\">\r\n                                    <li>\r\n                                        <div className='lorem_done p-0'>\r\n                                            <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                            </svg>\r\n                                            </span>\r\n                                            <span><div className=\"progress_name\">Anonymous </div> <div>$25</div></span>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div className='lorem_done p-0'>\r\n                                            <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                            </svg>\r\n                                            </span>\r\n                                            <span><div className=\"progress_name\">Anonymous </div> <div >$27 </div></span>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div className='lorem_done p-0'>\r\n                                            <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                            </svg></span>\r\n                                            <span><div className=\"progress_name\">Kevin Sheridan </div> <div className=\"price\">$50</div></span>\r\n                                        </div>\r\n                                    </li>\r\n\r\n                                </ul>\r\n                                <p className='see_all'>See all</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-8 col-lg-8\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title'><div>Description</div>\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n\t\t\t\t\t\t<i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={latprojdetail.description} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-5 mt-lg-0'>\r\n\r\n\r\n                        <div className='container table-main-detail position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                            //  id={id}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/*                    \r\n\t\t\t<div className=\"item-info\" >\r\n\r\n\t\t\t\t<><div className=\"item-thumb text-center\">\r\n\t\t\t\t\t<img src={x[0]?.image} alt=\"\" />\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t</>\r\n\r\n\r\n\t\t\t</div> */}\r\n\r\n                </div>\r\n\r\n                {/* <div className='col-12 col-md-4'>\r\n\t\t\t\r\n\t\t\t<div className='project-total-detail'>\r\n\r\n\t\t\t\t<div className='flex-column'>\r\n\t\t\t\t\t<span className='nft_price'>{projdetail.selling_amount} raised of {projdetail.price}</span>\r\n\r\n\t\t\t\t\t<div className='progressbar'>\r\n\t\t\t\t\t\t<ProgressBar varient=\"success\" now={projdetail.project_percentage} />\r\n\t\t\t\t\t\t<span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div >\r\n\t\t\t\t\t<span className=\"mr-2\">Total NFT's:</span><span>{projdetail?.number_of_nft}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span  className=\"mr-2\">Chain: </span><span>Polygon (Matic)</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span  className=\"mr-2\">Created : </span><span>{dayjs(projdetail?.created_at).format(\"DD MMM YYYY\")}</span>\r\n\t\t\t\t</div> */}\r\n\r\n                {/* <div className='project-btn flex-column'>\r\n\t\t\t\t\t<button>\r\n\t\t\t\t\t\t<a href=\"#\">Share</a> \r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button>\r\n\t\t\t\t\t\t<a href=\"#\">Donate Now</a>\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t</div> */}\r\n                {/* </div> */}\r\n\r\n                {/* </div> */}\r\n\r\n\r\n                <div className='col-md-12 col-12'>\r\n                    {/* <div className='py-4 owner-nft'>\r\n\t\t\t\t<img class=\"avatar-sm rounded-circle\" src={projdetail?.user_data?.avatar} alt=\"\" /> <span>Owned By:</span>  <span>{projdetail?.user_data?.username}</span>\r\n\t\t\t</div> */}\r\n\r\n\r\n\r\n\r\n\r\n                    <div className='col-12 mt-3'>\r\n                        <div className='container table-detail'>\r\n                            <LatNftdataTable />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className='mt-5 row justify-content-between proj_main'>\r\n\t\t\t\t<div className=\"cart col-12 col-md-8 content-baner \">\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<div className='align-items-center justify-content-between'>\r\n\t\t\t\t\t\t\t<div className='d-sm-flex justify-content-between align-items-center'>\r\n\t\t\t\t\t\t\t\t<h3 className=\"m-0 p-0\">{latprojdetail.title}</h3>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='project-total-detail'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"project_img\">\r\n\t\t\t\t\t\t\t\t\t\t<span>Owned By:</span> \r\n\t\t\t\t\t\t\t\t\t\t<img class=\"avatar-sm rounded-circle\" src={latprojdetail?.user_data?.avatar} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t<span>{latprojdetail?.user_data?.username}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Chain: </span><span>Polygon (Matic)</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<span>Created : </span><span>{dayjs(latprojdetail?.created_at).format(\"DD MMM YYYY\")}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='col-12 col-md-4'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className='nft_price'>{latprojdetail.selling_amount} raised of {latprojdetail.price}</span>\r\n\r\n\t\t\t\t\t\t<div className='progressbar'>\r\n\t\t\t\t\t\t\t<ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div> */}\r\n\r\n                    {/* <div className='col-12'>\r\n\t\t\t\t<div>\r\n\r\n\t\t\t\t\t<h5 className='user_title {item.title.slice(0, 16)}'><div>Description</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</h5>\r\n\t\t\t\t\t<p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} />\r\n\t\t\t\t</div>\r\n\t\t\t</div> */}\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div className='container table-detail'>\r\n\t\t<div className='row'>\r\n\t\t\t<div className='col-8'>\r\n\t\t\t\t<LatNftdataTable />\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\t</div> */}\r\n\r\n            <div className=\"container mt-3\">\r\n\r\n                <div className=\"row items mt-0 explore-items px-0\">\r\n                    <ProjNFTS />\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ProjDetails from '../components/ItemDetails/viewProdetails';\r\nimport ProjNFTS from '../components/Auctions/projectnfts';\r\n\r\nclass latprojDetails extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <ProjDetails />\r\n                {/* <ProjNFTS /> */}\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default latprojDetails;","import React, { useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { GetCollectionsAction } from '../../redux/Actions/projectAction'\r\n\r\nconst ShowCollections = () => {\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    // const val = localStorage.getItem(\"values\")\r\n    // console.log(val.address, 'vall')\r\n    // console.log(col, 'col')\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n    }, [])\r\n    // useEffect(() => {\r\n\r\n    // })\r\n    // var dat = localStorage.getItem(\"values\");\r\n    // dat = JSON.parse(dat);\r\n    // console.log('dat', dat?.nfts[0]?.image?.fileList[0]?.thumbUrl)\r\n    // console.log('valus', localStorage.getItem('values', 'address'))\r\n    // localStorage.setItem(\"values\", JSON.stringify({\r\n    //     ...data,\r\n    //     nfts: values.nfts.map(x => {\r\n    //         return {\r\n    //             name: x.name,\r\n    //             description: x.description,\r\n    //             image: x.image,\r\n    //         }\r\n    //     })\r\n    // }));\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <span>Explore</span>\r\n                            <h3 className=\"mt-3 mb-0\">My Collections</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {/* {val?.map((item, idx) => { */}\r\n                    {/* return ( */}\r\n                    <Link to={`/collection/${''}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                        <div>\r\n                            <div className=\"card\">\r\n                                <div className=\"image-over\">\r\n                                    {/* <Link to={`/collection/${''}`}> */}\r\n                                    <img className=\"card-img-top\" src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                                    {/* </Link> */}\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 p-0\">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-0\">{col.name}</h5>\r\n                                        </a>\r\n                                        <div className=\"seller d-flex align-items-center my-3\">\r\n                                            <span style={{ color: '#8E8E8E' }}>{col?.nfts?.[0]?.name}</span>\r\n                                            <a href=\"/author\">\r\n                                                <h6 className=\"ml-2 mb-0\"> </h6>\r\n                                            </a>\r\n                                        </div>\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n\r\n                                            <span> {col.price}</span>\r\n                                            <span> {col.number_of_nft}</span>\r\n                                        </div>\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />dfg</a> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                    {/* ) */}\r\n                    {/* })} */}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ShowCollections","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreFive';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\nimport ShowCollections from '../components/Create/showCollections';\r\n\r\nconst Showcollections = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 4\" /> */}\r\n            <ShowCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Showcollections;","import React, { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\nconst CollItem = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch()\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    // console.log(projdetail, 'projdata')\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    {/* Explore Menu */}\r\n                    <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row items explore-items\">\r\n                {Object.keys(projdetail).map((item, idx) => {\r\n                    // {projdetail?.map((item, idx) => {\r\n                    return (\r\n                        <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" >\r\n                            <div className=\"card no-hover text-center\">\r\n                                <div className=\"image-over\">\r\n                                    <a href=\"/item-details\">\r\n                                        {/* <img className=\"card-img-top\" src={item.img} alt=\"\" /> */}\r\n                                    </a>\r\n                                    {/* Author */}\r\n                                    <a className=\"author\" href=\"/authors\">\r\n                                        <div className=\"author-thumb avatar-lg\">\r\n                                            <img className=\"rounded-circle\" src={item?.nft_data?.title} alt=\"\" />\r\n                                        </div>\r\n                                    </a>\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 \">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body mt-4\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-2\">{item?.nft_data?.title}</h5>\r\n                                        </a>\r\n                                        {/* <span>{item.content}</span> */}\r\n                                        <hr />\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                            {/* <span>{item.price}</span> */}\r\n                                            {/* <span><i className=\"icon-heart mr-2\" />{item.likes}</span> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CollItem;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetCollectionDetails, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport Author from '../Author/Author';\r\nimport CollItem from './bread-crumb';\r\n\r\nconst CollectionDetails = () => {\r\n\r\n    const initData = {\r\n        itemImg: \"/img/avtar1.png\",\r\n        date: \"2022-03-30\",\r\n        tab_1: \"Bids\",\r\n        tab_2: \"History\",\r\n        tab_3: \"Details\",\r\n        ownerImg: \"/img/avtar1.png\",\r\n        itemOwner: \"Themeland\",\r\n        created: \"15 Jul 2021\",\r\n        title: \"Walking On Air\",\r\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n        price_1: \"1.5 ETH\",\r\n        price_2: \"$500.89\",\r\n        count: \"1 of 5\",\r\n        size: \"14000 x 14000 px\",\r\n        volume: \"64.1\",\r\n        highest_bid: \"2.9 BNB\",\r\n        bid_count: \"1 of 5\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n    const tabData_1 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"14 ETH\",\r\n            time: \"4 hours ago\",\r\n            author: \"@arham\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"10 ETH\",\r\n            time: \"8 hours ago\",\r\n            author: \"@junaid\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"12 ETH\",\r\n            time: \"3 hours ago\",\r\n            author: \"@yasmin\"\r\n        }\r\n    ]\r\n\r\n    const tabData_2 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"32 ETH\",\r\n            time: \"10 hours ago\",\r\n            author: \"@hasan\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"24 ETH\",\r\n            time: \"6 hours ago\",\r\n            author: \"@artnox\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"29 ETH\",\r\n            time: \"12 hours ago\",\r\n            author: \"@meez\"\r\n        }\r\n    ]\r\n\r\n    const sellerData = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            seller: \"@ArtNoxStudio\",\r\n            post: \"Creator\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            seller: \"Virtual Worlds\",\r\n            post: \"Collection\"\r\n        }\r\n    ]\r\n\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coldetail = useSelector(state => {\r\n        return state?.projectdetails?.getcollectiondetails\r\n    })\r\n    // console.log(coldetail, 'coldetail')\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionDetails(id))\r\n    }, [id])\r\n\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(id))\r\n    // }\r\n\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n                                <img src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                            </div>\r\n\r\n\r\n                            </>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            <div className='d-flex  align-items-center justify-content-between'>\r\n                                <h3 className=\"m-0\">{coldetail.title}</h3>\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center '>\r\n                                    <Button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" variant=\"primary\" onClick={() => setModalShow(true)} style={{ color: '#FFF' }}>\r\n                                        Add item\r\n                                    </Button>\r\n\r\n                                    {/* <MyVerticallyCenteredModal\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    /> */}\r\n                                    {/* <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"> <Link to={\"\"} style={{ color: '#FFF' }}>Add item</Link></a> */}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <p>{coldetail.description}</p>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <CollItem />\r\n                </div>\r\n            </div >\r\n\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default CollectionDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Create/collectionDetail';\r\nimport CollBreadCrumb from '../components/Create/bread-crumb';\r\nimport Author from './author';\r\n\r\nclass CollectionDetail extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                {/* <CollBreadCrumb /> */}\r\n                <CollectionDetails />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CollectionDetail;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { useParams } from 'react-router';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction DesPopup(props) {\r\n    const editor = useRef(null);\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const [country, setCountry] = useState()\r\n    const [type, setType] = useState()\r\n    const dispatch = useDispatch()\r\n    const id = useParams()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n\r\n    // const url = window.location.href + '/' + props.userRef\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            setDescription(projdetail.description)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        debugger\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n\r\n        dispatch(UpdateProject(props.id, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12\">\r\n                            <label>Description</label>\r\n                            <div className=\"form-group\">\r\n\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"description\"\r\n                                    defaultValue=\"\"\r\n                                    render={({ field: { value, onChange } }) => {\r\n                                        return <JoditEditor\r\n                                            ref={editor}\r\n                                            value={value}\r\n                                            // config={config}\r\n\r\n                                            placeholder=\"start typing\"\r\n                                            tabIndex={1} // tabIndex of textarea\r\n                                            onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                            onChange={newContent => { }}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                                {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default DesPopup","import dayjs from 'dayjs';\r\nimport React, { Component, useEffect } from 'react';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetCollectionDetails, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport latprojDetails from '../../themes/latproj-details';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport Banner from './editBanner';\r\nimport EditNft from './editNft';\r\nimport DesPopup from './desPopup';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\n\r\n// import ProgressBar from 'react-bootstrap';\r\n\r\nconst ProjNftDetails = () => {\r\n    const deleteHandler = (id) => {\r\n        dispatch(DeleteProject(id))\r\n    }\r\n\r\n    const { id } = useParams()\r\n    // console.log(id, 'idd')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    const dispatch = useDispatch()\r\n    const [modalShowDes, setModalShowDes] = React.useState(false);\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'projdata')\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n\r\n\r\n    // const deleteHandler = (id) => {\r\n    //     dispatch(DeleteProject(id))\r\n    // }\r\n    // \r\n    const bannerHandler = () => {\r\n\r\n    }\r\n    return (\r\n        <section className=\"item-details-area project-nft-si main-proj-detail\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <h3 className=\"my-2 p-0 \">{projdetail.title}</h3>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-8'>\r\n                        <div className=\"item-info\" >\r\n                            <div className=\"item-thumb text-center\">\r\n                                {/* {projdetail && projdetail?.nft_data && projdetail?.nft_data?.length ? */}\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() =>\r\n                                        setModalShow(true)}></i>\r\n                                    <Banner\r\n                                        id={id}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div>\r\n                                <img src={projdetail?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"fundraiser mt-3 p-0\">\r\n                            <div className='lorem_done'>\r\n                                <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg>\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12 col-lg-4 mt-3 mt-lg-0'>\r\n                        <div>\r\n                            <div>\r\n                                <div className=\"progress_nft mb-3\">\r\n                                    <div className='progress_main'><span>\r\n                                        <span className='nft_price'>{projdetail.selling_amount} raised of {projdetail.price}</span><small> USD raised of $200,000 goal </small>\r\n                                        <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" now={projdetail.project_percentage} />\r\n                                            {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                        </div>\r\n                                        <p className='donation-count'>2K donations</p>\r\n                                    </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex justify-content-start\">\r\n                                        <>\r\n                                            {/* <Button className=\" btn  btn-bordered-white m-0 mr-2\" variant=\"primary\" onClick={() => setModalShowrefer(true)}>\r\n                                        Share\r\n                                    </Button> */}\r\n                                            <Button className=\" btn  btn-bordered-white m-0 mr-2\" variant=\"primary\">\r\n                                                Share\r\n                                            </Button>\r\n                                            {/* <ReferalPopup\r\n                                            id={id}\r\n                                            userRef={userDetail}\r\n                                            show={modalShowrefer}\r\n                                            onHide={() => setModalShowrefer(false)} /> */}\r\n                                        </>\r\n\r\n                                        <Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Donate\r\n                                        </Button>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                                    <ul className=\"m-0 custom_lis pl-0\">\r\n                                        <li>\r\n                                            <div className='lorem_done p-0'>\r\n                                                <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                </svg>\r\n                                                </span>\r\n                                                <span><div className=\"progress_name\">Anonymous </div> <div>$25</div></span>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div className='lorem_done p-0'>\r\n                                                <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                </svg>\r\n                                                </span>\r\n                                                <span><div className=\"progress_name\">Anonymous </div> <div >$27 </div></span>\r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div className='lorem_done p-0'>\r\n                                                <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                </svg></span>\r\n                                                <span><div className=\"progress_name\">Kevin Sheridan </div> <div className=\"price\">$50</div></span>\r\n                                            </div>\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                    <p className='see_all'>See all</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-8'>\r\n                        <div class=\"user-description\">\r\n                            <h5 className='user_title'><div>Description</div>\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                        <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n                                {/* {projdetail?.status == 1 && (\r\n                                                            <div >\r\n\r\n                                                                <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a>\r\n                                                                <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i>\r\n                                                                </a>\r\n                                                            </div>\r\n                                                            )} */}\r\n                                <div >\r\n                                    <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                        setModalShowDes(true)}></i>\r\n                                    <DesPopup\r\n                                        id={id}\r\n                                        show={modalShowDes}\r\n                                        onHide={() => setModalShowDes(false)} />\r\n                                </div>\r\n                            </h5>\r\n                            <p dangerouslySetInnerHTML={{ __html: projdetail.description }} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-3 mt-lg-0 '>\r\n                        <div className='container table-main-detail position-relative'>\r\n\r\n                            <ProjdataTable\r\n                                id={id}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='col-12 mt-3'>\r\n                    <div className='container table-detail'>\r\n\r\n                        <LatNftdataTable />\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mt-3\">\r\n                    {/* <div className='intro row m-0'>\r\n\t\t\t\t\t\t\t<div className=\"intro-content\">\r\n\t\t\t\t\t\t\t\t<span >NFTs</span>\r\n\t\t\t\t\t\t\t\t<h3 className=\"w-full mb-0 pt-4\">NFTs</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div> */}\r\n                    <div className='nfts_main'>\r\n                        <h5 className='user_title'>NFT'S </h5>\r\n                        <div className=\"row items mt-0 explore-items px-0\">\r\n\r\n                            <div className='col-12 col-sm-6 col-lg-3 item explore-item'>\r\n                                <div className='card no-hover m-0 add-nft '>\r\n\r\n                                    <div class=\"image-over relative\">\r\n                                        <Link to={`/addnft/${projdetail.id}`}>\r\n\r\n                                            + Add NFT </Link>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            {projdetail?.nft_data?.map((x, idx) => {\r\n                                // {projdetail?.map((item, idx) => {\r\n                                return (\r\n                                    <div key={`eds_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item \">\r\n\r\n                                        <div className=\"card no-hover m-0\">\r\n\r\n\r\n\r\n                                            {/* <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                            <div className=\"image-over relative\">\r\n                                                <Link to={`/nft/details/${x.id}`}>\r\n                                                    <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                </Link>\r\n                                                <div className='token'>\r\n                                                    <span>#{x?.token_id}</span>\r\n                                                    <span className='cards-icons'>\r\n                                                        <i className=\"fa-solid fa-pen\" onClick={() => setModalShowedit(true)}></i>\r\n\r\n                                                        <EditNft\r\n                                                            id={id}\r\n                                                            nft_id={x.id}\r\n                                                            show={modalShowedit}\r\n                                                            onHide={() => setModalShowedit(false)} />\r\n                                                    </span>\r\n                                                </div>\r\n                                                {/* Author */}\r\n\r\n                                            </div>\r\n                                            {/* Card Caption */}\r\n                                            <div className=\"card-caption px-0 col-12 \">\r\n                                                {/* Card Body */}\r\n                                                <div className=\"card-body\">\r\n\r\n                                                    <a href=\"#\" className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <h5 className=\"m-0 pb-2 p-0 text-capitalize\">{x.title.slice(0, 16)}...</h5>\r\n\r\n                                                    </a>\r\n                                                    <div className='creater mt-1 mb-1'>\r\n                                                        <span >Creator:</span><span className='ml-2'>{x?.user_data?.username}</span>\r\n                                                    </div>\r\n                                                    <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1\">\r\n                                                        <span dangerouslySetInnerHTML={{ __html: x.description.slice(0, 22) }} /><span>...</span>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className='mint'>\r\n                                                        {x.is_mint == 0 ? (\r\n\r\n                                                            <button>\r\n                                                                <a href='#'>Mint</a>\r\n                                                            </button>\r\n                                                        ) : (\r\n                                                            <button disabled>\r\n                                                                <a >Minted</a>\r\n                                                            </button>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                    <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                        {/* <span>{item.price}</span> */}\r\n                                                        {/* <span><i className=\"icon-heart mr-2\" />{item.likes}</span> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjNftDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ProjectList';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport GetAllProjects from '../components/Explore/ProjectList';\r\nimport ProjDetails from '../components/Create/projdetails';\r\nimport ProjNftDetails from '../components/Create/projdetails';\r\n\r\nconst ProjNft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Projects\" subpage=\"Explore\" page=\"\" /> */}\r\n            <ProjNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjNft;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { set, useForm } from 'react-hook-form';\r\nimport 'antd/dist/antd.css';\r\nimport { Steps } from 'antd';\r\nimport { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined, CheckOutlined } from '@ant-design/icons'\r\nimport { useParams } from 'react-router';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n\r\nfunction NftPopup(props) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const { id } = useParams();\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n\r\n    const description = 'This is a description.';\r\n    function gettxhashAddress() {\r\n        // \r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n    // function getconfirmAddress() {\r\n    //     // \r\n    //     return web3.eth.getTransactionReceipt;\r\n    // }\r\n    // useEffect(() => {\r\n    // setTxhash(gettxhashAddress())\r\n    // setConfirm(getconfirmAddress())\r\n    // if (txhas) {\r\n    // setCurrent(1)\r\n    // setCurrent(2)\r\n    // setCurrent(3)\r\n    // }\r\n    // }, [])\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n    })\r\n    // console.log('latprojdetailpop', nftdetail)\r\n    // const mint = () => {\r\n    //     CreateMetaDataAndMint({\r\n    //         _name: nftdetail.title,\r\n    //         _des: nftdetail.description,\r\n    //         _imgBuffer: nftdetail.image\r\n    //     })\r\n    // }\r\n\r\n    const { Step } = Steps;\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Follow steps\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Steps current={props.current} direction='vertical'>\r\n                        <Step title=\"Upload\" description='Uploading of all media assets and metadata to IPFS' />\r\n                        <Step icon={props.current == 0 && <LoadingOutlined type=\"loading\" />} title=\"Mint\" description='Send transaction to create your NFT' />\r\n                        <Step icon={props.current !== 2 ? <LoadingOutlined type=\"loading\" /> : props.current == 2 && <CheckOutlined type=\"finish\" />} title=\"Approve\" description='This transaction is conducted only once per collection' />\r\n\r\n                    </Steps>\r\n\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NftPopup","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport Web3 from 'web3';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport EditCollection from './updateCollection';\r\nimport { CreateMetaDataAndMint } from './../Wallet/interact';\r\nimport NftPopup from './nftPopup';\r\nimport axios from 'axios';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\nconst NftDetails = (props) => {\r\n\r\n\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [current, setCurrent] = React.useState(0)\r\n    const [contractAdd, setContractAdd] = useState('')\r\n    // const [collid, setCollid] = useState('')\r\n    // console.log('collid', collid)\r\n    // console.log('contAddre', contractAdd)\r\n    // console.log('current', current)\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'projdataaaa')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    // console.log(nftdetail, 'latprojdetail')\r\n    const collupdate = useSelector(state => {\r\n        return state?.projectdetails?.collectiondetails\r\n    })\r\n\r\n    // console.log('collupdate', collupdate)\r\n    useEffect(() => {\r\n        // \r\n        dispatch(NftList(id))\r\n        dispatch(ProjectDetail(id))\r\n        // dispatch(GetSettings())\r\n    }, [id])\r\n\r\n\r\n    const mint = (contractAddress) => {\r\n        CreateMetaDataAndMint({\r\n            _name: nftdetail.title,\r\n            _des: nftdetail.description,\r\n            _imgBuffer: nftdetail.image,\r\n            contractAddress,\r\n            setCurrent,\r\n            collid: nftdetail?.collection_id,\r\n            nft_file_content: nftdetail?.nft_file_content,\r\n            id,\r\n            setModalShow\r\n        })\r\n    }\r\n\r\n\r\n    // const UpdateContract = async (id) => {\r\n    //     \r\n\r\n    //     const formData = new FormData();\r\n\r\n    //     formData.append('contract_id', cont);\r\n    //     const token = localStorage.getItem('authToken')\r\n\r\n\r\n    //     try {\r\n    //         const config = {\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //                 'Authorization': `Bearer ${token}`\r\n    //             },\r\n    //             transformRequest: formData => formData\r\n    //         }\r\n    //         // \r\n    //         await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${id}`,\r\n    //             formData, config\r\n    //         )\r\n    //     } catch (error) {\r\n    //         \r\n    //         console.log(\"error\");\r\n    //     }\r\n    // };\r\n\r\n\r\n    const deployContract = async () => {\r\n        // \r\n        try {\r\n            if (nftdetail?.collectionData?.contract_id == null) {\r\n\r\n                await window.ethereum.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: web3.utils.toHex('80001') }],\r\n                })\r\n\r\n                const { address } = await ConnectWallet()\r\n                const MyNFTContract = new web3.eth.Contract(NFTContract.abi)\r\n                const gas = await web3.eth.getGasPrice();\r\n                // const gas = 500000\r\n\r\n                MyNFTContract.deploy({\r\n                    data: NFTContract.bytecode,\r\n                    arguments: [nftdetail?.collectionData?.title, nftdetail?.collectionData?.symbol],\r\n                }).send({\r\n                    from: address,\r\n                })\r\n                    .on('error', (error) => {\r\n                        // console.log(error)\r\n                    })\r\n                    .on('transactionHash', (transactionHash) => {\r\n                        // console.log(transactionHash, \"transactionHash\")\r\n                    })\r\n                    .on('receipt', (receipt) => {\r\n                        // receipt will contain deployed contract address\r\n                        // console.log(receipt, \"reciept\")\r\n                    })\r\n                    .on('confirmation', (confNumber, receipt) => {\r\n                        // console.log(receipt.contractAddress, \"confirmRecipet\")\r\n                        if (confNumber == 1) {\r\n                            mint(receipt?.contractAddress)\r\n                            // setContractAdd(receipt?.contractAddress)\r\n                            // UpdateContract(id)\r\n                        }\r\n                    })\r\n            } else {\r\n                mint(nftdetail?.collectionData?.contract_id)\r\n            }\r\n            return {\r\n                success: true,\r\n                // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n                status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n            }\r\n        } catch (error) {\r\n            // \r\n            alert(\"went wrong\")\r\n            return {\r\n                success: false,\r\n                status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const deployAndMint = async () => {\r\n\r\n        setModalShow(true)\r\n        // mint()\r\n        await deployContract()\r\n        // nftdetail.id()\r\n    }\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n                                <img src={nftdetail.image} alt=\"\" />\r\n                            </div>\r\n                                {/* Netstorm Tab */}\r\n                                {/* <ul className=\"netstorm-tab nav nav-tabs\" id=\"nav-tab\">\r\n                                        <><li>\r\n                                            <a className=\"active\" id=\"nav-home-tab\" data-toggle=\"pill\" href=\"#nav-home\">\r\n                                                <h5 className=\"m-0\">{initData.tab_1}</h5>\r\n                                            </a>\r\n                                        </li><li>\r\n                                                <a id=\"nav-contact-tab\" data-toggle=\"pill\" href=\"#nav-contact\">\r\n                                                    <h5 className=\"m-0\">{initData.tab_3}</h5>\r\n                                                </a>\r\n                                            </li></>\r\n                                    </ul> */}\r\n                            </>\r\n                            {/* ))\r\n                                } */}\r\n                            {/* <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                                    <div className=\"tab-pane fade show active\" id=\"nav-home\">\r\n                                        <ul className=\"list-unstyled\">\r\n                                            {tabData_1.map((item, idx) => {\r\n                                                return (\r\n                                                    <li className=\"single-tab-list d-flex align-items-center\">\r\n                                                        <img className=\"avatar-sm rounded-circle mr-3\" src={item.img} alt=\"\" />\r\n                                                        <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{nftdetail?.user_data?.username}</a></p>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                    </div>\r\n    \r\n                                    <div className=\"tab-pane fade\" id=\"nav-contact\">\r\n                                        <div className=\"owner-meta d-flex align-items-center mt-3\">\r\n                                            <span>Owner</span>\r\n                                            <a className=\"owner d-flex align-items-center ml-2\" href=\"/author\">\r\n                                                <img className=\"avatar-sm rounded-circle\" src={initData.ownerImg} alt=\"\" />\r\n                                                <h6 className=\"ml-2\">{nftdetail?.user_data?.username}</h6>\r\n                                            </a>\r\n                                        </div>\r\n                                        <p className=\"mt-2\">Created : {dayjs(nftdetail?.created_at).format(\"DD MMM YYYY\")}</p>\r\n                                    </div>\r\n                                </div> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-8\">\r\n                        <h3 className=\"m-0\">{nftdetail?.title}</h3>\r\n                        <div className=\"card no-hover content sm:mt-5 mt-lg-3\">\r\n\r\n                            <div className=\"owner d-flex align-items-center\">\r\n                                <span>Owned By</span>\r\n                                <a className=\"owner-meta d-flex align-items-center\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={projdetail.user_data.avatar} alt=\"\" /> */}\r\n                                </a>\r\n                                <span className=\"text-white\">{projdetail?.user_data?.username} </span>\r\n\r\n                            </div>\r\n                            <div class=\"item-info-list\">\r\n                                <ul class=\"list-unstyled viewproduct-detail mt-4\">\r\n\r\n                                    {/* <li class=\"price d-flex \"><span>Current Price : </span><span>1122 MATIC</span></li> */}\r\n                                    {/* <li class=\"mt-4\"><span>Number of NFTs Minted :  </span><span>5</span></li> */}\r\n                                    <li class=\"mt-4\"><span>Token No:  </span><span>#{nftdetail.token_id}</span></li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            {nftdetail.is_mint == 1 ? (\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n                                    <div className=\" mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF', width: \"100%\" }}\r\n                                    >  Ready to purchase</div>\r\n\r\n\r\n                                </div>\r\n\r\n                            ) : (\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n                                    {nftdetail.project_status == 1 ? (\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            id=\"nftdetail.id\" onClick={() => deployAndMint(id)}>  Mint</button><NftPopup\r\n                                                show={modalShow}\r\n                                                current={current}\r\n                                                onHide={() => setModalShow(false)} /></>\r\n                                    ) : (\r\n\r\n                                        <button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                        >  waiting for approval</button>\r\n                                    )}\r\n\r\n                                </div>\r\n\r\n                            )}\r\n\r\n\r\n                            <div className=\"item-info-list\">\r\n                                <ul className=\"list-unstyled\">\r\n                                    <li className=\"price d-flex\">\r\n                                        {/* <span>Current Price : {nftdetail?.price} MATIC</span> */}\r\n                                        {/* <span>Price </span> */}\r\n                                        {/* <span>{latprojdetail.price} MATIC</span> */}\r\n\r\n                                    </li>\r\n                                    <li>\r\n\r\n                                        {/* <span>{projdetail.projectdetails.latitude}</span> */}\r\n                                    </li>\r\n                                    {/* <li> */}\r\n                                    {/* <span>Volume Traded </span> */}\r\n                                    {/* <span>Number of NFT's Minted : {nftdetail?.number_of_nft}</span> */}\r\n                                    {/* </li> */}\r\n                                </ul>\r\n                            </div>\r\n\r\n                            {/* <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/wallet-connect\">{initData.btnText}</a> */}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div className='col-12 description'>\r\n                    <h3 > Description</h3>\r\n                    <div className=\"card no-hover countdown-times my-4\">\r\n                        {/* ksdjfksdjbfjsdbf */}\r\n                        {/* {nftdetail.description} */}\r\n                        {/* <div className=\"countdown d-flex justify-content-center\" /> */}\r\n                        <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft\" />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n            <div className='container table-detail'>\r\n                <div className='col-12'>\r\n                    <NftdataTable />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default NftDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ProjectList';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport NftDetails from '../components/ItemDetails/nftDetails';\r\n\r\nconst Nft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            {/* <Breadcrumb title=\"Projects\" subpage=\"Explore\" page=\"\" /> */}\r\n            <NftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nconst FunddataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    // const { id } = useParams()\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive >\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Organization Name  {funddetail?.organization_detail?.organization_name}</td>\r\n                                <td>Country  {funddetail?.organization_detail?.country}</td>\r\n                                <td>Tax Number  {funddetail?.organization_detail?.tax_number}</td>\r\n                                <td>Web URL  {funddetail?.organization_detail?.web_url}</td>\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default FunddataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst FundTransdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {funddetail?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FundTransdataTable","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { Button } from 'bootstrap';\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from './fundraiserdetail';\r\nimport FundTransdataTable from './fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\n// const initData = {\r\n//     itemImg: \"/img/auction_2.jpg\",\r\n//     date: \"2022-03-30\",\r\n//     tab_1: \"Bids\",\r\n//     tab_2: \"History\",\r\n//     tab_3: \"Details\",\r\n//     ownerImg: \"/img/avatar_1.jpg\",\r\n//     itemOwner: \"Themeland\",\r\n//     created: \"15 Jul 2021\",\r\n//     title: \"Walking On Air\",\r\n//     content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n//     price_1: \"1.5 ETH\",\r\n//     price_2: \"$500.89\",\r\n//     count: \"1 of 5\",\r\n//     size: \"14000 x 14000 px\",\r\n//     volume: \"64.1\",\r\n//     highest_bid: \"2.9 BNB\",\r\n//     bid_count: \"1 of 5\",\r\n//     btnText: \"Place a Bid\"\r\n// }\r\n\r\n// const tabData_1 = [\r\n//     {\r\n//         id: \"1\",\r\n//         img: \"/img/avatar_1.jpg\",\r\n//         price: \"14 ETH\",\r\n//         time: \"4 hours ago\",\r\n//         author: \"@arham\"\r\n//     },\r\n//     {\r\n//         id: \"2\",\r\n//         img: \"/img/avatar_2.jpg\",\r\n//         price: \"10 ETH\",\r\n//         time: \"8 hours ago\",\r\n//         author: \"@junaid\"\r\n//     },\r\n//     {\r\n//         id: \"3\",\r\n//         img: \"/img/avatar_3.jpg\",\r\n//         price: \"12 ETH\",\r\n//         time: \"3 hours ago\",\r\n//         author: \"@yasmin\"\r\n//     }\r\n// ]\r\n\r\n// const tabData_2 = [\r\n//     {\r\n//         id: \"1\",\r\n//         img: \"/img/avatar_6.jpg\",\r\n//         price: \"32 ETH\",\r\n//         time: \"10 hours ago\",\r\n//         author: \"@hasan\"\r\n//     },\r\n//     {\r\n//         id: \"2\",\r\n//         img: \"/img/avatar_7.jpg\",\r\n//         price: \"24 ETH\",\r\n//         time: \"6 hours ago\",\r\n//         author: \"@artnox\"\r\n//     },\r\n//     {\r\n//         id: \"3\",\r\n//         img: \"/img/avatar_8.jpg\",\r\n//         price: \"29 ETH\",\r\n//         time: \"12 hours ago\",\r\n//         author: \"@meez\"\r\n//     }\r\n// ]\r\n\r\n// const sellerData = [\r\n//     {\r\n//         id: \"1\",\r\n//         img: \"/img/avatar_1.jpg\",\r\n//         seller: \"@ArtNoxStudio\",\r\n//         post: \"Creator\"\r\n//     },\r\n//     {\r\n//         id: \"2\",\r\n//         img: \"/img/avatar_2.jpg\",\r\n//         seller: \"Virtual Worlds\",\r\n//         post: \"Collection\"\r\n//     }\r\n// ]\r\n\r\nconst FundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    // console.log(fundprojdetail, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div class=\"row py-0\">\r\n                    <div className='col-12 p-0'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-between px-0\">\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div className='custam_col'>\r\n                            <h5 class=\"user_title\"><div>Description</div></h5>\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n                                    <div className=\"card no-hover detail_single_nfts\">\r\n\r\n                                        <li className='nft_price'>\r\n                                            ${funddetail?.total_fundraised} raised from all projects\r\n\r\n                                        </li>\r\n\r\n\r\n                                        {/* <li className=\"price d-flex justify-content-between\">\r\n                                                <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"> 71% </span>\r\n    \r\n                                            </li> */}\r\n\r\n                                    </div>\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        {/* <li className='card-inner-heading'>\r\n                                            <span style={{}}>Projects</span>\r\n                                        </li> */}\r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    // console.log('todat', date2)\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    // const totaldays = days_difference.slice(0,1)\r\n                                                    // console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                    {/* {(item.created_at).diff(new Date, 'day', true)} */}\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-12'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default FundraiserDetail;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport FundraiserDetail from '../components/TopSeller/fundraiserDetails';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\n\r\nconst FundDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main main-fund-detail\">\r\n\r\n            <Header />\r\n            <FundraiserDetail />\r\n            <Fundraiser />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default FundDetail;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst LatprojNftDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [ownwallet, setOwnWallet] = useState('')\r\n    const [ownFee, setOwnFee] = useState('')\r\n    const [platformFee, setPlatformFee] = useState('')\r\n    console.log('own', ownwallet)\r\n    const id = useParams();\r\n    // console.log(id, 'idd')\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.getnftwoldetails\r\n    })\r\n    // console.log('paymentflow', [latprojnftdetail.payment_flow?.project_data.wallets])\r\n\r\n\r\n    const getSett = useSelector(state => {\r\n        // \r\n        return state.projectdetails.settings\r\n    })\r\n    // console.log('getSett', getSett)\r\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\r\n    useEffect(() => {\r\n        dispatch(GetNftwol(id))\r\n        dispatch(GetSettings())\r\n\r\n\r\n    }, [id])\r\n    const buyHandler = () => {\r\n        \r\n        // setOwnWallet([latprojnftdetail.payment_flow?.project_data.wallets])\r\n        // setOwnFee([latprojnftdetail.payment_flow?.project_data.fees])\r\n        // setPlatformFee([latprojnftdetail.payment_flow?.karmatica_fee])\r\n\r\n        BuyNft({\r\n            contractAddress: latprojnftdetail?.collectionData?.contract_id,\r\n            tokenId: latprojnftdetail.token_id,\r\n            payFrom: latprojnftdetail.pay_from,\r\n            values: setValue.value,\r\n            sellingCount: latprojnftdetail.selling_count,\r\n            platformFee: ([latprojnftdetail.payment_flow?.karmatica_fee]),\r\n\r\n            ownerFee: ([latprojnftdetail.payment_flow?.project_data.fees]),\r\n            ownerWallet: ([latprojnftdetail.payment_flow?.project_data.wallets]),\r\n            flow: ([latprojnftdetail.payment_flow])\r\n\r\n        })\r\n    }\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n\r\n                                {/* {latprojdetail?.nft_data?.map((item, idx) => { */}\r\n                                {/*  */}\r\n                                {/* return ( */}\r\n                                <img src={latprojnftdetail.image} alt=\"\" />\r\n                                {/* ) */}\r\n                                {/* })} */}\r\n                            </div>\r\n                                {/* Netstorm Tab */}\r\n                                {/* <ul className=\"netstorm-tab nav nav-tabs\" id=\"nav-tab\">\r\n                                    <><li>\r\n                                        <a className=\"active\" id=\"nav-home-tab\" data-toggle=\"pill\" href=\"#nav-home\">\r\n                                            <h5 className=\"m-0\">{initData.tab_1}</h5>\r\n                                        </a>\r\n                                    </li><li>\r\n                                            <a id=\"nav-contact-tab\" data-toggle=\"pill\" href=\"#nav-contact\">\r\n                                                <h5 className=\"m-0\">{initData.tab_3}</h5>\r\n                                            </a>\r\n                                        </li></>\r\n                                </ul> */}\r\n                            </>\r\n                            {/* ))\r\n                            } */}\r\n                            {/* <div className=\"tab-content\" id=\"nav-tabContent\">\r\n                                <div className=\"tab-pane fade show active\" id=\"nav-home\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        {tabData_1.map((item, idx) => {\r\n                                            return (\r\n                                                <li className=\"single-tab-list d-flex align-items-center\">\r\n                                                    <img className=\"avatar-sm rounded-circle mr-3\" src={item.img} alt=\"\" />\r\n                                                    <p className=\"m-0\">Bid listed for <strong>{item.price}</strong> {item.time} <br />by <a href=\"/author\">{nftdetail?.user_data?.username}</a></p>\r\n                                                </li>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n​\r\n                                <div className=\"tab-pane fade\" id=\"nav-contact\">\r\n                                    <div className=\"owner-meta d-flex align-items-center mt-3\">\r\n                                        <span>Owner</span>\r\n                                        <a className=\"owner d-flex align-items-center ml-2\" href=\"/author\">\r\n                                            <img className=\"avatar-sm rounded-circle\" src={initData.ownerImg} alt=\"\" />\r\n                                            <h6 className=\"ml-2\">{nftdetail?.user_data?.username}</h6>\r\n                                        </a>\r\n                                    </div>\r\n                                    <p className=\"mt-2\">Created : {dayjs(nftdetail?.created_at).format(\"DD MMM YYYY\")}</p>\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className='row py-0'>\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}</span>\r\n                        </div>\r\n                        <div className=\"content sm:mt-5 mt-lg-3\">\r\n                            <div className=\"card no-hover\">\r\n\r\n\r\n\r\n                                <div className='d-flex  align-items-center justify-content-between'>\r\n                                    {/* <h3 className=\"m-0\">{nftdetail?.title}</h3> */}\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center '>\r\n                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"> <Link to={`/updateproject/${projdetail.projectdetails.id}`} style={{ color: '#FFF' }}>Edit</Link></a>\r\n                                    <a className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-2\" onClick={() => deleteHandler(projdetail.projectdetails.id)} style={{ color: '#FFF' }}>Delete</a> */}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                {/* <p dangerouslySetInnerHTML={{ __html: nftdetail?.description }} /> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{latprojnftdetail.pay_from}</span>\r\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                        {/* <img className=\"avatar-sm rounded-circle\" src=\"/img/avtar1.png\" alt=\"\" /> */}\r\n                                        {/* <h6 className=\"ml-2\">{latprojnftdetail.pay_from}</h6> */}\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <li className=\"price d-flex\">\r\n                                            {/* <span>Current Price : {nftdetail?.price} MATIC</span> */}\r\n                                            {/* <span>Price </span> */}\r\n                                            {/* <span>{latprojdetail.price} MATIC</span> */}\r\n\r\n                                        </li>\r\n                                        {/* <li>\r\n​\r\n                                        <span dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                                    </li> */}\r\n                                        {/* <li> */}\r\n                                        {/* <span>Volume Traded </span> */}\r\n                                        {/* {latprojdetail?.nft_data?.map((item, idx) => { */}\r\n                                        {/*  */}\r\n\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{latprojnftdetail.token_id}</span>\r\n                                        {/* })} */}\r\n                                        {/* </li> */}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className='eddlbtton d-flex  align-items-center mt-2'>\r\n\r\n                                    <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                        id=\"nftdetail.id\" onClick={() => buyHandler()}>  Buy</button>\r\n\r\n\r\n                                </div>\r\n                                {/* <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/wallet-connect\">{initData.btnText}</a> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card no-hover countdown-times my-4 \">\r\n                            <span dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n                            {/* <div className=\"countdown d-flex justify-content-center\" /> */}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\nexport default LatprojNftDetails;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport ItemDetail from '../components/ItemDetails/ItemDetails';\r\nimport LiveAuctions from '../components/Auctions/AuctionsTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ProjDetails from '../components/ItemDetails/viewProdetails';\r\nimport ProjNFTS from '../components/Auctions/projectnfts';\r\nimport LatprojNftDetails from '../components/Auctions/nftBuy';\r\n\r\nclass latnftprojDetails extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <LatprojNftDetails />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default latnftprojDetails;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst ScrollToTop = (props) => {\r\n    const location = useLocation();\r\n    useEffect(() => {\r\n        if (!location.hash) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }, [location]);\r\n\r\n    return <>{props.children}</>\r\n};\r\n\r\nexport default ScrollToTop;","\r\n// import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n// import { Button, Form, Input, Modal, Upload } from 'antd';\r\n// import React, { Fragment, useEffect, useState, useRef } from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { AddNftAction, CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\n// import { useFormData } from './Context/context'\r\n// import MyVerticallyCenteredModal from './createCollection';\r\n// import styles from './styles/styles.module.scss'\r\n// import 'antd/lib/form/style/css';\r\n// import 'antd/lib/upload/style/css';\r\n// import { Collapse } from 'antd';\r\n// import 'antd/lib/modal/style/css';\r\n// import 'antd/lib/button/style/css'\r\n// import JoditEditor from 'jodit-react'\r\n// import Loader from '../Loader/loader';\r\n// import { useParams } from 'react-router';\r\n\r\n// const getBase64 = (file) =>\r\n//     new Promise((resolve, reject) => {\r\n//         const reader = new FileReader();\r\n//         reader.readAsDataURL(file);\r\n//         reader.onload = () => resolve(reader.result);\r\n//         reader.onerror = (error) => reject(error);\r\n//     });\r\n// // import ImgCrop from 'antd-img-crop';\r\n\r\n// const AddNft = ({ current, prev }) => {\r\n//     const editor = useRef(null);\r\n//     const [previewOpen, setPreviewOpen] = useState(false);\r\n//     const [previewImage, setPreviewImage] = useState('');\r\n//     const [previewTitle, setPreviewTitle] = useState('');\r\n//     // console.log(data, 'formdta')\r\n//     const [count, setCount] = useState(0);\r\n//     // const [nft_description, setNft_description] = useState([])\r\n//     // console.log('nft_description', nft_description)\r\n\r\n//     const [modalShow, setModalShow] = React.useState(false);\r\n//     const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n//     // console.log('colldata', coldata)\r\n//     // console.log(nft_collection_id)\r\n//     // const [coll_id,setCollId] = useState()\r\n//     const coll_id = (Object.values(nft_collection_id));\r\n//     // console.log(\"collid\", coll_id)\r\n\r\n//     const [loading, setLoading] = useState(false)\r\n\r\n//     const handleIncrement = () => {\r\n//         setCount(prevCount => prevCount + 1);\r\n//     };\r\n\r\n\r\n//     const handleDecrement = () => {\r\n//         setCount(prevCount => prevCount - 1);\r\n//     };\r\n//     // console.log(count, 'count')\r\n\r\n//     function onHandleClick(index, item) {\r\n//         setNft_collection_id(previ => {\r\n//             previ[index] = item\r\n//             return {\r\n//                 ...previ,\r\n//             }\r\n//         }\r\n//         );\r\n//     };\r\n//     const { id } = useParams()\r\n//     // function descc(e) {\r\n//     //     setNft_description(prev => [...prev, nft_description]);\r\n//     // };\r\n\r\n//     const defaultValues = {\r\n//         setNft_description: '',\r\n//     }\r\n//     // this.setState(prev => ({\r\n//     //     item: prev.item.map(item => item.name === 'xjz' ? { ...item, age: '10' } : item)\r\n//     // }))\r\n//     const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n//         mode: 'all',\r\n//         defaultValues\r\n//     });\r\n//     useEffect(() => {\r\n//         register(\"nft_description\");\r\n//     }, [register]);\r\n\r\n//     // const ipfsClient = create('http://127.0.0.1:5001')\r\n//     // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n//     const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n//     // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n//     // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n//     const dispatch = useDispatch()\r\n//     const col = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.getcollections\r\n//     })\r\n//     const imaeg = useSelector(state => {\r\n//         // \r\n//         return state?.projectdetails?.nftres\r\n//     })\r\n//     // console.log(imaeg, 'imgg')\r\n\r\n\r\n\r\n\r\n//     // console.log('col', col)\r\n\r\n\r\n\r\n//     const lat = localStorage.getItem('latitude')\r\n//     // console.log(lat, 'lattt')\r\n//     const log = localStorage.getItem('longitude')\r\n//     // console.log(log, 'logggg')\r\n\r\n//     // const desdata = { nft_description() }\r\n//     useEffect(() => {\r\n\r\n//         dispatch(GetCollectionsAction())\r\n\r\n\r\n//     }, []);\r\n\r\n\r\n//     const onFinish = async (values) => {\r\n\r\n//         setLoading(true)\r\n//         const nftImagepromises = values?.nfts?.map(x => uploadNFT(x?.nft_image?.file))\r\n\r\n//         const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n//         // \r\n\r\n//         const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n//         // \r\n\r\n//         const formData = new FormData()\r\n\r\n\r\n\r\n\r\n\r\n//         formData.append('image', addedImage)\r\n//         formData.append('title', values?.nfts?.map(x =>\r\n//             x.nft_name\r\n//         ))\r\n//         // const newlist = newList.push(nft_collection_id);\r\n//         formData.append('collection_id', coll_id)\r\n//         // formData.append('nft_description', nft_description)\r\n//         formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n//         // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n\r\n//         // dispatch(uploadNFT())\r\n//         dispatch(AddNftAction(formData, id, setLoading))\r\n//         // setLoading(false)\r\n\r\n//         // console.log('Received values of form:', values, data)\r\n\r\n//     };\r\n//     // console.log('title', localStorage.getItem('title'))\r\n//     const handleCancel = () => setPreviewOpen(false);\r\n\r\n//     const handlePreview = async (file) => {\r\n//         if (!file.url && !file.preview) {\r\n//             file.preview = await getBase64(file.originFileObj);\r\n//         }\r\n//         setPreviewImage(file.url || file.preview);\r\n//         setPreviewOpen(true);\r\n//         setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n//     };\r\n\r\n//     const fileProps = {\r\n//         name: \"file\",\r\n//         multiple: false,\r\n//         beforeUpload: () => {\r\n//             return false;\r\n//         },\r\n//         onChange(info) {\r\n//             if (info.file.status !== \"uploading\") {\r\n//                 let reader = new FileReader();\r\n//                 reader.readAsDataURL(info.file);\r\n//                 // setUploadedImage(info.file);\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     // const getFile = (e) => {\r\n//     //     // \r\n//     //     console.log('Upload event:', e);\r\n\r\n//     //     if (Array.isArray(e)) {\r\n//     //         return e;\r\n//     //     }\r\n//     //     return e && e.fileList;\r\n//     // };\r\n//     const [form] = Form.useForm()\r\n//     // const save = (data) => {\r\n//     //     setNft_description(data)\r\n//     // };\r\n//     const { Panel } = Collapse;\r\n//     const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n//     const onPositionChange = (newExpandIconPosition) => {\r\n//         setExpandIconPosition(newExpandIconPosition);\r\n//     };\r\n//     const onChange = (key) => {\r\n//         console.log(key);\r\n//     };\r\n//     const nfts = [\r\n//         {\r\n//             key: 0,\r\n//             name: 'Wheat Flour',\r\n//             amount: 1000\r\n//         },\r\n\r\n//     ];\r\n//     return (\r\n//         <section className=\"author-area\">\r\n//             <div className=\"container\">\r\n//                 <div className=\"row justify-content-center\">\r\n\r\n\r\n//                     <div className=\"col-14 col-md-9\">\r\n//                         {/* Intro */}\r\n//                         <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n//                             <div className=\"intro-content\">\r\n\r\n//                                 <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n\r\n\r\n//                                 <div>\r\n//                                     {loading ? (\r\n//                                         <Loader />\r\n//                                     ) : (\r\n\r\n//                                         <div >\r\n//                                             <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n//                                                 nfts: nfts\r\n//                                             }}\r\n//                                                 // onSubmit={(event) => handleSubmit(event)}\r\n//                                                 onFinish={(event) => onFinish(event)}\r\n//                                                 autoComplete=\"off\" className=\"item-form card no-hover\">\r\n//                                                 <Form.List name=\"nfts\">\r\n\r\n//                                                     {(fields, { add, remove }) => (\r\n//                                                         <>\r\n//                                                             {/* <div className='steps-center'>\r\n\r\n\r\n//                                                 <div className='orgicon1'>\r\n\r\n//                                                     <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n//                                                 </div>\r\n\r\n//                                                 <div className='orgicon1line'>\r\n//                                                     <span style={{}}> ----------------------------- </span>\r\n\r\n//                                                 </div>\r\n//                                                 <div className='orgicon2'>\r\n\r\n//                                                     <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n//                                                 </div>\r\n//                                             </div> */}\r\n//                                                             <>\r\n//                                                                 {fields.map(({ key, name, ...restField }, index) => (\r\n//                                                                     // <Space\r\n//                                                                     //     key={key}\r\n//                                                                     //     style={{\r\n//                                                                     //         display: 'flex',\r\n//                                                                     //         marginBottom: 8,\r\n//                                                                     //     }}\r\n//                                                                     //     align=\"baseline\"\r\n//                                                                     // >\r\n\r\n//                                                                     <Fragment>\r\n//                                                                         {/* <div>Artwork {index}</div> */}\r\n//                                                                         <div className=\"row\">\r\n\r\n//                                                                             <div className=\"col-md-10 col-12\">\r\n//                                                                                 <label>Name</label>\r\n//                                                                                 <div>\r\n\r\n//                                                                                     <Form.Item\r\n//                                                                                         {...restField}\r\n//                                                                                         name={[name, \"nft_name\"]}\r\n//                                                                                         // label=\"Enter name\"\r\n//                                                                                         // name=\"name\"\r\n//                                                                                         rules={[\r\n//                                                                                             {\r\n//                                                                                                 required: true,\r\n//                                                                                                 message: 'Missing  name',\r\n//                                                                                             },\r\n//                                                                                         ]}\r\n//                                                                                     >\r\n//                                                                                         {/* <label>Name</label> */}\r\n//                                                                                         <Input placeholder=\"Name\" />\r\n//                                                                                     </Form.Item>\r\n//                                                                                 </div>\r\n//                                                                                 <label>Description</label>\r\n//                                                                                 <div>\r\n\r\n//                                                                                     <Form.Item\r\n//                                                                                         {...restField}\r\n//                                                                                         name={[name, \"nft_description\"]}\r\n//                                                                                         // label=\"Enter name\"\r\n//                                                                                         // name=\"name\"\r\n//                                                                                         rules={[\r\n//                                                                                             {\r\n//                                                                                                 required: true,\r\n//                                                                                                 message: 'Missing  description',\r\n//                                                                                             },\r\n//                                                                                         ]}\r\n//                                                                                     >\r\n//                                                                                         {/* <Controller\r\n//                                                                             control={control}\r\n//                                                                             name=\"nft_description\"\r\n//                                                                             defaultValue=\"\"\r\n//                                                                             render={({ field: { value, onChange } }) => {\r\n//                                                                                 return  */}\r\n//                                                                                         <JoditEditor\r\n//                                                                                             ref={editor}\r\n//                                                                                             value={'nft_description'}\r\n//                                                                                             // config={config}\r\n\r\n//                                                                                             placeholder=\"start typing\"\r\n//                                                                                             tabIndex={1} // tabIndex of textarea\r\n//                                                                                             // onBlur={newContent => 'nft_description'(newContent)} // preferred to use only this option to update the content for performance reasons\r\n//                                                                                             onChange={newContent => { }}\r\n//                                                                                         />\r\n//                                                                                         {/* }} */}\r\n//                                                                                         {/* /> */}\r\n//                                                                                     </Form.Item>\r\n//                                                                                 </div>\r\n//                                                                             </div>\r\n//                                                                             {/* <div className=\"col-md-5 col-12\">\r\n//                                                                     <label>Nft</label>\r\n//                                                                     <div>\r\n//                                                                         <Form.Item\r\n//                                                                             {...restField}\r\n//                                                                             name={[name, \"nft_image\"]}\r\n//                                                                             // getValueFromEvent={getFile}\r\n//                                                                             rules={[\r\n//                                                                                 {\r\n//                                                                                     required: true,\r\n//                                                                                     message: 'Please select a image',\r\n//                                                                                 },\r\n//                                                                             ]}\r\n\r\n//                                                                         >\r\n\r\n//                                                                             <Upload\r\n//                                                                                 {...fileProps}\r\n//                                                                                 action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n//                                                                                 listType=\"picture-card\"\r\n//                                                                                 // fileList={fileList}\r\n//                                                                                 // onChange={onChange}\r\n//                                                                                 onPreview={handlePreview}\r\n//                                                                                 maxCount={1}\r\n\r\n//                                                                             >\r\n//                                                                                 + Upload\r\n//                                                                             </Upload>\r\n\r\n\r\n//                                                                         </Form.Item>\r\n//                                                                         <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n//                                                                             <img\r\n//                                                                                 alt=\"example\"\r\n//                                                                                 style={{\r\n//                                                                                     width: '100%',\r\n//                                                                                 }}\r\n//                                                                                 src={previewImage} />\r\n//                                                                         </Modal>\r\n//                                                                     </div>\r\n//                                                                 </div> */}\r\n//                                                                             <div className=\"col-md-1 col-12\">\r\n//                                                                                 <MinusCircleOutlined onClick={(e) => { remove(name); handleDecrement(e); }} />\r\n//                                                                             </div>\r\n//                                                                             {/* </div> */}\r\n//                                                                             <div className=\"col-md-3 col-12\">\r\n\r\n//                                                                                 {/* <div className=\"col-24\"> */}\r\n\r\n//                                                                                 <div className=\"form-group\">\r\n//                                                                                     <label className='mt-2'>Choose Collection</label>\r\n//                                                                                     <div className=\"card choose_div\" style={{\r\n//                                                                                         background: \"black\",\r\n//                                                                                         marginBottom: \"8px\",\r\n//                                                                                     }}>\r\n//                                                                                         <div className=\"card-body \">\r\n//                                                                                             <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n//                                                                                                 <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n//                                                                                             </Button>\r\n\r\n//                                                                                             <MyVerticallyCenteredModal\r\n//                                                                                                 show={modalShow}\r\n//                                                                                                 onHide={() => setModalShow(false)} />\r\n//                                                                                         </div>\r\n//                                                                                     </div>\r\n//                                                                                 </div>\r\n//                                                                             </div>\r\n\r\n\r\n//                                                                             {col?.map((item, idx) => (\r\n\r\n//                                                                                 <div key={`auc_${idx}`} id={item.id} className=\"col-md-3 col-12 choose_div\">\r\n//                                                                                     {/* <Form.Item\r\n//                                                                             {...restField}\r\n//                                                                             name={[name, \"nft_collection_id\"]}\r\n//                                                                             // getValueFromEvent={getFile}\r\n//                                                                             rules={[\r\n//                                                                                 {\r\n//                                                                                     required: true,\r\n//                                                                                     message: 'Please select nft collection',\r\n//                                                                                 },\r\n//                                                                             ]}\r\n\r\n//                                                                         > */}\r\n//                                                                                     <label className='hidden-word'>jsaswjdwjd</label>\r\n\r\n//                                                                                     <div id={item.id} onClick={() => onHandleClick(index, item.id)} className=\"card\"\r\n//                                                                                         style={{\r\n//                                                                                             background: \"black\",\r\n//                                                                                             marginBottom: \"8px\",\r\n//                                                                                             border: nft_collection_id[index] == item.id ? \"1px solid #fff\" : null\r\n//                                                                                         }}>\r\n//                                                                                         <div className=\"card-body\">\r\n//                                                                                             <div>\r\n\r\n\r\n//                                                                                                 {item.title}\r\n//                                                                                             </div>\r\n\r\n\r\n//                                                                                         </div>\r\n//                                                                                     </div>\r\n//                                                                                     {/* </Form.Item> */}\r\n\r\n//                                                                                 </div>\r\n//                                                                                 // </div>\r\n//                                                                             ))}\r\n//                                                                             <div className=\"col-md-12 col-12\">\r\n//                                                                                 <label>Upload Nft</label>\r\n//                                                                                 <div>\r\n//                                                                                     <Form.Item\r\n//                                                                                         {...restField}\r\n//                                                                                         name={[name, \"nft_image\"]}\r\n//                                                                                         // getValueFromEvent={getFile}\r\n//                                                                                         rules={[\r\n//                                                                                             {\r\n//                                                                                                 required: true,\r\n//                                                                                                 message: 'Please select a image',\r\n//                                                                                             },\r\n//                                                                                         ]}\r\n\r\n//                                                                                     >\r\n\r\n//                                                                                         <Upload\r\n//                                                                                             {...fileProps}\r\n//                                                                                             action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n//                                                                                             listType=\"picture-card\"\r\n//                                                                                             // fileList={fileList}\r\n//                                                                                             // onChange={onChange}\r\n//                                                                                             onPreview={handlePreview}\r\n//                                                                                             maxCount={1}\r\n\r\n//                                                                                         >\r\n//                                                                                             + Upload\r\n//                                                                                         </Upload>\r\n\r\n\r\n//                                                                                     </Form.Item>\r\n//                                                                                     <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n//                                                                                         <img\r\n//                                                                                             alt=\"example\"\r\n//                                                                                             style={{\r\n//                                                                                                 width: '100%',\r\n//                                                                                             }}\r\n//                                                                                             src={previewImage} />\r\n//                                                                                     </Modal>\r\n//                                                                                 </div>\r\n//                                                                             </div>\r\n\r\n//                                                                         </div>\r\n//                                                                     </Fragment>\r\n\r\n//                                                                 ))}\r\n\r\n\r\n\r\n//                                                             </></>\r\n//                                                     )}\r\n\r\n//                                                 </Form.List>\r\n//                                                 <Form.Item>\r\n//                                                     <div className=\"col-12\">\r\n//                                                         <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">Add</button>\r\n//                                                     </div>\r\n\r\n//                                                 </Form.Item>\r\n//                                             </Form>\r\n//                                         </div>\r\n\r\n//                                     )}\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </section>\r\n//     );\r\n// };\r\n// export default AddNft;\r\n\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Upload } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddNftAction, CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\n\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\n\r\nconst AddNft = ({ current, prev }) => {\r\n    const editor = useRef(null);\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    // console.log(data, 'formdta')\r\n    const [count, setCount] = useState(0);\r\n    // const [nft_description, setNft_description] = useState([])\r\n    // console.log('nft_description', nft_description)\r\n\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    // console.log('colldata', coldata)\r\n    // console.log(nft_collection_id)\r\n    // const [coll_id,setCollId] = useState()\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    // console.log(\"collid\", coll_id)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleIncrement = () => {\r\n        setCount(prevCount => prevCount + 1);\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n    const { id } = useParams()\r\n    // function descc(e) {\r\n    //     setNft_description(prev => [...prev, nft_description]);\r\n    // };\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    // this.setState(prev => ({\r\n    //     item: prev.item.map(item => item.name === 'xjz' ? { ...item, age: '10' } : item)\r\n    // }))\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n        defaultValues\r\n    });\r\n    useEffect(() => {\r\n        register(\"nft_description\");\r\n    }, [register]);\r\n\r\n    // const ipfsClient = create('http://127.0.0.1:5001')\r\n    // const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    // const ipfsBaseUrl = ('http://127.0.0.1:8080/')\r\n    // const ipfsBaseUrl = '`${process.env.REACT_APP_IPFS_BASE_URL}`'\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n    // console.log(imaeg, 'imgg')\r\n\r\n\r\n\r\n\r\n    // console.log('col', col)\r\n\r\n\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const onFinish = async (values) => {\r\n\r\n        setLoading(true)\r\n        const nftImagepromises = values?.nfts?.map(x => uploadNFT(x?.nft_image?.file))\r\n\r\n        const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n        // \r\n\r\n        const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n        // \r\n\r\n        const formData = new FormData()\r\n\r\n\r\n\r\n\r\n\r\n        formData.append('image', addedImage)\r\n        formData.append('title', values?.nfts?.map(x =>\r\n            x.nft_name\r\n        ))\r\n        // const newlist = newList.push(nft_collection_id);\r\n        formData.append('collection_id', coll_id)\r\n        // formData.append('nft_description', nft_description)\r\n        formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n        // formData.append('nft_collection_id', values?.nfts?.map(x => x.nft_collection_id))\r\n\r\n        // dispatch(uploadNFT())\r\n        dispatch(AddNftAction(formData, id, setLoading))\r\n        // setLoading(false)\r\n\r\n        // console.log('Received values of form:', values, data)\r\n\r\n    };\r\n    // console.log('title', localStorage.getItem('title'))\r\n    const handleCancel = () => setPreviewOpen(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n        beforeUpload: () => {\r\n            return false;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    // const getFile = (e) => {\r\n    //     // \r\n    //     console.log('Upload event:', e);\r\n\r\n    //     if (Array.isArray(e)) {\r\n    //         return e;\r\n    //     }\r\n    //     return e && e.fileList;\r\n    // };\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n\r\n                                <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n\r\n\r\n                                <div>\r\n                                    {loading ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n\r\n                                        <div >\r\n                                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                                nfts: nfts\r\n                                            }}\r\n                                                // onSubmit={(event) => handleSubmit(event)}\r\n                                                onFinish={(event) => onFinish(event)}\r\n                                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                                <Form.List name=\"nfts\">\r\n\r\n                                                    {(fields, { add, remove }) => (\r\n                                                        <>\r\n                                                            {/* <div className='steps-center'>\r\n\r\n\r\n                                                <div className='orgicon1'>\r\n\r\n                                                    <i className=\" fa-solid fa-circle-check\" style={{}}> Step 1</i>\r\n                                                </div>\r\n\r\n                                                <div className='orgicon1line'>\r\n                                                    <span style={{}}> ----------------------------- </span>\r\n\r\n                                                </div>\r\n                                                <div className='orgicon2'>\r\n\r\n                                                    <i className=\"fa-regular fa-circle\" style={{}}> Step 2</i>\r\n                                                </div>\r\n                                            </div> */}\r\n                                                            <>\r\n                                                                {fields.map(({ key, name, ...restField }, index) => (\r\n                                                                    // <Space\r\n                                                                    //     key={key}\r\n                                                                    //     style={{\r\n                                                                    //         display: 'flex',\r\n                                                                    //         marginBottom: 8,\r\n                                                                    //     }}\r\n                                                                    //     align=\"baseline\"\r\n                                                                    // >\r\n\r\n                                                                    <Fragment>\r\n                                                                        {/* <div>Artwork {index}</div> */}\r\n                                                                        <div className=\"row\">\r\n\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label>Name</label>\r\n                                                                                <div>\r\n\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_name\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: 'Missing  name',\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <label>Name</label> */}\r\n                                                                                        <Input placeholder=\"Name\" />\r\n                                                                                    </Form.Item>\r\n                                                                                </div>\r\n                                                                                <label>Description</label>\r\n                                                                                <div>\r\n\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_description\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: 'Missing  description',\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <Controller\r\n                                                                            control={control}\r\n                                                                            name=\"nft_description\"\r\n                                                                            defaultValue=\"\"\r\n                                                                            render={({ field: { value, onChange } }) => {\r\n                                                                                return  */}\r\n                                                                                        <JoditEditor\r\n                                                                                            ref={editor}\r\n                                                                                            value={'nft_description'}\r\n                                                                                            // config={config}\r\n\r\n                                                                                            placeholder=\"start typing\"\r\n                                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                                            // onBlur={newContent => 'nft_description'(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                                                            onChange={newContent => { }}\r\n                                                                                        />\r\n                                                                                        {/* }} */}\r\n                                                                                        {/* /> */}\r\n                                                                                    </Form.Item>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            {/* <div className=\"col-md-5 col-12\">\r\n                                                                    <label>Nft</label>\r\n                                                                    <div>\r\n                                                                        <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_image\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select a image',\r\n                                                                                },\r\n                                                                            ]}\r\n\r\n                                                                        >\r\n\r\n                                                                            <Upload\r\n                                                                                {...fileProps}\r\n                                                                                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                                listType=\"picture-card\"\r\n                                                                                // fileList={fileList}\r\n                                                                                // onChange={onChange}\r\n                                                                                onPreview={handlePreview}\r\n                                                                                maxCount={1}\r\n\r\n                                                                            >\r\n                                                                                + Upload\r\n                                                                            </Upload>\r\n\r\n\r\n                                                                        </Form.Item>\r\n                                                                        <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                            <img\r\n                                                                                alt=\"example\"\r\n                                                                                style={{\r\n                                                                                    width: '100%',\r\n                                                                                }}\r\n                                                                                src={previewImage} />\r\n                                                                        </Modal>\r\n                                                                    </div>\r\n                                                                </div> */}\r\n                                                                            {/* <div className=\"col-md-1 col-12\">\r\n                                                                                <MinusCircleOutlined onClick={(e) => { remove(name); handleDecrement(e); }} />\r\n                                                                            </div> */}\r\n                                                                            {/* </div> */}\r\n                                                                            <div className='col-12'>\r\n                                                                                <label className='mt-2 mb-3'>Choose Collection</label>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n\r\n                                                                                {/* <div className=\"col-24\"> */}\r\n\r\n                                                                                <div className=\"form-group\">\r\n\r\n                                                                                    <div className=\"card choose_div\" style={{\r\n                                                                                        background: \"black\",\r\n                                                                                        marginBottom: \"8px\",\r\n                                                                                    }}>\r\n                                                                                        <div className=\"card-body \">\r\n                                                                                            <Button variant=\"primary\" className='collection_btn' onClick={() => setModalShow(true)}>\r\n                                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n                                                                                            </Button>\r\n\r\n                                                                                            <MyVerticallyCenteredModal\r\n                                                                                                show={modalShow}\r\n                                                                                                onHide={() => setModalShow(false)} />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n\r\n                                                                            {col?.map((item, idx) => (\r\n\r\n                                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-6 col-lg-3 col-12 choose_div\">\r\n                                                                                    {/* <Form.Item\r\n                                                                            {...restField}\r\n                                                                            name={[name, \"nft_collection_id\"]}\r\n                                                                            // getValueFromEvent={getFile}\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Please select nft collection',\r\n                                                                                },\r\n                                                                            ]}\r\n\r\n                                                                        > */}\r\n\r\n\r\n                                                                                    <div id={item.id} onClick={() => onHandleClick(index, item.id)} className=\"card\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                            border: nft_collection_id[index] == item.id ? \"1px solid #fff\" : null\r\n                                                                                        }}>\r\n                                                                                        <div className=\"card-body\">\r\n                                                                                            <div>\r\n\r\n\r\n                                                                                                {item.title}\r\n                                                                                            </div>\r\n\r\n\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    {/* </Form.Item> */}\r\n\r\n                                                                                </div>\r\n                                                                                // </div>\r\n                                                                            ))}\r\n                                                                            <div className=\"col-md-12 col-12\">\r\n                                                                                <label>Upload Nft</label>\r\n                                                                                <div>\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_image\"]}\r\n                                                                                        // getValueFromEvent={getFile}\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: 'Please select a image',\r\n                                                                                            },\r\n                                                                                        ]}\r\n\r\n                                                                                    >\r\n\r\n                                                                                        <Upload\r\n                                                                                            {...fileProps}\r\n                                                                                            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                                                                            listType=\"picture-card\"\r\n                                                                                            // fileList={fileList}\r\n                                                                                            // onChange={onChange}\r\n                                                                                            onPreview={handlePreview}\r\n                                                                                            maxCount={1}\r\n\r\n                                                                                        >\r\n                                                                                            + Upload\r\n                                                                                        </Upload>\r\n\r\n\r\n                                                                                    </Form.Item>\r\n                                                                                    <Modal open={previewOpen} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                                                                        <img\r\n                                                                                            alt=\"example\"\r\n                                                                                            style={{\r\n                                                                                                width: '100%',\r\n                                                                                            }}\r\n                                                                                            src={previewImage} />\r\n                                                                                    </Modal>\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n\r\n                                                                ))}\r\n\r\n\r\n\r\n                                                            </></>\r\n                                                    )}\r\n\r\n                                                </Form.List>\r\n                                                <Form.Item>\r\n                                                    <div className=\"col-12\">\r\n                                                        <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">Add</button>\r\n                                                    </div>\r\n\r\n                                                </Form.Item>\r\n                                            </Form>\r\n                                        </div>\r\n\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default AddNft;","import React, { Component, useEffect } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Creates from '../components/Create/Create';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport { isLogin } from '../routers/utils';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UploadNftIndex from '../components/Create';\r\nimport AddNft from '../components/Create/addNft';\r\n\r\nconst AddNFT = () => {\r\n    const history = useHistory();\r\n\r\n    // useEffect(() => {\r\n    //   if (!isLogin()) {\r\n    //     history.push('/login')\r\n    //   }\r\n    // }, [])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AddNft />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddNFT;","import React from \"react\";\r\nimport { BrowserRouter, BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// importing all the themes\r\nimport ThemeOne from \"../themes/theme-one\";\r\nimport ExploreOne from \"../themes/explore-one\";\r\nimport ExploreTwo from \"../themes/project-list\";\r\nimport ReadProject from \"../components/Explore/ProjectList\";\r\nimport ExploreFour from \"../themes/latestProjects\";\r\nimport Auctions from \"../themes/auctions\";\r\nimport ItemDetails from \"../themes/item-details\";\r\nimport Activity from \"../themes/activity\";\r\nimport Blog from \"../themes/blog\";\r\nimport BlogSingle from \"../themes/blog-single\";\r\nimport HelpCenter from \"../themes/help-center\";\r\nimport Authors from \"../themes/authors\";\r\nimport Author from \"../themes/author\";\r\nimport WalletConnect from \"../themes/wallet-connect\";\r\nimport Create from \"../themes/create\";\r\nimport Login from \"../themes/login\";\r\nimport Signup from \"../themes/signup\";\r\nimport Contact from \"../themes/contact\";\r\nimport Forgot from \"../themes/forgotpassword\";\r\nimport PrivateRoute from \"./privateRoutes\";\r\nimport ProjectUpdate from \"../themes/update\";\r\nimport TermsCond from \"../themes/term&cond\";\r\nimport All from \"../themes/viewalllatest\";\r\nimport ColExplore from \"../themes/exploreCollections\";\r\nimport Aboutus from \"../themes/Aboutus\";\r\nimport LiveAuctions from \"../components/Auctions/AuctionsTwo\";\r\nimport NewestProj from \"../themes/newestproj\";\r\nimport latprojDetails from \"../themes/latproj-details\";\r\nimport Showcollections from \"../themes/showcollections\";\r\nimport Collectiondetails from \"../themes/collectn-details\";\r\nimport CollectionDetail from \"../themes/collectn-details\";\r\nimport ProjNft from \"../themes/projnft-details\";\r\nimport Nft from './../themes/nft-list';\r\nimport FundDetail from \"../themes/fund-detail\";\r\nimport { useEffect } from \"react\";\r\nimport latnftprojDetails from \"../themes/Latnft\";\r\nimport ScrollToTop from \"../ScrollToTop\";\r\nimport EditNft from \"../components/Create/editNft\";\r\nimport AddNFT from \"../themes/addnftTheme\";\r\n// import { NavLink } from \"react-router-dom\";\r\n\r\nconst MyRouts = () => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <ScrollToTop />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ThemeOne} />\r\n          <Route exact path=\"/explore-1\" component={ExploreOne} />\r\n          <Route exact path=\"/projectlist\" component={ExploreTwo} />\r\n          <Route exact path=\"/updateproject/:id\" component={ProjectUpdate} />\r\n          {/* <Route exact path=\"/projectlist\" component={ExploreThree} /> */}\r\n          <Route exact path=\"/explore-4\" component={ExploreFour} />\r\n          <Route exact path=\"/auctions\" component={Auctions} />\r\n          <Route exact path=\"/popularcollection/details/:id\" component={ItemDetails} />\r\n          <Route exact path=\"/projdetails/:id\" component={latprojDetails} />\r\n          <Route exact path=\"/nftprojdetails/:id\" component={latnftprojDetails} />\r\n          <Route exact path=\"/fundraiser/detail/:user_id\" component={FundDetail} />\r\n          <Route exact path=\"/projnftdetails/:id\" component={ProjNft} />\r\n          <Route exact path=\"/nft/details/:id\" component={Nft} />\r\n          <Route exact path=\"/nftedit/:id/:id\" component={EditNft} />\r\n          <Route exact path=\"/addnft/:id\" component={AddNFT} />\r\n          <Route exact path=\"/activity\" component={Activity} />\r\n          <Route exact path=\"/blog\" component={Blog} />\r\n          <Route exact path=\"/blog-single\" component={BlogSingle} />\r\n          <Route exact path=\"/help-center\" component={HelpCenter} />\r\n          <Route exact path=\"/authors\" component={Authors} />\r\n          <Route exact path=\"/profile\" component={Author} />\r\n          <Route exact path=\"/terms&conditions\" component={TermsCond} />\r\n          <Route exact path=\"/all/:type\" component={All} />\r\n          <Route exact path=\"/aboutus\" component={Aboutus} />\r\n          <Route exact path=\"/allcollections\" component={ColExplore} />\r\n          <Route exact path=\"/wallet-connect\" component={WalletConnect} />\r\n          <Route exact path=\"/my-collections\" component={Showcollections} />\r\n          <Route exact path=\"/collection/:id\" component={CollectionDetail} />\r\n          {/* <Route exact path=\"/newest-projects\" component={NewestProj} /> */}\r\n\r\n          <Route exact path=\"/create\" component={Create} />\r\n\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          {/* <PrivateRoute exact path=\"/create-organization\" component={createOrganization} /> */}\r\n          <PrivateRoute exact path=\"/forgotpassword\" component={Forgot} />\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyRouts\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\n// importing MyRouts where we located all of our theme\r\nimport MyRouts from './routers/routes'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MyRouts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport { authReducer, userDetail } from '../redux/Slices/authSlice'\r\nimport { combineReducers } from '@reduxjs/toolkit'\r\nimport { projectReducer } from './Slices/projectSlice'\r\nimport { footerReducer } from './Slices/footerSlice'\r\nimport { fundraiserReducer } from './Slices/fundraiserSlice'\r\nimport { collectionReducer } from './Slices/popularCollectionSlice'\r\n\r\nconst reducer = combineReducers({\r\n    user: authReducer,\r\n    countries: authReducer,\r\n    annualRevenue: authReducer,\r\n    hereAbout: authReducer,\r\n    login: authReducer,\r\n    forgotpassword: authReducer,\r\n    errmessage: authReducer,\r\n    createproject: projectReducer,\r\n    // getproject: projectReducer,\r\n    projectdetails: projectReducer,\r\n    latestprojects: projectReducer,\r\n    fundraiser: fundraiserReducer,\r\n    footer: footerReducer,\r\n    collection: collectionReducer,\r\n    getcollections: collectionReducer,\r\n    getcollectiondetails: collectionReducer,\r\n    getSocialmediaIcons: projectReducer,\r\n    // userDetail: authReducer,\r\n\r\n    // Nftlist: projectReducer\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer,\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css'\r\nimport App from './App';\r\nimport store from '../src/redux/store';\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}