{"version":3,"sources":["components/Signup/styles/styles.module.scss","redux/Slices/authSlice.js","redux/Slices/projectSlice.js","redux/Actions/logsAction.js","redux/Actions/projectAction.js","components/Wallet/interact.js","redux/Actions/authAction.js","components/Header/Header.js","components/Hero/Hero.js","components/Auctions/AuctionsOne.js","redux/Slices/popularCollectionSlice.js","redux/Actions/popularAction.js","components/Collections/Collections.js","components/Work/Work.js","redux/Slices/footerSlice.js","redux/Actions/footerAction.js","components/Footer/Footer.js","components/Modal/ModalSearch.js","components/Modal/ModalMenu.js","components/Scrollup/Scrollup.js","redux/Slices/fundraiserSlice.js","redux/Actions/fundraiserAction.js","components/TopSeller/topfundraiser.js","redux/Slices/resellNftSlice.js","redux/Actions/resellNftAction.js","components/Auctions/resellNft.js","themes/theme-one.js","components/Breadcrumb/Breadcrumb.js","components/Explore/ExploreTwo.js","themes/explore-one.js","components/Loader/loader.js","components/Explore/ProjectList.js","themes/project-list.js","themes/latestProjects.js","components/Explore/LatestProjects.js","themes/auctions.js","readMore.js","components/TopSeller/fundPaymenttable.js","components/AuthorProfile/userDetails.js","components/AuthorProfile/userTransTable.js","components/Create/projectDetailpopup.js","components/Explore/projDetailtable.js","components/Explore/latProjNftdata.js","components/Auctions/projectnfts.js","components/Collections/collectionNfts.js","components/Explore/popularDetails.js","themes/item-details.js","components/HelpCenter/HelpCenter.js","components/Faq/Faq.js","themes/help-center.js","shared/Upload.js","utils/blobfromurl.js","components/Create/editBanner.js","components/AuthorProfile/avatarUpload.js","components/AuthorProfile/bannerUpload.js","components/AuthorProfile/AuthorProfile.js","components/Explore/ExploreSix.js","components/Author/Author.js","themes/author.js","components/Wallet/Wallet.js","themes/wallet-connect.js","components/Create/Context/context.js","components/Create/Create.js","components/Create/createCollection.js","components/Create/3dModal.js","components/Create/ProjectTypePopup.js","components/Create/uploadNft.js","components/Create/index.js","themes/create.js","components/Login/Login.js","themes/login.js","components/Signup/FormCard.js","components/Signup/Context/context.js","components/Signup/Signup.js","components/Signup/createOrganization.js","components/Signup/index.js","themes/signup.js","redux/Slices/contactSlice.js","components/Contact/Contact.js","redux/Actions/contactAction.js","themes/contact.js","components/ForgotPassword/forgotPassword.js","themes/forgotpassword.js","routers/utils.js","routers/privateRoutes.js","components/Create/geoLocation.js","Edit/editProject.js","themes/update.js","components/Footer/t&c.js","themes/term&cond.js","components/Explore/viewAllLatest.js","themes/viewalllatest.js","components/Collections/exploreCollection.js","themes/exploreCollections.js","components/Footer/about.js","themes/Aboutus.js","components/ItemDetails/refralPopup.js","components/Create/editNft.js","components/Explore/nftdataTable.js","components/ItemDetails/GetMAtic.js","components/ItemDetails/viewProdetails.js","themes/latproj-details.js","components/Create/showCollections.js","themes/showcollections.js","components/Create/bread-crumb.js","components/Create/collectionDetail.js","themes/collectn-details.js","components/Create/desPopup.js","components/Create/projdetails.js","themes/projnft-details.js","components/ItemDetails/nftAuctiontable.js","components/ItemDetails/nftPopup.js","components/ItemDetails/sellPopup.js","components/Create/editNftNamepopup.js","components/Create/editDescPopup.js","components/Create/nftImageeditPopup.js","components/ItemDetails/nftDetails.js","themes/nft-list.js","components/TopSeller/fundraiserdetail.js","components/TopSeller/fundraiserDetails.js","themes/fund-detail.js","components/Auctions/nftTRansTable.js","components/Explore/latnftTable.js","components/Auctions/bidPopup.js","components/Auctions/timer.js","components/Auctions/buyPopup.js","components/Auctions/nftBuy.js","themes/Latnft.js","ScrollToTop.js","components/Create/addNft.js","themes/addnftTheme.js","components/Explore/fundraiserProjects.js","themes/allFundproj.js","components/Explore/fundProj.js","themes/fund-projects.js","components/Explore/my_fundraise.js","themes/fundraise.js","components/Footer/reward.js","themes/rwrd.js","components/Header/Allnotifications.js","themes/allnot.js","components/Explore/BuyedNfts.js","themes/buyed-nft.js","components/Explore/NftBuyData.js","components/Explore/NftBuyedDetails.js","themes/buyNft-details.js","components/Signup/roleChangeOrginazationdetails.js","themes/rolechange-organization.js","components/Auctions/resellNftBuy.js","themes/resell-details.js","components/Explore/viewallResell.js","themes/allresellNfts.js","components/Explore/widgetPopup.js","components/Explore/viewReferals.js","themes/all-refrals.js","notFound.js","components/Explore/widget.js","routers/routes.js","App.js","redux/store.js","index.js","components/Create/styles/styles.module.scss"],"names":["module","exports","userToken","localStorage","getItem","authSlice","createSlice","name","initialState","user","userdetail","role","logout","message","countries","states","city","noti","annualRevenue","hereAbout","updpro","wallesign","auctionnoti","organization","reducers","registerSuccess","state","action","payload","data","auth_token","setItem","registerFail","response","allnotification","updateprofile","userDetail","userAuction","loginSuccess","logoutSuccess","removeItem","forgotpasswordSuccess","createOrganizationSuccess","wallsignin","getCountryList","getStateList","getCityList","getAnnualRevenueList","getHearAboutList","authReducer","reducer","actions","projectSlice","project","projects","nftlist","projectdetails","latestprojectdetails","categories","collections","getcollections","getcollectiondetails","collectiondetails","getSocialmediaIcons","getfundProjDetails","getmostProjActivity","getBuyedNftdetails","getnftwoldetails","settings","liveProjectsPag","nftadd","nftres","nftupdate","updbanner","matic","liveProjects","LatestProjects","RecentCampaigns","createProjectSuccess","createCollectionSuccess","getCollections","getsocial","getCollectionDetails","getNftwolDetails","nftUpd","nftAdd","getfundprojdetails","getmostprojactivity","getbuyednftdetails","getProjectList","getMatic","getCategoriesList","getSettings","getLatestProjectList","createFail","getProjectDetail","getCollectionDetail","Nftres","getNftList","getLatestProjectDetail","updatebanner","publicLiveProjects","type","res","publicLiveProjectspagination","deleteProject","id","filter","item","projectReducer","LogsAction","params","dispatch","formData","FormData","append","config","headers","transformRequest","axios","post","process","console","log","CreateProjectAction","setLoading","history","token","Authorization","status","swal","title","text","icon","buttons","timer","then","push","ProjectDetail","slug","get","LatestProjectDetail","ProjectList","NftList","uploadNFT","nft","i","length","success","getPublicLiveProjects","createAsyncThunk","thunkAPI","setLatestData","projectType","latitude","longitude","count","location","pathname","setCount","UpdateProject","props","onHide","CategoriesAction","GetCollectionsAction","GetSocialMediaIcons","GetSettings","GetNftwol","GetfundraiserProject","UpdateNft","nft_id","AddNftAction","projid","getBid","UpdateBId","GetbuyedNftDetails","ResellNft","createAlchemyWeb3","require","contractABI","isMetaMaskInstalled","Boolean","window","ethereum","web3","Roles","creatorWalletUpdate","selectedAddress","UpdateWalletAddress","ConnectWallet","chainId","networkVersion","request","method","utils","toHex","code","chainName","nativeCurrency","decimals","symbol","rpcUrls","addressArray","obj","address","target","rel","href","getCurrentWalletConnected","UpdateStatus","token_id","transaction_hash","pay_from","pay_to","price","start_date","end_date","UpdateContract","collid","contractAddress","CreateMetaDataAndMint","_imgBuffer","_des","_name","setCurrent","nft_file_content","setModalShow","eth","Contract","abi","contract","sendTransaction","to","from","methods","mint","encodeABI","on","hash","receipt","confNumber","tokid","hexToNumber","logs","topics","transactionHash","error","UpdateBuyHistory","proj_id","refid","txd_id","payFrom","tokenId","values","updateReffid","referral_fees","fees","BuyNft","platformFee","sellingCount","ownerFee","flow","ownerWallet","loadingg","modal","wallets","fee","buyer_data","map","x","karmatica_fees","project_data","nftContract","memory_clients","wal","memory_amounts","amt","amountToSend","toWei","transferowner","buyNft","JSON","stringify","UpdateBid","amount","project_id","BidNft","Register","GetUserAction","CreateOrganizationAfterRoleChange","CountryList","StateList","CityList","AnnualRevenueList","HearAboutList","UpdateProfileAction","Swal","fire","html","showCloseButton","showConfirmButton","focusConfirm","AllNoti","NotiDelete","delete","Header","useLocation","useHistory","useDispatch","useState","setAddress","add1","slice","toUpperCase","add2","notification","useNotification","api","contextHolder","userRole","useSelector","userdet","userauction","useEffect","interval","setInterval","user_id","openNotification","clearInterval","getSelectedAddress","accounts","addEventListener","handleBeforeUnload","removeEventListener","e","preventDefault","returnValue","notiHandler","activeOption","setActiveOption","toast","configure","key","Date","now","btn","size","className","onClick","destroy","nft_slug","open","description","style","color","roleHandler","ChangeUserRole","WalletHandler","is_new_user","continue","skip","value","src","alt","exact","activeClassName","confirmButtonText","confirmButtonAriaLabel","notification_count","moment","created_at","format","backgroundColor","email","class","display","projectTypesMap","Hero","options","enableHighAccuracy","timeout","maximumAge","pos","crd","coords","errors","err","warn","mostactivityProjects","cursor","navigator","geolocation","permissions","query","result","getCurrentPosition","onchange","alert","image","user_data","username","xmlns","viewBox","version","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fill","fillRule","points","dur","repeatCount","attributeName","AuctionsOne","match","join","idx","Math","round","number_of_nft","collectionSlice","collection","collectiondetail","getPopularCollection","getPopularCollectiondetails","collectionReducer","PopularCollectionAction","PopularCollectionActionDetails","Collections","coll","avatar","width","height","nft_data","preHeading","heading","workData","Work","footerSlice","footer","aboutus","getfooter","getabout","footerReducer","getFooter","AboutUsAction","Footer","getFullYear","ModalSearch","placeholder","ModalMenu","Scrollup","fundraiserSlice","fundraiser","fundraiserdetail","getTopFundraiser","getTopFundraiserDetail","fundraiserReducer","TopFundraiserAction","TopFundraiserDetail","Fundraiser","fund","organization_detail","banner_image","organization_name","Number","resellSlice","resell","reselldetails","getResell","getReselldetails","resellReducer","ResellAction","Resell","nfts","Home","Breadcrumb","this","subpage","page","Component","ExploreTwo","exploreData","setState","catch","btnText","img","owner","ExploreOne","Loader","Spinner","animation","margin","GetAllProjects","loading","showDeleteHandler","dangerMode","willDelete","DeleteProject","Map","is_nft_mintted","LatestProject","Auctions","ReadMore","isReadMore","setIsReadMore","dangerouslySetInnerHTML","__html","FundTransdataTable","Panel","Collapse","expandIconPosition","funddetail","country","defaultActiveKey","onChange","opacity","d","cx","cy","r","header","Table","responsive","payment_history","items","UserTransdataTable","useParams","UserdataTable","wallet_id","referrers","referral_amount","total_fundraised","ProjDetailPopup","useRef","useForm","register","handleSubmit","formState","setValue","control","watch","setDescription","setType","setCountry","setCity","handleChangeCountry","event","currentTarget","handleChangeState","handleChangeCity","cities","projdetail","cat","Object","keys","category_id","Modal","centered","Body","onSubmit","required","render","field","onBlur","ref","disabled","selected","option","defaultValue","min","max","today","dd","String","getDate","padStart","mm","getMonth","disablePastDate","ProjdataTable","React","modalShowproj","setModalShowproj","latprojdetail","date1","updated_at","time_difference","getTime","days_difference","ceil","show","dayjs","country_name","state_name","city_name","category","LatNftdataTable","project_activity","nft_title","ProjNFTS","marginLeft","extention","preview_imag","sold_nft","CollectionNFTS","collNft","CollectionDetails","Web3","providers","HttpProvider","ItemDetails","initData","pre_heading","content","HelpCenter","btnClass","quote","contentId","contentClass","Faq","UploadImage","initalImag","setImageSrc","imageSrc","initialImage","borderRadius","language","objectFit","compressInitial","hideDownloadBtn","imageSrcProp","imageChanged","newDataUri","dataURLtoBlob","dataurl","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","Banner","Title","Upload","Button","UpdateBanner","AvatarUpload","BannerUpload","AuthorProfile","modalSho","setModalSho","modalShowavatar","setModalShowavatar","textTransform","filter_1","filter_2","filter_3","filter_4","filter_5","group","author","likes","Author","Wallet","handleConnect","walletData","WalletConnect","FormContext","createContext","FormProvider","children","setData","Provider","setFormValues","prevValues","useFormData","useContext","Create","current","next","prev","setPrice","setImage","usertype","setUserType","countryName","setCountryName","mode","imageUri","country_id","date","setDate","toISOString","substr","styles","showForm","hideForm","imageBanner","pattern","rules","minLength","tabIndex","newContent","step","entries","MyVerticallyCenteredModal","dat","short_url","CreateCollectionAction","DModal","vdo","refContainer","renderer","setRenderer","source","file","container","scW","clientWidth","scH","clientHeight","THREE","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","outputEncoding","appendChild","domElement","scene","scale","camera","initialCameraPosition","sin","PI","cos","ambientLight","add","controls","OrbitControls","autoRotate","enableZoom","minDistance","minZoom","GLTFLoader","load","gltf","traverse","child","isMesh","m","receiveShadow","castShadow","isLight","l","shadow","bias","mapSize","xhr","animate","loaded","total","req","frame","requestAnimationFrame","p","rotSpeed","sqrt","pow","position","y","z","lookAt","update","cancelAnimationFrame","dispose","left","top","ProTypePopup","defaultValue1","startdate","enddate","nftno","maxLength","UploadNft","editor","nft_description","setNft_description","modalShow","projmodalShow","setProjModalShow","nft_collection_id","setNft_collection_id","nftimage","setNftImage","nftwidth","setNftwidth","nftHeight","setNftheight","Pimage","setPimage","startDate","setStartDate","endDate","setEndDate","numberofNfts","setNumberofNfts","coll_id","setSource","sourceType","setSourceType","setNFtExtension","preview","setPreview","projtype","setProjType","nftName","setNftName","nftDescription","convertToBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","previewChange","index","pimage","files","base64","previ","col","lat","onFinish","imagesRes","addedImage","image_hash","check","includes","nft_name","Form","form","nftNameHandler","prevState","initialValues","autoComplete","List","fields","remove","transform","restField","accordion","URL","createObjectURL","Item","nftDescriptionHandler","MinusCircleOutlined","prevCount","onHandleClick","background","marginBottom","border","variant","backgroundImage","backgroundSize","backgroundRepeat","maxCount","filetype","fr","Image","handleUpload","accept","backgroundPosition","block","PlusOutlined","steps","UploadNftIndex","Login","login","password","FormCard","currentStep","prevFormStep","formSchema","Yup","shape","confirm_password","oneOf","Signup","formStep","nextFormStep","resolver","yupResolver","errMessage","errmessage","validate","val","CreateOrganization","goBack","socialmedia","logo","goal","url","tax_id","social","social_link","disp","SignupIndex","setFormStep","contactSlice","contact","postContact","contactReducer","Contact","subject","ContactAction","cols","rows","ForgotPassword","forgotpassword","statusCode","Forgot","TOKEN_KEY","PrivateRoute","component","rest","restricted","Geonames","lan","encoding","EditProject","htmlFor","ProjectUpdate","TermsConditions","TermsCond","ExploreAll","liveProjectspag","All","AllCollections","ColExplore","AboutUs","about","Aboutus","ReferalPopup","copy","setCopy","userRef","userprojurl","TwitterShareButton","TwitterIcon","FacebookShareButton","FacebookIcon","WhatsappShareButton","WhatsappIcon","TelegramShareButton","TelegramIcon","InstapaperShareButton","InstapaperIcon","LinkedinShareButton","LinkedinIcon","EmailShareButton","EmailIcon","onMouseLeave","EditNft","nftFileType","setNFtFileType","setNft","previewnft","setPreviewnft","modalShowcoll","setModalShowcoll","nftdetail","setFieldsValue","collection_id","nft_image","nftImagepromises","all","defaultValues","NftdataTable","collectionData","contract_id","GetMatic","setMatic","ProjDetails","search","URLSearchParams","modalShowrefer","setModalShowrefer","project_count","cad","referrer_id","ProgressBar","varient","project_percentage","user_invest","latprojDetails","ShowCollections","Showcollections","CollItem","coldetail","GetCollectionDetails","CollectionDetail","DesPopup","ProjNftDetails","setmatic","modalShowDes","setModalShowDes","projmodalShows","setProjModalShows","direction","showIcon","closable","is_mint","ProjNft","NftAuctiondataTable","bidstatus","antIcon","LoadingOutlined","fontSize","textAlign","spin","indicator","bids","bid_approved_id","NftPopup","Step","Steps","closeButton","CheckOutlined","SellPopup","auctiontype","setAuctionType","autionTypeChange","deployContract","MyNFTContract","NFTContract","getGasPrice","deploy","bytecode","arguments","send","ismint","OnSubmit","nftid","defaultChecked","EditNftName","EditNftDesc","EditNftImage","NftDetails","nftId","setNftID","projslug","sellmodalShow","setSellModalShow","modalShowedit","setModalShowedit","modalShoweditdes","setModalShoweditdes","modalShoweditimg","setModalShoweditimg","Class","Nft","FunddataTable","tax_number","web_url","FundraiserDetail","fundprojdetail","investHandler","FundDetail","NftTransdataTable","latprojnftdetail","nft_history","LatNftDataTable","CONTRACT_ADDRESS_URL","BidPopup","projtitle","projcoll","Timer","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","time","parse","floor","BuyPopup","LatprojNftDetails","bidmodalShow","setBidModalShow","buymodalShow","setBuyModalShow","find","buyHandler","selling_count","payment_flow","karmatica_fee","reffHandler","spinning","owned_by","latnftprojDetails","ScrollToTop","scrollTo","AddNft","AddNFT","GetAllFundraise","AllFundraiser","GetAllFundraiseProjects","AllFundraiserProjects","MyFundraiserDetail","FundraiserProjects","Rewards","NftReward","AllNotifications","nooti","Notifi","ExploreBuyedNfts","purchase_nft","BuyedNft","NftBuydataTable","BuyedNftDetails","nft_type","BuyNftDetail","RoleChangeOrganizationdetails","createOrganizationafterRoleChange","ResellNftDetails","resellnftdetail","ResellActionDetails","ResellDetail","ExploreAllResell","AllResellNft","WidgetPopup","ModalHeader","RefralTransdataTable","projSlug","setProjSlug","nftSlug","setNftslug","widgetModalShow","setWidgetModalShow","referral_history","collection_slug","collection_name","iFrame","project_name","AllReraltrans","NotFound","subTitle","extra","Widget","MyRouts","path","ThemeOne","ExploreFour","App","combineReducers","createproject","latestprojects","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.806c761f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3EpRl\",\"formCard\":\"styles_formCard__128GU\",\"formRow\":\"styles_formRow__31I_A\",\"back\":\"styles_back__2acxp\",\"input-error\":\"styles_input-error__1SwWq\",\"error\":\"styles_error__10-bT\",\"disabledBtn\":\"styles_disabledBtn__3b7hK\",\"steps\":\"styles_steps__29JeH\",\"errorText\":\"styles_errorText__Ha8IR\",\"hideForm\":\"styles_hideForm__3in2Q\",\"showForm\":\"styles_showForm__105xC\"};","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\nconst userToken = localStorage.getItem('authToken')\r\n    // ? JSON.parse(localStorage.getItem('user'))\r\n    ? localStorage.getItem('authToken')\r\n    : null\r\n\r\nconst authSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: {},\r\n        userdetail: [],\r\n        userToken,\r\n        role: null,\r\n        // wallToken,\r\n        logout: {},\r\n        message: {},\r\n        countries: [],\r\n        states: [],\r\n        city: [],\r\n        noti: [],\r\n        annualRevenue: [],\r\n        hereAbout: [],\r\n        updpro: [],\r\n        wallesign: [],\r\n        auctionnoti: [],\r\n        organization: false\r\n    },\r\n    reducers: {\r\n        registerSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.userToken = action.payload.data.data.auth_token;\r\n            state.role = action.payload.data.data.role;\r\n            localStorage.setItem('authToken', action.payload.data.data.auth_token)\r\n        },\r\n        registerFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        allnotification: (state, action) => {\r\n\r\n            state.noti = action.payload.data.data\r\n        },\r\n        updateprofile: (state, action) => {\r\n            // \r\n            state.updpro = action?.payload?.data?.data;\r\n        },\r\n        userDetail: (state, action) => {\r\n            // \r\n            state.userdetail = action.payload.data.data\r\n        },\r\n        userAuction: (state, action) => {\r\n            // \r\n            state.auctionnoti = action.payload.data.data\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.role = action.payload?.data?.data?.role;\r\n            state.message = action.payload?.data?.message\r\n            state.userToken = action.payload?.data?.data?.auth_token;\r\n            localStorage.setItem('authToken', action.payload?.data?.data?.auth_token)\r\n        },\r\n        logoutSuccess: (state) => {\r\n            localStorage.removeItem('authToken')\r\n            state.user.role = null\r\n            state.userToken = null\r\n        },\r\n        forgotpasswordSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.message = action.payload.data.message\r\n\r\n        },\r\n        createOrganizationSuccess: (state, action) => {\r\n            state.user = action.payload;\r\n            state.organization = true\r\n        },\r\n        wallsignin: (state, action) => {\r\n            state.wallesign = action.payload?.data?.data;\r\n        },\r\n        getCountryList: (state, action) => {\r\n            state.countries = action.payload;\r\n        },\r\n        getStateList: (state, action) => {\r\n            state.states = action.payload;\r\n        },\r\n        getCityList: (state, action) => {\r\n            state.city = action.payload;\r\n        },\r\n\r\n        getAnnualRevenueList: (state, action) => {\r\n            state.annualRevenue = action.payload;\r\n        },\r\n\r\n        getHearAboutList: (state, action) => {\r\n            state.hereAbout = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer\r\n\r\nexport const {\r\n    allnotification,\r\n    registerSuccess,\r\n    createOrganizationSuccess,\r\n    getCountryList,\r\n    getStateList,\r\n    getCityList,\r\n    getAnnualRevenueList,\r\n    getHearAboutList,\r\n    loginSuccess,\r\n    userAuction,\r\n    forgotpasswordSuccess,\r\n    logoutSuccess,\r\n    registerFail,\r\n    userDetail,\r\n    wallsignin,\r\n    updateprofile\r\n} = authSlice.actions;","import { createSlice } from '@reduxjs/toolkit'\r\n// // Slice\r\n// const userToken = localStorage.getItem('authToken')\r\n//     // ? JSON.parse(localStorage.getItem('user'))\r\n//     ? localStorage.getItem('authToken')\r\n//     : null\r\nconst projectSlice = createSlice({\r\n    name: 'project',\r\n\r\n    initialState: {\r\n        project: [],\r\n        projects: [],\r\n        nftlist: [],\r\n        projectdetails: [],\r\n        latestprojectdetails: [],\r\n        categories: [],\r\n        collections: [],\r\n        getcollections: [],\r\n        getcollectiondetails: [],\r\n        collectiondetails: [],\r\n        getSocialmediaIcons: [],\r\n        getfundProjDetails: [],\r\n        getmostProjActivity: [],\r\n        getBuyedNftdetails: [],\r\n        getnftwoldetails: [],\r\n        settings: [],\r\n        liveProjectsPag: [],\r\n        nftadd: [],\r\n        nftres: [],\r\n        nftupdate: [],\r\n        updbanner: [],\r\n        matic: [],\r\n        // liveProjects: [],\r\n        liveProjects: {\r\n            LatestProjects: [],\r\n            RecentCampaigns: []\r\n        },\r\n        message: {},\r\n    },\r\n    reducers: {\r\n        createProjectSuccess: (state, action) => {\r\n            state.project = action.payload;\r\n        },\r\n        createCollectionSuccess: (state, action) => {\r\n            state.collections = action.payload;\r\n        },\r\n        getCollections: (state, action) => {\r\n            // \r\n            state.getcollections = action?.payload?.data?.data;\r\n        },\r\n        getSocialmediaIcons: (state, action) => {\r\n            // \r\n            state.getsocial = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetails: (state, action) => {\r\n            // \r\n            state.getcollectiondetails = action?.payload?.data?.data;\r\n        },\r\n        getNftwolDetails: (state, action) => {\r\n            state.getnftwoldetails = action?.payload?.data?.data;\r\n        },\r\n        nftUpd: (state, action) => {\r\n            // \r\n            state.nftupdate = action?.payload?.data?.data;\r\n        },\r\n        nftAdd: (state, action) => {\r\n            // \r\n            state.nftadd = action?.payload?.data?.data;\r\n        },\r\n        getfundprojdetails: (state, action) => {\r\n            // \r\n            state.getfundProjDetails = action?.payload?.data?.data;\r\n        },\r\n        getmostprojactivity: (state, action) => {\r\n            state.getmostProjActivity = action?.payload?.data?.data;\r\n        },\r\n        getbuyednftdetails: (state, action) => {\r\n            state.getBuyedNftdetails = action?.payload?.data?.data;\r\n        },\r\n        getProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        getMatic: (state, action) => {\r\n            state.matic = action.payload?.data?.data\r\n        },\r\n        getCategoriesList: (state, action) => {\r\n            state.categories = action?.payload?.data?.data;\r\n        },\r\n        getSettings: (state, action) => {\r\n            state.settings = action?.payload?.data?.data;\r\n        },\r\n\r\n        getLatestProjectList: (state, action) => {\r\n            state.projects = action.payload;\r\n        },\r\n        createFail: (state, action) => {\r\n            // \r\n            state.message = action.payload.response.data.message\r\n        },\r\n        getProjectDetail: (state, action) => {\r\n            // \r\n            state.projectdetails = action?.payload?.data?.data;\r\n        },\r\n        getCollectionDetail: (state, action) => {\r\n            // \r\n            state.collectiondetails = action?.payload?.data?.data;\r\n        },\r\n        Nftres: (state, action) => {\r\n            // \r\n            state.nftres = action?.payload?.data?.data;\r\n        },\r\n        getNftList: (state, action) => {\r\n            // \r\n            state.nftlist = action?.payload?.data?.data;\r\n        },\r\n        getLatestProjectDetail: (state, action) => {\r\n            // \r\n            state.latestprojectdetails = action?.payload?.data?.data;\r\n        },\r\n        updatebanner: (state, action) => {\r\n            // \r\n            state.updbanner = action?.payload?.data?.data;\r\n        },\r\n        publicLiveProjects: (state, action) => {\r\n            state.liveProjects[action.payload.type] = action.payload.res.data.data.data\r\n            // state.liveProjects = action.payload.data.data.data\r\n            // state.liveProjects['R'] = action.payload.data.data.data\r\n        },\r\n        publicLiveProjectspagination: (state, action) => {\r\n            state.liveProjectsPag = action.payload.res.data.data\r\n            // state.liveProjects = action.payload.data.data.data\r\n            // state.liveProjects['R'] = action.payload.data.data.data\r\n        },\r\n        deleteProject: (state, action) => {\r\n            const { id } = action.payload?.data?.data;\r\n            state.projects = state.projects.filter(item => item.id !== id)\r\n        }\r\n    },\r\n});\r\n\r\nexport const projectReducer = projectSlice.reducer\r\n\r\nexport const {\r\n    createProjectSuccess,\r\n    getProjectList,\r\n    getProjectDetail,\r\n    getLatestProjectDetail,\r\n    publicLiveProjects,\r\n    publicLiveProjectspagination,\r\n    createCollectionSuccess,\r\n    deleteProject,\r\n    createFail,\r\n    getLatestProjectList,\r\n    getCategoriesList,\r\n    getCollections,\r\n    getbuyednftdetails,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getCollectionDetail,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    Nftres,\r\n    updatebanner,\r\n    getmostprojactivity,\r\n    nftUpd,\r\n    nftAdd,\r\n    getMatic\r\n} = projectSlice.actions;","import axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nexport const LogsAction = (params) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const formData = new FormData()\r\n        formData.append('content', params.message)\r\n\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/create_application_logs`,\r\n            formData, config)\r\n        await (dispatch(res()))\r\n\r\n        console.log(\"logres\", res)\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n        // if (e?.response?.data.message) {\r\n        //     // swal('error', e.response.data.message, 'error')\r\n        // }\r\n    }\r\n}","import axios from \"axios\";\r\nimport {\r\n    createProjectSuccess,\r\n    getProjectDetail,\r\n    getProjectList,\r\n    createFail,\r\n    publicLiveProjects,\r\n    deleteProject,\r\n    getLatestProjectDetail,\r\n    getCategoriesList,\r\n    createCollectionSuccess,\r\n    getCollections,\r\n    getCollectionDetails,\r\n    getSocialmediaIcons,\r\n    getNftList,\r\n    getSettings,\r\n    getNftwolDetails,\r\n    getfundprojdetails,\r\n    updatebanner,\r\n    nftUpd,\r\n    nftAdd,\r\n    getMatic,\r\n    getmostprojactivity,\r\n    getbuyednftdetails,\r\n    publicLiveProjectspagination\r\n} from \"../Slices/projectSlice\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport swal from \"sweetalert\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\nexport const CreateProjectAction = (params, setLoading, history) => async dispatch => {\r\n    // debugger\r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        // \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(createProjectSuccess(res));\r\n\r\n        if (res.status === 200) {\r\n            // if (res.data.id == 1) { }\r\n            setLoading(false)\r\n\r\n            swal({ title: \"success\", text: res.data.message, icon: 'success', buttons: false, timer: 1500 })\r\n                .then(() => {\r\n                    history.push(\"/projectlist\");\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            dispatch(LogsAction(e))\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectDetail = (slug) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/details/${slug}`,\r\n            config)\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        // console.log('details', res)\r\n        dispatch(getProjectDetail(res));\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const LatestProjectDetail = (slug) => async dispatch => {\r\n    // debugger\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjectDetails/${slug}`,\r\n            config)\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getLatestProjectDetail(res));\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ProjectList = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    // setLoading(true)\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/project/list`,\r\n            config)\r\n\r\n        // console.log(res?.data?.data[0]?.image, 'proj')\r\n        await dispatch(getProjectList(res.data?.data));\r\n        // setLoading(false)\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            // setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const NftList = (slug, setLoading) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    // setLoading(true)\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdx/${slug}`,\r\n            config)\r\n\r\n        // console.log(res, 'proj')\r\n        await dispatch(getNftList(res));\r\n        setLoading(false)\r\n\r\n\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            setLoading(false)\r\n        }\r\n    }\r\n}\r\nexport const uploadNFT = async (nft, dispatch) => {\r\n    try {\r\n\r\n        // const [loading, setLoading] = useState()\r\n        // setLoading(true)\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            // transformRequest: formData.append('image', params)\r\n        }\r\n        const formData = new FormData();\r\n\r\n        for (let i = 0; i < nft.length; i++) {\r\n            formData.append(\"image[]\", nft[i]);\r\n        }\r\n\r\n        return axios\r\n            .post(`${process.env.REACT_APP_BACKEND_API}api/ipfsHash/Nfft`,\r\n                formData, config)\r\n            .then(function (response) {\r\n\r\n                // console.log(response, 'resss')\r\n                return {\r\n                    success: true,\r\n                    data: response.data\r\n                };\r\n            },\r\n\r\n\r\n            )\r\n    } catch (error) {\r\n\r\n        dispatch(LogsAction(error))\r\n        swal('error', error, 'error')\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const getPublicLiveProjects = createAsyncThunk(\r\n    \"auth/liveProjects\",\r\n\r\n    async (params, thunkAPI, setLatestData) => {\r\n        // debugger\r\n        try {\r\n            const { projectType } = params\r\n            const latitude = localStorage.getItem('latitude')\r\n            const longitude = localStorage.getItem('longitude')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestProjects?page=${params.count}&latitude=${latitude}&longitude=${longitude}&search_keyword=&category_id=&type`, config)\r\n            // console.log(res, 'projres')\r\n\r\n            thunkAPI.dispatch(publicLiveProjects({\r\n                res: res,\r\n                type: projectType,\r\n            }));\r\n            if (params.location.pathname === \"/all/LatestProjects\") {\r\n\r\n                params.setCount(params.count)\r\n            }\r\n            // thunkAPI.dispatch(publicLiveProjectspagination({\r\n            //     res: res,\r\n\r\n            // }));\r\n            // setLatestData(res.data.data())\r\n            // thunkAPI.dispatch(publicLiveProjects(res));\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            // debugger\r\n            if (e?.response?.data.message) {\r\n                // swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n\r\nexport const UpdateProject = (props, params) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/update/${props.id}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'proj')\r\n        await dispatch(getProjectDetail(res));\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success')\r\n            dispatch(ProjectDetail(props.id))\r\n            // .then(function () {\r\n            // window.location = `/ projnftdetails / ${ props }`;\r\n            // });\r\n\r\n        }\r\n        props.onHide(false)\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const DeleteProject = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/projects/destroy/${id}`,\r\n            config)\r\n        // \r\n        // console.log(res.status, 'proj')\r\n        await dispatch(deleteProject(res));\r\n        if (res.status === 200) {\r\n            dispatch(ProjectList())\r\n            // swal(\"success\", res.data.message, 'success').then(function () {\r\n            //     window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CategoriesAction = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCategories`, config)\r\n        // console.log(res, 'catres')\r\n        dispatch(getCategoriesList(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const GetCollectionsAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollection`,\r\n            config)\r\n        // console.log('colres', res)\r\n        await dispatch(getCollections(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CreateCollectionAction = ({ dat, imageBanner, props }) => async dispatch => {\r\n    try {\r\n        const formData = new FormData()\r\n        formData.append('title', dat.title)\r\n        formData.append('description', dat.description)\r\n        formData.append('short_url', dat.short_url)\r\n        formData.append('symbol', dat.symbol)\r\n        formData.append('image', imageBanner)\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createCollection`, formData,\r\n            config)\r\n        // dispatch(GetCollectionsAction)\r\n        await dispatch(createCollectionSuccess(res));\r\n        if (res?.status === 200) {\r\n\r\n            await dispatch(GetCollectionsAction());\r\n            props.onHide(false)\r\n            // swal(\"success\", 'Collection Created', 'success')\r\n            // .then(function () {\r\n            //     onClick={() => props.onHide()}\r\n            // });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n            dispatch(createFail(e))\r\n        }\r\n    }\r\n}\r\nexport const GetCollectionDetails = (id) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCollectionById/${id}`,\r\n            config)\r\n\r\n        await dispatch(getCollectionDetails(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSocialMediaIcons = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSocialMediaIcon`,\r\n            config)\r\n        // console.log('social', res)\r\n        await dispatch(getSocialmediaIcons(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateCollection = (id, params) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${id}`,\r\n            params, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(getLatestProjectDetail(res));\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetSettings = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getSettings`,\r\n            config)\r\n        // \r\n        // console.log(res, 'sett rres')\r\n        await dispatch(getSettings(res));\r\n\r\n        // if (res.status === 200) {\r\n        //     swal(\"success\", res.data.message, 'success').then(function () {\r\n        //         window.location = \"/projectlist\";\r\n        //     });\r\n\r\n        // }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetNftwol = ({ slug }) => async dispatch => {\r\n    \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getNftDetailByIdxWithoutLogin/${slug}`,\r\n            config)\r\n\r\n        await dispatch(getNftwolDetails(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetfundraiserProject = (slug) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getProjectByfundraiserIdx/${slug}`,\r\n            config)\r\n\r\n        await dispatch(getfundprojdetails(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const UpdateBanner = (formData, props) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/projects/image_update/${props.id}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(updatebanner(res));\r\n\r\n        if (res.status === 200) {\r\n\r\n            swal(\"success\", \"updated\", 'success').then(function () {\r\n                dispatch(ProjectDetail(props.id))\r\n                dispatch(LatestProjectDetail(props.id))\r\n\r\n                // window.location = \"/projectlist\";\r\n            });\r\n            props.onHide(false)\r\n\r\n        }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const UpdateNft = (formData, props, setLoading) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/update/${props.id}/${props.nft_id?.id}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftUpd(res));\r\n\r\n        if (res.status === 200) {\r\n            swal(\"success\", \"updated\", 'success')\r\n            setLoading(false)\r\n            dispatch(NftList(props.nft_id?.id))\r\n            dispatch(ProjectDetail(props.id))\r\n            props.onHide(false)\r\n            // .then(function () {\r\n            //     window.location = `/ nft / details / ${ props.nft_id?.id } ? project = ${ props.id }`;\r\n\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const AddNftAction = (formData, projid, slug, setLoading, history) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/nft/create/${projid}`,\r\n            formData, config)\r\n        // \r\n        // console.log(res, 'coll rres')\r\n        await dispatch(nftAdd(res));\r\n\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", \"updated\", 'success')\r\n            history.push(`/projnftdetails/${slug.id}`)\r\n            // .then(function () {\r\n            // dispatch(ProjectDetail(props.id))\r\n            // dispatch(LatestProjectDetail(params))\r\n            // window.location = `/ projnftdetails / ${ slug.id }`;\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            setLoading(false)\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const GetMatic = () => async dispatch => {\r\n\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n\r\n        }\r\n        // \r\n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\r\n            config\r\n        )\r\n        await dispatch(getMatic(res))\r\n        console.log('res', res)\r\n    } catch (error) {\r\n        dispatch(LogsAction(error))\r\n        // console.log(\"error\");\r\n    }\r\n};\r\nexport const getBid = (id) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getBidsDetailByIdx/${id}}`,\r\n            config)\r\n        await dispatch(res)\r\n\r\n        console.log('res bid', res)\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        // console.log(\"error\");\r\n    }\r\n};\r\nexport const UpdateBId = ({ id, status, setLoading, slug }) => async dispatch => {\r\n    // debugger\r\n    setLoading(true)\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/change_bids_status/${id}}`,\r\n            { status: status }, config)\r\n        // await dispatch(res)\r\n        if (res.status == 200) {\r\n            setLoading(false)\r\n            await dispatch(NftList(slug))\r\n            swal(\"success\", \"success\", \"success\")\r\n        }\r\n        console.log('res bid', res)\r\n    } catch (e) {\r\n        swal(\"error\", e?.response?.data?.message, \"error\")\r\n        setLoading(false)\r\n        dispatch(LogsAction(e))\r\n        // console.log(\"error\");\r\n    }\r\n};\r\n\r\nexport const GetMostactivityProject = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getMostActivityProject`,\r\n            config)\r\n\r\n        await dispatch(getmostprojactivity(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetbuyedNftDetails = (slug) => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPurchaseNftDetailByIdx/${slug?.slug}`,\r\n            config)\r\n\r\n        await dispatch(getbuyednftdetails(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ResellNft = (params, props) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/create_resale_nft`,\r\n            params, config)\r\n        await dispatch(res())\r\n        if (res?.status === 200) {\r\n            await dispatch(GetbuyedNftDetails(props.slug?.slug))\r\n            props.onHide(false)\r\n        }\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        // console.log(\"error\");\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n};","\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport { NftList } from '../../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\nimport { logdispatch, LogsAction } from '../../redux/Actions/logsAction';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n\r\nconst contractABI = require('../../backend/contracts/artWork.sol/NFTContract.json')\r\n\r\n\r\nfunction isMetaMaskInstalled() {\r\n  return Boolean(window.ethereum);\r\n}\r\n\r\n// const ipfsBaseUrl = 'https://ipfs.karmatica.io/ipfs/'\r\n\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\n\r\nexport const Roles = {\r\n  \"ADMIN\": 1,\r\n  \"BUYER\": 2,\r\n  \"CREATOR\": 3\r\n}\r\nexport const creatorWalletUpdate = async (auth_token) => {\r\n  try {\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/wallet/connect`,\r\n      formData, config\r\n    )\r\n\r\n    return response\r\n\r\n  } catch (error) {\r\n\r\n    return error\r\n  }\r\n}\r\n\r\nexport const UpdateWalletAddress = async (role, auth_token = null) => {\r\n  try {\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('wallet_id', window.ethereum.selectedAddress);\r\n    formData.append('role', Roles[role])\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${auth_token}`\r\n      },\r\n    }\r\n\r\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/sign_in`,\r\n      formData, config\r\n    )\r\n\r\n    return response\r\n\r\n  } catch (error) {\r\n    // dispatch(LogsAction(error))\r\n    return error\r\n    // await dispatch(LogsAction(error))\r\n  }\r\n};\r\n\r\nexport const ConnectWallet = async (role, dispatch) => {\r\n\r\n  const chainId = 80001// Polygon Mainnet\r\n\r\n  if (window?.ethereum?.networkVersion !== chainId) {\r\n    try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: web3.utils.toHex(chainId) }]\r\n      });\r\n\r\n    } catch (err) {\r\n      dispatch(LogsAction(err))\r\n      // This error code indicates that the chain has not been added to MetaMask\r\n      if (err.code === 4902) {\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainName: 'Mumbai Testnet',\r\n              chainId: web3.utils.toHex(chainId),\r\n              nativeCurrency: { name: 'MATIC', decimals: 18, symbol: 'MATIC' },\r\n              rpcUrls: ['https://rpc-mumbai.maticvigil.com/']\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    }\r\n  }\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n\r\n    if (window.ethereum) {\r\n      try {\r\n        const addressArray = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n\r\n        await window.ethereum.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: web3.utils.toHex('80001') }],\r\n        })\r\n\r\n        const obj = {\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n          address: addressArray[0],\r\n        };\r\n\r\n        const res = await UpdateWalletAddress(role)\r\n        return {\r\n          ...obj,\r\n          res\r\n        }\r\n\r\n      } catch (err) {\r\n        dispatch(LogsAction(err))\r\n        return {\r\n          address: \"\",\r\n          status: \"😥 \" + err.message,\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        address: \"\",\r\n        status: (\r\n          <span>\r\n            <p>\r\n              {\" \"}\r\n              🦊{\" \"}\r\n              <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n                You must install Metamask, a virtual Ethereum wallet, in your\r\n                browser.\r\n              </a>\r\n            </p>\r\n          </span>\r\n        ),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport const getCurrentWalletConnected = async (dispatch) => {\r\n  if (window.ethereum) {\r\n    try {\r\n      // \r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      // console.log(addressArray, 'address')\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n          status: \"🦊 Connect to Metamask using the top right button.\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      dispatch(LogsAction(err))\r\n      return {\r\n        address: \"\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const UpdateStatus = async ({ slug, token_id, transaction_hash, pay_from, pay_to, type }) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('is_mint', '1');\r\n    formData.append('token_id', token_id);\r\n    formData.append('transaction_hash', transaction_hash);\r\n    formData.append('pay_from', pay_from);\r\n    formData.append('pay_to', pay_to);\r\n    formData.append('type', type.type)\r\n    formData.append('price', type.price)\r\n    formData.append('start_date', type.start_date)\r\n    formData.append('end_date', type.end_date)\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/NftUpdate/${slug}`,\r\n      formData, config\r\n\r\n    )\r\n  } catch (error) {\r\n    return error\r\n    // await dispatch(LogsAction(error))\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nconst UpdateContract = async (collid, contractAddress) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('contract_id', contractAddress);\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/updateContract/${collid}`,\r\n      formData, config\r\n    )\r\n  } catch (e) {\r\n    // await dispatch(LogsAction(e))\r\n\r\n    console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const sendFileToIPFS = async (fileImg) => {\r\n  if (fileImg) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", fileImg);\r\n\r\n      const resFile = await axios({\r\n        method: \"post\",\r\n        url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\r\n        data: formData,\r\n        headers: {\r\n          'pinata_api_key': `${process.env.REACT_APP_PINATA_API_KEY}`,\r\n          'pinata_secret_api_key': `${process.env.REACT_APP_PINATA_API_SECRET}`,\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        },\r\n      });\r\n\r\n      const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n\r\n      return ImgHash\r\n\r\n    } catch (e) {\r\n      return e\r\n      // await dispatch(LogsAction(e))\r\n\r\n      // console.log(\"Error sending File to IPFS: \")\r\n      // console.log(error)\r\n    }\r\n  }\r\n}\r\n\r\nexport const CreateMetaDataAndMint = async ({ slug, _imgBuffer, _des, _name, setCurrent, contractAddress, collid, nft_file_content, type, price, start_date, end_date, setModalShow, dispatch }) => {\r\n\r\n  const contract = await new web3.eth.Contract(contractABI.abi, contractAddress);//loadContract();\r\n  // new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\");//loadContract();\r\n\r\n  try {\r\n    let txHash = null\r\n\r\n    // const web3 = new Web3(window.ethereum);\r\n\r\n    await web3.eth.sendTransaction({\r\n      to: contractAddress, // Required except during contract publications.\r\n      // to: \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\", // Required except during contract publications.\r\n      from: window.ethereum.selectedAddress,\r\n      data: contract.methods.mint(nft_file_content).encodeABI() //make call to NFT smart contract\r\n    })\r\n      .on('transactionHash', function (hash) {\r\n        txHash = hash\r\n\r\n        // console.log('txhash11', txHash)\r\n\r\n        setCurrent(1)\r\n      })\r\n      .on('receipt', function (receipt) {\r\n        // console.log(receipt, 'recipt')\r\n        // console.log(receipt.logs[0].topics[3])\r\n        setCurrent(1)\r\n      })\r\n      .on('confirmation', async (confNumber, receipt) => {\r\n        if (confNumber == 1) {\r\n\r\n          if (collid != 1) {\r\n\r\n            await UpdateContract(collid, contractAddress)\r\n          }\r\n\r\n\r\n          // await UpdateContract(collid, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n          const tokid = web3.utils.hexToNumber(receipt.logs[0].topics[3])\r\n\r\n          // console.log(startdate)\r\n          await UpdateStatus({ slug: slug.id, token_id: tokid, transaction_hash: receipt.transactionHash, pay_from: receipt.from, pay_to: receipt.to, type, price, start_date, end_date })\r\n          setCurrent(2)\r\n          await dispatch(NftList(slug.id))\r\n\r\n          // history.push(`nft/details/${slug.id}`)\r\n          // return redirect(`nft/details/${id}`)\r\n          // console.log('tokid', tokid)\r\n        }\r\n      })\r\n      .on('error', function (error) {\r\n\r\n      })\r\n\r\n    // \r\n    // console.log('txHash', txHash)\r\n    return {\r\n      success: true,\r\n      // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n      status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n    }\r\n  } catch (error) {\r\n    await dispatch(LogsAction(error))\r\n    // Await dispatch(LogsAction(error)\r\n\r\n    // \r\n    swal(\"error\", \"Transaction rejected please try again!\", \"error\")\r\n    setModalShow(false)\r\n    return {\r\n      success: false,\r\n      status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n    }\r\n  }\r\n}\r\n\r\nconst UpdateBuyHistory = async (nft_id, proj_id, refid, txd_id, payFrom, pay_to, tokenId, values) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('price', nft_id.values);\r\n    formData.append('txd_id', nft_id.txd_id);\r\n    formData.append('project_id', nft_id.proj_id);\r\n    formData.append('nft_id', nft_id.nft_id);\r\n    formData.append('pay_from', nft_id.payFrom);\r\n    formData.append('pay_to', nft_id.pay_to);\r\n    formData.append('token_id', nft_id.tokenId);\r\n    formData.append('ref_id', nft_id.refid);\r\n    formData.append('status', '1');\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    await axios.post(`${process.env.REACT_APP_BACKEND_API}api/transaction/store`,\r\n      formData, config\r\n    )\r\n  } catch (error) {\r\n    return error\r\n    // await dispatch(LogsAction(error))\r\n\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const updateReffid = async ({ tokenId, refid, nft_id, dispatch }) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('token_id', tokenId);\r\n    formData.append('ref_id', refid);\r\n    formData.append('nft_id', nft_id);\r\n\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getUserPercentage`,\r\n      formData, config\r\n    )\r\n    // await dispatch(res())\r\n    // const reffee = localStorage.setItem('refamount', res?.data?.data?.referral_fees[0]?.fees)\r\n    if (res?.status === 200) {\r\n      await localStorage.setItem('refamount', res?.data?.data?.referral_fees[0]?.fees)\r\n    }\r\n\r\n    // if (res.status === 200) {\r\n    // setRefamount(res?.data?.data)\r\n    // }\r\n  } catch (error) {\r\n    await dispatch(LogsAction(error))\r\n\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\nexport const BuyNft = async ({ contractAddress, tokenId, payFrom, values, platformFee, sellingCount, ownerFee, flow, ownerWallet, refid, proj_id, nft_id, loadingg, modal, dispatch }) => {\r\n  // debugger\r\n  if (!isMetaMaskInstalled()) {\r\n    swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  } else {\r\n\r\n    try {\r\n      // if (refid == null) {\r\n      //   setReferalid(\"\")\r\n\r\n      // }\r\n\r\n      let wallets = []\r\n      let fee = []\r\n      // web3.fromWei(web3.eth.getBalance\r\n      // const bala = web3.fromWei(web3.eth.getBalance(window.ethereum?.selectedAddress))\r\n      // console.log(bala, 'balance')\r\n      // .then(console.log);\r\n      wallets = refid === \"null\" ? [...wallets, ...flow[0]?.buyer_data?.map(x => x.wallets), flow[0]?.karmatica_fees[0]?.wallets, flow[0]?.project_data[0]?.wallets] : [...wallets, ...flow[0]?.buyer_data?.map(x => x.wallets), flow[0]?.karmatica_fees[0]?.wallets, flow[0]?.project_data[0]?.wallets, refid]\r\n      fee = refid === \"null\" ? [...fee, ...flow[0]?.buyer_data?.map(x => x.fees), flow[0]?.karmatica_fees[0]?.fees, flow[0]?.project_data[0]?.fees] : [...fee, ...flow[0]?.buyer_data?.map(x => x.fees), flow[0]?.karmatica_fees[0]?.fees, flow[0]?.project_data[0]?.fees, localStorage.getItem('refamount')]\r\n      console.log(fee)\r\n      console.log(wallets)\r\n\r\n\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      const obj = {\r\n        status: \"👆🏽 Write a message in the text-field above.\",\r\n        address: addressArray[0],\r\n      };\r\n\r\n      const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n      // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n      // const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n\r\n      // const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n\r\n      const memory_clients = wallets.map(wal => {\r\n\r\n        return (`${wal}`)\r\n      })\r\n\r\n\r\n\r\n      const memory_amounts = fee.map(amt => {\r\n        const amountToSend = ((amt / 100) * 0.03)\r\n        return web3.utils.toWei(`${amountToSend}`, \"ether\")\r\n      })\r\n\r\n      const transferowner = {\r\n        'from': window.ethereum?.selectedAddress,\r\n        'to': contractAddress,\r\n        // 'to': \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\",\r\n        // 'value': web3.utils.toWei(`${values}`),\r\n        'value': web3.utils.toWei('0.03', 'ether'),\r\n        // 'input': nftContract.methods.buyNft(contractAddress, tokenId).encodeABI()\r\n        'input': nftContract.methods.buyNft(contractAddress, tokenId, memory_clients, memory_amounts).encodeABI()\r\n      };\r\n\r\n      // const txHash = await web3.eth.sendTransaction(tx)\r\n\r\n      // console.log('txhash', txHash)\r\n      await web3.eth.sendTransaction(transferowner)\r\n        .on('transactionHash', function (hash) {\r\n          let txHash = hash\r\n          // console.log('tx', txHash)\r\n\r\n\r\n        })\r\n        .on('receipt', function (receipt) {\r\n          // console.log(receipt, 'recipt')\r\n        })\r\n        .on('confirmation', async (confNumber, receipt) => {\r\n          if (confNumber == 1) {\r\n            console.log(confNumber, 'counttrans')\r\n            console.log(receipt, 'conf')\r\n            // localStorage.setItem('txd_id', receipt.transactionHash)\r\n            // localStorage.setItem('pay_to', receipt.receipt.to)\r\n            UpdateBuyHistory({ nft_id, proj_id, refid, txd_id: receipt.transactionHash, payFrom, pay_to: window.ethereum?.selectedAddress, tokenId, values })\r\n            loadingg(false)\r\n            swal(\"success\", \"Confirmed\", 'success').then(function () {\r\n              window.location = `/my/nfts`;\r\n            });\r\n          }\r\n          // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n          // setModeShow(false)\r\n\r\n          // modalShow(false)\r\n        })\r\n        .on('error', function (error) {\r\n          dispatch(LogsAction(error))\r\n          // console.log(error.message, \"error\")\r\n          swal('error', JSON.stringify(error.message, 'error'))\r\n          // alert(JSON.stringify(error.message))\r\n          modal(false)\r\n          loadingg(false)\r\n        })\r\n        .then(function (receipt) {\r\n          // will be fired once the receipt is mined\r\n        })\r\n    } catch (error) {\r\n      dispatch(LogsAction(error))\r\n\r\n      swal(\"error\", JSON.stringify(error.message), \"error\")\r\n      loadingg(false)\r\n      // alert(JSON.stringify(error.message))\r\n\r\n    }\r\n  }\r\n}\r\n\r\nconst UpdateBid = async ({ amount, project_id, nft_id, pay_to, from, onHide, setLoading }) => {\r\n  const token = localStorage.getItem('authToken')\r\n  try {\r\n    const formData = new FormData();\r\n\r\n    formData.append('amount', amount);\r\n    formData.append('project_id', project_id);\r\n    formData.append('nft_id', nft_id);\r\n    formData.append('pay_from', from);\r\n    formData.append('pay_to', pay_to);\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n    }\r\n    // \r\n    const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/project/bids`,\r\n      formData, config\r\n    )\r\n    console.log('ress', res)\r\n    if (res.status == 200) {\r\n      setLoading(false)\r\n      swal(\"success\", res?.data?.message, 'success')\r\n      onHide(false)\r\n    }\r\n  } catch (error) {\r\n    swal(\"error\", error?.response?.data?.message, 'error')\r\n    return error\r\n    // \r\n    // console.log(\"error\");\r\n  }\r\n};\r\n\r\nexport const BidNft = async (id, projid, from, onHide, setLoading) => {\r\n\r\n  // if (!isMetaMaskInstalled()) {\r\n  //   swal('oops!', 'No wallet found. Please install MetaMask', 'error')\r\n\r\n  // } else {\r\n  try {\r\n    setLoading(true)\r\n\r\n    // const addressArray = await window.ethereum.request({\r\n    //   method: \"eth_requestAccounts\",\r\n    // });\r\n\r\n    // const obj = {\r\n    //   status: \"👆🏽 Write a message in the text-field above.\",\r\n    //   address: addressArray[0],\r\n    // };\r\n\r\n    // const nftContract = new web3.eth.Contract(contractABI.abi, contractAddress)\r\n    // const nftContract = new web3.eth.Contract(contractABI.abi, \"0xdDA37f9D3e72476Dc0c8cb25263F3bb9426B4A5A\")\r\n    // const nonce = await web3.eth.getTransactionCount(window.ethereum.selectedAddress, 'latest');\r\n    // const amountToSendPlatform = ((`${platformFee[0]?.fees}` / 100) * 0.03)\r\n    // const amountToSendowner = ((`${ownerFee[0]}` / 100) * 0.03)\r\n    // // const amountToSend = (amountToSendPlatform - amount, \"either\")\r\n    // const amountToSend = (0.0005)\r\n    // const amountToSend = ; // Convert to wei value\r\n    // const memory_clients = [platformFee[0].wallets, ownerWallet[0]]\r\n    // const memory_amounts = [web3.utils.toWei(`${amountToSendPlatform}`, \"ether\"), web3.utils.toWei(`${amountToSendowner}`, \"ether\")]\r\n\r\n    // web3.eth.sendTransaction(\r\n    //   {\r\n    //     from: window.ethereum?.selectedAddress,\r\n    //     to: \"0xB79722911A09502fb54De1f7769F6624C301810a\",\r\n    //     value: web3.utils.toWei(\"0.01\"),\r\n    //     data: \"0xdf\"\r\n    //   }, function (err, transactionHash) {\r\n    //     if (!err)\r\n    //       console.log(transactionHash + \" success\");\r\n    UpdateBid({ amount: \"0.03\", project_id: projid, nft_id: id, from, onHide, setLoading })\r\n    // });\r\n    // await web3.eth.sendTransaction(transferbid)\r\n    //   .on('transactionHash', function (hash) {\r\n    //     let txHash = hash\r\n    //     // console.log('tx', txHash)\r\n\r\n\r\n    //   })\r\n    //   .on('receipt', function (receipt) {\r\n    //     // console.log(receipt, 'recipt')\r\n    //   })\r\n    //   .on('confirmation', async (confNumber, receipt) => {\r\n    //     // \r\n    //     console.log(receipt, 'conf')\r\n    //     // setrdata(receipt.transactionHash, receipt.from, receipt.to, receipt.status)\r\n    //     // setModeShow(false)\r\n\r\n    //     // modalShow(false)\r\n    //   })\r\n    //   .on('error', function (error) {\r\n\r\n    //   })\r\n    //   .then(function (receipt) {\r\n    //     // will be fired once the receipt is mined\r\n    //   })\r\n  } catch (error) {\r\n    // await dispatch(LogsAction(error))\r\n\r\n    // \r\n    swal(\"error\", error, \"error\")\r\n    // alert(error)\r\n\r\n    // }\r\n  }\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport { allnotification, createOrganizationSuccess, getAnnualRevenueList, getCityList, getCountryList, getHearAboutList, getStateList, loginSuccess, updateprofile, userAuction, userDetail } from \"../Slices/authSlice\";\r\nimport swal from \"sweetalert\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { creatorWalletUpdate } from \"../../components/Wallet/interact\";\r\nimport Swal from \"sweetalert2\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\nexport const Register = createAsyncThunk(\r\n    \"auth/register\",\r\n    async (params, thunkAPI, dispatch) => {\r\n        try {\r\n            const token = localStorage.getItem('authToken')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                transformRequest: formData => formData\r\n            }\r\n\r\n            //create oraginization creator login\r\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/signup`,\r\n                params, config)\r\n\r\n            await creatorWalletUpdate(res?.data?.data?.auth_token)\r\n\r\n            thunkAPI.dispatch(loginSuccess(res));\r\n\r\n            if (res.status === 200) {\r\n                swal(\"success\", res.data.message, 'success').then(function () {\r\n                    window.location = \"/create\";\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            dispatch(LogsAction(e))\r\n            if (e?.response?.data) {\r\n                if (e?.response?.data.message) {\r\n\r\n                    swal('error', e?.response?.data?.message, 'error')\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\nexport const LoginAction = (params, history) => async dispatch => {\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/organization_signin`,\r\n            params, config)\r\n\r\n        dispatch(loginSuccess(res));\r\n\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n\r\n            swal('error', e?.response?.data?.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const ForgotPasswordAction = (params, dispatch) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/forgot_pssword`,\r\n            params, config)\r\n        if (res.status === 200) {\r\n            swal(\"success\", res.data.message, 'success').then(function () {\r\n                window.location = \"/login\";\r\n            });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetUserAction = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getUserDetails`,\r\n            config)\r\n        // console.log('userres', res)\r\n        dispatch(userDetail(res));\r\n\r\n\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const GetauctionNoti = () => async dispatch => {\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getLatestNotification`,\r\n            config)\r\n        // console.log('userres', res)\r\n        dispatch(userAuction(res));\r\n\r\n\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const CreateOrganizationAction = (params) => async dispatch => {\r\n    // \r\n    // localStorage.setItem('auth_token', JSON.stringify(action.payload.dat\r\n    try {\r\n        const token = localStorage.getItem('authToken')\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\r\n            params, config)\r\n\r\n        dispatch(createOrganizationSuccess(res));\r\n\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error').then(function () {\r\n                // dispatch(ProjectDetail(params))\r\n                window.location = \"/projectlist\";\r\n            });\r\n\r\n        }\r\n    }\r\n}\r\nexport const CreateOrganizationAfterRoleChange = createAsyncThunk(\r\n    \"auth/register\",\r\n    async (params, thunkAPI, dispatch) => {\r\n        // debugger\r\n        try {\r\n            const token = localStorage.getItem('authToken')\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n                transformRequest: formData => formData\r\n            }\r\n\r\n            //create oraginization creator login\r\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/createOrganizationDetails`,\r\n                params, config)\r\n\r\n            // await creatorWalletUpdate(res?.data?.data?.auth_token)\r\n\r\n            // thunkAPI.dispatch(loginSuccess(res));\r\n\r\n            if (res.status === 200) {\r\n                thunkAPI.dispatch(GetUserAction())\r\n                swal(\"success\", res.data.message, 'success').then(function () {\r\n                    window.location = \"/create\";\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            await dispatch(LogsAction(e))\r\n            if (e?.response?.data) {\r\n                if (e?.response?.data.message) {\r\n\r\n                    swal('error', e?.response?.data?.message, 'error')\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\nexport const CountryList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getCountryList`,\r\n            config)\r\n        dispatch(getCountryList(res));\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const StateList = (formData) => async dispatch => {\r\n    // debugger\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getStateById`,\r\n            formData, config)\r\n        // debugger\r\n        dispatch(getStateList(res));\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CityList = (formData) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/getCityById`,\r\n            formData, config)\r\n        dispatch(getCityList(res));\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AnnualRevenueList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAnnualRevenueList`,\r\n            config)\r\n        dispatch(getAnnualRevenueList(res));\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const HearAboutList = () => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getHearAboutList`,\r\n            config)\r\n        dispatch(getHearAboutList(res));\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        return console.error(e.message);\r\n    }\r\n}\r\n\r\nexport const UpdateProfileAction = (formData, props) => async dispatch => {\r\n\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            transformRequest: formData => formData\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/profileUpdate`,\r\n            formData, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        await dispatch(updateprofile(res));\r\n\r\n        if (res.status === 200) {\r\n\r\n            Swal.fire({\r\n                icon: 'success',\r\n                html:\r\n                    'User information saved',\r\n                showCloseButton: false,\r\n                showConfirmButton: false,\r\n                focusConfirm: false,\r\n                timer: 1000\r\n            })\r\n            dispatch(GetUserAction())\r\n            props.onHide(false)\r\n            // swal(\"success\", \"updated\", 'success')\r\n            // .then(function () {\r\n            // dispatch(ProjectDetail(params))\r\n            // window.location = \"/projectlist\";\r\n            // });\r\n\r\n        }\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const CountSet = () => async dispatch => {\r\n    // debugger\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/notification/update`,\r\n            {}, config)\r\n        // \r\n        console.log(res, 'update rres')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n\r\n\r\n        }\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const AllNoti = () => async dispatch => {\r\n\r\n\r\n    const token = localStorage.getItem('authToken')\r\n\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAllNotification`,\r\n            config)\r\n        // \r\n        console.log(res, 'allnoti rres')\r\n        await dispatch(allnotification(res));\r\n\r\n\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const NotiDelete = (id) => async dispatch => {\r\n    // \r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.delete(`${process.env.REACT_APP_BACKEND_API}api/notification/delete/${id}`,\r\n            config)\r\n        // \r\n        console.log(res, 'delete rres')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n            await dispatch(AllNoti())\r\n\r\n\r\n        }\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const ChangeUserRole = (history) => async dispatch => {\r\n    // debugger\r\n    const token = localStorage.getItem('authToken')\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/change_user_roles`, \"\",\r\n            config)\r\n        // \r\n        console.log(res, 'user role')\r\n        // await dispatch(res);\r\n\r\n        if (res.status === 200) {\r\n            // debugger\r\n            await dispatch(GetUserAction())\r\n            if (res?.data?.data?.organization === false) {\r\n                history.push('/create/organization')\r\n            } else {\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data?.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { ChangeUserRole, CountSet, GetUserAction, GetauctionNoti, NotiDelete } from '../../redux/Actions/authAction';\r\nimport swal from 'sweetalert';\r\nimport { loginSuccess, logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\nimport { isCancel } from 'axios';\r\nimport moment from \"moment\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Space, Switch, Tooltip, notification, Button, Alert, Popconfirm } from 'antd';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Header = () => {\r\n    const location = useLocation();\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [address, setAddress] = useState(null)\r\n    const [active, setActive] = useState(null)\r\n    const add1 = address?.slice(0, 4).toUpperCase()\r\n    const add2 = address?.slice(35, 44).toUpperCase()\r\n    const [open, setOpen] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false)\r\n    const [api, contextHolder] = notification.useNotification();\r\n    console.log(\"api\", api)\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n        setAddress(null)\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state?.user.userdetail?.role\r\n    })\r\n    // console.log(userRole)\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const close = () => {\r\n        console.log(\r\n            'Notification was closed. Either the close button was clicked or duration time elapsed.',\r\n        );\r\n    };\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userauction = useSelector(state => {\r\n        return state?.user?.auctionnoti\r\n    })\r\n    console.log(userauction.count)\r\n    // const names = Object?.keys(userdet?.notification?.status);\r\n    // console.log(\"names\", userdet && userdet.notification && userdet.notification[0]?.title)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const interval = setInterval(() => {\r\n            console.log(\"yyyyiiiiiiiiiiii\")\r\n            // openNotification()\r\n            dispatch(GetauctionNoti())\r\n\r\n            if (userauction?.count > 0 && userdet.user_id !== userauction?.data?.user_id) {\r\n                console.log(\"trueeeeeeeeeeeeeee\")\r\n                openNotification()\r\n            }\r\n            else {\r\n                // openNotification()\r\n                console.log(\"falseeeeeeeeee\")\r\n            }\r\n            // if (true) {\r\n        }, 5000)\r\n\r\n        return () => clearInterval(interval);\r\n    }, [userauction])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n        getCurrentWalletConnected(dispatch)\r\n        setAddress(getSelectedAddress)\r\n\r\n        if (window.ethereum) {\r\n            window.ethereum.on('accountsChanged', function (accounts) {\r\n                if (!accounts.length) {\r\n                    setAddress(null)\r\n                    //  setIsLoggedIn(false)\r\n\r\n                    localStorage.removeItem('auth_token')\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [dispatch, address])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n        if (window.location == '/create') {\r\n            return () => {\r\n                window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n            };\r\n        }\r\n    }, []);\r\n\r\n    const handleBeforeUnload = (e) => {\r\n        e.preventDefault();\r\n        const message =\r\n            \"Are you sure you want to leave? All provided data will be lost.\";\r\n        e.returnValue = message;\r\n        return message;\r\n    };\r\n\r\n    function getSelectedAddress() {\r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n\r\n\r\n    const notiHandler = () => {\r\n        // debugger\r\n        dispatch(CountSet())\r\n    }\r\n    const deleteHandler = (id) => {\r\n        dispatch(NotiDelete(id))\r\n    }\r\n    const SwitchOptions = [{\r\n        OPTION1: \"Buyer\",\r\n        OPTION2: \"Creator\"\r\n    }]\r\n    const [activeOption, setActiveOption] = useState(false);\r\n    toast.configure()\r\n\r\n\r\n\r\n    const openNotification = () => {\r\n        const key = `open${Date.now()}`;\r\n        // console.log('key', api)\r\n        const btn = (\r\n            <Space>\r\n                <Button type=\"link\" size=\"small\" className='notification_btn-delete' onClick={() => { notification.destroy(key); notiHandler() }}>\r\n                    Reject\r\n                </Button>\r\n                <Link to={`/nftprojdetails/${userauction?.data?.nft_slug}`} onClick={() => notiHandler()}>\r\n                    <Button className='notification_btn-conf' onClick={() => notiHandler()}>Confirm\r\n                    </Button>\r\n                </Link>\r\n            </Space >\r\n\r\n        );\r\n        // console.log(notification.info, 'info')\r\n        // if (key === key) {\r\n\r\n        api.open({\r\n            message: < h4>Reminder</h4>,\r\n            description:\r\n                <h5 style={{ color: 'black' }}>You have received a new bid request!</h5>,\r\n            btn,\r\n            // duration: null,\r\n            key,\r\n            // onClose: key === key ? false : true,\r\n        });\r\n        // }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const roleHandler = () => {\r\n        dispatch(ChangeUserRole(history))\r\n        setActiveOption(!activeOption)\r\n    }\r\n    const WalletHandler = async () => {\r\n        const response = await ConnectWallet(\"BUYER\", dispatch)\r\n        const { res } = response\r\n\r\n        // debugger\r\n        if (!res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            history.push('/all/LatestProjects')\r\n        }\r\n        else if (res?.data?.data?.is_new_user && Roles[\"BUYER\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n            // history.push('/create')\r\n\r\n            swal({\r\n                title: \"Welcome to Karmatica!!!\",\r\n                text: \"Karmatica would like to know more about yourself. Update your profile\",\r\n                icon: \"success\",\r\n                buttons: {\r\n                    continue: '',\r\n                    skip: '',\r\n                }\r\n            }).then((value) => {\r\n                switch (value) {\r\n                    case \"continue\":\r\n                        window.location = '/profile'\r\n                        break;\r\n\r\n                    case \"skip\":\r\n                        window.location = '/all/LatestProjects'\r\n                        break;\r\n\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n        else if (!res?.data?.data?.is_new_user && Roles[\"CREATOR\"] == res?.data?.data?.role) {\r\n            dispatch(loginSuccess(res))\r\n            setAddress(window.ethereum.selectedAddress)\r\n        }\r\n    }\r\n\r\n    const handleCreate = () => {\r\n        if (window.ethereum.selectedAddress) {\r\n\r\n            if (Roles[\"CREATOR\"] == userRole) {\r\n                history.push('/create')\r\n            }\r\n            else if (Roles[\"BUYER\"] == userRole) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n            else if (!userToken && !localStorage.getItem('authToken')) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Connect your wallet to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n            history.push('/wallet-connect')\r\n        }\r\n\r\n    }\r\n    // console.log(activeOption, \"active\")\r\n    return (\r\n        <header id=\"header\">\r\n            {/* Navbar */}\r\n            <nav data-aos=\"zoom-out\" data-aos-delay={800} className=\"navbar navbar-expand\">\r\n                <div className=\"container header\">\r\n                    {contextHolder}\r\n                    {/* <Popconfirm\r\n      title=\"Received new bid successfully\"\r\n      description=\"Received new bid successfully\"\r\n      open={open}\r\n      onConfirm={handleOk}\r\n      okButtonProps={{\r\n        loading: confirmLoading,\r\n      }}\r\n      onCancel={handleCancel}\r\n    /> */}\r\n                    {/* Navbar Brand*/}\r\n                    {/* <div className=\"your-required-wrapper\" style={{ width: 100, height: 30 }}> */}\r\n\r\n                    {/* </div> */}\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        <img className=\"navbar-brand-sticky desktop_logo\" src=\"/img/karmatica.png\" alt=\"karmatica\" />\r\n                        <img className=\"mobile-logo\" src=\"/img/logo.png\" alt=\"\" />\r\n                    </Link>\r\n                    <div className=\"ml-auto\" />\r\n\r\n\r\n                    {/* Navbar */}\r\n                    <ul className=\"navbar-nav items mx-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact activeClassName=\"navbar__link--active\" className=\"nav-link\" to=\"/\">Explore</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            {/* <button onClick={tstt}>df</button> */}\r\n                        </li>\r\n                        {/* {log !== null && ( */}\r\n                        <li className=\"nav-item text-left nav-main\" >\r\n                            <a onClick={() => handleCreate()} className={location.pathname === `/create` && \"nav-link-active\"} activeClassName={location.pathname === `/create` && \"navbar__link--active\"} >Create</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact activeClassName=\"navbar__link--active\" to={`/all/${\"LatestProjects\"}`} className=\"nav-link\">Latest</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a target=\"_blank\" href=\"https://changelly.com/?from=btc&to=matic&amount=0.1&ref_id=_-GPCBjccW7TMMjO\" className=\"nav-link\">Swap</a>\r\n                        </li>\r\n\r\n\r\n\r\n                    </ul>\r\n                    {/* Navbar Toggler */}\r\n                    {window.ethereum?.selectedAddress &&\r\n                        <div className=\"dropdown notification relative\">\r\n                            <i className=\"btn btn-secondary dropdown-toggle fa-sharp fa-solid fa-bell  text-white w-auto m-0 \" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" onClick={() => notiHandler()} ></i>\r\n                            {userdet?.notification_count > 0 &&\r\n\r\n                                <small className='dropdown-notification'>{userdet?.notification_count}</small>\r\n                            }\r\n\r\n                            <ul className=\"creator-dropdown dropdown-menu notification-menu dropdown-scrollbar\" aria-labelledby=\"dropdownMenuButton1\">\r\n\r\n                                {userdet?.notification?.map((item) => {\r\n                                    return (\r\n\r\n                                        <><li>{item.title}</li>\r\n                                            <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\r\n                                                <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\r\n                                    )\r\n                                })}\r\n                                {userdet?.notification?.length > 0 &&\r\n                                    <span><button type='submit' className='noty_all'><Link to='/allnotifications'>See all</Link></button></span>\r\n                                }\r\n                                {userdet?.notification?.length == 0 &&\r\n                                    <li>No new notifications</li>\r\n                                }\r\n                            </ul>\r\n\r\n                        </div>\r\n                    }\r\n                    <ul className=\"navbar-nav toggle\">\r\n                        <li className=\"nav-item\">\r\n                            <a href=\"#\" className=\"nav-link\" data-toggle=\"modal\" data-target=\"#menu\">\r\n                                <i className=\"fas fa-bars toggle-icon m-0\" />\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* Navbar Action Button */}\r\n                    {/* Navbar Action Button */}\r\n                    <ul className=\"navbar-nav action\">\r\n                        {window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? (\r\n\r\n                            <>\r\n\r\n                                <li className=\"nav-item mr-2\">\r\n                                    <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />{add1}...{add2}</a>\r\n                                </li>\r\n                            </>\r\n                        ) : (\r\n\r\n\r\n                            <li className=\"nav-item ml-3\">\r\n                                <Tooltip title='You will be signed in as a buyer' color='#4528dc'> <a className=\"btn ml-lg-auto btn-bordered-white\" onClick={WalletHandler} style={{ color: '#f8f9fa' }}><i className=\"icon-wallet mr-md-2\" />Connect Wallet</a></Tooltip>\r\n                            </li>\r\n\r\n                        )}\r\n\r\n                    </ul>\r\n                    {window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? (\r\n                        <>\r\n\r\n                            <div className=\"dropdown dropdown_login\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    <i className=\"fa fa-solid fa-user\"></i>\r\n                                </button>\r\n                                <ul className=\"creator-dropdown dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                    {/* <li>{userdet?.username}</li> */}\r\n                                    <div className=\"background\">\r\n                                        <div className=\"SwitchContainer\">\r\n                                            <div\r\n                                                className=\"ToggleItem\"\r\n                                                style={{\r\n                                                    backgroundColor:\r\n                                                        userRole == 2 ? \"#4528DC\" : \"transparent\"\r\n                                                }}\r\n                                                onClick={() => roleHandler(SwitchOptions.OPTION1)}\r\n                                            >\r\n                                                <div className={\"Text\"}>Buyer</div>\r\n                                            </div>\r\n                                            <div\r\n                                                className=\"ToggleItem\"\r\n                                                style={{\r\n                                                    backgroundColor:\r\n                                                        userRole == 3 ? \"#4528DC\" : \"transparent\"\r\n                                                }}\r\n                                                onClick={() => roleHandler(SwitchOptions.OPTION2)}\r\n                                            >\r\n                                                <div className={\"Text\"}>Creator</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <li>\r\n                                        \r\n                                        <Space direction=\"vertical\">\r\n                                           \r\n\r\n                                            <Switch\r\n                                                className='switch_custom'\r\n                                                checkedChildren={<div onClick={() => roleHandler()}> {userRole == 2 ? 'switch to creator' : 'switch to buyer'}</div>}\r\n                                                unCheckedChildren={<div onClick={() => roleHandler()}>{userRole == 2 ? 'switch to creator' : 'switch to buyer'}</div>}\r\n\r\n                                            />\r\n                                          \r\n                                        </Space>\r\n                                    </li> */}\r\n                                    <li> {userdet?.email}</li>\r\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/profile'><i class=\"fa-regular fa-user\"></i> My Profile</Link></button></li>\r\n                                    {userRole == 2 && (\r\n                                        <li><button type='button' class=\"dropdown-item\"><Link to='/my/nfts'><i class=\"fa-regular fa-file-image\" style={{ color: 'white', display: \"table-cell\" }} /> My NFTs</Link></button></li>\r\n                                    )}\r\n                                    <li><button type='button' class=\"dropdown-item\"><Link to='/referrals-detail'><i class=\"fa-solid fa-coins\" style={{ color: 'white', display: \"table-cell\" }}></i>Referral Program</Link></button></li>\r\n                                    {userRole == 3 && (\r\n                                        <><li><button type='button' class=\"dropdown-item\"><Link to='/projectlist'><i class=\"fa-regular fa-file\" style={{ color: 'white', display: \"table-cell\" }}></i> My Projects</Link></button></li>\r\n\r\n                                            <li><button type='button' class=\"dropdown-item\"><Link to={`/fundraiser/detail/${userdet.user_id}`}><i class=\"fa-solid fa-hand-holding-heart\" style={{ display: \"table-cell\", color: \"white\" }}></i> Fundraise</Link></button></li></>\r\n                                    )}\r\n                                    {/* {userRole == 2 ? ( */}\r\n\r\n\r\n                                    {/* <li><button type='button' class=\"dropdown-item\" onClick={() => roleHandler()}>Switch to Creator</button></li></> */}\r\n                                    {/* ) : (\r\n                                        <li><button type='button' class=\"dropdown-item\" onClick={() => roleHandler()}>Switch to Buyer</button></li>\r\n                                    )} */}\r\n                                    <li><button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'><i class=\"fa-solid fa-right-from-bracket\" style={{ display: \"table-cell\", color: \"white\" }}></i> Logout</a></button></li>\r\n                                </ul>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <ul className=\"navbar-nav action\">\r\n                            <li className=\"nav-item ml-3\">\r\n                                <Tooltip title='You will be signed in as a creator' color='#4528dc'>  <a className=\"creator-button btn ml-md-auto btn-bordered-white\"\r\n                                    onClick={() => history.push('/wallet-connect')} style={{ color: '#f8f9fa' }}><i className=\"fa fa-user\" />\r\n                                    <div>Creator</div></a></Tooltip>\r\n                                {/* <Link to=\"/login\" className=\"creator-button btn ml-md-auto btn-bordered-white\">\r\n                                    <i className=\"fa fa-user\" />\r\n                                    <div>CREATOR</div>\r\n                                </Link> */}\r\n                            </li>\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </nav >\r\n        </header >\r\n\r\n    )\r\n}\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport { useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { Roles } from '../Wallet/interact';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { GetMostactivityProject, getPublicLiveProjects } from '../../redux/Actions/projectAction';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst projectTypesMap = {\r\n    \"LatestProjects\": 2,\r\n    \"RecentCampaigns\": 1\r\n}\r\nconst Hero = ({ type }) => {\r\n    const history = useHistory()\r\n\r\n    var options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0,\r\n    };\r\n\r\n    function success(pos) {\r\n        var crd = pos.coords;\r\n\r\n        // console.log(\"Your current position is:\");\r\n        // console.log(`Latitude : ${crd.latitude}`);\r\n        // console.log(`Longitude: ${crd.longitude}`);\r\n        // console.log(`More or less ${crd.accuracy} meters.`);\r\n        localStorage.setItem('latitude', `${crd.latitude}`);\r\n        localStorage.setItem('longitude', `${crd.longitude}`);\r\n        // setLatitude(`${crd.latitude}`)\r\n        // setLongitude(`${crd.longitude}`)\r\n    }\r\n\r\n    function errors(err) {\r\n        console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n    const dispatch = useDispatch()\r\n\r\n    const mostactivityProjects = useSelector(state => {\r\n        return state?.projectdetails?.getmostProjActivity\r\n    })\r\n    console.log(mostactivityProjects, 'mostactivityProjects')\r\n    useEffect(() => {\r\n        dispatch(getPublicLiveProjects({\r\n            cursor: 1,\r\n            type: projectTypesMap[type],\r\n            projectType: type,\r\n        }))\r\n        dispatch(GetMostactivityProject())\r\n    }, [dispatch])\r\n    const currentLocation = () => {\r\n        // \r\n        if (navigator.geolocation) {\r\n            navigator.permissions\r\n                .query({ name: \"geolocation\" })\r\n                .then(function (result) {\r\n                    if (result.state === \"granted\") {\r\n                        // console.log(result.state);\r\n                        //If granted then you can directly call your function here\r\n                        navigator.geolocation.getCurrentPosition(success);\r\n                    } else if (result.state === \"prompt\") {\r\n                        navigator.geolocation.getCurrentPosition(success, errors, options);\r\n                    } else if (result.state === \"denied\") {\r\n                        //If denied then you have to show instructions to enable location\r\n                    }\r\n                    result.onchange = function () {\r\n                        // console.log(result.state);\r\n                    };\r\n                });\r\n        } else {\r\n            alert(\"Sorry Not available!\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        currentLocation()\r\n    }, [])\r\n\r\n    const handleCreate = () => {\r\n        if (window.ethereum.selectedAddress) {\r\n\r\n            if (Roles[\"CREATOR\"] == userRole) {\r\n                history.push('/create')\r\n            }\r\n            else if (Roles[\"BUYER\"] == userRole) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n            else if (!userToken && !localStorage.getItem('authToken')) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Connect your wallet to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n            history.push('/wallet-connect')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section className=\"hero-section\">\r\n            <div className=\"container\">\r\n                <div className=\"row \">\r\n\r\n                    <div className=\"col-12 col-md-6 col-lg-7\">\r\n\r\n                        <h1 className=\"mt-4\">Buy or create NFTs to fund projects. Earn 30% by sharing with friends.</h1>\r\n                        {/* <p>Earn rewards by referring your friends.</p> */}\r\n                        {/* Buttons */}\r\n                        <div className=\"button-group\">\r\n                            <Link className=\"btn btn-bordered-white\" to={`/all/${\"LatestProjects\"}`}><i className=\"icon-rocket mr-2\" />Explore</Link>\r\n                            <a className=\"btn btn-bordered-white\" onClick={handleCreate}><i className=\"icon-note mr-2\" />Create </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-md-6 col-lg-4 auction-slider auctions-slides'>\r\n                        {/* {mostactivityProjects[0]?.map((item, idx) => { */}\r\n                        {/* return ( */}\r\n\r\n                        <div key={`auc_${mostactivityProjects[0]?.id}`} className=\"item card\">\r\n\r\n\r\n\r\n                            <div className=\"image-over\">\r\n                                <Link to={`/projects/${mostactivityProjects[0]?.slug}`}>\r\n\r\n                                    <img class=\"card-img-top\" src={mostactivityProjects[0]?.image} alt=\"\"></img>\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"card-caption col-12 p-0\">\r\n\r\n                                <div className=\"card-body pt-0\">\r\n\r\n                                    {/* <a href=\"#\">\r\n                                        <h5 className=\"mb-0\">{mostactivityProjects[0]?.title?.slice(0, 16)}</h5>\r\n                                    </a> */}\r\n                                    {/* <a className=\"seller d-flex align-items-center mb-2\" href=\"#\">\r\n                                        <img className=\"avatar-sm rounded-circle\" src={mostactivityProjects[0]?.user_data?.avatar} alt=\"\" />\r\n                                        <span className=\"ml-2 mb-0\">{mostactivityProjects[0]?.user_data?.username}</span>\r\n                                    </a>\r\n                                    <div className=\"card-bottom d-flex justify-content-between\">\r\n                                        <span>{Math.round(mostactivityProjects[0]?.price)} MATIC</span>\r\n                                        {mostactivityProjects[0]?.number_of_nft == 1 ? (\r\n\r\n                                            <span>{mostactivityProjects[0]?.number_of_nft} NFT</span>\r\n                                        ) : (\r\n                                            <span>{mostactivityProjects[0]?.number_of_nft} NFTs</span>\r\n                                        )\r\n\r\n                                        }\r\n                                    </div> */}\r\n\r\n                                    {/* ) */}\r\n                                    {/* })} */}\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n\r\n                                            {/* <a > */}\r\n                                            <h5 className=\"mb-0\">{mostactivityProjects[0]?.title?.slice(0, 16)}</h5>\r\n                                            {/* </a> */}\r\n\r\n\r\n                                            <div\r\n                                                className=\"seller d-flex align-items-center my-2\"\r\n                                            >\r\n\r\n                                                <a href=\"#\">\r\n                                                    <h6 className=\"ml-2 mb-0\">\r\n                                                        {mostactivityProjects[0]?.user_data.username?.slice(0, 12)}\r\n                                                    </h6>\r\n                                                </a>\r\n\r\n                                                {/* <a > */}\r\n                                                <h6 className=\"ml-2 mb-0\">\r\n                                                    {mostactivityProjects[0]?.user_data.username?.slice(0, 12)}\r\n                                                </h6>\r\n                                                {/* </a> */}\r\n\r\n                                                {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                            </div>\r\n                                            {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                              <span>{Math.round(item.price)} MATIC</span>\r\n                              {item?.number_of_nft == 1 ? (\r\n                                <span>{item.number_of_nft} NFT</span>\r\n                              ) : (\r\n                                <span>{item.number_of_nft} NFTs</span>\r\n                              )}\r\n                            </div> */}\r\n\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Shape */}\r\n            <div className=\"shape\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                    <defs>\r\n                        <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                            <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                            <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                        <polygon points fill=\"url(#linearGradient-1)\">\r\n                            <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                        </polygon>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Hero;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams, useLocation } from \"react-router-dom\";\r\nimport { getPublicLiveProjects } from \"../../redux/Actions/projectAction\";\r\nimport { useState } from \"react\";\r\nconst projectTypesMap = {\r\n  LatestProjects: 2,\r\n  RecentCampaigns: 1,\r\n};\r\nconst AuctionsOne = ({ type }) => {\r\n  const dispatch = useDispatch();\r\n  const [count, setCount] = useState(1)\r\n  const location = useLocation()\r\n  const liveProjects = useSelector((state) => {\r\n    return state?.projectdetails?.liveProjects[type];\r\n  });\r\n  console.log(liveProjects, \"liveeproj\");\r\n  useEffect(() => {\r\n    dispatch(\r\n      getPublicLiveProjects({\r\n        cursor: 1,\r\n        type: projectTypesMap[type],\r\n        projectType: type,\r\n        location,\r\n        count\r\n      })\r\n    );\r\n  }, [dispatch]);\r\n  return (\r\n    <section className=\"live-auctions-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            {/* Intro */}\r\n            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n              <div className=\"intro-content\">\r\n                <span>Project</span>\r\n                <h3 className=\"mt-3 mb-0\">\r\n                  {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}\r\n                </h3>\r\n              </div>\r\n              <div className=\"intro-btn\">\r\n                {liveProjects?.length > 4 && (\r\n                  <Link to={`/all/${type}`} style={{ color: \"white\" }}>\r\n                    <a className=\"btn content-btn\">View All</a>\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"auctions-slides \">\r\n          <div className=\"swiper-container slider-mid items \">\r\n            <div className=\"swiper-wrapper  \">\r\n              {/* Single Slide */}\r\n              {liveProjects?.map((item, idx) => {\r\n                return (\r\n                  <div\r\n                    key={`auc_${item.id}`}\r\n                    className=\"swiper-slide item card position-relative auctions-slides-card\"\r\n                  >\r\n                    <div className=\"image-over\">\r\n                      <Link to={`/projects/${item.slug}`}>\r\n                        <img\r\n                          className=\"card-img-top\"\r\n                          src={item?.image}\r\n                          alt=\"\"\r\n                        />\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"card-caption col-12 p-0\">\r\n                      <div className=\"card-body\">\r\n                        {/* <a> */}\r\n                        <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                        {/* </a> */}\r\n                        <div\r\n                          className=\"seller d-flex align-items-center my-3\"\r\n                        >\r\n                          <span>Owned By</span>\r\n                          {/* <a> */}\r\n                          <h6 className=\"ml-2 mb-0\">\r\n                            {item.user_data.username.slice(0, 12)}\r\n                          </h6>\r\n                          {/* </a> */}\r\n                        </div>\r\n                        <div className=\"card-bottom d-flex justify-content-between nft-price\" >\r\n                          <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                          {item?.number_of_nft == 1 ? (\r\n                            <span>{item.number_of_nft} NFT</span>\r\n                          ) : (\r\n                            <span>{item.number_of_nft} NFTs</span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between edit-buttons nft-price \">\r\n                          <a\r\n                            className=\"btn  btn-smaller mt-3 mb-0\"\r\n                            href=\"/login\"\r\n                          ><i className=\"icon-handbag\" />\r\n                            {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                          </a>\r\n                          <a\r\n                            className=\"btn  btn-smaller mt-3 ml-2 mb-0\"\r\n                            href=\"/login\"\r\n                          ><i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"swiper-pagination\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default AuctionsOne;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst collectionSlice = createSlice({\r\n    name: 'collection',\r\n\r\n    initialState: {\r\n        collection: [],\r\n        collectiondetail: [],\r\n    },\r\n    reducers: {\r\n        getPopularCollection: (state, action) => {\r\n            // \r\n            state.collection = action.payload;\r\n        },\r\n        getPopularCollectiondetails: (state, action) => {\r\n            // \r\n            state.collectiondetail = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const collectionReducer = collectionSlice.reducer\r\n\r\nexport const {\r\n    getPopularCollection,\r\n    getPopularCollectiondetails\r\n} = collectionSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getPopularCollection, getPopularCollectiondetails } from \"../Slices/popularCollectionSlice\";\r\nimport swal from \"sweetalert\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\nexport const PopularCollectionAction = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnection`, config)\r\n            console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollection(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\nexport const PopularCollectionActionDetails = createAsyncThunk(\r\n    \"auth/collection\",\r\n    async ({ slug }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getPopularConnectionByIdx/${slug}`, config)\r\n            // console.log(res, 'resddd')\r\n            thunkAPI.dispatch(getPopularCollectiondetails(res));\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            // \r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nimport { Link } from 'react-router-dom';\r\nconst Collections = () => {\r\n    const dispatch = useDispatch()\r\n    const coll = useSelector(state => {\r\n        //\r\n        return state?.collection?.collection\r\n    })\r\n    console.log(coll, \"coll detail\")\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionAction({}))\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"popular-collections-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>POPULAR</span>\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {coll?.length > 8 &&\r\n                                    <Link className=\"btn content-btn text-left\" to=\"/allcollections\">Explore More</Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {coll?.slice(0, 8)?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`cd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/popularcollection/details/${item?.slug}`}>\r\n                                            <img className=\"card-img-top\" src={item?.image} alt=\"\" />\r\n                                        </Link>\r\n                                        {/* Seller */}\r\n                                        <div className=\"seller\" >\r\n                                            <div className=\"seller-thumb avatar-lg\">\r\n                                                <img className='rounded-circle' src={item?.user_data?.avatar} alt='logo' width={50} height={50} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            {/* <a> */}\r\n                                            <h5 className=\"\">{item.title.slice(0, 12)} </h5>\r\n                                            {/* </a> */}\r\n                                            <div class=\"align-items-center\">\r\n                                                <div class=\"d-flex justify-content-center text-align-center gap-5\">\r\n                                                    <div class=\" align-items-center\">\r\n                                                        <div class=\"d-flex justify-content-center text-align-center gap-5\">\r\n                                                            {item?.nft_data.length == 1 ? (\r\n                                                                <span>Total NFT :</span>\r\n                                                            ) : (\r\n                                                                <span>Total NFTs :</span>\r\n                                                            )\r\n                                                            }\r\n                                                            <span>{item?.nft_data?.length}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div >\r\n            </div >\r\n        </section >\r\n    );\r\n}\r\nexport default Collections;","import { React } from 'react';\r\n\r\nconst data = {\r\n    preHeading: \"How It Works\",\r\n    heading: \"Create and sell your NFTs\",\r\n    workData: [\r\n        {\r\n            \"id\": 1,\r\n            \"icon\": \"icons icon-wallet text-effect\",\r\n            \"title\": \"Setup your wallet\",\r\n            \"text\": \"Click Connect Wallet in the top right corner to login and get started.\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"icon\": \"icons icon-grid text-effect\",\r\n            \"title\": \"Create your collection\",\r\n            \"text\": \"Click Creator and set up your organization profile, description, fundraising goal and more.\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"icon\": \"icons icon-drawer text-effect\",\r\n            \"title\": \"Add your NFTs\",\r\n            \"text\": \"Upload your project art or images and description.\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"icon\": \"icons icon-bag text-effect\",\r\n            \"title\": \"List them for sale\",\r\n            \"text\": \"Choose how you want to price and sell your NFTs!\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst Work = () => {\r\n\r\n\r\n    return (\r\n        <section className=\"work-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro mb-4\">\r\n                            <div className=\"intro-content\">\r\n                                <span>{data.preHeading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {data?.workData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Work */}\r\n                                <div className=\"single-work\">\r\n                                    <i className={item.icon} />\r\n                                    <h4>{item.title}</h4>\r\n                                    <p>{item.text}</p>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default Work;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst footerSlice = createSlice({\r\n    name: 'footer',\r\n\r\n    initialState: {\r\n        footer: [],\r\n        aboutus: []\r\n\r\n    },\r\n    reducers: {\r\n\r\n        getfooter: (state, action) => {\r\n            state.footer = action.payload;\r\n        },\r\n        getabout: (state, action) => {\r\n            state.aboutus = action.payload;\r\n        },\r\n\r\n    },\r\n});\r\n\r\nexport const footerReducer = footerSlice.reducer\r\n\r\nexport const {\r\n    getfooter,\r\n    getabout,\r\n} = footerSlice.actions;","import axios from \"axios\";\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getabout, getfooter } from \"../Slices/footerSlice\";\r\nimport swal from \"sweetalert\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\n\r\nexport const getFooter = createAsyncThunk(\r\n    \"auth/footer\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/term-condition`, config)\r\n            thunkAPI.dispatch(getfooter(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n\r\nexport const AboutUsAction = createAsyncThunk(\r\n    \"auth/about\",\r\n    async (params, thunkAPI) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getAbouts`, config)\r\n            thunkAPI.dispatch(getabout(res?.data?.data));\r\n            // console.log(res, \"res\")\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })","import React, { Component, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getFooter } from '../../redux/Actions/footerAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { ConnectWallet, getCurrentWalletConnected, Roles } from '../Wallet/interact';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Footer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter(dispatch))\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    const userRole = useSelector(state => {\r\n        return state.user.userdetail.role\r\n    })\r\n    // console.log(userRole)\r\n    const userToken = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const history = useHistory()\r\n    const handleCreate = () => {\r\n        if (window.ethereum.selectedAddress) {\r\n\r\n            if (Roles[\"CREATOR\"] == userRole) {\r\n                history.push('/create')\r\n            }\r\n            else if (Roles[\"BUYER\"] == userRole) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n            else if (!userToken && !localStorage.getItem('authToken')) {\r\n                Swal.fire({\r\n                    icon: 'info',\r\n                    html:\r\n                        'Sign up as a Creator to start a project and upload NFTs',\r\n                    showCloseButton: false,\r\n                    focusConfirm: false,\r\n                    confirmButtonText:\r\n                        '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                })\r\n            }\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'info',\r\n                html:\r\n                    'Connect your wallet to start a project and upload NFTs',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n            })\r\n            history.push('/wallet-connect')\r\n        }\r\n\r\n    }\r\n\r\n    function getYear() {\r\n        return new Date().getFullYear();\r\n    }\r\n    return (\r\n\r\n\r\n        <footer className=\"footer-area\">\r\n            {/* Footer Top */}\r\n            <div className=\"footer-top\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Logo */}\r\n                                <a className=\"navbar-brand\" href=\"/\">\r\n                                    <img src=\"/img/logo.png\" alt=\"\" />\r\n                                </a>\r\n                                <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                                {/* Social Icons */}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Useful Links</h4>\r\n                                <ul>\r\n                                    <li className=\"nav-item\">\r\n                                        <a onClick={() => handleCreate()} className=\"\">Create Project</a>\r\n                                    </li>\r\n                                    {/* <li><Link to=\"/create\" onClick={handleCreate}>Create Project</Link></li> */}\r\n                                    <li><Link to={`/all/${\"LatestProjects\"}`}>Explore NFTs</Link></li>\r\n                                    <li><Link to=\"/terms&conditions\">Terms of Service</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-6 col-lg-3 res-margin\">\r\n                            {/* Footer Items */}\r\n                            <div className=\"footer-items\">\r\n                                {/* Footer Title */}\r\n                                <h4 className=\"footer-title\">Community</h4>\r\n                                <ul>\r\n                                    <li><a target=\"_blank\" href=\"https://www.canopycrypto.io/our-team/\">About Us</a></li>\r\n                                    {/* <li><Link to='/https://www.canopycrypto.io/our-team/'>About Us</Link></li> */}\r\n                                    <li><Link to='/contact'>Get Support</Link></li>\r\n                                    <li><Link to='/rewards'>Rewards</Link></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Footer Bottom */}\r\n            <div className=\"footer-bottom\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Copyright Area */}\r\n                            <div className=\"copyright-area d-flex flex-wrap justify-content-center justify-content-sm-between text-center py-4\">\r\n                                {/* Copyright Left */}\r\n\r\n                                <div className=\"copyright-left\">© {getYear()} Copyright Karmatica.</div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { logoutSuccess } from '../../redux/Slices/authSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ModalSearch = () => {\r\n    const dispatch = useDispatch()\r\n    const LogoutHandler = () => {\r\n        dispatch(logoutSuccess())\r\n    }\r\n    return (\r\n        <div id=\"search\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        {/* {this.state.data.menuName} <i className={this.state.data.menuIcon} /> */}\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form className=\"row\">\r\n                            <div className=\"col-12 align-self-center\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 pb-3\">\r\n                                        <Link to='/author'>Profile</Link>\r\n                                        <Link to='/projectlist'>My Projects</Link>\r\n                                        {/* <button type='button' class=\"dropdown-item\"><a href='/author'>Profile</a></button>\r\n                <button type='button' class=\"dropdown-item\"><a href='/projectlist'>My Projects</a></button> */}\r\n                                        <button type='button' class=\"dropdown-item\" onClick={LogoutHandler}><a href='/'>Logout</a></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group mt-4\">\r\n                                        <input type=\"text\" placeholder=\"Enter your keywords\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 input-group align-self-center\">\r\n                                        {/* <button className=\"btn btn-bordered-white mt-3\">{this.state.data.btnText}</button> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ModalSearch;","import React from 'react';\r\n\r\nconst ModalMenu = () => {\r\n    return (\r\n        <div id=\"menu\" className=\"modal fade p-0\">\r\n            <div className=\"modal-dialog dialog-animated\">\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header text-right justify-content-end\" data-dismiss=\"modal\">\r\n                        <i className=\"far fa-times-circle icon-close\" />\r\n                    </div>\r\n                    <div className=\"menu modal-body\">\r\n                        <div className=\"row w-100\">\r\n                            <div className=\"items p-0 col-12 text-center\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalMenu;","import React from 'react';\r\n\r\nconst Scrollup = () => {\r\n    return (\r\n        <div id=\"scroll-to-top\" className=\"scroll-to-top\">\r\n            <a href=\"#header\" className=\"smooth-anchor\">\r\n                <i className=\"fas fa-arrow-up\" />\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scrollup;","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst fundraiserSlice = createSlice({\r\n    name: 'fundraiser',\r\n\r\n    initialState: {\r\n        fundraiser: [],\r\n        fundraiserdetail: [],\r\n    },\r\n    reducers: {\r\n        getTopFundraiser: (state, action) => {\r\n            // \r\n            state.fundraiser = action.payload;\r\n\r\n        },\r\n        getTopFundraiserDetail: (state, action) => {\r\n            // \r\n            state.fundraiserdetail = action?.payload?.data?.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const fundraiserReducer = fundraiserSlice.reducer\r\n\r\nexport const {\r\n    getTopFundraiser,\r\n    getTopFundraiserDetail\r\n} = fundraiserSlice.actions;","import axios from \"axios\";\r\nimport { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { getTopFundraiser, getTopFundraiserDetail } from \"../Slices/fundraiserSlice\";\r\nimport swal from \"sweetalert\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\n\r\nexport const TopFundraiserAction = createAsyncThunk(\r\n    \"auth/topfundraiser\",\r\n    async ({ }, thunkAPI) => {\r\n        // \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            // \r\n            const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers`, config)\r\n            // console.log(res, 'fund res')\r\n            thunkAPI.dispatch(getTopFundraiser(res?.data?.data));\r\n\r\n        } catch (e) {\r\n            thunkAPI.dispatch(LogsAction(e))\r\n            if (e?.response?.data.message) {\r\n                swal('error', e.response.data.message, 'error')\r\n            }\r\n        }\r\n    })\r\n// export const TopFundraiserDetail = createAsyncThunk(\r\n//     \"auth/topfundraiserdetail\",\r\n//     async (id, thunkAPI) => {\r\n//         // \r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//             }\r\n//             const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${id}`, config)\r\n\r\n//             thunkAPI.dispatch(getTopFundraiserDetail(res?.data?.data));\r\n\r\n//         } catch (e) {\r\n//             if (e?.response?.data.message) {\r\n//                 swal('error', e.response.data.message, 'error')\r\n//             }\r\n//         }\r\n//     })\r\nexport const TopFundraiserDetail = (user_id) => async dispatch => {\r\n    // \r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getTopFundraisers/${user_id}`,\r\n            config)\r\n\r\n        // console.log(res, 'ressssss')\r\n        dispatch(getTopFundraiserDetail(res));\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Fundraiser = () => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <section className=\"top-seller-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Fundraisers</span>\r\n                                <h3 className=\"mt-3 mb-0\">Top Fundraisers</h3>\r\n                            </div>\r\n\r\n                            <div className=\"intro-btn\">\r\n                                {fund?.length > 5 &&\r\n\r\n                                    <Link className=\"btn content-btn\" to='/allfundraise'>View All</Link>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {fund?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`ts_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                {/* Single Seller */}\r\n                                <Link to={`/fundraiser/detail/${item.user_id}`}>\r\n                                    <div className=\"card no-hover\">\r\n                                        <div className=\"single-seller d-flex align-items-center\">\r\n\r\n                                            <img className=\"avatar-md rounded-circle\" src={item?.organization_detail?.banner_image} alt=\"\" />\r\n\r\n                                            {/* Seller Info */}\r\n                                            <div className=\"seller-info ml-3 nft-price\">\r\n                                                <a className=\"seller mb-2 text-capitalize\">{item?.organization_detail?.organization_name}</a>\r\n                                                {/* <span dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 15) }} /> */}\r\n                                                <span><img className=\"mr-1\" src='../img/image14.png' /> ${Number(Math.round(item.amount))} Raised</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Fundraiser;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst resellSlice = createSlice({\r\n    name: 'resell',\r\n\r\n    initialState: {\r\n        resell: [],\r\n        reselldetails: [],\r\n    },\r\n    reducers: {\r\n        getResell: (state, action) => {\r\n            state.resell = action.payload?.data?.data;\r\n        },\r\n        getReselldetails: (state, action) => {\r\n            state.reselldetails = action.payload?.data?.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const resellReducer = resellSlice.reducer\r\nexport const {\r\n    getResell,\r\n    getReselldetails\r\n} = resellSlice.actions;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { getResell, getReselldetails } from \"../Slices/resellNftSlice\";\r\nimport { LogsAction } from \"./logsAction\";\r\n\r\nexport const ResellAction = () => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getResaleNft`,\r\n            \"\", config)\r\n        console.log(\"resproj\", res)\r\n        dispatch(getResell(res));\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}\r\nexport const ResellActionDetails = (slug) => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.get(`${process.env.REACT_APP_BACKEND_API}api/getResaleNftByIdx/${slug.slug}`,\r\n            slug, config)\r\n        console.log(\"resproj\", res)\r\n        dispatch(getReselldetails(res));\r\n    } catch (e) {\r\n        dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getPublicLiveProjects } from \"../../redux/Actions/projectAction\";\r\nimport { ResellAction } from \"../../redux/Actions/resellNftAction\";\r\nconst Resell = ({ type }) => {\r\n    const dispatch = useDispatch();\r\n    const nfts = useSelector((state) => {\r\n        return state?.resell?.resell;\r\n    });\r\n    console.log(nfts[0]?.image, \"resellnfts\");\r\n    useEffect(() => {\r\n        dispatch(ResellAction())\r\n    }, [dispatch]);\r\n    return (\r\n        <section className=\"live-auctions-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>NFTs</span>\r\n                                <h3 className=\"mt-3 mb-0\">\r\n                                    Latest NFTs\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                {nfts?.length > 4 && (\r\n                                    <Link to='/all/resll/nfts' style={{ color: \"white\" }}>\r\n                                        <a className=\"btn content-btn\">View All</a>\r\n                                    </Link>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"auctions-slides \">\r\n                    <div className=\"swiper-container slider-mid items \">\r\n                        <div className=\"swiper-wrapper  \">\r\n                            {/* Single Slide */}\r\n                            {nfts?.map((item, idx) => {\r\n                                return (\r\n                                    <div\r\n                                        key={`auc_${item.id}`}\r\n                                        className=\"swiper-slide item card position-relative auctions-slides-card\"\r\n                                    >\r\n                                        <div className=\"image-over\">\r\n                                            <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                                <img\r\n                                                    className=\"card-img-top\"\r\n                                                    src={item?.image}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            <div className=\"card-body\">\r\n                                                {/* <a> */}\r\n                                                <h5 className=\"mb-0\">{item.title.slice(0, 16)}</h5>\r\n                                                {/* </a> */}\r\n                                                <div\r\n                                                    className=\"seller d-flex align-items-center my-3\"\r\n                                                >\r\n                                                    <span>Owned By</span>\r\n                                                    {/* <a> */}\r\n                                                    <h6 className=\"ml-2 mb-0\">\r\n                                                        {item.user_data.username.slice(0, 12)}\r\n                                                    </h6>\r\n                                                    {/* </a> */}\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between nft-price\" >\r\n                                                    <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                    <span>1 NFT</span>\r\n                                                </div>\r\n                                                <div className=\"d-flex justify-content-between edit-buttons nft-price \">\r\n                                                    <Link to={`/nft/details/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n                                                        <i className=\"icon-handbag\" />\r\n                                                    </Link>\r\n                                                    <Link to={`/nft/details/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n                                                        <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"swiper-pagination\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default Resell;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Hero from '../components/Hero/Hero';\r\nimport Auctions from '../components/Auctions/AuctionsOne';\r\nimport Collections from '../components/Collections/Collections';\r\nimport Work from '../components/Work/Work';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\nimport Resell from '../components/Auctions/resellNft';\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Hero />\r\n            <Auctions key=\"latestProjects\" type={\"LatestProjects\"} />\r\n            <Resell />\r\n\r\n            <Fundraiser />\r\n            <Collections />\r\n            <Work />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Breadcrumb extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"breadcrumb-area overlay-dark d-flex align-items-center\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Breamcrumb Content */}\r\n                            <div className=\"breadcrumb-content text-center\">\r\n                                <h2 className=\"m-0\">{this.props.title}</h2>\r\n                                <ol className=\"breadcrumb d-flex justify-content-center\">\r\n                                    <li className=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\r\n                                    <li className=\"breadcrumb-item\"><a href=\"#\">{this.props.subpage}</a></li>\r\n                                    <li className=\"breadcrumb-item active\">{this.props.page}</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://my-json-server.typicode.com/themeland/netstorm-json/explore\";\r\n\r\nclass ExploreTwo extends Component {\r\n    state = {\r\n        data: {},\r\n        exploreData: []\r\n    }\r\n    componentDidMount() {\r\n        axios.get(`${BASE_URL}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                    exploreData: res.data.exploreData\r\n                })\r\n                // console.log(this.state.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                                <div className=\"intro-content\">\r\n                                    <span>{this.state.data.preHeading}</span>\r\n                                    <h3 className=\"mt-3 mb-0\">{this.state.data.heading}</h3>\r\n                                </div>\r\n                                <div className=\"intro-btn\">\r\n                                    <a className=\"btn content-btn\" href=\"/explore-1\">{this.state.data.btnText}</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items\">\r\n                        {this.state.exploreData.map((item, idx) => {\r\n                            return (\r\n                                <div key={`edt_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"image-over\">\r\n                                            <a href=\"/item-details\">\r\n                                                <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                            </a>\r\n                                        </div>\r\n                                        {/* Card Caption */}\r\n                                        <div className=\"card-caption col-12 p-0\">\r\n                                            {/* Card Body */}\r\n                                            <div className=\"card-body\">\r\n                                                <a href=\"/item-details\">\r\n                                                    <h5 className=\"mb-0\">{item.title}</h5>\r\n                                                </a>\r\n                                                <div className=\"seller d-flex align-items-center my-3\">\r\n                                                    <span>Owned By</span>\r\n                                                    <a href=\"/author\">\r\n                                                        <h6 className=\"ml-2 mb-0\">{item.owner}</h6>\r\n                                                    </a>\r\n                                                </div>\r\n                                                <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span>{item.price}</span>\r\n                                                    {/* <span>{item.count}</span> */}\r\n                                                </div>\r\n                                                <a className=\"btn btn-bordered-white btn-smaller mt-3\" href=\"/wallet-connect\"><i className=\"icon-handbag mr-2\" />{item.btnText}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreTwo;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../components/Explore/ExploreTwo';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass ExploreOne extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Explore\" subpage=\"Explore\" page=\"Explore Style 1\" />\r\n                <Explore />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreOne;","/**\r\n * Loader Spinner\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n\r\n\r\n\r\n    return (\r\n        // <div style={{position: 'absolute', backgroundColor: '#0002', width: '100%', height: '100%'}}>\r\n        <Spinner\r\n            animation=\"border\"\r\n            role=\"status\"\r\n            style={{\r\n                height: \"100px\",\r\n                width: \"100px\",\r\n                margin: \"auto\",\r\n                display: \"block\",\r\n                // position: 'absolute',\r\n                // left: 'calc(50% - 50px)',\r\n                // top: 'calc(50% - 50px)'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\nimport swal from 'sweetalert';\r\nimport { Pagination } from 'antd';\r\nimport Loadmore from '../../LoadMore';\r\n\r\nconst GetAllProjects = () => {\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const projects = useSelector(state => {\r\n        return state.projectdetails.projects\r\n    })\r\n\r\n    console.log(projects, 'projects')\r\n\r\n    useEffect(() => {\r\n        dispatch(ProjectList())\r\n    }, [dispatch])\r\n\r\n    const showDeleteHandler = (id) => {\r\n        // debugger\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this project!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    dispatch(DeleteProject(id))\r\n                    swal(\"Poof! Your project has been deleted!\", {\r\n                        icon: \"success\",\r\n                    });\r\n                } else {\r\n                    swal(\"Your project is safe!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    {window.ethereum?.selectedAddress && (\r\n\r\n                                        <h3 className=\"mt-3 mb-0\">My Projects</h3>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {/* <Loadmore data= */}\r\n                            {projects && projects.length ?\r\n                                [...new Map(projects.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                        return (\r\n                                            // <Link key={`edth_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                            <div className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                                {/* <button onClick={() => showDeleteHandler()}>delete</button> */}\r\n                                                <div className=\"card project_cards\">\r\n                                                    <div className=\"image-over relative \">\r\n                                                        {item.is_nft_mintted !== 1 &&\r\n\r\n                                                            <i class=\"fa-sharp fa-solid fa-trash\" onClick={() => showDeleteHandler(item.id)}></i>\r\n                                                        }\r\n                                                        <Link to={`/projnftdetails/${item.slug}`}>\r\n                                                            {/* <i class=\"fa-solid fa-pen\" ></i> */}\r\n                                                            <img className=\"card-img-top\" src={item?.image} alt={item.nft_data.description} />\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                    <div className='token'>\r\n                                                        <span></span>\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            {/* <a> */}\r\n                                                            <h5 className=\"mb-0 pb-0 break-all\">{item.title.slice(0, 16)}</h5>\r\n                                                            {/* </a> */}\r\n                                                            <div className=\"seller d-flex align-items-center my-2\">\r\n                                                                <span>Owned By</span>\r\n\r\n                                                                <h6 className=\"ml-2 mb-0\">You</h6>\r\n\r\n                                                            </div>\r\n                                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                                <span>{item.price} MATIC</span>\r\n                                                                {item?.number_of_nft == 1 ? (\r\n\r\n                                                                    <span>{item?.number_of_nft} NFT </span>\r\n                                                                ) : (\r\n                                                                    // <><span>{item.nft_data.length} NFTs </span>\r\n                                                                    <span> +{item.number_of_nft} NFTs </span>\r\n                                                                )}\r\n                                                            </div>\r\n\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                            {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            // </Link>\r\n                                        )\r\n                                    }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    {window.ethereum?.selectedAddress ? (\r\n                                        <h2 className='allproj2'>\r\n                                            You have no projects yet, <Link to=\"/create\">create one now</Link>\r\n                                        </h2>\r\n\r\n                                    ) : (\r\n                                        <h2 className='allproj2'>\r\n                                            Please connect you wallet to continue, <Link to=\"/wallet-connect\">Connect</Link>\r\n                                        </h2>\r\n                                    )}\r\n                                </div>\r\n                            }\r\n                            {/* /> */}\r\n                        </div>\r\n                        {/* <Pagination defaultCurrent={6} total={500} /> */}\r\n                    </div>\r\n                </section>\r\n            )\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllProjects; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport GetAllProjects from '../components/Explore/ProjectList';\r\n\r\nconst ExploreTwo = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExploreTwo;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport AuctionsOne from '../components/Auctions/AuctionsOne';\r\n\r\nconst LatestProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AuctionsOne type=\"LatestProjects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LatestProjects;","import React, { Component } from 'react';\r\nimport AuctionsOne from '../Auctions/AuctionsOne';\r\n\r\n\r\n\r\nconst LatestProject = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <AuctionsOne />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default LatestProject;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport LatestProject from '../components/Explore/LatestProjects';\r\n\r\nconst Auctions = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LatestProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Auctions;","\r\nimport React, { useState } from \"react\";\r\n\r\nconst ReadMore = ({ data }) => {\r\n\r\n    const [isReadMore, setIsReadMore] = useState(true);\r\n    console.log(data)\r\n    const toggleReadMore = () => {\r\n        setIsReadMore(!isReadMore);\r\n    };\r\n\r\n    return (\r\n        <p className=\"text\">\r\n            <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: isReadMore ? data?.slice(0, 1000) : data }} />\r\n            {data?.length > 1000 &&\r\n\r\n                <span onClick={toggleReadMore} className=\"read-or-hide\">\r\n                    {isReadMore ? \"...read more\" : \" show less\"}\r\n                </span>\r\n            }\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default ReadMore","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst FundTransdataTable = () => {\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [expandIconPosition] = useState('end');\r\n\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n\r\n\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg class=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></circle><path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {funddetail?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                    {funddetail?.payment_history?.length == 0 &&\r\n                        <div className='nothing'>\r\n                            No matching records found\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FundTransdataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst UserTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const location = useLocation()\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {userdet?.payment_history?.map((items) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td>{items.price}</td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td>{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n                {userdet?.payment_history?.length == 0 &&\r\n                    <div className='nothing'>\r\n                        No matching records found\r\n                    </div>\r\n                }\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default UserTransdataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst UserdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details' >\r\n                        <tbody >\r\n                            <tr>\r\n                                <td><span>Name </span> <span>{userdet.username}</span></td>\r\n                                <td><span>Wallet ID</span>  <span>{userdet.wallet_id}</span></td>\r\n                                <td><span>Number of Referrals </span> <span>{userdet.referrers}</span></td>\r\n                                <td><span>Referral Amount </span> <span>{userdet.referral_amount} KARMATICA token</span></td>\r\n                                <td><span>Fundraised </span> <span>{userdet.total_fundraised} MATIC</span></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default UserdataTable","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CategoriesAction, CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\nimport { useParams } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ProjDetailPopup(props) {\r\n    const editor = useRef(null);\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n    const id = useParams()\r\n    const [type, setType] = useState()\r\n    const { countries } = useSelector(state => state.countries)\r\n    const [country, setCountry] = useState('')\r\n    console.log('country', country)\r\n    const [state, setState] = useState('')\r\n    const [city, setCity] = useState('')\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n    }, [])\r\n    const handleChangeCountry = (event) => {\r\n        event?.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // debugger\r\n        event.preventDefault()\r\n        // 👇 Get input value from \"event\"\r\n        setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n    };\r\n    const handleChangeCity = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCity(event?.currentTarget?.value);\r\n    };\r\n    const cities = useSelector(state => {\r\n        // debugger\r\n        return state.countries.city\r\n    })\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            setDescription(projdetail.description)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n        }\r\n    }, [projdetail]);\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n        dispatch(UpdateProject(props, formData))\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Project name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Project name\"\r\n                                    {...register(\"title\", { required: true })}\r\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <div className=\"col-6 col-12\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    placeholder=\"Web Address\"\r\n                                    {...register(\"address\", { required: true })}\r\n                                    aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Country</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"country\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"country\"\r\n                                            {...register(\"country\", { required: true })}\r\n                                            // value={value}\r\n                                            // defaultValue={value}\r\n                                            onChange={handleChangeCountry}\r\n                                        >\r\n                                            aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                Select your country</option>\r\n                                            {countries?.data?.data?.map((option, key) => (\r\n                                                <>\r\n                                                    <option key={key.id} value={option.id}  >\r\n                                                        {option.name}\r\n                                                    </option>\r\n                                                </>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>State or Province</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"state\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"state\"\r\n                                            {...register(\"state\", { required: true })}\r\n                                            // defaultValue={value}\r\n                                            // value={value}\r\n                                            onChange={handleChangeState} >\r\n                                            aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }} >Select your state</option>\r\n                                            {states?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id} >\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>City or Region</label>\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"city\"\r\n                                    // selected={country}\r\n                                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}\r\n                                            // value={value}\r\n                                            onChange={handleChangeCity}\r\n                                        >\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                />\r\n                                {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                {projdetail.type == 2 ? (\r\n                                    <label>Price</label>\r\n                                ) : (\r\n                                    <label>Price per NFT</label>\r\n                                )}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    placeholder=\"Price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    defaultValue={1}\r\n                                    // disabled={type == 1}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    min={1}\r\n                                    max={10}\r\n                                    {...register(\"number_of_nft\", { required: true })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        {projdetail.type == 2 && (\r\n                            <><div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // min={disablePastDate()}\r\n                                        // placeholder=\"Start date\"\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                        aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                    {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                </div>\r\n                            </div><div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Campaign End Date</label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control\"\r\n                                            name=\"end_date\"\r\n                                            min={disablePastDate()}\r\n                                            // placeholder=\"End date\"\r\n                                            {...register(\"end_date\", { required: true })}\r\n                                            aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                        {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                    </div>\r\n                                </div></>\r\n                        )}\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"annual_revenue_range\"\r\n                                    // defaultValue={}\r\n                                    {...register(\"category_id\")}>\r\n                                    {cat?.map((option, key) => (\r\n                                        <option key={key.id} value={option.id}>\r\n                                            {option.title}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\nexport default ProjDetailPopup","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { LatestProjectDetail, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { ProgressBar, Table } from 'react-bootstrap';\r\nimport ProjDetailPopup from '../Create/projectDetailpopup';\r\nimport dayjs from 'dayjs';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\nconst ProjdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [modalShowproj, setModalShowproj] = React.useState(false);\r\n    const { slug } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'userprojdata')\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(latprojdetail, 'userprojdetaaaa')\r\n    // const [projuserID, setProjuserid] = useState()\r\n    // console.log('projjj', projuserID)\r\n    // const projuserid = projdetail?.user_data?.map((item) => {\r\n    //     return (\r\n    //         setProjuserid(item.user_id)\r\n    //     )\r\n    // })\r\n    console.log(userdet.user_id, 'uid')\r\n    useEffect(() => {\r\n        dispatch(LatestProjectDetail(slug))\r\n        dispatch(ProjectDetail(slug))\r\n        dispatch(PopularCollectionActionDetails(props.idx))\r\n    }, [slug])\r\n\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    const location = useLocation();\r\n    const date1 = new Date(coll?.updated_at)\r\n    const date2 = new Date()\r\n    const time_difference = date2.getTime() - date1.getTime();\r\n    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n    console.log('days', days_difference)\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive className='nfts_details'>\r\n                        {projdetail?.user_data?.user_id === userdet?.user_id && localStorage.getItem('authToken') &&\r\n\r\n                            <div >\r\n                                <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                    setModalShowproj(true)}></i>\r\n                                <ProjDetailPopup\r\n                                    // debugger\r\n                                    id={props.id}\r\n                                    show={modalShowproj}\r\n                                    onHide={() => setModalShowproj(false)} />\r\n                                {/* <a className=\"\"> <Link to={`/updateproject/${projdetail.id}`} style={{ color: '#FFF' }}> <i class=\"fa-solid fa-pen\" ></i></Link></a> */}\r\n\r\n                                {/* <a className=\"\" onClick={() => deleteHandler(projdetail.id)} style={{ color: '#FFF' }}> <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                {/* </a> */}\r\n                            </div>\r\n                        }\r\n                        <tbody className=''>\r\n                            {/* {projdetail.nft_data?.map((items) => {\r\n                                return ( */}\r\n                            <tr>\r\n\r\n                                {/* {projdetail?.country_name?.map((item) => {\r\n                                    return (\r\n\r\n                                        <tr>Country : {item.name}</tr>\r\n                                    )\r\n                                })} */}\r\n                                {location.pathname === `/projects/${slug}` ? (\r\n\r\n                                    <>\r\n                                        {/* <td><span>Owned By:</span> <span>{latprojdetail?.user_data?.username}</span> </td> */}\r\n                                        {/* <td><span>Total NFT's:</span> <span>{latprojdetail?.number_of_nft}</span></td> */}\r\n                                        <td><span>Chain </span> <span>Polygon (Matic)</span></td>\r\n                                        <td><span>Created  </span> <span> {dayjs(latprojdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\r\n                                        <td><span>Country </span> <span>{latprojdetail?.country_name?.name}</span></td>\r\n                                        <td><span>State</span>  <span>{latprojdetail?.state_name?.name}</span> </td>\r\n                                        <td><span>City</span>  <span>{latprojdetail?.city_name?.name}</span> </td>\r\n                                        <td><span>Project Type</span>  <span>{latprojdetail?.type === \"1\" ? \"Single\" : 'Campaign'}</span> </td>\r\n                                        {latprojdetail.type == 2 &&\r\n\r\n                                            <><td><span>Start Date</span>  <span>{latprojdetail?.start_date}</span> </td>\r\n                                                <td><span>End Date </span> <span>{latprojdetail?.end_date}</span> </td></>\r\n                                        }\r\n                                        <td><span>Price </span> <span> {latprojdetail?.price} </span> </td></>\r\n                                ) : (\r\n                                    <>\r\n                                        {location.pathname === `/popularcollection/details/${slug}` ? (\r\n                                            <>\r\n\r\n                                                <td><span>Number of NFTs </span><span> {coll?.nft_data?.length}</span></td>\r\n                                                <td><span>Chain </span> <span>Polygon (Matic)</span></td>\r\n                                                <td><span>Created at</span>  <span>{days_difference} days ago</span> </td>\r\n                                                <td><span>Category</span>  <span>{coll?.category}</span> </td>\r\n                                            </>\r\n                                        ) : (\r\n\r\n                                            <>\r\n                                                <td><span>Chain: </span> <span>Polygon (Matic)</span></td>\r\n                                                <td><span>Created : </span> <span> {dayjs(projdetail?.created_at).format(\"DD MMM YYYY\")} </span></td>\r\n                                                <td><span>Country </span> <span>{projdetail.country_name?.name}</span></td>\r\n                                                <td><span>State</span>  <span>{projdetail.state_name?.name}</span> </td>\r\n                                                <td><span>City</span>  <span>{projdetail.city_name?.name}</span> </td>\r\n                                                <td><span>Project Type</span>  <span>{projdetail?.type === \"1\" ? \"Single\" : 'Campaign'}</span> </td>\r\n                                                {projdetail.type == 2 &&\r\n\r\n                                                    <><td><span>Start Date</span>  <span>{projdetail.start_date}</span> </td>\r\n                                                        <td><span>End Date </span> <span>{projdetail.end_date}</span> </td></>\r\n                                                }\r\n                                                <td><span>Price </span> <span> {projdetail.price} </span> </td>\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjdataTable","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst LatNftdataTable = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { slug } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail.nft_data, 'projdatanft')\r\n\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(ProjectDetail(slug))\r\n    }, [slug])\r\n\r\n    return (\r\n        <div className='position-relative'>\r\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\" >\r\n                    <Table responsive >\r\n                        <thead>\r\n\r\n\r\n                            <tr>\r\n\r\n                                <th>Item</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n\r\n\r\n                        </thead>\r\n                        <tbody className='img_table'>\r\n                            {projdetail?.project_activity && projdetail?.project_activity?.length ?\r\n                                [...new Map(projdetail?.project_activity.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                        return (\r\n                                            <tr className='contract-address'>\r\n\r\n                                                <td><img\r\n                                                    src={item.image}\r\n                                                    className=\"rounded-circle mr-2\"\r\n                                                    alt=\"Avatar\"\r\n                                                />{item.nft_title.slice(0, 13)}...</td>\r\n                                                <td className='referal'>{item.price}<img src='../../img/image14.png' /></td>\r\n                                                <td>{item.pay_from.slice(0, 4)}...{item.pay_from.slice(35, 44)}</td>\r\n                                                <td>{item.pay_to.slice(0, 4)}...{item.pay_to.slice(35, 44)}</td>\r\n                                                <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/tx/${item?.txd_id}`} >{item.txd_id.slice(0, 4)}...{item.txd_id.slice(35, 44)}</a></td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) :\r\n                                // <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                <>\r\n\r\n                                </>\r\n                            }\r\n                        </tbody>\r\n                        {/* <div className='nothing col-spam-5' colspan=\"5\">\r\n                            No matching records found\r\n                        </div> */}\r\n                    </Table>\r\n                    <div className='nothing'>\r\n                        {projdetail?.project_activity == 0 &&\r\n                            <span> No matching records found</span>\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftdataTable","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { LatestProjectDetail } from '../../redux/Actions/projectAction';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nconst ProjNFTS = (props) => {\r\n    const dispatch = useDispatch()\r\n \r\n    const { slug } = useParams();\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(latprojdetail, \"prjj\")\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    useEffect(() => {\r\n        // \r\n        dispatch(LatestProjectDetail(slug))\r\n    }, [slug])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container\">\r\n                <div className='intro row m-0'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {latprojdetail?.nft_data?.map((item, idx) => {\r\n                       \r\n                        return (\r\n                            \r\n                                \r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.slug}?refid=${props.refid}`}>\r\n                                            {item.extention === 'modal' || item.extention === 'Player' ? (\r\n                                                <img className=\"card-img-top\" src={item.preview_imag} alt=\"\" />\r\n                                            ) : (\r\n                                                <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                            )}\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0 nfts-detail\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"mb-0\">{item.title.slice(0, 16)} ...</h5>\r\n                                            <div className=\"card-bottom mt-1\">\r\n                                                <p dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                                            </div>\r\n                                            <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\r\n                                                {item.sold_nft == 1 ? (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>SOLD OUT</button></a>\r\n                                                ) : (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={`/nftprojdetails/${item.slug}?refid=${props.refid}`} style={{ color: \"white\" }}>Invest</Link></button></a>\r\n                                                )}\r\n                                                <a> <img className=\"mr-1\" src='../img/image14.png' />{item.price}</a>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\nexport default ProjNFTS;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { getPopularCollectiondetails } from '../../redux/Slices/popularCollectionSlice';\r\nconst CollectionNFTS = () => {\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams();\r\n    const collNft = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    console.log(collNft, \"collNft\")\r\n    useEffect(() => {\r\n        dispatch(getPopularCollectiondetails())\r\n    }, [dispatch])\r\n    return (\r\n        <section className=\"live-auctions-area single_project-detail\">\r\n            <div className=\"container p-0\">\r\n                <div className='intro row ml-0 mr-0 mt-3'>\r\n                    <div className=\"intro-content\">\r\n                        <span style={{ marginLeft: \"0px\" }}>NFTs</span>\r\n                        <h3 className=\"w-full mb-0\">NFTs</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {collNft?.nft_data?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/nftprojdetails/${item.slug}`}>\r\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0 nfts-detail\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"mb-0\">{item.title.slice(0, 16)} ...</h5>\r\n                                            <div className=\"card-bottom mt-1\">\r\n                                                <p dangerouslySetInnerHTML={{ __html: item.description.slice(0, 50) }} />\r\n                                            </div>\r\n                                            <div className='d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price'>\r\n                                                {item.sold_nft == 1 ? (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled><i className=\"icon-handbag mr-1\" />SOLD OUT</button></a>\r\n                                                ) : (\r\n                                                    <a> <button className='btn py-2 ml-lg-auto btn-bordered-white'><i className=\"icon-handbag mr-1\" /> <Link to={`/nftprojdetails/${item.slug}`} style={{ color: \"white\" }}>Invest</Link></button></a>\r\n                                                )}\r\n                                                <a> <img className=\"mr-1\" src='../../img/image14.png' />{item.price}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\nexport default CollectionNFTS;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { Nftprice, Nftdeatil } from './nftprice'\r\nimport { useParams } from 'react-router';\r\nimport { DeleteProject, GetNftwol, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport ReadMore from '../../readMore';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport UserdataTable from '../AuthorProfile/userTransTable';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport ProjdataTable from './projDetailtable';\r\nimport LatNftdataTable from './latProjNftdata';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { getPopularCollection } from '../../redux/Slices/popularCollectionSlice';\r\nimport { PopularCollectionActionDetails } from '../../redux/Actions/popularAction';\r\nimport CollectionNFTS from '../Collections/collectionNfts';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst CollectionDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const slug = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionActionDetails(slug))\r\n\r\n\r\n    }, [slug])\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state?.collection?.collectiondetail\r\n    })\r\n    console.log(coll, 'coll')\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail collection_detail\">\r\n            <div className=\"container\">\r\n                <div className='col-12 col-lg-12 '>\r\n                    <span className=\"p-0 title_main \">{coll?.title}</span>\r\n                </div>\r\n                <div className=\"row\">\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n\r\n                                <img src={coll?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className='col-12 col-lg-4 '>\r\n                        <div class=\"user-description mt-4 mt-sm-0\">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={coll?.description?.slice(0, 505)} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: coll.description }} /> */}\r\n                        </div>\r\n\r\n                        {/* <div className='content content_project'>\r\n                        <div className='card no-hover position-relative'>\r\n                        <div><span className='boldertext'>Number of NFTs :</span><span> {coll?.nft_data?.length}</span></div>\r\n                        <div><span className='boldertext'>Chain :</span> <span>Polygon (Matic)</span></div>\r\n                        <div><span className='boldertext'>Created at:</span>  <span> {days_difference}12  days ago</span></div>\r\n                        <div><span className='boldertext'>Category:</span>  <span>{coll?.category}</span></div>\r\n                        </div>\r\n\r\n                    </div> */}\r\n                        {/* \r\n                        <div className='table-main-detail mt-3 mt-lg-0 position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                                idx={slug}\r\n                            />\r\n                        </div> */}\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {/* <div className=\"col-lg-4 col-12 mt-3 mt-lg-0\">\r\n                        <div>\r\n                            <div className=\" mb-3\">\r\n\r\n\r\n\r\n\r\n\r\n                                {coll?.user_invest?.slice(0, 3)?.map((items) => {\r\n                                    const date1 = new Date(items.updated_at)\r\n                                    const date2 = new Date()\r\n                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                    console.log('days', days_difference)\r\n                                    return (\r\n\r\n                                        <ul className=\"m-0 custom_lis pl-0\">\r\n                                            <li>\r\n                                                <div className='lorem_done p-0'>\r\n                                                    <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                    </svg>\r\n                                                    </span>\r\n\r\n                                                   \r\n                                                </div>\r\n                                            </li>\r\n\r\n\r\n                                        </ul>\r\n\r\n                                    )\r\n                                })}\r\n\r\n\r\n                                <p className='see_all'>See all</p>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-12 col-lg-12 mt-3\">\r\n                        {/* <div className='row'>\r\n                            <div className='filter'>\r\n                                <div className='filter-main-name'>\r\n                                    <div>Short</div>\r\n                                    <div>\r\n                                        <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"0\" fill=\"none\" width=\"24\" height=\"24\"/><g><path d=\"M7 10l5 5 5-5\" fill=\"#fff\"/></g></svg>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='filter-main'>\r\n                                    <ul>\r\n                                        <li>Latest</li>\r\n                                        <li>Oldest</li>\r\n                                        <li>Price:Low to Heigh</li>\r\n                                        <li>Price:Heigh to Low </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n\r\n\r\n\r\n                        {/* <div>\r\n\r\n                        <ProjdataTable\r\n                            idx={id}\r\n                        //  id={id}\r\n                        />\r\n                    </div> */}\r\n\r\n                        {/* </div> */}\r\n\r\n                        {/* <div className='col-12'>\r\n                        <div className='mt-3'>\r\n                            <div className='table-detail'>\r\n                                <LatNftdataTable />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div> */}\r\n\r\n                        <div className=\" col-12 mt-3 p-0\">\r\n                            <div className=\"items mt-0 explore-items p-0\">\r\n                                <CollectionNFTS />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport default CollectionDetails;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Explore/popularDetails';\r\n\r\nconst ItemDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <CollectionDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ItemDetails;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Help Center\",\r\n    heading: \"How can we help you?\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        icon: \"icon icon-plane text-effect\",\r\n        title: \"Getting Started\",\r\n        content: \"Learn how to create an account, set up your wallet, and what you can do on NetStorm\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        icon: \"icon icon-note text-effect\",\r\n        title: \"Creating\",\r\n        content: \"Learn how to create your very first NFT and how to create your NFT collections so you can begin selling and sharing\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        icon: \"icon icon-handbag text-effect\",\r\n        title: \"Buying\",\r\n        content: \"Learn how to purchase your first NFT and understand gas fees and what's gas free on NetStorm\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        icon: \"icon icon-chart text-effect\",\r\n        title: \"Selling\",\r\n        content: \"Learn how list your NFTs for sale and understand the different ways to list your NFTs\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        icon: \"icon icon-link text-effect\",\r\n        title: \"Partners\",\r\n        content: \"Learn how you can partner with us to showcase your NFT drops\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        icon: \"icon icon-flag text-effect\",\r\n        title: \"Developers\",\r\n        content: \"Learn how you can develop with NetStorm &amp; sell them on Marketplace\"\r\n    }\r\n]\r\n\r\nclass HelpCenter extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"help-center-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center items\">\r\n                        {this.state.data.map((item, idx) => {\r\n                            return (\r\n                                <div key={`hd_${idx}`} className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                    {/* Help Card */}\r\n                                    <div className=\"card help-card\">\r\n                                        <a className=\"d-block text-center\" href=\"#\">\r\n                                            <i className={item.icon} />\r\n                                            <h4>{item.title}</h4>\r\n                                            <p>{item.content}</p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"FAQ\",\r\n    heading: \"Frequently Asked Questions\",\r\n    content: \"Mint NFTs that are based on real-life projects or events related to important causes.\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        btnClass: \"btn d-block text-left w-100 py-4\",\r\n        target: \"#collapseOne\",\r\n        quote: \"How do I create an NetStorm account?\",\r\n        contentId: \"collapseOne\",\r\n        contentClass: \"collapse show\",\r\n        content: \"The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text.\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseTwo\",\r\n        quote: \"Where can I see transaction details?\",\r\n        contentId: \"collapseTwo\",\r\n        contentClass: \"collapse\",\r\n        content: \"Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source.\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseThree\",\r\n        quote: \"How do royalties work on NetStorm?\",\r\n        contentId: \"collapseThree\",\r\n        contentClass: \"collapse\",\r\n        content: \"It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFour\",\r\n        quote: \"How do I list an NFT to sell?\",\r\n        contentId: \"collapseFour\",\r\n        contentClass: \"collapse\",\r\n        content: \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        btnClass: \"btn d-block text-left w-100 collapsed py-4\",\r\n        target: \"#collapseFive\",\r\n        quote: \"How do I create an NFT?\",\r\n        contentId: \"collapseFive\",\r\n        contentClass: \"collapse\",\r\n        content: \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text.\"\r\n    }\r\n]\r\n\r\nclass Faq extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"faq-area pt-0\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span>{this.state.initData.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{this.state.initData.heading}</h3>\r\n                                <p>{this.state.initData.content}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* FAQ Content */}\r\n                            <div className=\"faq-content\">\r\n                                {/* Netstorm Accordion */}\r\n                                <div className=\"accordion\" id=\"netstorm-accordion\">\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <div className=\"col-12 col-md-10\">\r\n                                            {/* Single Accordion Item */}\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <div key={`fd_${idx}`} className=\"single-accordion-item p-3\">\r\n                                                        {/* Card Header */}\r\n                                                        <div className=\"card-header bg-inherit border-0 p-0\">\r\n                                                            <h2 className=\"m-0\">\r\n                                                                <button className={item.btnClass} type=\"button\" data-toggle=\"collapse\" data-target={item.target}>\r\n                                                                    {item.quote}\r\n                                                                </button>\r\n                                                            </h2>\r\n                                                        </div>\r\n                                                        <div id={item.contentId} className={item.contentClass} data-parent=\"#netstorm-accordion\">\r\n                                                            {/* Card Body */}\r\n                                                            <div className=\"card-body py-3\">\r\n                                                                {item.content}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Faq;","import React, { Component } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb';\r\nimport Help from '../components/HelpCenter/HelpCenter';\r\nimport Faq from '../components/Faq/Faq';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nclass HelpCenter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Breadcrumb title=\"Help Center\" subpage=\"Community\" page=\"Help Center\" />\r\n                <Help />\r\n                <Faq />\r\n                <Footer />\r\n                <ModalSearch />\r\n                <ModalMenu />\r\n                <Scrollup />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HelpCenter;","import { React } from 'react';\r\nimport ReactImagePickerEditor from 'react-image-picker-editor';\r\n\r\nimport 'react-image-picker-editor/dist/index.css'\r\n\r\nconst UploadImage = ({ initalImag, imageSrc, setImageSrc, show = true }) => {\r\n  const config2 = {\r\n    borderRadius: '8px',\r\n    language: 'en',\r\n    width: '330px',\r\n    height: '250px',\r\n    objectFit: 'contain',\r\n    compressInitial: null,\r\n    hideDownloadBtn: true\r\n  };\r\n\r\n  const initialImage = initalImag;\r\n\r\n  return <div className='image-container'>\r\n    < ReactImagePickerEditor\r\n      config={config2}\r\n      // initialImage={im}\r\n      imageSrcProp={initialImage}\r\n      imageChanged={(newDataUri) => { setImageSrc(newDataUri) }} />\r\n    {/* <br /> <br />\r\n    <hr />\r\n    <br /> */}\r\n    {/* <p>Image preview:</p> */}\r\n    {/* {imageSrc && <img src={imageSrc} alt=\"example\" style={{ maxHeight: '900px', maxWidth: '100%', objectFit: 'contain', background: 'black' }} />}\r\n    {!imageSrc && <h2 style={{ textAlign: 'center', color: '#FFF' }}>No image loaded yet</h2>} */}\r\n\r\n  </div>\r\n}\r\n\r\nexport default UploadImage;\r\n\r\n\r\n","export const dataURLtoBlob = (dataurl) => {\r\n    var arr = dataurl?.split(','), mime = arr[0]?.match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr?.length, u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new Blob([u8arr], { type: mime });\r\n}\r\n\r\nexport const blobToDataURl = (blob) => {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = _e => resolve(reader.result);\r\n        reader.onerror = _e => reject(reader.error);\r\n        reader.onabort = _e => reject(new Error(\"Read aborted\"));\r\n        reader.readAsDataURL(blob);\r\n    });\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\n\r\nfunction Banner(props) {\r\n\r\n    const [imageSrc, setImageSrc] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submit = () => {\r\n        // debugger\r\n        const formData = new FormData()\r\n\r\n        const image = dataURLtoBlob(imageSrc)\r\n        formData.append('image', image)\r\n        dispatch(UpdateBanner(formData, props))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Project Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default Banner","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { UpdateBanner } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\nfunction AvatarUpload(props) {\r\n    const [imageSrc, setImageSrc] = useState('');\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const avatar = dataURLtoBlob(imageSrc)\r\n        formData.append('avatar', avatar)\r\n        formData.append('username', userdet.username)\r\n        dispatch(UpdateProfileAction(formData, props))\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    User Image\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\nexport default AvatarUpload","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport UploadImage from '../../shared/Upload'\r\nimport { dataURLtoBlob } from '../../utils/blobfromurl'\r\nimport { GetUserAction, UpdateProfileAction } from '../../redux/Actions/authAction';\r\nfunction BannerUpload(props) {\r\n    const [imageSrc, setImageSrc] = useState('');\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet.avatar)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n    }, [])\r\n    const submit = () => {\r\n        const formData = new FormData()\r\n        const banner_image = dataURLtoBlob(imageSrc)\r\n        formData.append('username', userdet.username)\r\n        formData.append('banner_image', banner_image)\r\n        dispatch(UpdateProfileAction(formData, props))\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Profile Banner\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <>\r\n                    <div className=\"banner_img\">\r\n                        <div>\r\n                            <UploadImage\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                            />\r\n                        </div>\r\n                        <Button onClick={submit} className=\"btn btn-primary banner-update\">Update</Button>\r\n                    </div>\r\n                </>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\nexport default BannerUpload","import React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GetUserAction, UpdateProfileAction } from \"../../redux/Actions/authAction\";\r\nimport { useEffect } from \"react\";\r\nimport UserTransdataTable from \"./userTransTable\";\r\nimport UserdataTable from \"./userDetails\";\r\nimport Banner from \"../Create/editBanner\";\r\nimport AvatarUpload from \"./avatarUpload\";\r\nimport BannerUpload from \"./bannerUpload\";\r\nimport { Link } from \"react-router-dom\";\r\nconst AuthorProfile = () => {\r\n    const [modalSho, setModalSho] = React.useState(false);\r\n    const [modalShowavatar, setModalShowavatar] = React.useState(false);\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    console.log(userdet, 'user')\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const dispatch = useDispatch()\r\n    const onSubmit = (data) => {\r\n        const formData = new FormData()\r\n        formData.append('username', data.username)\r\n        formData.append('email', data.email)\r\n        dispatch(UpdateProfileAction(formData))\r\n    }\r\n    useEffect(() => {\r\n        dispatch(GetUserAction());\r\n    }, []);\r\n    useEffect(() => {\r\n        if (userdet && Object.keys(userdet).length) {\r\n            setValue(\"avatar\", userdet.avatar);\r\n            setValue(\"username\", userdet.username);\r\n            setValue(\"email\", userdet.email);\r\n        }\r\n    }, [userdet]);\r\n    return (\r\n        <div className=\"col-12\">\r\n            <div className=\"container\">\r\n                {/* <h3 class=\"p-0\">Author Name </h3> */}\r\n                <div className=\"row pt-0\">\r\n                    <div className='col-md-8'>\r\n                        <div className=\"banner item-thumb text-center\">\r\n                            <div>\r\n                                <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                    onClick={() => setModalSho(true)}\r\n                                ></i>\r\n                                <BannerUpload\r\n                                    show={modalSho}\r\n                                    onHide={() => setModalSho(false)} />\r\n                            </div>\r\n                            <img src={userdet.banner_image} alt=\"first nft\" />\r\n                        </div>\r\n                        <div className=\"table-detail mt-4\">\r\n                            <UserdataTable />\r\n                        </div>\r\n                        <div className=\"profile_detail mt-4 position-relative\">\r\n                            <UserTransdataTable />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4 mt-4 mt-lg-0\">\r\n                        <div className=\"profile_main_right card wrap_card no-hover text-center\">\r\n                            <div className=\"image-over\">\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\"\r\n                                        onClick={() => setModalShowavatar(true)}\r\n                                    ></i>\r\n                                    <AvatarUpload\r\n                                        show={modalShowavatar}\r\n                                        onHide={() => setModalShowavatar(false)} />\r\n                                </div>\r\n                                <img className=\"card-img-top\" src={userdet.avatar} alt=\"\" />\r\n                            </div>\r\n                            {/* Card Caption */}\r\n                            <div className=\"card-caption col-12 p-0\">\r\n                                {/* Card Body */}\r\n                            </div>\r\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover p-0\">\r\n                                <div className=\"card-body\">\r\n                                    <from className=\"Edite_able\" >\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                style={{ textTransform: 'none' }}\r\n                                                name=\"username\"\r\n                                                placeholder=\"username\"\r\n                                                {...register(\"username\", { required: true })}\r\n                                                aria-invalid={errors.username ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.username?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">username is required</p>}\r\n                                            <i class=\"fa-solid fa-pen\"></i>\r\n                                        </label>\r\n                                        <label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control \"\r\n                                                name=\"email\"\r\n                                                disabled={userdet.role == 3 ? true : false}\r\n                                                placeholder=\"email\"\r\n                                                {...register(\"email\")}\r\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {userdet.role == 2 &&\r\n                                                <i class=\"fa-solid fa-pen\"></i>\r\n                                            }\r\n                                        </label>\r\n                                        <button className=\"btn btn-bordered-white btn-smaller\" type=\"submit\" >\r\n                                            Update\r\n                                        </button>\r\n                                        <div>\r\n                                            <br />\r\n                                            {userdet.role == 3 ? (\r\n                                                <>You are logged in as a Creator/merchant<br />\r\n                                                    <span>click here to <Link to=\"/create\">create project</Link></span></>\r\n                                            ) : (\r\n                                                <span>You are logged in as a Buyer</span>\r\n                                            )}\r\n                                        </div>\r\n                                    </from>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\" \"}\r\n            </div>\r\n            {\" \"}\r\n        </div>\r\n    );\r\n};\r\nexport default AuthorProfile;","import React, { Component } from 'react';\r\n\r\nconst initData = {\r\n    pre_heading: \"Explore\",\r\n    heading: \"Exclusive Digital Assets\",\r\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n    filter_1: \"All\",\r\n    filter_2: \"Art\",\r\n    filter_3: \"Music\",\r\n    filter_4: \"Collectibles\",\r\n    filter_5: \"Sports\"\r\n}\r\n\r\nconst data = [\r\n    {\r\n        id: \"1\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_1.jpg\",\r\n        author: \"/img/avatar_1.jpg\",\r\n        title: \"Virtual Worlds\",\r\n        content: \"ERC-729\",\r\n        price: \"4.37 BNB\",\r\n        likes: \"154\"\r\n    },\r\n    {\r\n        id: \"2\",\r\n        group: '[\"music\"]',\r\n        img: \"/img/auction_2.jpg\",\r\n        author: \"/img/avatar_2.jpg\",\r\n        title: \"Walking On Air\",\r\n        content: \"ERC-543\",\r\n        price: \"2.37 BNB\",\r\n        likes: \"74\"\r\n    },\r\n    {\r\n        id: \"3\",\r\n        group: '[\"music\",\"collectibles\"]',\r\n        img: \"/img/auction_3.jpg\",\r\n        author: \"/img/avatar_3.jpg\",\r\n        title: \"Trading Cards\",\r\n        content: \"ERC-932\",\r\n        price: \"1.89 BNB\",\r\n        likes: \"\"\r\n    },\r\n    {\r\n        id: \"4\",\r\n        group: '[\"music\",\"sports\",\"art\",\"collectibles\"]',\r\n        img: \"/img/auction_4.jpg\",\r\n        author: \"/img/avatar_4.jpg\",\r\n        title: \"Sports\",\r\n        content: \"ERC-250\",\r\n        price: \"0.74 BNB\",\r\n        likes: \"184\"\r\n    },\r\n    {\r\n        id: \"5\",\r\n        group: '[\"sports\",\"art\",\"music\"]',\r\n        img: \"/img/auction_5.jpg\",\r\n        author: \"/img/avatar_5.jpg\",\r\n        title: \"Cartoon Heroes\",\r\n        content: \"ERC-167\",\r\n        price: \"4.23 BNB\",\r\n        likes: \"126\"\r\n    },\r\n    {\r\n        id: \"6\",\r\n        group: '[\"art\",\"sports\"]',\r\n        img: \"/img/auction_6.jpg\",\r\n        author: \"/img/avatar_6.jpg\",\r\n        title: \"Domain Names\",\r\n        content: \"ERC-037\",\r\n        price: \"3.41 BNB\",\r\n        likes: \"23\"\r\n    }\r\n]\r\n\r\nclass ExploreSix extends Component {\r\n    state = {\r\n        initData: {},\r\n        data: []\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            initData: initData,\r\n            data: data\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                    <div className=\"col-12\">\r\n                        {/* Explore Menu */}\r\n                        <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n                            <label className=\"btn active d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"all\" defaultChecked className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_1}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"art\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_2}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"music\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_3}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"collectibles\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_4}</span>\r\n                            </label>\r\n                            <label className=\"btn d-table text-uppercase p-2\">\r\n                                <input type=\"radio\" defaultValue=\"sports\" className=\"explore-btn\" />\r\n                                <span>{this.state.initData.filter_5}</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items explore-items\">\r\n                    {this.state.data.map((item, idx) => {\r\n                        return (\r\n                            <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" data-groups={item.group}>\r\n                                <div className=\"card no-hover text-center\">\r\n                                    <div className=\"image-over\">\r\n                                        <a href=\"/item-details\">\r\n                                            <img className=\"card-img-top\" src={item.img} alt=\"\" />\r\n                                        </a>\r\n                                        {/* Author */}\r\n                                        <a className=\"author\" href=\"/authors\">\r\n                                            <div className=\"author-thumb avatar-lg\">\r\n                                                <img className=\"rounded-circle\" src={item.author} alt=\"\" />\r\n                                            </div>\r\n                                        </a>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body mt-4\">\r\n                                            <a href=\"/item-details\">\r\n                                                <h5 className=\"mb-2\">{item.title}</h5>\r\n                                            </a>\r\n                                            <span>{item.content}</span>\r\n                                            <hr />\r\n                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                <span>{item.price}</span>\r\n                                                <span><i className=\"icon-heart mr-2\" />{item.likes}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExploreSix;","import React, { Component } from 'react';\r\nimport AuthorProfile from '../AuthorProfile/AuthorProfile';\r\nimport Explore from '../Explore/ExploreSix';\r\n\r\nclass Author extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"author-area explore-area author-details-area  popular-collections-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-12\">\r\n                            <AuthorProfile />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Author;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport AuthorProfile from '../components/Author/Author';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst Author = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AuthorProfile />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Author;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ConnectWallet } from './interact';\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginSuccess } from '../../redux/Slices/authSlice';\r\n\r\nconst data = {\r\n    \"preHeading\": \"Wallet Connect\",\r\n    \"heading\": \"Connect your Wallet\",\r\n    \"content\": \"Connect your wallet to continue browsing our website\",\r\n    \"walletData\": [\r\n        {\r\n            \"id\": 1,\r\n            \"img\": \"/img/metamask.png\",\r\n            \"title\": \"MetaMask\",\r\n            \"content\": \"A browser extension with great flexibility. The web's most popular wallet\"\r\n        },\r\n    ]\r\n}\r\n\r\nconst Wallet = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleConnect = async () => {\r\n        const res = await ConnectWallet(\"CREATOR\", dispatch)\r\n\r\n        if (res?.res?.response?.status === 401) {\r\n            history.push('/signup')\r\n        }\r\n        else {\r\n            dispatch(loginSuccess(res?.res))\r\n            localStorage.setItem('authToken', res?.res?.data?.data?.auth_token)\r\n            history.push('/projectlist')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"wallet-connect-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mt-4 pt-2 mb-1\">\r\n                            {/* <span>{data.preHeading}</span> */}\r\n                            <h3 className=\"mt-3 mb-0\">{data.heading}</h3>\r\n                            <p>{data.content}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center items\">\r\n                    {data?.walletData?.map((item, idx) => {\r\n                        return (\r\n                            <div key={`wd_${idx}`} onClick={handleConnect}\r\n                                className=\"col-12 col-md-6 col-lg-4 item\">\r\n                                {/* Single Wallet */}\r\n                                <div className=\"card single-wallet\">\r\n                                    <a className=\"d-block text-center\">\r\n                                        <img className=\"avatar-lg\" src={item.img} alt=\"\" />\r\n                                        <h4 className=\"mb-0\">{item.title}</h4>\r\n                                        <p>{item.content}</p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default Wallet;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Wallet from '../components/Wallet/Wallet';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst WalletConnect = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <Wallet />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default WalletConnect;","import { createContext, useContext, useState } from \"react\";\r\nexport const FormContext = createContext();\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    console.log(data, 'dataaacreate')\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\nexport const useFormData = () => useContext(FormContext);","import React, { Component, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { CategoriesAction, CreateProjectAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport styles from \"./styles/styles.module.scss\"\r\nimport { useFormData } from './Context/context';\r\nimport JoditEditor from 'jodit-react'; import { CityList, CountryList, GetUserAction, StateList } from '../../redux/Actions/authAction';\r\nimport UploadImage from '../../shared/Upload';\r\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\r\nconst Create = ({ current, next, prev }) => {\r\n    const editor = useRef(null);\r\n    const { data, setFormValues, prevValues } = useFormData();\r\n    const [description, setDescription] = useState()\r\n    const [country, setCountry] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const [collection_id, setCollectionId] = useState(0);\r\n    const [usertype, setUserType] = useState(\"1\");\r\n    const [nonft, setNonft] = useState('1')\r\n    function onHandleClick(event) {\r\n        setCollectionId(event.currentTarget.id);\r\n    };\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [countryName, setCountryName] = useState(\" \")\r\n    const { countries } = useSelector(state => state.countries)\r\n    const states = useSelector(state => {\r\n        return state.countries.states\r\n    })\r\n    const cities = useSelector(state => { return state.countries.city })\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({\r\n        mode: \"all\",\r\n    });\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const onSubmit = (data) => {\r\n        const imageBanner = dataURLtoBlob(image)\r\n        setFormValues({ ...data, description, type: usertype, image: imageBanner, imageUri: image });\r\n        next()\r\n    }\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        if (prev) {\r\n            setValue('title', data.title)\r\n            setValue('address', data.address)\r\n            setValue('category_id', data.category_id)\r\n            setValue('country', data.country)\r\n            setValue('state', data.state)\r\n            setValue('city', data.city)\r\n            setValue('description', data.description)\r\n            setValue('price', data.price)\r\n            setValue('type', data.usertype)\r\n            setValue('image', data.imageUri)\r\n            setUserType(data.usertype)\r\n            setCountry(data.country)\r\n            setDescription(data.description)\r\n            setImage(data.imageUri)\r\n            setState(data.state)\r\n            setCity(data.city)\r\n        }\r\n        handleChangeCountry()\r\n    }, [data])\r\n    const cat = useSelector(state => {\r\n        return state?.projectdetails?.categories\r\n    })\r\n    const handleChangeCountry = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        const formData = new FormData()\r\n        if (event?.currentTarget?.value) {\r\n            setCountry(event?.currentTarget?.value);\r\n            formData.append('country_id', event?.currentTarget?.value)\r\n        } else {\r\n            setCountryName(userdet?.organization_detail?.country)\r\n            setCountry(userdet?.organization_detail?.country_id);\r\n            formData.append('country_id', userdet?.organization_detail?.country_id)\r\n        }\r\n        dispatch(StateList(formData)) // if (country) {\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setCountry(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event.currentTarget.value)\r\n        dispatch(CityList(formData))\r\n    };\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate())\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const handleSubmitDraft = (data) => {\r\n        // debugger\r\n        // \r\n        const imageBanner = dataURLtoBlob(image)\r\n        const formData = new FormData()\r\n        for (const [key, value] of Object.entries(data)) {\r\n            formData.append(key, value)\r\n        }\r\n        formData.append(\"image\", imageBanner)\r\n        formData.append(\"type\", \"1\")\r\n        formData.append(\"status\", 3)\r\n        formData.append(\"number_of_nft\", \"1\")\r\n        formData.append(\"on_which_step_left\", 0)\r\n        dispatch(CreateProjectAction(formData, setLoading, history))\r\n    }\r\n    return (\r\n        <div className={current === 0 ? styles.showForm : styles.hideForm}>\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 col-12\">\r\n                        {/* {type == 1 && ( */}\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Project name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"title\"\r\n                                placeholder=\"Project name\"\r\n                                {...register(\"title\", { required: true, pattern: { value: /[A-Za-z]/ } })}\r\n                                aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>}\r\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n                        </div>\r\n                        {/* )} */}\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Web address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                // required={false}\r\n                                name=\"address\"\r\n                                placeholder=\"Web address\"\r\n                                {...register(\"address\", {\r\n                                    required: true,\r\n                                    pattern: {\r\n                                        value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n                                    }\r\n                                })}\r\n                                aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.address && errors.address?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                            {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <label>Description</label>\r\n                        <div className=\"form-group\">\r\n                            <Controller\r\n                                control={control}\r\n                                name=\"description\"\r\n                                defaultValue=\"\"\r\n                                rules={{ required: true, minLength: 100 }}\r\n                                render={({ field }) => {\r\n                                    return <JoditEditor\r\n                                        ref={field.ref}\r\n                                        value={field.value}\r\n                                        placeholder=\"start typing\"\r\n                                        aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        tabIndex={1} // tabIndex of textarea\r\n                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                        onChange={field.onChange}\r\n                                    />\r\n                                }}\r\n                            />\r\n                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            {errors.description && errors.description.type === \"minLength\" && (\r\n                                <p style={{ color: 'red' }}>\r\n                                    min length of words is 100\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>Country</label>\r\n                            <select name=\"country\"\r\n                                {...register(\"country\", { required: true })} onChange={handleChangeCountry}>\r\n                                aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n                                <option value={userdet?.organization_detail?.country_id} selected>{countryName}</option>\r\n                                {countries?.data?.data?.map((option, key) => (\r\n                                    <>\r\n                                        <option key={key.id} value={option.id}>\r\n                                            {option.name}\r\n                                        </option>\r\n                                    </>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group mt-3\">\r\n                            <label>State or province</label>\r\n                            <select name=\"state\"\r\n                                {...register(\"state\")} onChange={handleChangeState}>\r\n                                aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state/province</option>\r\n                                {states?.data?.data?.map((option, key) => (\r\n                                    <><option key={key.id} value={option.id}  >\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"form-group\">\r\n                            <label>City or Region</label>\r\n                            <select name=\"city\"\r\n                                {...register(\"city\")}>\r\n                                aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city/region</option>\r\n                                {cities?.data?.data?.map((option, key) => (\r\n                                    <><option key={key.id} value={option.id}>\r\n                                        {option.name}\r\n                                    </option></>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-12 pr-0 pl-0\">\r\n                            <div className=\"form-group\">\r\n                                <label>Category</label>\r\n                                <select name=\"category_id\"\r\n                                    {...register(\"category_id\", { required: true })}\r\n                                >\r\n                                    aria-invalid={errors.category_id ? \"true\" : \"false\"}\r\n                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select category </option>\r\n                                    {cat?.map((option, key) => (\r\n                                        <option key={key.id} value={option.id} >\r\n                                            {option.title}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                {errors.category_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Category is required</p>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            {usertype == 2 ? (\r\n                                <label>Price per NFT (In MATIC tokens)</label>\r\n                            ) : (\r\n                                <label>Price (In MATIC tokens)</label>\r\n                            )}\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                step=\"0.01\"\r\n                                name=\"price\"\r\n                                placeholder=\"Price\"\r\n                                {...register(\"price\", { required: true })}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                                aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                            />\r\n                            {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <div className=\"form-group pricing-detail\">\r\n                                <p><span>Price</span> <span>{price ? price : '--'} MATIC</span></p>\r\n                                <p><span>Karmatica Fee</span><span>1%</span></p>\r\n                                <p><span>You will receive </span><span>{99 * price / 100 ? 99 * price / 100 : \"--\"} MATIC</span></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\" col-12\">\r\n                        <div className=\"form-group\">\r\n                            <label>Banner image</label>\r\n                            <UploadImage\r\n                                imageSrc={image}\r\n                                // src={image}\r\n                                initalImag={data.imageUri}\r\n                                setImageSrc={setImage}\r\n                            />\r\n                            <div >\r\n                                <div className='logo-dis logo-dis-img'>\r\n                                    <span>Allowed types: JPG, PNG, GIF</span><span>Banner should be 800 px wide x 500 px high, 10MB max</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={handleSubmit(handleSubmitDraft)}>\r\n                            Save as Draft\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default Create;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, GetCollectionsAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { blobToDataURl, dataURLtoBlob } from '../../utils/blobfromurl';\r\nimport UploadImage from '../../shared/Upload';\r\nfunction MyVerticallyCenteredModal(props) {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n    const [image, setImage] = useState()\r\n    const OnSubmit = (dat) => {\r\n        const imageBanner = dataURLtoBlob(image)\r\n        dispatch(CreateCollectionAction({ dat, imageBanner, props }))\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Create Collection\r\n                </Modal.Title>\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className='row'>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Display name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"title\"\r\n                                    aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                    placeholder=\"Enter collection name\"\r\n                                    {...register('title', { required: true })}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n                            </div>\r\n                            {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">collection name is required</p>}\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Symbol</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"symbol\"\r\n                                    aria-invalid={errors.symbol ? \"true\" : \"false\"}\r\n                                    placeholder=\"Enter token symbol\"\r\n                                    {...register('symbol', { required: true })}\r\n                                // value={symbol}\r\n                                // onChange={(e) => {\r\n                                //     setSymbol(e.target.value);\r\n                                // }} \r\n                                />\r\n                                {errors.symbol?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">symbol is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Description</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"description\"\r\n                                    aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                    {...register('description', { required: true })}\r\n                                    // value={description}\r\n                                    // onChange={(e) => {\r\n                                    //     setDescription(e.target.value);\r\n                                    // }}\r\n                                    placeholder=\"Spread some words about your collection\"\r\n                                />\r\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">description is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"form-group mt-3\">\r\n                                <label>Web URL</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    aria-invalid={errors.short_url ? \"true\" : \"false\"}\r\n                                    name=\"short_url\"\r\n                                    placeholder=\"Web URL\"\r\n                                    {...register('short_url', { required: true })}\r\n                                // value={short_url}\r\n                                // onChange={(e) => {\r\n                                //     setShortUrl(e.target.value);\r\n                                // }} \r\n                                />\r\n                                {errors.short_url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Web URL is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-12\">\r\n                            <div className=\"form-group\">\r\n                                <label>Banner image</label>\r\n                                <UploadImage\r\n                                    imageSrc={image}\r\n                                    // initalImag={image}\r\n                                    setImageSrc={setImage}\r\n                                />\r\n                                <div >\r\n                                    <span className='logo-dis'>Allowed types: JPG, PNG, GIF<br />Banner should be 1500 px wide x 500 px high</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Button key=\"create-collection\" type=\"submit\" className=\"btn btn-primary\">Create</Button>\r\n                    {/* </div> */}\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\nexport default MyVerticallyCenteredModal","import { useState, useEffect, useRef } from \"react\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nfunction loadGLTFModel(scene, glbPath, options) {\r\n    const { receiveShadow, castShadow } = options;\r\n    return new Promise((resolve, reject) => {\r\n        const loader = new GLTFLoader();\r\n        loader.load(\r\n            glbPath,\r\n            (gltf) => {\r\n                const obj = gltf.scene;\r\n                obj.name = \"dinosaur\";\r\n                obj.position.y = 0;\r\n                obj.position.x = 0;\r\n                obj.receiveShadow = receiveShadow;\r\n                obj.castShadow = castShadow;\r\n                scene.add(obj);\r\n                obj.traverse(function (child) {\r\n                    if (child.isMesh) {\r\n                        child.castShadow = castShadow;\r\n                        child.receiveShadow = receiveShadow;\r\n                    }\r\n                });\r\n                resolve(obj);\r\n            },\r\n            undefined,\r\n            function (error) {\r\n                console.log(error);\r\n                reject(error);\r\n            }\r\n        );\r\n    });\r\n}\r\nfunction easeOutCirc(x) {\r\n    return Math.sqrt(1 - Math.pow(x - 1, 4));\r\n}\r\nconst DModal = ({ vdo }) => {\r\n    // debugger\r\n    // const { vdo } = props\r\n    const refContainer = useRef();\r\n    const [loading, setLoading] = useState(true);\r\n    const [renderer, setRenderer] = useState();\r\n    const [source, setSource] = useState('')\r\n    console.log('source', source)\r\n    useEffect(() => {\r\n        // debugger\r\n        const file = vdo;\r\n        const { current: container } = refContainer;\r\n        if (container && !renderer) {\r\n            const scW = container.clientWidth;\r\n            const scH = container.clientHeight;\r\n            const renderer = new THREE.WebGLRenderer({\r\n                antialias: true,\r\n                alpha: true\r\n            });\r\n            renderer.setPixelRatio(window.devicePixelRatio);\r\n            renderer.setSize(scW, scH);\r\n            renderer.outputEncoding = THREE.sRGBEncoding;\r\n            container.appendChild(renderer.domElement);\r\n            setRenderer(renderer);\r\n            const scene = new THREE.Scene();\r\n            const scale = 5.6;\r\n            const camera = new THREE.OrthographicCamera(\r\n                -scale,\r\n                scale,\r\n                scale,\r\n                -scale,\r\n                0.01,\r\n                50000\r\n            );\r\n            const target = new THREE.Vector3(-0.5, 1.2, 0);\r\n            const initialCameraPosition = new THREE.Vector3(\r\n                20 * Math.sin(0.2 * Math.PI),\r\n                10,\r\n                20 * Math.cos(0.2 * Math.PI)\r\n            );\r\n            const ambientLight = new THREE.AmbientLight(0xcccccc, 1);\r\n            scene.add(ambientLight);\r\n            const controls = new OrbitControls(camera, renderer.domElement);\r\n            controls.autoRotate = false;\r\n            controls.enableZoom = true;\r\n            controls.minDistance = 0\r\n            controls.minZoom = 0\r\n            controls.target = target;\r\n            const loader = new GLTFLoader()\r\n            loader.load(\r\n                file,\r\n                function (gltf) {\r\n                    gltf.scene.traverse(function (child) {\r\n                        if (child.isMesh) {\r\n                            const m = child\r\n                            m.receiveShadow = true\r\n                            m.castShadow = true\r\n                        }\r\n                        if (child.isLight) {\r\n                            const l = child\r\n                            l.castShadow = true\r\n                            l.shadow.bias = -0.003\r\n                            l.shadow.mapSize.width = 2048\r\n                            l.shadow.mapSize.height = 2048\r\n                        }\r\n                    })\r\n                    scene.add(gltf.scene)\r\n                },\r\n                (xhr) => {\r\n                    animate();\r\n                    setLoading(false);\r\n                    // mdl(file)\r\n                    console.log((xhr.loaded / xhr.total) * 100 + '% loaded')\r\n                },\r\n                (error) => {\r\n                    // debugger\r\n                    console.log(error)\r\n                }\r\n            )\r\n            let req = null;\r\n            let frame = 0;\r\n            const animate = () => {\r\n                req = requestAnimationFrame(animate);\r\n                frame = frame <= 100 ? frame + 1 : frame;\r\n                if (frame <= 100) {\r\n                    const p = initialCameraPosition;\r\n                    const rotSpeed = -easeOutCirc(frame / 120) * Math.PI * 20;\r\n                    camera.position.y = 10;\r\n                    camera.position.x =\r\n                        p.x * Math.cos(rotSpeed) + p.z * Math.sin(rotSpeed);\r\n                    camera.position.z =\r\n                        p.z * Math.cos(rotSpeed) - p.x * Math.sin(rotSpeed);\r\n                    camera.lookAt(target);\r\n                } else {\r\n                    controls.update();\r\n                }\r\n                renderer.render(scene, camera);\r\n            };\r\n            return () => {\r\n                cancelAnimationFrame(req);\r\n                renderer.dispose();\r\n            };\r\n        }\r\n    }, [vdo]);\r\n    return (\r\n        <div\r\n            style={{ height: \"270px\", width: \"300px\", position: \"relative\" }}\r\n            ref={refContainer}\r\n        >\r\n            {loading && (\r\n                <span style={{ position: \"absolute\", left: \"50%\", top: \"50%\" }}>\r\n                    Loading...\r\n                </span>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default DModal\r\n","import Modal from 'react-bootstrap/Modal';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useLocation } from 'react-router';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CityList, CountryList, StateList } from '../../redux/Actions/authAction';\r\nimport { CategoriesAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nfunction ProTypePopup(props) {\r\n    const location = useLocation()\r\n    const [type, setType] = useState()\r\n    const { countries } = useSelector(state => state.countries)\r\n    const [country, setCountry] = useState('')\r\n    const [description, setDescription] = useState();\r\n    const dispatch = useDispatch()\r\n    console.log('country', country)\r\n    const [state, setState] = useState('')\r\n    const [city, setCity] = useState('')\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    const cities = useSelector(state => {\r\n        // debugger\r\n        return state.countries.city\r\n    })\r\n    // useEffect(() => {\r\n    //     dispatch(CategoriesAction())\r\n    //     dispatch(CountryList())\r\n    // }, [])\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    useEffect(() => {\r\n        if (location.pathname !== '/create' && projdetail && Object.keys(projdetail).length) {\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            setDescription(projdetail.description)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n        }\r\n    }, [projdetail]);\r\n    const OnSubmit = (data) => {\r\n        // debugger\r\n        if (location.pathname === '/create') {\r\n\r\n            props.startdate(data.start_date)\r\n            props.enddate(data.end_date)\r\n            props.nftno(data.number_of_nft)\r\n            props.onHide(true)\r\n        } else {\r\n            const formData = new FormData()\r\n\r\n\r\n            formData.append('title', data.title)\r\n            formData.append('description', description)\r\n            formData.append('state', data.state)\r\n            formData.append('country', data.country)\r\n            formData.append('city', data.city)\r\n            formData.append('address', data.address)\r\n            formData.append('price', data.price)\r\n            formData.append('number_of_nft', data.number_of_nft)\r\n            if (data?.type == 1) {\r\n\r\n                formData.append('start_date', '')\r\n                formData.append('end_date', '')\r\n            } else {\r\n\r\n                formData.append('start_date', data.start_date)\r\n                formData.append('end_date', data.end_date)\r\n            }\r\n            formData.append('type', '2')\r\n            formData.append('category_id', data.category_id)\r\n\r\n            dispatch(UpdateProject(props, formData))\r\n\r\n        }\r\n    }\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate())\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div>\r\n                    <label>Switch to Campaign for multiple NFTs</label><br />\r\n                    <span>fill the following mandatory fields to continue</span>\r\n                </div>\r\n                <div>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n                        <><div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Campaign Start date</label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"start_date\"\r\n                                    min={disablePastDate()}\r\n                                    defaultValue={defaultValue}\r\n                                    {...register(\"start_date\", { required: true })}\r\n                                    aria-invalid={errors.start_date ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Campaign End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        defaultValue={defaultValue1}\r\n                                        min={disablePastDate()}\r\n                                        {...register(\"end_date\", { required: true })}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    {errors.end_date && errors?.end_date?.type === 'min' && <p style={{ color: 'red' }} role=\"alert\">End date should be greater or equal to startdate</p>}\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div></>\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <div className=\"form-group\">\r\n                                <label>Number of NFTs</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"number_of_nft\"\r\n                                    min={1}\r\n                                    max={10}\r\n                                    maxLength={10}\r\n                                    placeholder=\"Select your number of NFTs (1-10)\"\r\n                                    {...register(\"number_of_nft\", { required: true, min: 1, max: 10 })}\r\n                                    aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                />\r\n                                {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFTs per project is required with a limit of 10</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type='submit'>switch</button>\r\n                        </div>\r\n                        {/* } */}\r\n                    </div>\r\n                </form>\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\nexport default ProTypePopup","import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Tooltip } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\n\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router';\r\nimport DModal from './3dModal';\r\nimport ProTypePopup from './ProjectTypePopup';\r\nimport { LogsAction } from '../../redux/Actions/logsAction';\r\n\r\nconst UploadNft = ({ current, prev }) => {\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n\r\n    const [count, setCount] = useState(1);\r\n    console.log(\"count\", count)\r\n    const [nft_description, setNft_description] = useState([])\r\n    console.log(\"nftdescr\", nft_description)\r\n    const history = useHistory()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [projmodalShow, setProjModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: '1' });\r\n    const [nftFileType, setNFtFileType] = useState()\r\n    const [nftimage, setNftImage] = useState([])\r\n    // console.log(nftimage.map(x => x), \"nfttttt\")\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [size, setSize] = useState()\r\n    const [Pimage, setPimage] = useState([])\r\n    console.log(Pimage, \"Pimage\")\r\n    const [startDate, setStartDate] = useState(\"\")\r\n    console.log(\"startdate\", startDate)\r\n    const [endDate, setEndDate] = useState(\"\")\r\n    console.log(\"enddate\", endDate)\r\n    const [numberofNfts, setNumberofNfts] = useState(\"\")\r\n    console.log(\"noof nfts\", numberofNfts)\r\n\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    const [source, setSource] = useState([])\r\n    const [sourceType, setSourceType] = useState()\r\n\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [modal, setModal] = useState()\r\n    const [NFtFileExtension, setNFtExtension] = useState()\r\n    const [preview, setPreview] = useState([])\r\n    const [basePreview, setPreviewBase] = useState([])\r\n    console.log('previwimg', preview)\r\n    const [projtype, setProjType] = useState(\"1\")\r\n\r\n    console.log(nft_collection_id, \"nft collections\")\r\n    const [nftName, setNftName] = useState([])\r\n    const [nftDescription, setNftDescription] = useState([])\r\n    console.log(\"nftDescription\", nftDescription)\r\n    console.log(\"nftName\", nftName)\r\n\r\n\r\n    const handleIncrement = () => {\r\n        // if (startDate && endDate && numberofNfts) {\r\n\r\n        setCount(prevCount => prevCount + 1);\r\n        // }\r\n    };\r\n\r\n\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        // const pimage = () => {\r\n        //     return [\r\n        //         ...Pimage, e?.target?.files[0]\r\n        //     ]\r\n        // }\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(previ => {\r\n            previ[index] = base64\r\n            return [\r\n                ...previ,\r\n\r\n            ]\r\n        })\r\n\r\n        setPreview(previ => {\r\n            previ[index] = e?.target?.files[0]\r\n            return [\r\n                ...previ,\r\n\r\n            ]\r\n        })\r\n        // const base64pr = await convertToBase64(preview)\r\n        // console.log('baseee', base64pr)\r\n        // setPreviewBase(base64pr)\r\n\r\n\r\n    };\r\n    // console.log(count, 'count')\r\n\r\n    function onHandleClick(index, item) {\r\n        // debugger\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n\r\n\r\n    const defaultValues = {\r\n        setNft_description: null,\r\n    }\r\n\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n    useEffect(() => {\r\n\r\n        register(\"nft_description\");\r\n\r\n\r\n    }, [register]);\r\n\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.nftres\r\n    })\r\n\r\n    const OnSubmit = (values) => {\r\n\r\n        setFormValues(values)\r\n\r\n    }\r\n\r\n    const handleUpload = (e, index) => {\r\n        const filetype = e.target.files[0].type\r\n        setNFtExtension(filetype)\r\n\r\n        setNftImage(prevState => {\r\n            return [\r\n                ...nftimage,\r\n                e?.target?.files[0]\r\n            ]\r\n\r\n        }\r\n        );\r\n\r\n        var fr = new FileReader;\r\n\r\n        fr.onload = function () { // file is loaded\r\n            var img = new Image;\r\n\r\n            img.onload = function () {\r\n                setSize(e.target.files[0].size); // image is loaded; sizes are available\r\n                setNftwidth(img.width)\r\n                setNftheight(img.height)\r\n            };\r\n\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n\r\n        let type = \"Image\"\r\n\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert('Filesize must 100mb or below');\r\n        } else {\r\n\r\n\r\n            switch (filetype) {\r\n                case 'image/png':\r\n                case 'image/jpg':\r\n                case 'image/gif':\r\n                case 'image/svg':\r\n                    type = \"Image\"\r\n                    break;\r\n                case 'audio/mpeg':\r\n                case 'audio/ogg':\r\n                case 'video/mp4':\r\n                case 'video/webm':\r\n                    type = 'Player'\r\n                    break;\r\n                case '':\r\n                    // if (nft?.name?.str.includes(\".glb\")) {\r\n                    type = 'modal'\r\n                    // }\r\n                    break;\r\n                default:\r\n                    type = 'Image'\r\n            }\r\n\r\n            // setNFtFileType(type)\r\n\r\n            setSource(prevState => {\r\n                // debugger\r\n                prevState[index] = { file: e.target.files[0], type: type }\r\n                setSourceType(type)\r\n\r\n                return [...prevState]\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n    // console.log(log, 'logggg')\r\n\r\n    // const desdata = { nft_description() }\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetCollectionsAction())\r\n\r\n\r\n    }, [])\r\n    const nftDescriptionHandler = (index, item) => {\r\n        // setNft_description(event?.currentTarget?.value)\r\n        setNft_description(previ => {\r\n            return {\r\n                ...previ,\r\n                [item]: index\r\n            }\r\n        })\r\n        // setNft_description(nftDescription[index])\r\n    }\r\n\r\n\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n\r\n\r\n            const imagesRes = await uploadNFT(nftimage, dispatch)\r\n\r\n            const addedImage = imagesRes?.data?.data.map(x => ipfsBaseUrl + x?.image_hash)\r\n\r\n            // const addedImagetype = imagesRes?.map(x => x?.data?.data?.extension)\r\n            var str = addedImage;\r\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n            // console.log(check)\r\n            // console.log(addedImage.includes('undefined'), 'add')\r\n\r\n            const formData = new FormData()\r\n\r\n            // debugger\r\n            if (check === false) {\r\n                console.log('uploaded')\r\n                formData.append('title', data.title)\r\n                formData.append('description', data.description)\r\n                formData.append('address', data.address)\r\n\r\n                formData.append('country', data.country)\r\n                if (!data.state) {\r\n\r\n                    formData.append('state', '')\r\n                } else {\r\n                    formData.append('state', data.state)\r\n                }\r\n                if (!data.city) {\r\n                    formData.append('city', '')\r\n                } else {\r\n\r\n                    formData.append('city', data.city)\r\n                }\r\n                formData.append('latitude', lat)\r\n                formData.append('logitude', log)\r\n                formData.append('price', data.price)\r\n\r\n                formData.append('image', data.image)\r\n                if (projtype == 1) {\r\n                    // formData.append('preview_imag', \"\")\r\n                    formData.append('number_of_nft', \"1\")\r\n                    formData.append('start_date', '')\r\n                    formData.append('end_date', '')\r\n                } else {\r\n\r\n                    formData.append('number_of_nft', numberofNfts)\r\n                    formData.append('start_date', startDate)\r\n                    formData.append('end_date', endDate)\r\n                }\r\n                for (let i = 0; i < Pimage.length; i++) {\r\n                    formData.append(\"preview_imag[]\", (Pimage[i]));\r\n                }\r\n                // for (let i = 0; i < basePreview.length; i++) {\r\n                // formData.append(\"preview_imag[]\", Pimage);\r\n                // }\r\n                // formData.append('preview_imag', preview)\r\n                formData.append('type', projtype)\r\n                formData.append('category_id', data.category_id)\r\n\r\n\r\n                formData.append('nft_image', addedImage)\r\n                formData.append('extention', source.map(x => x.type))\r\n                formData.append('nft_name', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n\r\n                formData.append('nft_collection_id', coll_id)\r\n                formData.append('nft_description', Object?.values(nft_description))\r\n\r\n\r\n                dispatch(CreateProjectAction(formData, setLoading, history))\r\n            } else {\r\n\r\n                console.log('fail')\r\n                setLoading(false)\r\n                swal('error', 'Nft not uploaded', 'error')\r\n\r\n            }\r\n        } catch (error) {\r\n            swal('error', error, 'error')\r\n            setLoading(false)\r\n            console.log(error, 'error')\r\n            dispatch(LogsAction(error))\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n\r\n        beforeUpload: file => {\r\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n            if (!isJpgOrPng) {\r\n\r\n                alert('You can only upload JPG/PNG file!');\r\n            }\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader?.readAsDataURL(info.file);\r\n                // setUploadedImage(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const [form] = Form.useForm()\r\n    // const save = (data) => {\r\n    //     setNft_description(data)\r\n    // };\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n\r\n    ];\r\n    const nftNameHandler = (event, index) => {\r\n        // debugger\r\n        setNftName(prevState => {\r\n            return {\r\n                ...prevState,\r\n                [index]: event?.target?.value\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        // <section className=\"author-area\">\r\n        <div className=\"main-create \">\r\n\r\n            {loading ? (\r\n                <Loader />\r\n\r\n            ) : (\r\n                <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                    <Form\r\n                        form={form}\r\n                        name=\"dynamic_form_nest_item\"\r\n                        initialValues={{\r\n                            nfts: nfts,\r\n                        }}\r\n                        // onSubmit={(event) => handleSubmit(event)}\r\n                        onFinish={(event) => onFinish(event)}\r\n                        onSubmit={OnSubmit}\r\n                        onChange={nftNameHandler}\r\n                        autoComplete=\"off\"\r\n                        className=\"item-form card no-hover\"\r\n                    >\r\n                        <Form.List name=\"nfts\">\r\n                            {(fields, { add, remove }) => (\r\n                                <>\r\n                                    <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                        <svg\r\n                                            width=\"16px\"\r\n                                            height=\"16px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                        >\r\n                                            <path\r\n                                                fill=\"none\"\r\n                                                stroke=\"#fff\"\r\n                                                stroke-width=\"2\"\r\n                                                d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\r\n                                                transform=\"matrix(-1 0 0 1 24 0)\"\r\n                                            />\r\n                                        </svg>\r\n                                        Previous\r\n                                    </Button>\r\n\r\n                                    <>\r\n                                        {fields.map(({ key, name, ...restField }, index) => (\r\n\r\n\r\n                                            <Collapse accordion\r\n                                                defaultActiveKey={[count]}\r\n                                                onChange={onChange}\r\n                                                expandIconPosition={expandIconPosition}\r\n                                            >\r\n\r\n                                                <Panel key={count} header={[nftName[index] ? <div className='Collapse-text'> {nftName[index].slice(0, 50)}  </div> : \"Detail\", source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? <div> <img src={URL.createObjectURL(source[index].file)} className=\"images-Collapse\" /></div> : <div> <img src={preview?.[index] && window.URL.createObjectURL(preview[index])} className=\"images-Collapse\" /></div>]} className=\"p-0 nft-Collapse\">\r\n\r\n\r\n                                                    <Fragment>\r\n                                                        {/* <div>Artwork {index}</div> */}\r\n                                                        <div className=\"row relative\">\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n                                                                        // label=\"Enter name\"\r\n                                                                        // name=\"name\"\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: \"Name is required\",\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" onChange={e => nftNameHandler(e, index)} />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: \"Missing  description\",\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n\r\n\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                            // onBlur={(newContent, e) => setNft_description(newContent)}\r\n                                                                            // preferred to use only this option to update the content for performance reasons\r\n                                                                            onChange={e => nftDescriptionHandler(e, index)}\r\n                                                                        />\r\n\r\n                                                                    </Form.Item>\r\n                                                                    {errors.nft_description?.type ===\r\n                                                                        \"required\" && (\r\n                                                                            <p style={{ color: \"red\" }} role=\"alert\">\r\n                                                                                Description is required\r\n                                                                            </p>\r\n                                                                        )}\r\n                                                                    {errors.nft_description &&\r\n                                                                        errors.nft_description.type ===\r\n                                                                        \"minLength\" && (\r\n                                                                            <p style={{ color: \"red\" }}>\r\n                                                                                min length of words is 300\r\n                                                                            </p>\r\n                                                                        )}\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                <MinusCircleOutlined\r\n                                                                    onClick={(e) => {\r\n                                                                        remove(name);\r\n                                                                        handleDecrement(e);\r\n                                                                    }}\r\n                                                                />\r\n                                                            </div>\r\n                                                            {/* </div> */}\r\n                                                            <div className=\"col-12\">\r\n                                                                <label className=\"mt-2 mb-3\">\r\n                                                                    Choose Collection\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div className='d-flex flex-wrap gap-10 col-12'>\r\n\r\n\r\n\r\n                                                                {col?.map((item, idx) => (\r\n                                                                    <div\r\n                                                                        key={`auc_${idx}`}\r\n                                                                        id={item.id}\r\n                                                                        className=\"choose_div\"\r\n                                                                    >\r\n                                                                        <div\r\n                                                                            id={item.id}\r\n                                                                            onClick={() =>\r\n                                                                                onHandleClick(index, item.id)\r\n                                                                            }\r\n                                                                            className=\"\"\r\n                                                                            style={{\r\n                                                                                background: \"black\",\r\n                                                                                marginBottom: \"8px\",\r\n                                                                                border:\r\n                                                                                    nft_collection_id[index] == item.id\r\n                                                                                        ? \"1px solid #fff\"\r\n                                                                                        : null,\r\n                                                                            }}\r\n                                                                        >\r\n\r\n                                                                            <div>{item.title}</div>\r\n\r\n                                                                        </div>\r\n                                                                        {/* </Form.Item> */}\r\n                                                                    </div>\r\n\r\n\r\n\r\n                                                                ))}\r\n                                                                <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                    {/* <div className=\"col-24\"> */}\r\n\r\n                                                                    <div className=\"form-group\">\r\n                                                                        <div\r\n                                                                            className=\"card choose_div\"\r\n                                                                            style={{\r\n                                                                                background: \"black\",\r\n                                                                                marginBottom: \"8px\",\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <div className=\"card-body \">\r\n                                                                                <Button\r\n                                                                                    variant=\"primary\"\r\n                                                                                    className=\"collection_btn\"\r\n                                                                                    onClick={() => setModalShow(true)}\r\n                                                                                >\r\n                                                                                    <i className=\"f1a-regular fa-plus\"></i>{\" \"}\r\n                                                                                    Create Collection\r\n                                                                                </Button>\r\n\r\n\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                        <label className=\"mt-3\">Upload NFT</label>\r\n                                                                        <div\r\n                                                                            className=\"position-relative upload_nft\"\r\n                                                                            style={{\r\n                                                                                backgroundImage: \"url('')\",\r\n                                                                                backgroundSize: \"contain\",\r\n                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                            }}\r\n                                                                        >\r\n\r\n                                                                            <div\r\n                                                                                className={\r\n                                                                                    source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\r\n                                                                                        ? \" inputdragVedio\"\r\n                                                                                        : \"inputtdrag\"\r\n                                                                                }\r\n                                                                            >\r\n                                                                                <input\r\n                                                                                    type=\"file\"\r\n                                                                                    // onChange={handleUpload}\r\n                                                                                    maxCount={1}\r\n                                                                                    onChange={e => handleUpload(e, index)}\r\n                                                                                    accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                                />\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\r\n                                                                                    <div>\r\n                                                                                        {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\r\n                                                                                        {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? (\r\n\r\n\r\n                                                                                            <img\r\n                                                                                                src={URL.createObjectURL(source[index].file)}\r\n                                                                                                className=\"nft-image\"\r\n                                                                                            />\r\n                                                                                        ) : (\r\n                                                                                            <>\r\n                                                                                                <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                    Image width & height should be 500x500\r\n                                                                                                </p>\r\n                                                                                                <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                    Image size should be max 1mb\r\n                                                                                                </p>\r\n                                                                                            </>\r\n                                                                                        )\r\n\r\n                                                                                        }\r\n                                                                                    </div>\r\n                                                                                }\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\r\n                                                                                    <div>\r\n                                                                                        {/* { source?.length && source?.[index] && source[index]?.type === \"Player\" && ( */}\r\n                                                                                        <video\r\n                                                                                            // className=\"VideoInput_video\"\r\n                                                                                            width=\"100%\"\r\n                                                                                            // height={height}\r\n                                                                                            controls\r\n                                                                                            src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                        // onChange={setSource}\r\n                                                                                        />\r\n                                                                                        {/* )} */}\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p>\r\n                                                                                                Because you’ve included\r\n                                                                                                multimedia, you’ll need to provide\r\n                                                                                                an image (PNG, JPG, or GIF) for\r\n                                                                                                the card display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage:\r\n                                                                                                    \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={e => previewChange(e, index)}\r\n                                                                                            // onChange={previewChange}\r\n                                                                                            />\r\n                                                                                            {preview?.length && preview?.[index] &&\r\n                                                                                                <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                    {preview?.length && preview?.[index] && (\r\n                                                                                                        <img\r\n                                                                                                            className=\"preview_image\"\r\n                                                                                                            src={URL.createObjectURL(preview[index])}\r\n\r\n\r\n                                                                                                        // onChange={setPimage}\r\n                                                                                                        />\r\n                                                                                                    )}\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n                                                                                }\r\n\r\n                                                                                {/* )} */}\r\n                                                                                {/* <div className=\"VideoInput_footer\">{vdo || \"Nothing selectd\"}</div> */}\r\n\r\n                                                                                {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\r\n                                                                                    <div>\r\n                                                                                        <DModal\r\n                                                                                            vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                        // mdl={setModal}\r\n                                                                                        />\r\n\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p className=\"\">\r\n                                                                                                Because you’ve included multimedia,\r\n                                                                                                you’ll need to provide an image\r\n                                                                                                (PNG, JPG, or GIF) for the card\r\n                                                                                                display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage:\r\n                                                                                                    \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={e => previewChange(e, index)}\r\n                                                                                            />\r\n                                                                                            {preview?.length && preview?.[index] &&\r\n                                                                                                <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                    {preview?.length && preview?.[index] && (\r\n                                                                                                        <img\r\n                                                                                                            className=\"preview_image\"\r\n                                                                                                            src={URL.createObjectURL(preview[index])} />\r\n                                                                                                    )}\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                )}\r\n                                                                            </div>\r\n\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Fragment>\r\n                                                </Panel>\r\n                                            </Collapse>\r\n                                        ))}\r\n\r\n                                        {/* {!((data?.number_of_nft === count)) ? */}\r\n                                        {sourceType &&\r\n\r\n                                            <Form.Item>\r\n                                                <Tooltip title={count == 1 ? \"Switch to Campaign for multiple NFTs\" : 'Add more NFTs'} color='#4528dc'>\r\n                                                    <Button\r\n                                                        type=\"dashed\"\r\n                                                        onClick={(e) => {\r\n                                                            {\r\n                                                                count == 1 &&\r\n                                                                    setProjModalShow(true)\r\n                                                            }\r\n\r\n                                                            // {\r\n                                                            //     count == 2 &&\r\n\r\n\r\n                                                            // }\r\n                                                            {\r\n                                                                numberofNfts && startDate && endDate &&\r\n                                                                    add(e)\r\n                                                                setProjType(\"2\")\r\n                                                                handleIncrement(e);\r\n                                                                // setPannelKey(pannelKey + 1)\r\n\r\n                                                            };\r\n                                                            // {startDate && endDate && numberofNfts && \r\n\r\n\r\n                                                            // }\r\n\r\n                                                        }}\r\n                                                        block\r\n\r\n                                                        icon={<PlusOutlined />}\r\n                                                    // disabled={data?.number_of_nft == count}\r\n                                                    >\r\n                                                        Add NFT\r\n                                                    </Button>\r\n                                                </Tooltip>\r\n\r\n                                            </Form.Item>\r\n\r\n\r\n                                        }\r\n                                        {/* : null} */}\r\n                                    </>\r\n                                </>\r\n                            )}\r\n                        </Form.List>\r\n                        <Form.Item>\r\n                            <div className=\"col-12\">\r\n                                <button key=\"create-project\" className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\r\n                                    Create\r\n                                </button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <ProTypePopup\r\n                        show={projmodalShow}\r\n                        onHide={() => setProjModalShow(false)}\r\n                        enddate={setEndDate}\r\n                        startdate={setStartDate}\r\n                        nftno={setNumberofNfts}\r\n\r\n                    />\r\n                    <MyVerticallyCenteredModal\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                    />\r\n\r\n                </div>\r\n            )\r\n            }\r\n        </div >\r\n    )\r\n}\r\nexport default UploadNft","import { useEffect, useState } from \"react\";\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\nimport Create from \"./Create\";\r\nimport UploadNft from \"./uploadNft\";\r\nimport FormProvider, { useFormData } from \"./Context/context\";\r\nimport { Button, message, Steps } from 'antd';\r\nimport { set, useForm } from \"react-hook-form\";\r\nconst steps = [\r\n  {\r\n    title: 'Create Project',\r\n    content: <Create />\r\n  },\r\n  {\r\n    title: 'Upload NFT',\r\n    content: <UploadNft />,\r\n  },\r\n];\r\nconst UploadNftIndex = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n  const { setValue } = useForm();\r\n  const prev = () => {\r\n    // \r\n    setCurrent(current - 1);\r\n  };\r\n  const items = steps.map((item) => ({ key: item.title, title: item.title }));\r\n  return (\r\n    <section className=\"author-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-14 col-md-9 mt-10\">\r\n            {/* Intro */}\r\n            <div className=\"intro mt-5  mb-4 mb-lg-5\">\r\n              <div className=\"intro-content\">\r\n                <span>Get Started</span>\r\n                {current === 0 ? (\r\n                  <h3 className=\"mt-3 mb-0\">Create Project</h3>\r\n                ) : (\r\n                  <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <FormProvider>\r\n              {/* <FormCard currentStep={formStep} prevFormStep={prevFormStep}> */}\r\n              <div className=\"steps-content\">\r\n                <Steps current={current} items={items} />\r\n                {current === 0 && (\r\n                  <Create current={current} next={next} prev={prev} />\r\n                )}\r\n                {current === 1 && <><UploadNft prev={prev} />\r\n                </>\r\n                }\r\n              </div>\r\n              {/* </FormCard> */}\r\n            </FormProvider>\r\n          </div>\r\n        </div >\r\n      </div >\r\n    </section >\r\n  );\r\n};\r\nexport default UploadNftIndex;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nimport UploadNftIndex from '../components/Create';\r\n\r\nconst Create = () => {\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Header />\r\n      <UploadNftIndex />\r\n      <Footer />\r\n      <ModalSearch />\r\n      <ModalMenu />\r\n      <Scrollup />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const { user } = useSelector(state => {\r\n        // \r\n        // console.log(login.authToken, 'login')\r\n        return state.login\r\n    })\r\n    // console.log(user, 'user')\r\n\r\n    if (user?.status === 200) {\r\n        history.push('/')\r\n    }\r\n\r\n    const mesg = useSelector(state => {\r\n        // \r\n        return state.user.message\r\n    })\r\n    // if (login?.userToken) {\r\n    //     console.log('hello')\r\n    // }\r\n    // console.log(login?.status)\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        // \r\n        dispatch(LoginAction(data, dispatch))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"Enter your Password\"\r\n                                            {...register(\"password\", { required: \"Password is required\" })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" defaultChecked />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Log In</button>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\"><Link to=\"/forgotpassword\">Forgot Password</Link></span>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"d-block text-center mt-4\">If not registered? <Link to=\"/signup\"><b>Sign Up</b></Link></span>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport LoginSection from '../components/Login/Login';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LoginSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","export default function FormCard({ children, currentStep, prevFormStep }) {\r\n    return (\r\n        <div >\r\n            {currentStep < 1 && (\r\n                <>\r\n                    {currentStep > 0 && (\r\n                        <button\r\n                            onClick={prevFormStep}\r\n                            type=\"button\"\r\n                        >\r\n                            back\r\n                        </button>\r\n                    )}\r\n\r\n                </>\r\n\r\n            )}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nexport const FormContext = createContext();\r\n\r\nexport default function FormProvider({ children }) {\r\n    const [data, setData] = useState({});\r\n    // console.log(data, 'dataaa')\r\n\r\n    const setFormValues = (data) => {\r\n        setData((prevValues) => ({\r\n            ...prevValues,\r\n            ...data,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <FormContext.Provider value={{ data, setFormValues }}>\r\n            {children}\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useFormData = () => useContext(FormContext);","\r\nimport { React } from 'react'\r\nimport { useDispatch, useSelector, } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport * as Yup from 'yup'\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\n\r\nconst formSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required(\"Email is required\"),\r\n    // wallet_id: Yup.string()\r\n    //     .wallet_id()\r\n    //     .required(\"Wallet address is required\"),\r\n    // goal: Yup.string()\r\n    //     .goal()\r\n    //     .required(\"Fundraising goal is required\"),\r\n\r\n    password: Yup.string()\r\n        .required(\"Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\"),\r\n    confirm_password: Yup.string()\r\n        .required(\"Confirm Password is required\")\r\n        .min(4, \"Password length should be at least 4 characters\")\r\n        .max(12, \"Password cannot exceed more than 12 characters\")\r\n        .oneOf([Yup.ref(\"password\")], \"Passwords do not match\")\r\n});\r\n\r\n\r\nconst Signup = ({ formStep, nextFormStep }) => {\r\n    const { setFormValues } = useFormData();\r\n    const dispatch = useDispatch()\r\n    const { register, watch, handleSubmit, formState: { errors } } = useForm({\r\n        mode: \"all\",\r\n        resolver: yupResolver(formSchema)\r\n    });\r\n\r\n    // const [role, setRole] = useState()\r\n    // console.log('role', role)\r\n    const OnSubmit = (data) => {\r\n        // dispatch(Register(data))\r\n        setFormValues({ ...data });\r\n        // if (role == 3) {\r\n\r\n        nextFormStep();\r\n        // }\r\n        // if (role == 2) {\r\n        //     const formData = new FormData()\r\n        //     formData.append('email', data.email)\r\n        //     // formData.append('goal', data.goal)\r\n        //     formData.append('password', data.password)\r\n        //     formData.append('confirm_password', data.confirm_password)\r\n        //     // formData.append('wallet_id', data.wallet_id)\r\n        //     // formData.append('role', role)\r\n        //     dispatch(Register(formData))\r\n        // }\r\n    }\r\n\r\n    const { user } = useSelector(state => state.user)\r\n\r\n\r\n    const { errMessage } = useSelector(state => {\r\n        return state?.errmessage?.message\r\n    })\r\n\r\n    return (\r\n        < section className=\"author-area\" >\r\n            <div className=\"container\">\r\n\r\n                <>\r\n                    <div>\r\n                        {errMessage && <p>{errMessage}</p>}\r\n\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 co  l-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center\">\r\n                                <span></span>\r\n                                <h3 className=\"mt-3 mb-0\"></h3>\r\n                                <p></p>\r\n                            </div>\r\n                            {/* Item Form */}\r\n                            <div className={formStep === 0 ? styles.showForm : styles.hideForm}>\r\n                                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                    <div className=\"row\">\r\n                                        <div className='steps-center'>\r\n                                            <div className='step1icon'>\r\n\r\n                                                <i className=\"fa-solid fa-circle-check\"> Step 1 </i>\r\n                                            </div>\r\n                                            <div className='stepperline'>\r\n                                                <i style={{ color: '#452868' }}>  ----------------------------- </i>\r\n\r\n                                            </div>\r\n                                            <div className='step2icon'>\r\n\r\n                                                <i className=\"fa-regular fa-circle\" > Step 2 </i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Email</label>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    {...register(\"email\", { required: 'Email address is required' })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.email ? \"true\" : \"false\"} />\r\n                                                {/* {errors.errMessage} */}\r\n                                                {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors.email?.message}</p>}\r\n                                                {/* {errMessage && <p>{errMessage}</p>} */}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"password\"\r\n                                                    placeholder=\"Password\"\r\n                                                    {...register(\"password\", { required: true })}\r\n                                                    aria-invalid={errors.password ? \"true\" : \"false\"} />\r\n                                                {errors.password && <p style={{ color: 'red' }} role=\"alert\">{errors.password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Confirm Password</label>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"confirm_password\"\r\n                                                    placeholder=\"Confirm password\"\r\n                                                    {...register(\"confirm_password\",\r\n                                                        {\r\n                                                            required: true,\r\n                                                            validate: (val) => {\r\n                                                                if (watch('password') != val) {\r\n                                                                    return \"Your passwords do no match\";\r\n                                                                }\r\n                                                            },\r\n                                                        })}\r\n                                                    aria-invalid={errors.confirm_password ? \"true\" : \"false\"} />\r\n                                                {errors.confirm_password && <p style={{ color: 'red' }} role=\"alert\">{errors.confirm_password.message}</p>}\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Fundraising Goal</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"goal\"\r\n                                                    placeholder=\"Fundraising goal (MATIC)\"\r\n                                                    {...register(\"goal\",\r\n                                                        {\r\n                                                            required: true,\r\n\r\n                                                        })}\r\n                                                    aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                                {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <label>Wallet Address</label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"wallet_id\"\r\n                                                    // defaultValue='1'\r\n                                                    placeholder=\"Wallet address\"\r\n                                                    {...register(\"wallet_id\", { required: true })}\r\n                                                    // {...register(\"email\")}\r\n                                                    aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                                />\r\n                                                {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                            <div className=\"form-group mt-3\">\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"3\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                                </div>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"2\" onChange={(e) => setRole(e.target.value)} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div> */}\r\n                                        {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <div className=\"form-check form-check-inline\">\r\n                                                <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                                <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n                                        <div className=\"col-12\">\r\n                                            {/* {role == 2 ? ( */}\r\n                                            {/* <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Signup</button> */}\r\n                                            {/* ) : ( */}\r\n\r\n                                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Next</button>\r\n                                            {/* )} */}\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <span className=\"d-block text-center mt-4\">Already have an account? <Link to=\"/login\"><b>Login</b></Link></span>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        </section >\r\n\r\n    )\r\n}\r\n\r\nexport default Signup\r\n\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnnualRevenueList, CountryList, HearAboutList, Register } from '../../redux/Actions/authAction'\r\nimport { Controller, useForm } from 'react-hook-form'\r\n\r\nimport { useHistory } from 'react-router'\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\r\nimport { useState } from 'react'\r\nimport JoditEditor from 'jodit-react';;\r\n\r\n// import { Widget } from \"@uploadcare/react-widget\";\r\n// import FileUpload from \"react-material-file-upload\";\r\n// import { uploadcare } from '../lib/uploadcare.min.js';\r\nconst CreateOrganization = ({ formStep, nextFormStep, goBack }) => {\r\n\r\n    const [description, setDescription] = useState()\r\n\r\n    const editor = useRef(null);\r\n    const { data, setFormValues } = useFormData();\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const organization = useSelector(state => {\r\n        return state.user.organization\r\n    })\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n    const { annualRevenue } = useSelector(state => state.annualRevenue)\r\n\r\n    // }\r\n    const { hereAbout } = useSelector(state => state.hereAbout)\r\n    // console.log(user, 'user')\r\n\r\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    const OnSubmit = (values) => {\r\n        setFormValues(values)\r\n        // FormData.append('email', data.email)\r\n        // FormData.append('password', data.password)\r\n        // FormData.append('confirm_password', data.confirm_password)\r\n        const formData = new FormData()\r\n        formData.append('banner_image', values.banner_image[0])\r\n        formData.append('logo', values.logo[0])\r\n        formData.append('email', data.email)\r\n        formData.append('password', data.password)\r\n        formData.append('wallet_id', values.wallet_id)\r\n        // formData.append('role', data.role)\r\n        formData.append('goal', values.goal)\r\n        formData.append('confirm_password', data.confirm_password)\r\n        formData.append('organization_name', values.organization_name)\r\n        formData.append('url', values.url)\r\n        formData.append('country', values.country)\r\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\r\n        formData.append('tax_id', values.tax_id)\r\n\r\n        formData.append('social', values.social)\r\n        formData.append('social_link', values.social_link)\r\n        formData.append('description', description)\r\n        // formData.append('method_heard_detail', values.method_heard_detail)\r\n\r\n        dispatch(Register(formData, dispatch))\r\n        // if (formData) {\r\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\r\n        //     history.push('/login')\r\n        // }\r\n    }\r\n\r\n    const socialmedia = useSelector(state => {\r\n        return state?.getSocialmediaIcons?.getsocial\r\n    })\r\n    // console.log('social', socialmedia)\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n        dispatch(AnnualRevenueList())\r\n        dispatch(HearAboutList())\r\n        dispatch(GetSocialMediaIcons())\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <div className={formStep === 1 ? styles.showForm : styles.hideForm}>\r\n                            <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                                {/* <button\r\n                                    // className={styles.back}\r\n                                    onClick={prevFormStep}\r\n                                    type=\"button\"\r\n                                >\r\n                                    back\r\n                                </button> */}\r\n                                <div className=\"row\">\r\n                                    <div className='col-12 d-flex justify-content-center'>\r\n                                        <div className='orgicon1'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 1</i>\r\n                                        </div>\r\n\r\n                                        <div className='orgicon1line'>\r\n                                            <span style={{ color: '#452868' }}> ----------------------------- </span>\r\n\r\n                                        </div>\r\n                                        <div className='orgicon2'>\r\n\r\n                                            <i className=\"fa-solid fa-circle-check\" > Step 2</i>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Fundraising Goal</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"goal\"\r\n                                                step=\"0.01\"\r\n                                                placeholder=\"Fundraising goal (MATIC)\"\r\n                                                {...register(\"goal\",\r\n                                                    {\r\n                                                        required: true,\r\n\r\n                                                    })}\r\n                                                aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                            {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Funding Wallet </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"wallet_id\"\r\n                                                // defaultValue='1'\r\n                                                placeholder=\"Funding Wallet\"\r\n                                                {...register(\"wallet_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Name</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"organization_name\"\r\n                                                placeholder=\"Organization name\"\r\n                                                {...register(\"organization_name\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.organization_name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Website</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"url\"\r\n                                                placeholder=\"Website\"\r\n                                                {...register(\"url\", {\r\n                                                    required: true,\r\n                                                    pattern: {\r\n                                                        value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                                    }\r\n                                                })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.url ? \"true\" : \"false\"}\r\n                                            />\r\n\r\n                                            {errors.url && errors.url?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                                            {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Describe your project\"\r\n\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <Controller\r\n                                                control={control}\r\n                                                name=\"description\"\r\n                                                defaultValue=\"\"\r\n\r\n                                                // {...register(\"description\", { required: true })}\r\n                                                rules={{ required: true, min: 150 }}\r\n                                                // rules={{\r\n                                                //     required: true, pattern: {\r\n\r\n                                                //         message: \"Description is required\",\r\n                                                //     },\r\n                                                // }}\r\n                                                render={({ field }) => {\r\n                                                    return <JoditEditor\r\n                                                        ref={field.ref}\r\n                                                        value={field.value}\r\n                                                        // config={config}\r\n                                                        aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                                        placeholder=\"start typing\"\r\n                                                        tabIndex={1} // tabIndex of textarea\r\n                                                        onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                        onChange={field.onChange}\r\n                                                    />\r\n                                                }}\r\n                                            />\r\n                                            {errors?.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Country</label>\r\n\r\n                                            <select name=\"country\"\r\n                                                {...register(\"country\", { required: true })}>\r\n                                                aria-invalid={errors.country ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                                {countries.data?.data?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.name}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"annual_revenue_range\"\r\n                                                {...register(\"annual_revenue_range\", { required: true })}>\r\n                                                {annualRevenue?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key.id} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>EIN Number/Tax Id</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                name=\"tax_id\"\r\n                                                placeholder=\"EIN Number/Tax Id(optional)\"\r\n                                                {...register(\"tax_id\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (required)</label>\r\n                                            <select name=\"social\"\r\n                                                {...register(\"social\", { required: true })}>\r\n                                                aria-invalid={errors.social ? \"true\" : \"false\"}\r\n                                                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\r\n                                                {socialmedia?.map((option, key) => (\r\n                                                    <><option key={key.id} value={option.id}>\r\n                                                        {option.title}\r\n                                                    </option></>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Social Media (secondary)</label>\r\n                                            <div className=\"input-group-prepend\">\r\n\r\n                                                <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"social_link\"\r\n                                                    placeholder=\"social link(optional) \"\r\n                                                    {...register(\"social_link\")}\r\n                                                // {...register(\"email\")}\r\n                                                // aria-invalid={errors.social_link ? \"true\" : \"false\"}\r\n                                                />\r\n                                            </div>\r\n                                            {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"project\"\r\n                                                {...register(\"hear_about\", { required: true })}>\r\n                                                {hereAbout?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Banner</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n\r\n                                                name=\"banner_image\"\r\n                                                placeholder=\"Select file\"\r\n                                                disp\r\n                                                {...register(\"banner_image\", { required: true })}\r\n                                                aria-invalid={errors.banner_image ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\r\n\r\n                                            {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <label>Logo</label>\r\n                                            <input\r\n                                                className=\"form-control p-2\"\r\n                                                type=\"file\"\r\n                                                name=\"logo\"\r\n                                                placeholder=\"Select file\"\r\n                                                {...register(\"logo\", { required: true })}\r\n                                                aria-invalid={errors.logo ? \"true\" : \"false\"}\r\n                                            />\r\n                                            <div className='logo_one'>\r\n\r\n                                                <span className='logo-dis'>maximum height should be 250 pixels</span>\r\n                                            </div>\r\n                                            {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\r\n                                    </div>\r\n                                    {/* <div className=\"col-3\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => goBack()}>Previous</button>\r\n                                    </div> */}\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CreateOrganization","import { useState } from \"react\";\r\n\r\n// import styles from \"../styles/styles.module.scss\";\r\nimport FormCard from \"./FormCard\";\r\n\r\nimport Signup from './Signup'\r\nimport CreateOrganization from './createOrganization';\r\nimport FormProvider from \"./Context/context\";\r\n\r\n\r\nconst SignupIndex = () => {\r\n  const [formStep, setFormStep] = useState(0);\r\n\r\n  const nextFormStep = () => setFormStep((currentStep) => currentStep + 1);\r\n\r\n  const prevFormStep = () => setFormStep((currentStep) => currentStep - 1);\r\n\r\n  return (\r\n    <FormProvider>\r\n\r\n      <FormCard currentStep={formStep} prevFormStep={prevFormStep}>\r\n        {formStep === 0 && (\r\n          <Signup formStep={formStep} nextFormStep={nextFormStep} />\r\n        )}\r\n        {formStep === 1 && <CreateOrganization goBack={prevFormStep} />\r\n        }\r\n      </FormCard>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default SignupIndex;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport SignupSection from '../components/Signup';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\nconst Signup = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <SignupSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n// Slice\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contact',\r\n\r\n    initialState: {\r\n        contact: [],\r\n\r\n\r\n    },\r\n    reducers: {\r\n\r\n        postContact: (state, action) => {\r\n            state.contact = action.payload?.data?.data;\r\n        },\r\n\r\n\r\n    },\r\n});\r\n\r\nexport const contactReducer = contactSlice.reducer\r\n\r\nexport const {\r\n    postContact\r\n} = contactSlice.actions;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ContactAction } from '../../redux/Actions/contactAction';\r\nimport Loader from '../Loader/loader';\r\nconst Contact = () => {\r\n    const [loading, setLoading] = useState()\r\n    const dispatch = useDispatch()\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        setLoading(true)\r\n        const formData = new FormData()\r\n        formData.append('name', data.name)\r\n        formData.append('subject', data.subject)\r\n        formData.append('email', data.email)\r\n        formData.append('description', data.description)\r\n        dispatch(ContactAction(formData, setLoading))\r\n    }\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span>Contact</span>\r\n                            <h3 className=\"mt-3 mb-0\">Get In Touch</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form id=\"contact-form\" className=\"item-form card no-hover\" onSubmit={handleSubmit(OnSubmit)} >\r\n                            {loading ? (\r\n                                <Loader />\r\n                            ) : (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name\"  {...register(\"name\", { required: true })}\r\n                                                aria-invalid={errors.name ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Name is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" {...register(\"email\", { required: true })}\r\n                                                aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.email?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Email is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <input type=\"text\" className=\"form-control\" name=\"subject\" placeholder=\"Subject\"  {...register(\"subject\", { required: true })}\r\n                                                aria-invalid={errors.subject ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.subject?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Subject is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <textarea className=\"form-control\" name=\"message\" placeholder=\"Message\" cols={30} rows={3} defaultValue={\"\"}  {...register(\"description\", { required: true })}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Message is required</p>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\"><i className=\"icon-paper-plane mr-2\" />Send Message</button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </form>\r\n                        <p className=\"form-message\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default Contact;","import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport { postContact } from \"../Slices/contactSlice\";\r\nimport { LogsAction } from \"./logsAction\";\r\nexport const ContactAction = (params, setLoading) => async dispatch => {\r\n    // localStorage.setItem('authToken', JSON.stringify(action.payload.dat\r\n    // const [loading, setLoading] = useState(false)\r\n    // setLoading(true)\r\n    try {\r\n        // \r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'multipart/form-data'\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const res = await axios.post(`${process.env.REACT_APP_BACKEND_API}api/contact-us/store`,\r\n            params, config)\r\n        // console.log(\"resproj\", res)\r\n        dispatch(postContact(res));\r\n        if (res.status === 200) {\r\n            setLoading(false)\r\n            swal(\"success\", res.data.message, 'success')\r\n                .then(function () {\r\n                    window.location = \"/\";\r\n                });\r\n\r\n        }\r\n\r\n    } catch (e) {\r\n        await dispatch(LogsAction(e))\r\n        if (e?.response?.data.message) {\r\n            swal('error', e.response.data.message, 'error')\r\n        }\r\n    }\r\n}","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport ContactSection from '../components/Contact/Contact';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nconst Contact = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ContactSection />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Contact;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ForgotPasswordAction, LoginAction } from '../../redux/Actions/authAction';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { forgotpassword, message, statusCode } = useSelector(state => {\r\n        // \r\n        return state.forgotpassword\r\n    })\r\n\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n    const OnSubmit = (data) => {\r\n        dispatch(ForgotPasswordAction(data)).then(() => {\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            className=\"form-control\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Enter your Email\"\r\n                                            {...register(\"email\", { required: \"Email Address is required\" })}\r\n                                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.email && <p style={{ color: 'red' }} role=\"alert\">{errors?.email?.message}</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div>{errors.username && errors.username.message}</div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Send Reset Link</button>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                    <hr />\r\n                                    <div className=\"other-option\">\r\n                                        Social Icons\r\n                                        <div className=\"social-icons d-flex justify-content-center\">\r\n                                            {this.state.data.map((item, idx) => {\r\n                                                return (\r\n                                                    <a key={`lsd_${idx}`} className={item.link} href=\"#\">\r\n                                                        <i className={item.icon} />\r\n                                                        <i className={item.icon} />\r\n                                                    </a>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport ForgotPassword from '../components/ForgotPassword/forgotPassword';\r\n\r\nconst Forgot = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ForgotPassword />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Forgot\r\n","export const TOKEN_KEY = localStorage.getItem('authToken')\r\n\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"authToken\");\r\n}\r\n\r\nexport const isLogin = () => {\r\n  return TOKEN_KEY ? true : false\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from './utils';\r\n\r\nconst PrivateRoute = ({ component: Component, restricted, ...rest }) => {\r\n    // const isLog = isLogin()\r\n    // \r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Redirect to=\"/\" />\r\n                : <Component {...props} />\r\n\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Geonames from \"geonames.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nconst geonames = new Geonames({\r\n    username: \"fullstackdeveloper91\",\r\n    lan: \"en\",\r\n    encoding: \"JSON\"\r\n});\r\nexport default function GeoLocation(props) {\r\n    const { locationTitle, geoId, onChange, isCountry } = props;\r\n    const [options, setOptions] = useState([]);\r\n    const [currentItem, setCurrentItem] = useState(\"\");\r\n    const [labelWidth, setLabelWidth] = useState(0);\r\n    useEffect(() => {\r\n        setLabelWidth(inputLabel.current.offsetWidth);\r\n        {\r\n            !currentItem && (\r\n                setCurrentItem(props?.selected)\r\n            )\r\n        }\r\n    }, [props]);\r\n    useEffect(() => {\r\n        try {\r\n            const data = async () => {\r\n                (await isCountry)\r\n                    ? axios?.get(`https://secure.geonames.org/countryInfoJSON?username=fullstackdeveloper91&lang=en`)?.then(res => {\r\n                        // \r\n                        setOptions(res);\r\n                        console.log(res, \"countries\")\r\n                    })\r\n                    : axios?.get(`https://secure.geonames.org/childrenJSON?username=fullstackdeveloper91&lang=en&geonameId=${geoId}`)?.then(res => {\r\n                        setOptions(res);\r\n                        console.log(res, \"cities\")\r\n                    });\r\n            };\r\n            data();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }, [geoId, isCountry]);\r\n    const inputLabel = useRef(null);\r\n    const handleChange = e => {\r\n        setCurrentItem(e.target.value);\r\n        onChange(e.target.value);\r\n    };\r\n    return (\r\n        <form >\r\n            <label ref={inputLabel} id=\"demo-simple-select-outlined-label\" style={{ display: 'none' }}>\r\n                {locationTitle}\r\n            </label>\r\n            <select\r\n                label=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={currentItem}\r\n                onChange={handleChange}\r\n                labelWidth={labelWidth}\r\n            >\r\n                <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select </option>\r\n                {options?.data?.geonames?.map((v, index) => (\r\n                    <option key={index} value={v?.geonameId}>\r\n                        {isCountry ? v?.countryName : v?.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </form>\r\n    );\r\n}\r\nGeoLocation.propTypes = {\r\n    locationTitle: PropTypes.string,\r\n    geoId: PropTypes.node,\r\n    isCountry: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\nGeoLocation.defaultProps = {\r\n    onChange: undefined\r\n};","// import { getValue } from '@mui/system';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { CategoriesAction, ProjectDetail, UpdateProject } from '../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\nimport GeoLocation from '../components/Create/geoLocation';\r\nimport JoditEditor from 'jodit-react';\r\nimport { CityList, CountryList, StateList } from '../redux/Actions/authAction';\r\n\r\nconst EditProject = () => {\r\n    const editor = useRef(null);\r\n    const [country, setCountry] = useState();\r\n    console.log(country)\r\n    const [state, setState] = useState();\r\n    const [city, setCity] = useState();\r\n    const [description, setDescription] = useState();\r\n    // const [descriptionup, setDescriptionup] = useState();\r\n    // console.log(descriptionup, 'discup')\r\n    const [type, setType] = useState();\r\n    const { id } = useParams();\r\n    // console.log(id, \"idd\")\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    const dis = projdetail.description\r\n    // setDescriptionup(dis)\r\n    // console.log(dis, 'dis')\r\n    // console.log(projdetail, \"gfgfhghgghhgh\")\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm();\r\n\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n\r\n    }, [id])\r\n    const config = {\r\n        placeholderText: 'Edit Your Content Here!',\r\n        charCounterCount: false\r\n    }\r\n    const { countries } = useSelector(state => state.countries)\r\n\r\n    console.log(countries?.data?.data, 'cntry')\r\n    const states = useSelector(state => {\r\n        // debugger\r\n        return state.countries.states\r\n    })\r\n    // console.log(first)\r\n\r\n    // console.log(states?.data?.data, 'states')\r\n    const cities = useSelector(state => { return state.countries.city })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            // const formData = new FormData()\r\n            // // formData.append('country_id', event?.currentTarget?.value)\r\n            // formData.append('country_id', projdetail.country)\r\n            // dispatch(StateList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n\r\n        dispatch(UpdateProject(id, formData))\r\n    }\r\n\r\n\r\n\r\n        const disablePastDate = () => {\r\n            const today = new Date();\r\n            const dd = String(today.getDate() + 1).padStart(2, \"0\");\r\n            const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n            const yyyy = today.getFullYear();\r\n            return yyyy + \"-\" + mm + \"-\" + dd;\r\n        };\r\n    const cat = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.categories\r\n    })\r\n    // console.log(cat, 'cat')\r\n    useEffect(() => {\r\n        dispatch(CategoriesAction())\r\n        dispatch(CountryList())\r\n        // dispatch(StateList(projdetail.country))\r\n    }, [])\r\n    const handleChangeCountry = (event) => {\r\n        // debugger\r\n        // 👇 Get input value from \"event\"\r\n        setCountry(event?.currentTarget?.value);\r\n        const formData = new FormData()\r\n        // formData.append('country_id', event?.currentTarget?.value)\r\n        formData.append('country_id', event?.currentTarget?.value)\r\n        dispatch(StateList(formData))\r\n\r\n        // if (country) {\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    const handleChangeState = (event) => {\r\n        // 👇 Get input value from \"event\"\r\n        // setState(event.currentTarget.value);\r\n        const formData = new FormData()\r\n        formData.append('country_id', country)\r\n        formData.append('state_id', event?.currentTarget?.value)\r\n        dispatch(CityList(formData))\r\n\r\n\r\n        //     debugger\r\n        // }\r\n    };\r\n    return (\r\n        // <Modal\r\n        //     {...props}\r\n        //     size=\"lg\"\r\n        //     aria-labelledby=\"contained-modal\"\r\n        //     centered\r\n        // >\r\n        //     <Modal.Header closeButton>\r\n        //         <Modal.Title id=\"contained-modal\">\r\n        //             Collection\r\n        //         </Modal.Title>\r\n        //     </Modal.Header>\r\n        //     <Modal.Body>\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n                    <div className=\"col-12 col-md-7\">\r\n                        <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n                                <span>Get Started</span>\r\n                                <h3 className=\"mt-3 mb-0\">Update Project</h3>\r\n                            </div>\r\n                        </div>\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"donation\" value=\"2\" onChange={(e) => setType(e.target.value)} {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"donation\">Campaign</label>\r\n                                        </div>\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"radiobutton\" id=\"product_sale\" value=\"1\" onChange={(e) => setType(e.target.value)}  {...register('type')} />\r\n                                            <label className=\"form-check-label\" htmlFor=\"product_sale\">Single</label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {/* {type == 1 && ( */}\r\n\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Project name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"title\"\r\n                                            placeholder=\"Project name\"\r\n                                            {...register(\"title\", { required: true })}\r\n                                            aria-invalid={errors.title ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.title?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Title is required</p>}\r\n\r\n                                    </div>\r\n                                    {/* )} */}\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Web address</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"address\"\r\n                                            placeholder=\"Web Address\"\r\n                                            {...register(\"address\", { required: true })}\r\n                                            aria-invalid={errors.address ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.address?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Address is required</p>}\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <label>Description</label>\r\n                                    <div className=\"form-group\">\r\n                                        {/* <textarea\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"textarea\"\r\n                                            // data-provide=\"markdown-editable\" rows=\"10\"\r\n                                            placeholder=\"Description\"\r\n                                            cols={30}\r\n                                            {...register(\"description\", { required: true })}\r\n                                            aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                        /> */}\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n                                            render={({ field: { value, onChange } }) => {\r\n                                                return <JoditEditor\r\n                                                    ref={editor}\r\n                                                    value={value}\r\n                                                    // config={config}\r\n\r\n                                                    placeholder=\"start typing\"\r\n                                                    tabIndex={1} // tabIndex of textarea\r\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                    onChange={newContent => { }}\r\n                                                />\r\n                                            }}\r\n                                        />\r\n                                        {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                        {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"country\"\r\n                                                    {...register(\"country\", { required: true })}\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeCountry()\r\n                                                    }>\r\n\r\n                                                    aria-invalid={errors?.country ? \"true\" : \"false\"}\r\n\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }} >\r\n                                                        Select your country</option>\r\n                                                    {countries?.data?.data?.map((option, key) => (\r\n                                                        <>\r\n                                                            <option key={key.id} value={option.id} >\r\n\r\n                                                                {option.name}\r\n\r\n                                                            </option>\r\n                                                        </>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                <select name=\"state\"\r\n\r\n                                                    {...register(\"state\", { required: true })}\r\n                                                    //  onChange={handleChangeState}\r\n\r\n                                                    value={value}\r\n                                                    onChange={\r\n                                                        // onChange(selectedOption.currentTarget.value); \r\n                                                        handleChangeState\r\n                                                    } >\r\n                                                    aria-invalid={errors?.state ? \"true\" : \"false\"}\r\n                                                    <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your state</option>\r\n                                                    {states?.data?.data?.map((option, key) => (\r\n\r\n                                                        <><option key={key.id} value={option.id}  >\r\n                                                            {option.name}\r\n                                                        </option></>\r\n                                                    ))}\r\n                                                </select>\r\n                                            )}\r\n                                        />\r\n                                        {errors.state?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">State is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>City or Region</label>\r\n\r\n                                        <select name=\"city\"\r\n                                            {...register(\"city\", { required: true })}>\r\n                                            aria-invalid={errors?.city ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your city</option>\r\n                                            {cities?.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">City is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Country</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"country\"\r\n                                            // selected={country}\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                                                // onChange={onChange}\r\n\r\n                                                <GeoLocation\r\n                                                    // locationTitle=\"Country\"\r\n                                                    isCountry\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                                    onChange={setCountry}\r\n                                                    required={true}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>State or Province</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"state\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                    \r\n                                                    onChange={setState}\r\n                                                    geoId={country}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n\r\n                                               \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>City or Region</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"city\"\r\n                                            render={({ field: { onChange, onBlur, value, ref } }) => (\r\n\r\n                                                <GeoLocation\r\n                                                  \r\n                                                    onChange={setCity}\r\n                                                    geoId={state}\r\n                                                    onBlur={onBlur}\r\n                                                    selected={value}\r\n                                             \r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                     \r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        {type == 2 ? (\r\n\r\n                                            <label>Price</label>\r\n                                        ) : (\r\n\r\n                                            <label>Price per NFT</label>\r\n                                        )}\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"price\"\r\n                                            placeholder=\"Price\"\r\n                                            {...register(\"price\", { required: true })}\r\n                                            aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Price is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Number of NFTs</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"number_of_nft\"\r\n                                            defaultValue={1}\r\n                                            disabled={type == 1}\r\n                                            placeholder=\"Select your number of NFTs (1-10)\"\r\n                                            min={1}\r\n                                            max={10}\r\n                                            {...register(\"number_of_nft\", { required: true })}\r\n                                            aria-invalid={errors.number_of_nft ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {/* {errors.number_of_nft?.message && <p>{errors.number_of_nft.message}</p>} */}\r\n                                        {errors.number_of_nft?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Number of NFT is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {type == 2 && (\r\n\r\n                                    <><div className=\"col-12 col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Campaign Start date</label>\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"form-control\"\r\n                                                name=\"start_date\"\r\n                                                min={disablePastDate()}\r\n                                                // placeholder=\"Start date\"\r\n                                                {...register(\"start_date\", { required: true })}\r\n                                                aria-invalid={errors.start_date ? \"true\" : \"false\"} />\r\n                                            {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>}\r\n                                        </div>\r\n                                    </div><div className=\"col-12 col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Campaign End Date</label>\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    className=\"form-control\"\r\n                                                    name=\"end_date\"\r\n                                                    min={disablePastDate()}\r\n                                                    // placeholder=\"End date\"\r\n                                                    {...register(\"end_date\", { required: true })}\r\n                                                    aria-invalid={errors.end_date ? \"true\" : \"false\"} />\r\n                                                {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                            </div>\r\n                                        </div></>\r\n                                )}\r\n                                <div className=\"col-12 col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Category</label>\r\n                                        <select name=\"annual_revenue_range\"\r\n                                            // defaultValue={}\r\n                                            {...register(\"category_id\")}>\r\n                                            {cat?.map((option, key) => (\r\n\r\n                                                <option key={key.id} value={option.id}  >\r\n                                                    {option.title}\r\n\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        //     </Modal.Body>\r\n        // </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default EditProject;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport EditProject from '../Edit/editProject';\r\n\r\nconst ProjectUpdate = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <EditProject />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjectUpdate;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst TermsConditions = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const footer = useSelector(state => {\r\n        return state.footer\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getFooter(dispatch))\r\n    }, [])\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{footer?.footer?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: footer?.footer?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default TermsConditions","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport TermsConditions from '../components/Footer/t&c';\r\n\r\n\r\nconst TermsCond = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <TermsConditions />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TermsCond\r\n","import React, { Component, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams, useLocation } from \"react-router-dom\";\r\nimport {\r\n  CategoriesAction,\r\n  getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\nimport { Button, Pagination } from \"antd\";\r\n\r\nconst projectTypesMap = {\r\n  LatestProjects: 2,\r\n  RecentCampaigns: 1,\r\n};\r\n\r\nconst ExploreAll = () => {\r\n  const { type } = useParams();\r\n  const dispatch = useDispatch();\r\n  const [count, setCount] = useState(1)\r\n  const location = useLocation()\r\n  console.log('count', count)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const liveProjects = useSelector((state) => {\r\n    return state?.projectdetails?.liveProjects[type];\r\n  });\r\n  const liveProjectspag = useSelector((state) => {\r\n    return state?.projectdetails?.liveProjectsPag;\r\n  });\r\n  console.log(liveProjectspag, \"live\");\r\n\r\n\r\n  const handleIncrement = () => {\r\n    // debugger\r\n    // if (startDate && endDate && numberofNfts) {\r\n\r\n    // setCount(prevCount => prevCount + 1)\r\n    dispatch(\r\n      getPublicLiveProjects({\r\n        cursor: 1,\r\n        type: projectTypesMap[type],\r\n        projectType: type,\r\n        setCount,\r\n        location,\r\n        count: count + 1,\r\n      })\r\n    );\r\n    // }\r\n  };\r\n\r\n\r\n  const handleDecrement = () => {\r\n    setCount(prevCount => prevCount - 1);\r\n  };\r\n  useEffect(() => {\r\n    // debugger\r\n\r\n    dispatch(\r\n      getPublicLiveProjects({\r\n        cursor: 1,\r\n        type: projectTypesMap[type],\r\n        projectType: type,\r\n        setCount,\r\n        count,\r\n      })\r\n    );\r\n  }, [dispatch, type]);\r\n\r\n  return (\r\n    <section className=\"explore-area\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-8 col-lg-7\">\r\n            <div className=\"intro text-center mb-4\">\r\n              <h3 className=\"mt-3 mb-0\">\r\n                {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}\r\n              </h3>\r\n              <p>\r\n                Invest in NFTs that are based on real-life projects or events\r\n                related to important causes\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row items explore-items h-auto\">\r\n          {liveProjects && liveProjects.length ? (\r\n            [\r\n              ...new Map(\r\n                liveProjects?.map((item) => [item[\"title\"], item])\r\n              ).values(),\r\n            ].map((item, idx) => {\r\n              return (\r\n                <Link\r\n                  key={`edth_${idx}`}\r\n                  className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                >\r\n                  <div>\r\n                    <Link to={`/projects/${item.slug}`}>\r\n                      <div className=\"card\">\r\n                        <div className=\"image-over\">\r\n                          <Link to={`/projects/${item.slug}`}>\r\n                            <img\r\n                              className=\"card-img-top\"\r\n                              src={item.image}\r\n                              alt=\"\"\r\n                            />\r\n                          </Link>\r\n                          {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                        </div>\r\n\r\n                        <div className=\"card-caption col-12 p-0\">\r\n                          {/* Card Body */}\r\n                          <div className=\"card-body\">\r\n                            {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                            {/* <a > */}\r\n                            <h5 className=\"mb-0\">\r\n                              {item.title.slice(0, 15)}\r\n                            </h5>\r\n                            {/* </a> */}\r\n                            <div\r\n                              className=\"seller d-flex align-items-center my-3\"\r\n\r\n                            >\r\n                              <span>Owned By</span>\r\n                              {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                              {/* <a > */}\r\n                              <h6 className=\"ml-2 mb-0\">\r\n                                {item.user_data.username.slice(0, 12)}\r\n                              </h6>\r\n                              {/* </a> */}\r\n\r\n                              {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                            </div>\r\n                            <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                              <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                              {item?.number_of_nft == 1 ? (\r\n                                <span>{item.number_of_nft} NFT</span>\r\n                              ) : (\r\n                                <span>{item.number_of_nft} NFTs</span>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                              <Link to={`/projects/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                <i className=\"icon-handbag\" />\r\n                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                              </Link>\r\n                              <Link to={`/projects/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"col-12 col-sm-12 col-lg-12\">\r\n              <h2 className=\"allproj2\">No latest project found</h2>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* <Pagination\r\n          className=\"pagination-bar\"\r\n          currentPage={currentPage}\r\n          totalCount={liveProjects?.data_count}\r\n          pageSize={PageSize}\r\n          onPageChange={page => setCurrentPage(page)}\r\n        /> */}\r\n        <a onClick={(e) => handleIncrement(e)} className=\"btn ml-lg-auto btn-bordered-white morebutton\">Load More</a>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default ExploreAll;\r\n","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreAll from '../components/Explore/viewAllLatest';\r\n\r\nconst All = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ExploreAll type=\"Latest Projects\" />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default All;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { PopularCollectionAction } from '../../redux/Actions/popularAction';\r\nconst AllCollections = () => {\r\n    const dispatch = useDispatch()\r\n    const coll = useSelector(state => {\r\n        // \r\n        return state.collection.collection\r\n    })\r\n    // console.log(coll, \"coll\")\r\n    useEffect(() => {\r\n        dispatch(PopularCollectionAction())\r\n    }, [dispatch])\r\n    return (\r\n        <>\r\n            <section className=\"explore-area\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-md-8 col-lg-7\">\r\n                            {/* Intro */}\r\n                            <div className=\"intro text-center mb-4\">\r\n                                <h3 className=\"mt-3 mb-0\">Popular Collections</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center text-center\">\r\n                        <div className=\"col-12\">\r\n                            {/* Explore Menu */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row items explore-items h-auto\">\r\n                        {coll && coll.length ?\r\n                            [...new Map(coll?.map(item =>\r\n                                [item[\"title\"], item])).values()]?.map((item, idx) => {\r\n                                    return (\r\n                                        <Link key={`edth_${idx}`} to={`/popularcollection/details/${item.slug}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\" >\r\n                                            <div>\r\n                                                <div className=\"card position-relative \">\r\n                                                    <div className=\"image-over \">\r\n                                                        <img className=\"card-img-top\" src={item.image} />\r\n                                                    </div>\r\n                                                    {/* Card Caption */}\r\n                                                    <div className=\"card-caption col-12 p-0\">\r\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\r\n                                                        {/* Card Body */}\r\n                                                        <div className=\"card-body\">\r\n                                                            <a>\r\n                                                                <h5 className=\"mb-0 mt-3\">{item.title.slice(0, 15)}...</h5>\r\n                                                            </a>\r\n                                                            <div class=\"\"><p>{item.description.slice(0, 50)}...</p></div>\r\n                                                            <div class=\"mb-2 align-items-center justify-content-between\">\r\n                                                                <div class=\"mt-2 mb-2 d-flex justify-content-between text-align-center fundraiser_sale\">\r\n                                                                    {item?.nft_data.length == 1 ? (\r\n                                                                        <span>{item.nft_data.length} NFT</span>\r\n                                                                    ) : (\r\n                                                                        <span>{item.nft_data.length} NFTs</span>\r\n                                                                    )\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    )\r\n                                }) :\r\n                            <div className=\"col-12 col-sm-12 col-lg-12 no-data\">\r\n                                <h2>\r\n                                    No Popular Collections\r\n                                </h2>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\nexport default AllCollections; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AllCollections from '../components/Collections/exploreCollection';\r\n\r\nconst ColExplore = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AllCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ColExplore;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AboutUsAction, getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst AboutUs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const about = useSelector(state => {\r\n        return state.footer.aboutus\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(AboutUsAction())\r\n    }, [])\r\n    // console.log(about, 'footerabout')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>{about?.title}</h3>\r\n                        <div className='termsandconditions' dangerouslySetInnerHTML={{ __html: about?.description }} />\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AboutUs","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport AboutUs from '../components/Footer/about';\r\n\r\nconst Aboutus = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <AboutUs />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Aboutus;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction ReferalPopup(props) {\r\n    const location = useLocation();\r\n    const [copy, setCopy] = useState(false)\r\n    // const [title, setTitle] = useState(\"\");\r\n    // const [description, setDescription] = useState(\"\");\r\n    // const [short_url, setShortUrl] = useState(\"\");\r\n    // const [symbol, setSymbol] = useState(\"\");\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n    const url = window.location.href + `?refid=${props.userRef}`\r\n    const userprojurl = `https://app.karmatica.io/projects/${props.id}` + `?refid=${props.userRef}`\r\n    console.log(userprojurl)\r\n    // const Refurl = window.location.href + '/' + props.id + '/' + props.userRef\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header className=' align-items-start'>\r\n                {window.ethereum?.selectedAddress ? (\r\n\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Refer your friends\r\n                        <p>Earn Royalties When You Share: <br />30% of NFTs for first level and 5% for secondary referrals.</p>\r\n\r\n\r\n                    </Modal.Title>\r\n                ) : (\r\n                    <Modal.Title id=\"contained-modal-title-vcenter \">\r\n\r\n                        <p>Earn When You Share: <br />30% of NFT sales for first level referral </p>\r\n                        <p style={{ color: \"red\" }}>Connect your wallet to earn referral income in MATIC when you share projects</p>\r\n\r\n\r\n                    </Modal.Title>\r\n                )}\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className='refer-frnd'>\r\n                <form className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-10 p-0\">\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                {/* <label>Display name</label> */}\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"display_name\"\r\n                                    value={location.pathname === `/projnftdetails/${props.id}` ? userprojurl : url}\r\n                                    disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}\r\n                                // required\r\n                                // placeholder=\"Enter collection name\"\r\n                                // {...register('title')}\r\n                                // value={title}\r\n                                // onChange={(e) => {\r\n\r\n                                //     setTitle(e.target.value);\r\n                                // }} \r\n                                />\r\n\r\n\r\n                            </div>\r\n                            {/* <FacebookShareCount url={\"shareUrl\"}>\r\n                            {shareCount => <span className=\"myShareCountWrapper\">{shareCount}</span>}\r\n                        </FacebookShareCount> */}\r\n\r\n\r\n                            <hr />\r\n                            <div className=\"refer-icons\">\r\n                                {location.pathname === `/projnftdetails/${props.id}` ? (\r\n                                    <>  <TwitterShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                        <FacebookShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                        <WhatsappShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                        <TelegramShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                        <InstapaperShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" >  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                        <LinkedinShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" > <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                        <EmailShareButton url={userprojurl} title=\"Share project when logged in with wallet to earn 30% of NFT sales\" ><EmailIcon size={32} round={true} /></EmailShareButton></>\r\n                                ) : (\r\n\r\n                                    <><TwitterShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TwitterIcon size={32} round={true} /></TwitterShareButton>\r\n                                        <FacebookShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <FacebookIcon size={32} round={true} /></FacebookShareButton>\r\n                                        <WhatsappShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><WhatsappIcon size={32} round={true} /></WhatsappShareButton>\r\n                                        <TelegramShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><TelegramIcon size={32} round={true} /></TelegramShareButton>\r\n                                        <InstapaperShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\">  <InstapaperIcon size={32} round={true} /></InstapaperShareButton>\r\n                                        <LinkedinShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"> <LinkedinIcon size={32} round={true} /></LinkedinShareButton>\r\n                                        <EmailShareButton url={url} title=\"Share project when logged in with wallet to earn 30% of NFT sales\"><EmailIcon size={32} round={true} /></EmailShareButton></>\r\n                                )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2 p-0 text-right\">\r\n                            {location.pathname === `/projnftdetails/${props.id}` ? (\r\n                                <CopyToClipboard text={userprojurl} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                            ) : (\r\n\r\n                                <CopyToClipboard text={url} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                            )}\r\n                            {copy == true &&\r\n                                <span className='copytext'>Copied!</span>\r\n\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ReferalPopup","import { Button, Form, Input, } from 'antd';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\nconst EditNft = (props) => {\r\n    // debugger\r\n    const editor = useRef(null);\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n    const [form] = Form.useForm()\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id, props.id))\r\n    }, [props.nft_id, props.id])\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    const handleUpload = (e) => {\r\n        const filetype = e.target.files[0].type;\r\n        var fr = new FileReader();\r\n        fr.onload = function () {\r\n            var img = new Image();\r\n            img.onload = function () {\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n                    setNFtFileType(\"modal\");\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n        }\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n        })\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n    }, [form, nftdetail])\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n            if (source) {\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n                const formData = new FormData()\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n                formData.append('collection_id', nft_collection_id)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"main-create\" >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n                <Modal className=\"edit_nft_popup\"\r\n                    {...props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                // centered\r\n                >\r\n                    <Modal.Header >\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Update NFT\r\n                        </Modal.Title>\r\n                        <div>\r\n                            <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div>\r\n                            <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                nfts: nfts, defaultValues\r\n                            }}\r\n                                onFinish={(event) => onFinish(event)}\r\n                                autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                <Form.List name=\"nfts\">\r\n                                    {(fields, { add, remove }) => (\r\n                                        <>\r\n                                            <>\r\n                                                {fields.map(({ key, name, ...restField }, index) => (\r\n                                                    <Fragment>\r\n                                                        <div className=\"row relative\">\r\n                                                            <div className=\"col-12\">\r\n                                                                <label>Name</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_name\"]}\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  name',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        {/* <label>Name</label> */}\r\n                                                                        <Input placeholder=\"Name\" />\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                                <label>Description</label>\r\n                                                                <div>\r\n                                                                    <Form.Item\r\n                                                                        {...restField}\r\n                                                                        name={[name, \"nft_description\"]}\r\n                                                                        rules={[\r\n                                                                            {\r\n                                                                                required: true,\r\n                                                                                message: 'Missing  description',\r\n                                                                            },\r\n                                                                        ]}\r\n                                                                    >\r\n                                                                        <JoditEditor\r\n                                                                            ref={editor}\r\n                                                                            value={'nft_description'}\r\n                                                                            placeholder=\"start typing\"\r\n                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                            onChange={newContent => { }}\r\n                                                                        />\r\n                                                                        {/* }} */}\r\n                                                                        {/* /> */}\r\n                                                                    </Form.Item>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className='col-12'>\r\n                                                                <label className='mt-2 mb-3'>Choose Collection</label>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                <div className=\"form-group\">\r\n                                                                    <div className=\"card choose_div\" style={{\r\n                                                                        background: \"black\",\r\n                                                                        marginBottom: \"8px\",\r\n                                                                    }}>\r\n                                                                        <div className=\"card-body \">\r\n                                                                            <Button variant=\"primary\" className='collection_btn' onClick={() => setModalShowcoll(true)}>\r\n                                                                                <i className=\"fa-regular fa-plus\" ></i> Create Collection\r\n                                                                            </Button>\r\n                                                                            <CollPopup\r\n                                                                                show={modalShowcoll}\r\n                                                                                onHide={() => setModalShowcoll(false)} />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {col?.map((item, idx) => (\r\n                                                                <div key={`auc_${idx}`} id={item.id} className=\"col-md-6 col-lg-3 col-12 choose_div\">\r\n                                                                    <div id={item.id} onClick={() => setNft_collection_id(item.id)} className=\"card\"\r\n                                                                        style={{\r\n                                                                            background: \"black\",\r\n                                                                            marginBottom: \"8px\",\r\n                                                                            border: nft_collection_id == item.id ? \"1px solid #fff\" : null\r\n                                                                        }}>\r\n                                                                        <div className=\"card-body\">\r\n                                                                            <div>\r\n                                                                                {item.title}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                            <div className=\"col-12\">\r\n                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                    <div\r\n                                                                        className=\"position-relative upload_nft\"\r\n                                                                        style={{\r\n                                                                            backgroundImage: \"url('')\",\r\n                                                                            backgroundSize: \"contain\",\r\n                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <div\r\n                                                                            className={\r\n                                                                                nftFileType === \"Player\" || nftFileType === \"modal\"\r\n                                                                                    ? \" inputdragVedio\"\r\n                                                                                    : \"inputtdrag\"\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <input\r\n                                                                                type=\"file\"\r\n                                                                                onChange={handleUpload}\r\n                                                                                maxCount={1}\r\n                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                            />\r\n                                                                            {(nftFileType === \"Image\") &&\r\n                                                                                <div>\r\n                                                                                    {source ? (\r\n                                                                                        <img\r\n                                                                                            src={source}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <img\r\n                                                                                            src={image}\r\n                                                                                            className=\"nft-image\"\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                            {nftFileType === \"Player\" &&\r\n                                                                                <div>\r\n                                                                                    {source ? (\r\n                                                                                        <video\r\n                                                                                            width=\"100%\"\r\n                                                                                            controls\r\n                                                                                            src={source}\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <video\r\n                                                                                            width=\"100%\"\r\n                                                                                            controls\r\n                                                                                            src={image}\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p>\r\n                                                                                            Because you’ve included\r\n                                                                                            multimedia, you’ll need to provide\r\n                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                            the card display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft}\r\n                                                                                                />\r\n                                                                                            ) : (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview}\r\n                                                                                                />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                            {nftFileType === \"modal\" &&\r\n                                                                                <div>\r\n                                                                                    {!source ? (\r\n                                                                                        <DModal\r\n                                                                                            vdo={image}\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        <DModal\r\n                                                                                            vdo={source}\r\n                                                                                        />\r\n                                                                                    )}\r\n                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                        <label>Preview Image</label>\r\n                                                                                        <p className=\"\">\r\n                                                                                            Because you’ve included multimedia,\r\n                                                                                            you’ll need to provide an image\r\n                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                            display of your item\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div\r\n                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage:\r\n                                                                                                \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                            backgroundPosition: \"center\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <input\r\n                                                                                            type=\"file\"\r\n                                                                                            onChange={previewChange}\r\n                                                                                        />\r\n                                                                                        <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                            {!preview ? (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={previewnft} />\r\n                                                                                            ) : (\r\n                                                                                                <img\r\n                                                                                                    className=\"preview_image\"\r\n                                                                                                    src={preview} />\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Fragment>\r\n                                                ))}\r\n                                            </></>\r\n                                    )}\r\n                                </Form.List>\r\n                                <Form.Item>\r\n                                    <div className=\"col-12\">\r\n                                        <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                    </div>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const slug = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    useEffect(() => {\r\n        dispatch(NftList(props.slug?.id))\r\n        // dispatch(ProjectDetail(slug))\r\n    }, [props.slug?.id])\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n                        <thead>\r\n                            {/* {latprojnftdetail?.map((items) => { \r\n                         return (  */}\r\n\r\n                            <><tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr><tr className='contract-address'>\r\n                                    <th >Contract</th>\r\n                                    <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${nftdetail?.collectionData?.contract_id}`} >{nftdetail.collectionData?.contract_id?.slice(0, 5)}.....{nftdetail.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                </tr><tr>\r\n                                    <th>Token ID</th>\r\n                                    <td>{nftdetail.token_id}</td>\r\n                                </tr><tr>\r\n                                    <th>Token Stranded</th>\r\n                                    <td>ERC721</td>\r\n                                </tr></>\r\n\r\n                            {/* )})} */}\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* {projdetail.nft_data?.map((items) => { */}\r\n                            {/* // return ( */}\r\n                            <tr>\r\n\r\n                                <td>\r\n                                    {/* {items.collectionData?.contract_id} */}\r\n                                </td>\r\n                                <td>\r\n                                    {/* {items.token_id} */}\r\n                                </td>\r\n                                {/* <td>ERC721</td> */}\r\n                                {/* <td>Polygon (Matic)</td> */}\r\n                            </tr>\r\n                            {/* // ) */}\r\n                            {/* })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n                {/* <div className='nothing'>\r\n                No matching records found\r\n                        </div> */}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftdataTable","import axios from \"axios\";\r\n\r\nexport const GetMatic = async (setMatic) => {\r\n\r\n    try {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n\r\n            },\r\n        }\r\n        // \r\n        const res = await axios.get(`https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=cad`,\r\n            config\r\n        )\r\n        setMatic(res?.data)\r\n        console.log('res', res)\r\n    } catch (error) {\r\n        // console.log(\"error\");\r\n    }\r\n};","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, LatestProjectDetail, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport { BuyNft } from '../Wallet/interact';\r\nimport ProjNFTS from '../Auctions/projectnfts';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport MyVerticallyCenteredModal from './refralPopup';\r\nimport swal from 'sweetalert';\r\nimport Banner from '../Create/editBanner';\r\nimport EditNft from '../Create/editNft';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport latNftdataTable from './../Explore/latProjNftdata';\r\nimport LatNftdataTable from './../Explore/latProjNftdata';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReferalPopup from './refralPopup';\r\nimport ReadMore from '../../readMore';\r\nimport { GetMatic } from './GetMAtic';\r\nimport FormItem from 'antd/es/form/FormItem';\r\nimport { useLocation } from \"react-router-dom\";\r\nconst ProjDetails = () => {\r\n\r\n\r\n    const { slug } = useParams();\r\n    const search = useLocation().search;\r\n    const refid = new URLSearchParams(search).get('refid');\r\n    console.log(refid, 'refid')\r\n    const [tok, setTok] = useState('')\r\n    // console.log('tok', tok)\r\n    const dispatch = useDispatch()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    // const [matic, setmatic] = useState('')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(\"latround\", Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad)))\r\n    const [modalShoww, setModalShoww] = React.useState(false);\r\n    console.log('latproj', latprojdetail?.nft_data)\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n\r\n\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(LatestProjectDetail(slug))\r\n        dispatch(GetUserAction())\r\n\r\n    }, [slug])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area project-nft-si main-proj-detail\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className='col-12'>\r\n                        <span className=\"p-0 title_main\">{latprojdetail.title}</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 relative\">\r\n                        <div className=\"item-info\" >\r\n\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <><div>\r\n                                    {latprojdetail?.user_data?.user_id === userdet?.user_id && localStorage.getItem('authToken') &&\r\n                                        <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() => setModalShow(true)}></i>\r\n\r\n\r\n                                    }\r\n                                    <Banner\r\n                                        id={slug}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div><img src={latprojdetail?.image} alt=\"first nft\" /></>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"fundraiser mt-4 \">\r\n                            <div className='lorem_done'>\r\n                                <img width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" src={latprojdetail?.user_data?.organization_detail?.logo} />\r\n                                {/* <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                </svg> */}\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 col-12 mt-4 mt-lg-0\">\r\n                        <div className='proj-left user_icon'>\r\n                            <div className=\"progress_nft \">\r\n                                <div className='progress_main '><span>\r\n                                    {/* ({Number(latprojdetail.project_count) * Number(matic['matic-network']?.cad)} of {Number(latprojdetail.price) * Number(Math.round(matic['matic-network']?.cad))} MATIC ) */}\r\n                                    <span className='nft_price'>${Number(Math.round(latprojdetail.project_count)) * Number(Math.round(matic['matic-network']?.cad))} raised of ${Math.round(Number(latprojdetail.price)) * Number(Math.round(matic['matic-network']?.cad))} Cdn Goal</span>\r\n                                    <div>\r\n\r\n                                        {/* ${Math.round(latprojdetail.project_count)} raised of ${Math.round(latprojdetail.price)} Cdn Goal */}\r\n                                        <span className='nft_price'>({Math.round(latprojdetail.project_count)} of {Math.round(latprojdetail.price)} MATIC) </span>\r\n                                    </div>\r\n                                    {/* <span className='nft_price'>{latprojdetail.project_count} raised of {latprojdetail.price} Cdn goal (150 of 758 MATIC)</span><small>  </small> */}\r\n                                    <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        {/* <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span> */}\r\n                                    </div>\r\n                                    <p className='donation-count'> ${latprojdetail.project_count} RAISED</p>\r\n                                </span>\r\n                                </div>\r\n\r\n                                <div className=\"d-flex flex-wrap gap-5 justify-content-start\">\r\n\r\n\r\n                                    <>\r\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Invest\r\n                                        </Button>\r\n\r\n\r\n\r\n                                        </a>\r\n                                        <Button className=\"btn sm:ml-2 btn-bordered-white m-0\" variant=\"primary\" onClick={() => setModalShowrefer(true)}>\r\n\r\n\r\n                                            Share\r\n                                        </Button><ReferalPopup\r\n                                            id={slug}\r\n                                            userRef={userDetail}\r\n                                            show={modalShowrefer}\r\n                                            onHide={() => setModalShowrefer(false)} /></>\r\n\r\n\r\n                                </div>\r\n                                {latprojdetail?.user_invest && latprojdetail?.user_invest?.length ?\r\n                                    [...new Map(latprojdetail?.user_invest?.slice(0, 3)?.map(item =>\r\n                                        [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                            const date1 = new Date(item.updated_at)\r\n                                            const date2 = new Date()\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            console.log('days', days_difference)\r\n                                            return (\r\n                                                <ul className=\"m-0 custom_lis pl-0 \">\r\n                                                    <li>\r\n                                                        <div className='lorem_done p-0'>\r\n                                                            <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#494c4e\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                            </svg>\r\n                                                            </span>\r\n\r\n                                                            <span><div className=\"progress_name\">{item.username} </div> <div> ${item.price} Cdn / {Math.round(Number(latprojdetail.price) * Number(matic['matic-network']?.cad))} MATIC ({days_difference} days ago)</div></span>\r\n                                                        </div>\r\n                                                    </li>\r\n\r\n\r\n                                                </ul>\r\n                                            )\r\n                                        }) :\r\n                                    <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\r\n\r\n                                        <span className='allproj2 w-100'>\r\n                                            No user has invested yet\r\n                                        </span>\r\n\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* {userDetail !== null && ( */}\r\n\r\n                    {/* )} */}\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n\r\n                                {/* <i class=\"fa-solid fa-pen\" ></i>\r\n\t\t\t\t\t\t<i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n\r\n\r\n                            </h5>\r\n                            <ReadMore data={latprojdetail.description} />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-lg-4 mt-4'>\r\n\r\n\r\n                        <div className='table-main-detail position-relative'>\r\n\r\n\r\n\r\n                            <ProjdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className='col-12'>\r\n                        <div className='mt-4'>\r\n                            <div className='table-detail'>\r\n                                <LatNftdataTable />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\" col-12 mt-4\">\r\n                        <div id=\"invest\" className=\"items mt-0 explore-items p-0\">\r\n                            <ProjNFTS\r\n                                refid={refid}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n\r\n}\r\n\r\nexport default ProjDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ProjDetails from '../components/ItemDetails/viewProdetails';\r\n\r\n\r\nconst latprojDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ProjDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default latprojDetails;","import React, { useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { GetCollectionsAction } from '../../redux/Actions/projectAction'\r\nconst ShowCollections = () => {\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n    }, [])\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <span>Explore</span>\r\n                            <h3 className=\"mt-3 mb-0\">My Collections</h3>\r\n                            <p>Mint NFTs that are based on real-life projects or events related to important causes.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items explore-items h-auto\">\r\n                    <Link to={`/collection/${''}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                        <div>\r\n                            <div className=\"card\">\r\n                                <div className=\"image-over\">\r\n                                    {/* <Link to={`/collection/${''}`}> */}\r\n                                    <img className=\"card-img-top\" src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                                    {/* </Link> */}\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 p-0\">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-0\">{col.name}</h5>\r\n                                        </a>\r\n                                        <div className=\"seller d-flex align-items-center my-3\">\r\n                                            <span style={{ color: '#8E8E8E' }}>{col?.nfts?.[0]?.name}</span>\r\n                                            <a href=\"/author\">\r\n                                                <h6 className=\"ml-2 mb-0\"> </h6>\r\n                                            </a>\r\n                                        </div>\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                            <span> {col.price}</span>\r\n                                            <span> {col.number_of_nft}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                    {/* ) */}\r\n                    {/* })} */}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default ShowCollections","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ShowCollections from '../components/Create/showCollections';\r\n\r\nconst Showcollections = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ShowCollections />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Showcollections;","import React, { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\r\nconst CollItem = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch()\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    useEffect(() => {\r\n        // \r\n        dispatch(ProjectDetail(id))\r\n    }, [id])\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center text-center mt-5 mt-lg-0\">\r\n                <div className=\"col-12\">\r\n                    {/* Explore Menu */}\r\n                    <div className=\"explore-menu btn-group btn-group-toggle flex-wrap justify-content-center text-center mb-4\" data-toggle=\"buttons\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row items explore-items\">\r\n                {Object.keys(projdetail).map((item, idx) => {\r\n                    // {projdetail?.map((item, idx) => {\r\n                    return (\r\n                        <div key={`eds_${idx}`} className=\"col-12 col-md-6 item explore-item\" >\r\n                            <div className=\"card no-hover text-center\">\r\n                                <div className=\"image-over\">\r\n                                    <a href=\"/item-details\">\r\n                                        {/* <img className=\"card-img-top\" src={item.img} alt=\"\" /> */}\r\n                                    </a>\r\n                                    {/* Author */}\r\n                                    <a className=\"author\" href=\"/authors\">\r\n                                        <div className=\"author-thumb avatar-lg\">\r\n                                            <img className=\"rounded-circle\" src={item?.nft_data?.title} alt=\"\" />\r\n                                        </div>\r\n                                    </a>\r\n                                </div>\r\n                                {/* Card Caption */}\r\n                                <div className=\"card-caption col-12 \">\r\n                                    {/* Card Body */}\r\n                                    <div className=\"card-body mt-4\">\r\n                                        <a href=\"/item-details\">\r\n                                            <h5 className=\"mb-2\">{item?.nft_data?.title}</h5>\r\n                                        </a>\r\n                                        {/* <span>{item.content}</span> */}\r\n                                        <hr />\r\n                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default CollItem;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetCollectionDetails, ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport { Button } from 'react-bootstrap';\r\nimport CollItem from './bread-crumb';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst CollectionDetails = () => {\r\n\r\n    const initData = {\r\n        itemImg: \"/img/avtar1.png\",\r\n        date: \"2022-03-30\",\r\n        tab_1: \"Bids\",\r\n        tab_2: \"History\",\r\n        tab_3: \"Details\",\r\n        ownerImg: \"/img/avtar1.png\",\r\n        itemOwner: \"Themeland\",\r\n        created: \"15 Jul 2021\",\r\n        title: \"Walking On Air\",\r\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n        price_1: \"1.5 ETH\",\r\n        price_2: \"$500.89\",\r\n        count: \"1 of 5\",\r\n        size: \"14000 x 14000 px\",\r\n        volume: \"64.1\",\r\n        highest_bid: \"2.9 BNB\",\r\n        bid_count: \"1 of 5\",\r\n        btnText: \"Place a Bid\"\r\n    }\r\n    const tabData_1 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"14 ETH\",\r\n            time: \"4 hours ago\",\r\n            author: \"@arham\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"10 ETH\",\r\n            time: \"8 hours ago\",\r\n            author: \"@junaid\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"12 ETH\",\r\n            time: \"3 hours ago\",\r\n            author: \"@yasmin\"\r\n        }\r\n    ]\r\n\r\n    const tabData_2 = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            price: \"32 ETH\",\r\n            time: \"10 hours ago\",\r\n            author: \"@hasan\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            price: \"24 ETH\",\r\n            time: \"6 hours ago\",\r\n            author: \"@artnox\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            img: \"/img/avtar3.png\",\r\n            price: \"29 ETH\",\r\n            time: \"12 hours ago\",\r\n            author: \"@meez\"\r\n        }\r\n    ]\r\n\r\n    const sellerData = [\r\n        {\r\n            id: \"1\",\r\n            img: \"/img/avtar1.png\",\r\n            seller: \"@ArtNoxStudio\",\r\n            post: \"Creator\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            img: \"/img/avtar2.jpg\",\r\n            seller: \"Virtual Worlds\",\r\n            post: \"Collection\"\r\n        }\r\n    ]\r\n\r\n    const { id } = useParams();\r\n    // console.log(id, 'idd')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const coldetail = useSelector(state => {\r\n        return state?.projectdetails?.getcollectiondetails\r\n    })\r\n    // console.log(coldetail, 'coldetail')\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionDetails(id))\r\n    }, [id])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <><div className=\"item-thumb text-center\">\r\n                                <img src='https://images.unsplash.com/photo-1544716278-ca5e3f4abd8c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=774&q=80' alt=\"\" />\r\n                            </div>\r\n\r\n\r\n                            </>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            <div className='d-flex  align-items-center justify-content-between'>\r\n                                <h3 className=\"m-0\">{coldetail.title}</h3>\r\n\r\n                                <div className='eddlbtton d-flex  align-items-center '>\r\n                                    <Button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" variant=\"primary\" onClick={() => setModalShow(true)} style={{ color: '#FFF' }}>\r\n                                        Add item\r\n                                    </Button>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <ReadMore data={coldetail?.description} />\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <CollItem />\r\n                </div>\r\n            </div >\r\n\r\n\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\nexport default CollectionDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport CollectionDetails from '../components/Create/collectionDetail';\r\n\r\n\r\nconst CollectionDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <CollectionDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CollectionDetail;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\n\r\nimport JoditEditor from 'jodit-react';\r\nimport { useParams } from 'react-router';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction DesPopup(props) {\r\n    const editor = useRef(null);\r\n\r\n    const [country, setCountry] = useState()\r\n    const [type, setType] = useState()\r\n    const dispatch = useDispatch()\r\n    const slug = useParams()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const [description, setDescription] = useState();\r\n\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    useEffect(() => {\r\n        if (projdetail && Object.keys(projdetail).length) {\r\n\r\n            setValue(\"title\", projdetail.title)\r\n            setValue(\"address\", projdetail.address)\r\n            setValue(\"description\", projdetail.description)\r\n            setValue('state', projdetail.state)\r\n            setValue('country', projdetail.country)\r\n            setValue('city', projdetail.city)\r\n            setValue(\"price\", projdetail.price)\r\n            setValue(\"number_of_nft\", projdetail.number_of_nft)\r\n            setValue(\"start_date\", projdetail.start_date)\r\n            setValue(\"end_date\", projdetail.end_date)\r\n            setValue(\"type\", projdetail.type)\r\n            setValue('category_id', projdetail.category_id)\r\n\r\n            setType(projdetail.type)\r\n            setCountry(projdetail.country)\r\n            // setState(projdetail.state)\r\n            // setCity(projdetail.city)\r\n            setDescription(projdetail.description)\r\n            console.log(projdetail.state, 'edit state')\r\n            console.log(projdetail.city, 'edit city')\r\n            setValue(\"image\", projdetail.image)\r\n            const formData = new FormData()\r\n            // formData.append('country_id', event?.currentTarget?.value)\r\n            formData.append('country_id', projdetail.country)\r\n            formData.append('state_id', projdetail.state)\r\n            dispatch(StateList(formData))\r\n            dispatch(CityList(formData))\r\n\r\n        }\r\n    }, [projdetail]);\r\n\r\n    const OnSubmit = (data) => {\r\n        const formData = new FormData()\r\n\r\n        // formData.append('image', data.image[0])\r\n        formData.append('title', data.title)\r\n        formData.append('description', description)\r\n        formData.append('state', data.state)\r\n        formData.append('country', data.country)\r\n        formData.append('city', data.city)\r\n        formData.append('address', data.address)\r\n        formData.append('price', data.price)\r\n        formData.append('number_of_nft', data.number_of_nft)\r\n        if (data?.type == 1) {\r\n\r\n            formData.append('start_date', '')\r\n            formData.append('end_date', '')\r\n        } else {\r\n\r\n            formData.append('start_date', data.start_date)\r\n            formData.append('end_date', data.end_date)\r\n        }\r\n        formData.append('type', data.type)\r\n        formData.append('category_id', data.category_id)\r\n\r\n        dispatch(UpdateProject(props, formData))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n\r\n                <div>\r\n                    <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12\">\r\n                            <label>Description</label>\r\n                            <div className=\"form-group\">\r\n\r\n                                <Controller\r\n                                    control={control}\r\n                                    name=\"description\"\r\n                                    defaultValue=\"\"\r\n                                    render={({ field: { value, onChange } }) => {\r\n                                        return <JoditEditor\r\n                                            ref={editor}\r\n                                            value={value}\r\n                                            // config={config}\r\n\r\n                                            placeholder=\"start typing\"\r\n                                            tabIndex={1} // tabIndex of textarea\r\n                                            onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                            onChange={newContent => { }}\r\n                                        />\r\n                                    }}\r\n                                />\r\n                                {/* <textarea value={value} onChange={setDescription}></textarea> */}\r\n\r\n\r\n\r\n                                {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Update</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default DesPopup","import React, { useEffect, useState } from 'react';\r\nimport { Button, ProgressBar } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProjectDetail } from '../../redux/Actions/projectAction';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport Banner from './editBanner';\r\nimport DesPopup from './desPopup';\r\nimport ProjdataTable from '../Explore/projDetailtable';\r\nimport ReadMore from '../../readMore';\r\nimport { GetMatic } from '../ItemDetails/GetMAtic';\r\nimport ReferalPopup from '../ItemDetails/refralPopup';\r\nimport Swal from 'sweetalert2';\r\nimport { Alert, Space } from 'antd';\r\nimport ProTypePopup from './ProjectTypePopup';\r\n// import ProgressBar from 'react-bootstrap';\r\nconst ProjNftDetails = () => {\r\n    const { slug } = useParams()\r\n    // console.log(id, 'idd')\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [matic, setmatic] = useState('')\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [nftId, setNftID] = useState();\r\n    const [modalShowadd, setModalShowadd] = React.useState(false);\r\n    const [modalShowrefer, setModalShowrefer] = React.useState(false);\r\n    const dispatch = useDispatch()\r\n    const [modalShowDes, setModalShowDes] = React.useState(false);\r\n    const [projmodalShows, setProjModalShows] = React.useState(false);\r\n    const projdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log('projdetail', projdetail)\r\n    useEffect((event) => {\r\n        (GetMatic(setmatic))\r\n        dispatch(ProjectDetail(slug))\r\n    }, [slug])\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n    const bannerHandler = () => {\r\n    }\r\n    return (\r\n        <section className=\"item-details-area project-nft-si main-proj-detail \">\r\n            <div className=\"container\">\r\n                {projdetail.type === \"1\" &&\r\n                    <Space\r\n                        direction=\"vertical\"\r\n                        style={{\r\n                            width: '100%',\r\n\r\n                        }}\r\n                        className='project_type-icon'\r\n\r\n                    >\r\n                        <Alert\r\n                            message=\"Change you project from single to campaign to add more NFTs\"\r\n                            type=\"info\"\r\n                            showIcon\r\n                            action={\r\n                                <>\r\n                                    <i class=\"fa-solid fa-check\" onClick={() => setProjModalShows(true)}></i>\r\n                                    <ProTypePopup\r\n                                        id={slug}\r\n                                        show={projmodalShows}\r\n                                        onHide={() => setProjModalShows(false)}\r\n                                    />\r\n                                </>\r\n                            }\r\n\r\n\r\n\r\n\r\n                            closable\r\n                        />\r\n                    </Space>\r\n                }\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <span className=\"my-2 p-0 title_main\">{projdetail.title}</span>\r\n                    </div>\r\n                    <div className='col-12 col-lg-8'>\r\n                        <div className=\"item-info\" >\r\n                            <div className=\"item-thumb text-center\">\r\n                                <div>\r\n                                    <i class=\"fa-solid fa-pen-to-square item-thumb-edit\" onClick={() =>\r\n                                        setModalShow(true)}></i>\r\n                                    <Banner\r\n                                        id={slug}\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)} />\r\n                                </div>\r\n                                <img src={projdetail?.image} alt=\"first nft\" />\r\n                                {/* : null} */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"fundraiser mt-4 p-0\">\r\n                            <div className='lorem_done'>\r\n                                <img src={latprojdetail?.user_data?.organization_detail?.logo} width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" />\r\n                                <span className='cutom_dis'> {latprojdetail?.user_data?.organization_detail?.organization_name} is organizing this project.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 col-lg-4 mt-3 mt-lg-0'>\r\n                        <div className='progress_nft_main'>\r\n                            <div >\r\n                                <div className=\"progress_nft mb-3\">\r\n                                    <div className='progress_main'><span>\r\n                                        <span className='nft_price'>${Number(projdetail.project_count) * Number(matic['matic-network']?.cad)} raised of ${Number(projdetail.price) * Number(Math.round(matic['matic-network']?.cad))} Cdn </span>\r\n                                        <div>\r\n                                            <span className='nft_price'>({projdetail.project_count} of {projdetail.price} MATIC )</span>\r\n                                        </div>\r\n                                        <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" now={projdetail.project_percentage} />\r\n                                        </div>\r\n                                        <p className='donation-count'>${projdetail.project_count} Cdn RAISED</p>\r\n                                    </span>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-start\">\r\n                                        <a href='#invest'><Button variant=\"primary\" className=\" btn  btn-bordered-white m-0\">\r\n                                            Invest\r\n                                        </Button>\r\n                                        </a>\r\n                                        {projdetail?.nft_data && projdetail?.nft_data && projdetail?.nft_data.length > 0 && projdetail?.nft_data[0]?.is_mint == 0 ? (\r\n                                            <Button className=\" btn  btn-bordered-white m-0 ml-2\" variant=\"primary\" onClick={() => Swal.fire(\r\n                                                'Please mint your NFTs',\r\n                                            )}>\r\n                                                Share\r\n                                            </Button>\r\n                                        ) : (\r\n                                            <>\r\n                                                <Button className=\" btn  btn-bordered-white m-0 mr-2\" onClick={() => setModalShowrefer(true)} variant=\"primary\">\r\n                                                    Share\r\n                                                </Button>\r\n                                                <ReferalPopup\r\n                                                    id={slug}\r\n                                                    userRef={userDetail}\r\n                                                    show={modalShowrefer}\r\n                                                    onHide={() => setModalShowrefer(false)} />\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                    {projdetail?.user_invest && projdetail?.user_invest?.length ?\r\n                                        [...new Map(projdetail?.user_invest?.slice(0, 3)?.map(item =>\r\n                                            [item[\"title\"], item])).values()].map((item, idx) => {\r\n                                                // {projdetail.user_invest?.slice(0, 3)?.map((items) => {\r\n                                                const date1 = new Date(item.updated_at)\r\n                                                const date2 = new Date()\r\n                                                const time_difference = date2.getTime() - date1.getTime();\r\n                                                const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                console.log('days', days_difference)\r\n                                                return (\r\n                                                    <ul className=\"m-0 custom_lis pl-0\">\r\n                                                        <li>\r\n                                                            <div className='lorem_done p-0'>\r\n                                                                <span>\r\n                                                                    <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                        <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                        <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                        <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                                                    </svg>\r\n                                                                </span>\r\n                                                                <span><div className=\"progress_name\">{item.username} </div> <div>${item.price} Cdn / 40 MATIC ({days_difference} days ago)</div></span>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                )\r\n                                            }) :\r\n                                        <div className=\"col-12 col-sm-12 text-center col-lg-12 mt-2 mb-2\">\r\n                                            <span className='allproj2  w-100'>\r\n                                                No user has invested yet\r\n                                            </span>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 col-lg-8 mt-4'>\r\n                        <div class=\"user-description\">\r\n                            <h5 className='user_title justify-content-between'>\r\n                                <div className='d-flex align-items-center gap-5'> <div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div></div>\r\n                                <div >\r\n                                    <i class=\"fa-solid fa-pen\" onClick={() =>\r\n                                        setModalShowDes(true)}></i>\r\n                                    <DesPopup\r\n                                        id={slug}\r\n                                        show={modalShowDes}\r\n                                        onHide={() => setModalShowDes(false)} />\r\n                                </div>\r\n                            </h5>\r\n                            <ReadMore data={projdetail.description} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 col-lg-4 mt-4'>\r\n                        <div className='container table-main-detail position-relative'>\r\n                            <ProjdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-12 mt-4'>\r\n                    <div className='container table-detail'>\r\n                        <LatNftdataTable\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mt-4\">\r\n                    <div className='nfts_main' id='invest'>\r\n                        <div className='intro row m-0 p-0'>\r\n                            <div className=\"intro-content\">\r\n                                <span >NFTs</span>\r\n                                <h3 className=\"w-full mb-0 pt-4\">NFTs</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row items mt-0 explore-items px-0\">\r\n                            {projdetail.number_of_nft != projdetail?.nft_data?.length && (\r\n                                <div className='col-12 col-sm-6 col-lg-3 item explore-item'>\r\n                                    <div className='card no-hover m-0 add-nft '>\r\n                                        <div class=\"image-over relative\">\r\n                                            <Link to={`/addnft/${projdetail.slug}?projectid=${projdetail.id}`}>\r\n                                                + Add NFT </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            {projdetail?.nft_data?.map((x, idx) => {\r\n                                return (\r\n                                    <div key={`eds_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item \">\r\n                                        <div className=\"card no-hover m-0\">\r\n                                            <div className=\"image-over relative\">\r\n                                                {x.user_id == projdetail.user_id ? (\r\n                                                    <>\r\n                                                        <Link to={`/nft/details/${x.slug}?project=${slug}`}>\r\n                                                            {x.extention === 'Player' || x.extention === 'modal' ? (\r\n                                                                <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\r\n                                                            ) : (\r\n                                                                <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                            )}\r\n                                                        </Link>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    <Link to={`/nft/details/${x.slug}?project=${slug}`}>\r\n                                                        {x.extention === 'Player' || x.extention === 'modal' ? (\r\n                                                            <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\r\n                                                        ) : (\r\n                                                            <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                        )}\r\n                                                    </Link>\r\n                                                )}\r\n                                                <div className='token'>\r\n                                                    <span>#{x?.token_id}</span>\r\n                                                    <span className='cards-icons'>\r\n                                                        {x.is_mint == 0 &&\r\n                                                            <Link to={`/nft/details/${x.slug}?project=${slug}`} ><i className=\"fa-solid fa-pen\" /></Link>\r\n                                                        }\r\n                                                    </span>\r\n                                                </div>\r\n                                                {/* Author */}\r\n                                            </div>\r\n                                            {/* Card Caption */}\r\n                                            <div className=\"card-caption px-0 col-12 \">\r\n                                                {/* Card Body */}\r\n                                                <div className=\"card-body\">\r\n                                                    <a href=\"#\" className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <h5 className=\"m-0 pb-2 p-0 text-capitalize\">{x.title.slice(0, 16)}...</h5>\r\n                                                    </a>\r\n                                                    <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\r\n                                                        <span className='align-self-start' dangerouslySetInnerHTML={{ __html: x.description.slice(0, 52) }} />\r\n                                                    </div>\r\n                                                    <div className='mint d-flex justify-content-between button_group buy-invest-btn align-items-center nft-price' >\r\n                                                        {x.is_mint == 0 ? (\r\n                                                            <button className='btn py-2 ml-lg-auto btn-bordered-white'>\r\n                                                                <Link to={`/nft/details/${x.slug}`}>Sell</Link>\r\n                                                            </button>\r\n                                                        ) : (\r\n                                                            <>\r\n                                                                {x.user_id !== projdetail.user_id ? (\r\n                                                                    <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>\r\n                                                                        <a >SOLD OUT</a>\r\n                                                                    </button>\r\n                                                                ) : (\r\n                                                                    <button className='btn py-2 ml-lg-auto btn-bordered-white' disabled>\r\n                                                                        <a >Minted</a>\r\n                                                                    </button>\r\n                                                                )}\r\n                                                            </>\r\n                                                        )}\r\n                                                        <a> <img className=\"mr-1\" src='../img/image14.png' />{x.amount}</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\nexport default ProjNftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport ProjNftDetails from '../components/Create/projdetails';\r\n\r\nconst ProjNft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ProjNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjNft;","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Collapse } from 'antd';\r\nimport { getBid, NftList, ProjectDetail, ProjectList, UpdateBId } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Center, Loader } from '@react-three/drei';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { Spin } from 'antd';\r\n\r\n\r\nconst NftAuctiondataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { slug } = useParams()\r\n    const [bidstatus, setBidStatus] = useState(\" \")\r\n    console.log('biddst', bidstatus)\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const projdetail = useSelector(state => {\r\n        // debugger\r\n        return state?.projectdetails?.latestprojectdetails\r\n    })\r\n    console.log(projdetail, 'projdatanft')\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n\r\n    })\r\n    console.log(nftdetail, 'nftdetail')\r\n    useEffect(() => {\r\n        // debugger\r\n        dispatch(NftList(props.slug.id))\r\n\r\n    }, [props.slug.id])\r\n\r\n    const acceptHandler = (id) => {\r\n        console.log(\"accept\", id)\r\n        getBid(props)\r\n        dispatch(UpdateBId({ id, status: \"2\", setLoading, slug: props.slug.id }))\r\n    }\r\n    const rejectHandler = (id) => {\r\n        console.log(\"reject\", id)\r\n        getBid(props)\r\n        dispatch(UpdateBId({ id, status: \"3\", setLoading, slug: props.slug.id }))\r\n    }\r\n\r\n    const antIcon = (\r\n        <LoadingOutlined\r\n            style={{\r\n                fontSize: 35,\r\n                textAlign: \"center\"\r\n\r\n            }}\r\n            spin\r\n        />\r\n    )\r\n    return (\r\n        <div className='position-relative'>\r\n\r\n\r\n            < Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Latest Bids\" key=\"1\" >\r\n                    <Table responsive >\r\n                        {loading ? (\r\n                            <div className='spiner'>\r\n                                <Spin indicator={antIcon} />\r\n                            </div>\r\n                        ) : (\r\n                            <><thead>\r\n\r\n\r\n                                <tr>\r\n\r\n                                    <th>User</th>\r\n                                    <th>Bid Price</th>\r\n                                    <th>Wallet</th>\r\n                                    {/* <th>To</th> */}\r\n                                    {/* <th>Transaction</th> */}\r\n                                    <th>Action</th>\r\n                                </tr>\r\n\r\n\r\n                            </thead><tbody className='img_table'>\r\n                                    {nftdetail.bids?.map((item) => {\r\n\r\n                                        return (\r\n                                            <tr>\r\n\r\n                                                <td>{item.username}</td>\r\n                                                <td>{item.amount}</td>\r\n                                                <td>{item.pay_from?.slice(0, 4)}...{item.pay_from?.slice(35, 44)}</td>\r\n                                                {/* <td>{item.pay_to?.slice(0, 4)}...{item.pay_to?.slice(35, 44)}</td> */}\r\n                                                {/* <td>{item.txd_id?.slice(0, 4)}...{item.txd_id?.slice(35, 44)}</td> */}\r\n                                                <td className='Btn_td'>\r\n                                                    {item.status == 1 ? (\r\n\r\n                                                        <><Button type=\"submit\" className={nftdetail.bid_approved_id !== null ? \"btndisabled\" : \"table-btn \"} onClick={() => acceptHandler(item.id)} disabled={nftdetail.bid_approved_id !== null ? true : false}>Accept</Button>\r\n                                                            <Button type=\"submit\" className={nftdetail.bid_approved_id !== null ? \"btndisabled\" : \"table-btn \"} onClick={() => rejectHandler(item.id)} disabled={nftdetail.bid_approved_id !== null ? true : false}>Reject</Button></>\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            {/* {nftdetail?.bid_approved_id !== null && } */}\r\n                                                            <a className='auctionbttn'>Confirmed</a>\r\n                                                        </>\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n\r\n                                </tbody></>\r\n\r\n                        )}\r\n                    </Table>\r\n                    {nftdetail?.bids?.length == 0 &&\r\n                        <div className='nothing'>\r\n\r\n                            No matching records found\r\n                        </div>\r\n                    }\r\n                </Panel>\r\n\r\n            </Collapse>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default NftAuctiondataTable","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { set, useForm } from 'react-hook-form';\r\nimport 'antd/dist/antd.css';\r\nimport { Steps } from 'antd';\r\nimport { LoadingOutlined, SmileOutlined, SolutionOutlined, UserOutlined, CheckOutlined } from '@ant-design/icons'\r\nimport { useParams } from 'react-router';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n\r\nfunction NftPopup(props) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const { id } = useParams();\r\n    const OnSubmit = (data) => {\r\n        // dispatch(CreateCollectionAction(data))\r\n    }\r\n\r\n    const description = 'This is a description.';\r\n    function gettxhashAddress() {\r\n        // \r\n        return window.ethereum?.selectedAddress;\r\n    }\r\n    // function getconfirmAddress() {\r\n    //     // \r\n    //     return web3.eth.getTransactionReceipt;\r\n    // }\r\n    // useEffect(() => {\r\n    // setTxhash(gettxhashAddress())\r\n    // setConfirm(getconfirmAddress())\r\n    // if (txhas) {\r\n    // setCurrent(1)\r\n    // setCurrent(2)\r\n    // setCurrent(3)\r\n    // }\r\n    // }, [])\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.nftlist\r\n    })\r\n    // console.log('latprojdetailpop', nftdetail)\r\n    // const mint = () => {\r\n    //     CreateMetaDataAndMint({\r\n    //         _name: nftdetail.title,\r\n    //         _des: nftdetail.description,\r\n    //         _imgBuffer: nftdetail.image\r\n    //     })\r\n    // }\r\n\r\n    const { Step } = Steps;\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Follow steps\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Steps current={props.current} direction='vertical'>\r\n                        <Step title=\"Deploying contract\" description='Uploading of all media assets and metadata to IPFS' />\r\n                        <Step icon={props.current == 0 && <LoadingOutlined type=\"loading\" />} title=\"Mint\" description='Send transaction to create your NFT' />\r\n                        <Step icon={props.current !== 2 ? <LoadingOutlined type=\"loading\" /> : props.current == 2 && <CheckOutlined type=\"finish\" />} title=\"Approve\" description='This transaction is conducted only once per collection' />\r\n\r\n                    </Steps>\r\n\r\n\r\n                </Modal.Body>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NftPopup","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction, ResellNft, UpdateProject } from '../../redux/Actions/projectAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport JoditEditor from 'jodit-react';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport Web3 from 'web3';\r\nimport React from 'react';\r\nimport { CityList, StateList } from '../../redux/Actions/authAction';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { CreateMetaDataAndMint, UpdateStatus } from '../Wallet/interact';\r\nimport NftPopup from './nftPopup';\r\nimport { useFormData } from '../Create/Context/context';\r\nimport { LogsAction } from '../../redux/Actions/logsAction';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nfunction SellPopup(props) {\r\n    const history = useHistory()\r\n    const [current, setCurrent] = React.useState(0)\r\n    const dispatch = useDispatch()\r\n    const slug = useParams()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n\r\n    const [auctiontype, setAuctionType] = useState(\"\")\r\n    // console.log(\"auction type\", auctiontype)\r\n    const autionTypeChange = (event) => {\r\n\r\n        setAuctionType(event.target.value);\r\n\r\n    }\r\n    const [auctiondata, setAuctiondata] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [startdate, setStartdate] = useState(\"\")\r\n    const [enddate, setEnddate] = useState(\"\")\r\n    const location = useLocation();\r\n\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    console.log('nftdetail', nftdetail)\r\n\r\n    const mint = (contractAddress, type, start_date, end_date, price) => {\r\n        // auctiondata.map((item) => {\r\n        //     setPrice(item.price)\r\n        // })\r\n        CreateMetaDataAndMint({\r\n\r\n            _name: nftdetail.title,\r\n            _des: nftdetail.description,\r\n            _imgBuffer: nftdetail.image,\r\n            contractAddress,\r\n            setCurrent,\r\n            collid: nftdetail?.collection_id,\r\n            nft_file_content: nftdetail?.nft_file_content,\r\n            slug,\r\n            dispatch,\r\n            setModalShow,\r\n\r\n            // auctiondata\r\n            type,\r\n            price,\r\n            start_date,\r\n            end_date,\r\n\r\n        })\r\n    }\r\n\r\n    const deployContract = async (type, start_date, end_date, price) => {\r\n        try {\r\n            if (nftdetail?.collectionData?.contract_id == null) {\r\n\r\n                await window.ethereum.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: web3.utils.toHex('80001') }],\r\n                })\r\n\r\n                // const { address } = await ConnectWallet()\r\n                const address = window?.ethereum?.selectedAddress\r\n                const MyNFTContract = new web3.eth.Contract(NFTContract.abi)\r\n                const gas = await web3.eth.getGasPrice();\r\n                // const gas = 500000\r\n\r\n                MyNFTContract.deploy({\r\n                    data: NFTContract.bytecode,\r\n                    arguments: [nftdetail?.collectionData?.title, nftdetail?.collectionData?.symbol],\r\n                }).send({\r\n                    from: address,\r\n                })\r\n                    .on('error', (error) => {\r\n                        // console.log(error)\r\n                    })\r\n                    .on('transactionHash', (transactionHash) => {\r\n                        // console.log(transactionHash, \"transactionHash\")\r\n                    })\r\n                    .on('receipt', (receipt) => {\r\n                        // receipt will contain deployed contract address\r\n                        // console.log(receipt, \"reciept\")\r\n                    })\r\n                    .on('confirmation', (confNumber, receipt) => {\r\n                        // console.log(receipt.contractAddress, \"confirmRecipet\")\r\n                        if (confNumber == 1) {\r\n                            mint(receipt?.contractAddress)\r\n                            // setContractAdd(receipt?.contractAddress)\r\n                            // UpdateContract(id)\r\n                        }\r\n\r\n                    })\r\n            } else {\r\n                mint(nftdetail?.collectionData?.contract_id, type, start_date, end_date, price)\r\n            }\r\n            return {\r\n                success: true,\r\n                // status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\" + txHash\r\n                status: \":white_check_mark: Check out your transaction on Etherscan: <https://ropsten.etherscan.io/tx/>\"\r\n            }\r\n        } catch (error) {\r\n            // \r\n            dispatch(LogsAction(error))\r\n            alert(\"error\", \"contract not deployed please try again\", \"error\")\r\n            setModalShow(false)\r\n            return {\r\n                success: false,\r\n                status: \":disappointed_relieved: Something went wrong: \" + error.message\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    console.log('mint', props.ismint)\r\n    const OnSubmit = async (data) => {\r\n\r\n        setModalShow(true)\r\n        const formData = new FormData()\r\n        formData.append(\"nft_id\", props.nftid)\r\n        formData.append(\"type\", data.auctiontype)\r\n        formData.append(\"end_date\", data.end_date)\r\n        formData.append(\"start_date\", data.start_date)\r\n        formData.append(\"price\", data.price)\r\n        {\r\n            props.ismint == 1 ? (\r\n\r\n                dispatch(ResellNft(formData, props))\r\n            ) : (\r\n                await deployContract({ type: data.auctiontype, end_date: data.end_date, start_date: data.start_date, price: data.price })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const disablePastDate = () => {\r\n        const today = new Date();\r\n        const dd = String(today.getDate() + 0).padStart(2, \"0\");\r\n        const mm = String(today.getMonth() + 0).padStart(2, \"0\"); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n        return yyyy + \"-\" + mm + \"-\" + dd;\r\n    };\r\n\r\n    const today = new Date();\r\n    const numberOfDaysToAdd = 30;\r\n    const date = today.setDate(today.getDate());\r\n    const date1 = today.setDate(today.getDate() + numberOfDaysToAdd);\r\n    const defaultValue = new Date(date).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    const defaultValue1 = new Date(date1).toISOString().substr(0, 10) // yyyy-mm-dd\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div className='d-flex justify-content-between w-full'>\r\n                    <label className='modal-title h4 '>List for sale</label> <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover form-sell\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-12 \">\r\n                            <div className=\"form-group\">\r\n                                <div className='mb-3'>Choose a type of sale</div>\r\n\r\n                                <div className=\"form-check form-check-inline mr-2\">\r\n                                    {/* {data.usertype == 2 ? ( */}\r\n                                    <>\r\n                                        <input\r\n                                            className=\"form-check-input\"\r\n                                            type=\"radio\"\r\n                                            name=\"radiobutton\"\r\n                                            id=\"1\"\r\n                                            onChange={autionTypeChange}\r\n                                            defaultChecked\r\n                                            value=\"1\"\r\n                                            {...register(\"auctiontype\", { required: true })}\r\n                                            aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\r\n\r\n                                        />\r\n                                        <label className=\"form-check-label mr-2\" htmlFor=\"buy\">Fixed Price</label>\r\n                                    </>\r\n\r\n\r\n                                    <><input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"radio\"\r\n                                        name=\"radiobutton\"\r\n                                        id=\"2\"\r\n\r\n                                        onChange={autionTypeChange}\r\n                                        value=\"2\"\r\n                                        {...register(\"auctiontype\", { required: true })}\r\n\r\n                                        aria-invalid={errors.auctiontype ? \"true\" : \"false\"}\r\n\r\n                                    />\r\n                                        <label className=\"form-check-label\" htmlFor=\"auction\">English Auction</label></>\r\n                                    {/* )} */}\r\n                                </div>\r\n\r\n                                {errors.auctiontype?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Type is required</p>}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 col-12\">\r\n                            {/* {type == 1 && ( */}\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                <label>Set Price in MATIC</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"price\"\r\n                                    {...register(\"price\", { required: true })}\r\n                                    aria-invalid={errors.price ? \"true\" : \"false\"}\r\n                                />\r\n                                {/* {errors.title && errors.title?.type === 'pattern' && <p style={{ color: 'red' }} role=\"alert\">Only VarChar allowed</p>} */}\r\n                                {errors.price?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">price is required</p>}\r\n\r\n                            </div>\r\n                            {/* )} */}\r\n                        </div>\r\n                        <>\r\n                            <label className='col-12 my-3'>Set Duration </label>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Start date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        // placeholder='dd-mm-yy'\r\n                                        // hidden={data.type == 1}\r\n                                        defaultValue={defaultValue}\r\n                                        className=\"form-control\"\r\n                                        name=\"start_date\"\r\n                                        // value={defaultValue}\r\n                                        min={disablePastDate()}\r\n\r\n                                        {...register(\"start_date\", { required: true })}\r\n                                    // aria-invalid={errors.start_date ? \"true\" : \"false\"} \r\n                                    />\r\n                                    {/* {errors.start_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Start date is required</p>} */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label>End Date</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control\"\r\n                                        name=\"end_date\"\r\n                                        min={disablePastDate()}\r\n                                        defaultValue={defaultValue1}\r\n                                        // value={defaultValue1}\r\n                                        {...register(\"end_date\")}\r\n                                        aria-invalid={errors.end_date ? \"true\" : \"false\"}\r\n                                    />\r\n                                    <div >\r\n\r\n                                    </div>\r\n                                    {errors.end_date?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">End date is required</p>}\r\n                                </div>\r\n                            </div>\r\n                            {auctiontype == 1 ? (\r\n\r\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days after which the listing may expire and be removed</span>\r\n                            ) : (\r\n                                <span className='col-12 salewrap'>sale duration: 30 days (default),  60 days, 90 days</span>\r\n                            )}\r\n                        </>\r\n                        <div className='w-full text-center'>\r\n                            {props.ismint == 1 ? (\r\n                                <button type=\"submit\" className=\" mb-0 btn btn-bordered-white\" style={{ color: '#FFF' }}\r\n                                >Sell</button>\r\n                            ) : (\r\n                                <>\r\n\r\n                                    <button type=\"submit\" className=\" mb-0 btn btn-bordered-white\" style={{ color: '#FFF' }}\r\n                                        id=\"nftdetail.id\">Mint</button><NftPopup\r\n                                        show={modalShow}\r\n                                        current={current}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </>\r\n\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n\r\n        </Modal >\r\n    );\r\n}\r\n\r\nexport default SellPopup","import { Button, Form, Input, } from 'antd';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\n\r\nimport swal from 'sweetalert';\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\nconst EditNftName = (props) => {\r\n    // debugger\r\n    const editor = useRef(null);\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n    const [form] = Form.useForm()\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props?.nft_id?.id))\r\n    }, [props?.nft_id?.id])\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    const handleUpload = (e) => {\r\n        const filetype = e.target.files[0].type;\r\n        var fr = new FileReader();\r\n        fr.onload = function () {\r\n            var img = new Image();\r\n            img.onload = function () {\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n                    setNFtFileType(\"modal\");\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n        }\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n        })\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n    }, [form, nftdetail])\r\n    const onFinish = async (values) => {\r\n        // debugger\r\n        try {\r\n            setLoading(true)\r\n            if (source) {\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n                const formData = new FormData()\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n                formData.append('collection_id', nft_collection_id)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"main-create\" >\r\n            {/* {loading ? (\r\n                <Loader />\r\n            ) : ( */}\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            // centered\r\n            >\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Update NFT\r\n                    </Modal.Title>\r\n                    <div>\r\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='col-12 item-form card no-hover'>\r\n                        <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                            nfts: nfts, defaultValues\r\n                        }}\r\n                            onFinish={(event) => onFinish(event)}\r\n                            autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                            <Form.List name=\"nfts\">\r\n                                {(fields, { add, remove }) => (\r\n                                    <>\r\n                                        <>\r\n                                            {fields.map(({ key, name, ...restField }, index) => (\r\n                                                <Fragment>\r\n                                                    <div className=\"row relative\">\r\n                                                        <div className=\"col-12\">\r\n                                                            <label>Name</label>\r\n                                                            <div>\r\n                                                                <Form.Item\r\n                                                                    {...restField}\r\n                                                                    name={[name, \"nft_name\"]}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Missing  name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    {/* <label>Name</label> */}\r\n                                                                    <Input placeholder=\"Name\" />\r\n                                                                </Form.Item>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Fragment>\r\n                                            ))}\r\n                                        </></>\r\n                                )}\r\n                            </Form.List>\r\n                            <Form.Item>\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                </div>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            {/* )} */}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftName;","import { Button, Form, Input, } from 'antd';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport swal from 'sweetalert';\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\nconst EditNftDesc = (props) => {\r\n    // debugger\r\n    const editor = useRef(null);\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n    const [nft, setNft] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    console.log(nft_collection_id, \"sdfasf\")\r\n    const [form] = Form.useForm()\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id?.id))\r\n    }, [props.nft_id?.id])\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    const handleUpload = (e) => {\r\n        const filetype = e.target.files[0].type;\r\n        var fr = new FileReader();\r\n        fr.onload = function () {\r\n            var img = new Image();\r\n            img.onload = function () {\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(e.target.files[0]);\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n                    setNFtFileType(\"modal\");\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n        }\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n        })\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n    }, [form, nftdetail])\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n            if (source) {\r\n                const nftImagepromises = [uploadNFT(nft)]\r\n                const imagesRes = await Promise.all(nftImagepromises).then(res => res)\r\n                const addedImage = imagesRes?.map(x => ipfsBaseUrl + x?.data?.data?.image_hash)\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n                const formData = new FormData()\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n                formData.append('collection_id', nft_collection_id)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"main-create\" >\r\n            {/* {loading ? (\r\n                <Loader />\r\n            ) : ( */}\r\n            <Modal className=\"edit_nft_popup\"\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n            // centered\r\n            >\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter \">\r\n                        Update NFT\r\n                    </Modal.Title>\r\n                    <div>\r\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='col-12'>\r\n                        <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                            nfts: nfts, defaultValues\r\n                        }}\r\n                            onFinish={(event) => onFinish(event)}\r\n                            autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                            <Form.List name=\"nfts\">\r\n                                {(fields, { add, remove }) => (\r\n                                    <>\r\n                                        <>\r\n                                            {fields.map(({ key, name, ...restField }, index) => (\r\n                                                <Fragment>\r\n                                                    <div className=\"row relative\">\r\n                                                        <div className=\"col-12\">\r\n                                                            <label>Name</label>\r\n                                                            <label>Description</label>\r\n                                                            <div>\r\n                                                                <Form.Item\r\n                                                                    {...restField}\r\n                                                                    name={[name, \"nft_description\"]}\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Missing  description',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <JoditEditor\r\n                                                                        ref={editor}\r\n                                                                        value={'nft_description'}\r\n                                                                        placeholder=\"start typing\"\r\n                                                                        tabIndex={1} // tabIndex of textarea\r\n                                                                        onChange={newContent => { }}\r\n                                                                    />\r\n                                                                    {/* }} */}\r\n                                                                    {/* /> */}\r\n                                                                </Form.Item>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Fragment>\r\n                                            ))}\r\n                                        </></>\r\n                                )}\r\n                            </Form.List>\r\n                            <Form.Item>\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                </div>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            {/* )} */}\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftDesc;","import { Button, Form, Input, } from 'antd';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CreateProjectAction, GetCollectionsAction, NftList, UpdateNft, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport { useFormData } from './Context/context'\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useParams } from 'react-router';\r\nimport CollPopup from './createCollection';\r\nimport DModal from './3dModal';\r\nimport swal from 'sweetalert';\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\nconst EditNftImage = (props) => {\r\n    const editor = useRef(null);\r\n    const [nftFileType, setNFtFileType] = useState('Image')\r\n    const [nft, setNft] = useState([])\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [size, setSize] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    const [previewnft, setPreviewnft] = useState()\r\n    const [preview, setPreview] = useState()\r\n    const [source, setSource] = useState()\r\n    const [modalShowcoll, setModalShowcoll] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"0\" });\r\n    const [form] = Form.useForm()\r\n    const [image, setImage] = useState()\r\n    const [loading, setLoading] = useState(false)\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n        dispatch(NftList(props.nft_id?.id))\r\n    }, [props.nft_id?.id])\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const nftdetail = useSelector(state => {\r\n        return state.projectdetails.nftlist\r\n    })\r\n    const handleUpload = (e) => {\r\n        const filetype = e.target.files[0].type;\r\n        var fr = new FileReader();\r\n        fr.onload = function () {\r\n            var img = new Image();\r\n            img.onload = function () {\r\n                setNftwidth(img.width);\r\n                setNftheight(img.height);\r\n            };\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert(\"Filesize must 100mb or below\");\r\n        } else {\r\n            setSource(URL.createObjectURL(e.target.files[0]));\r\n            setNft(prevState => {\r\n                return [\r\n                    e?.target?.files[0]\r\n                ]\r\n            }\r\n            );;\r\n            switch (filetype) {\r\n                case \"image/png\":\r\n                case \"image/jpg\":\r\n                case \"image/gif\":\r\n                case \"image/svg\":\r\n                    setNFtFileType(\"Image\");\r\n                    //   setSourceType(\"I\") \r\n                    break;\r\n                case \"audio/mpeg\":\r\n                case \"audio/ogg\":\r\n                case \"video/mp4\":\r\n                case \"video/webm\":\r\n                    setNFtFileType(\"Player\");\r\n                    break;\r\n                case \"\":\r\n                    setNFtFileType(\"modal\");\r\n                    break;\r\n                default:\r\n                    setNFtFileType(\"Image\");\r\n            }\r\n        }\r\n    };\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n        setPreview(URL.createObjectURL(pimage))\r\n    };\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            nfts: [{\r\n                nft_name: nftdetail.title,\r\n                nft_description: nftdetail.description,\r\n                nft_collection_id: nftdetail.collection_id,\r\n                nft_image: nftdetail.image,\r\n                preview_imag: nftdetail.preview_imag,\r\n            }]\r\n        })\r\n        setImage(nftdetail.image)\r\n        setNFtFileType(nftdetail.extention)\r\n        setPreviewnft(nftdetail.preview_imag)\r\n        setNft_collection_id(nftdetail.collection_id)\r\n    }, [form, nftdetail])\r\n    const onFinish = async (values) => {\r\n        // debugger\r\n        try {\r\n            setLoading(true)\r\n            if (source) {\r\n                // const nftImagepromises = uploadNFT(nft)\r\n                const imagesRes = await uploadNFT(nft, dispatch)\r\n                const addedImage = imagesRes?.data?.data.map(x => ipfsBaseUrl + x?.image_hash)\r\n                var str = addedImage;\r\n                var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n                // debugger\r\n                if (check === false) {\r\n                    const formData = new FormData()\r\n                    formData.append('image', addedImage)\r\n                    formData.append('title', values?.nfts?.map(x =>\r\n                        x.nft_name\r\n                    ))\r\n                    formData.append('collection_id', nft_collection_id)\r\n                    formData.append('preview_imag', Pimage)\r\n                    formData.append('extention', nftFileType)\r\n                    formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                    dispatch(UpdateNft(formData, props, setLoading))\r\n                } else {\r\n                    console.log('fail')\r\n                    // setLoading(false)\r\n                    swal('error!', 'Nft not uploaded', 'error')\r\n                }\r\n            } else {\r\n                // debugger\r\n                const formData = new FormData()\r\n                formData.append('image', image)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                formData.append('extention', nftFileType)\r\n                formData.append('preview_imag', previewnft)\r\n                formData.append('collection_id', nft_collection_id)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                dispatch(UpdateNft(formData, props, setLoading))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            swal(\"error\", error, 'error')\r\n            setLoading(false)\r\n        }\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"main-create\">\r\n            <Modal className=\"edit_nft_popup\"\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n            // centered\r\n            >\r\n                <><Modal.Header>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter h-auto\">\r\n                        Update NFT\r\n                    </Modal.Title>\r\n                    <div>\r\n                        <a><i class=\"fa-regular fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                    </div>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"col-12\">\r\n                            {loading ? (\r\n                                <Loader />\r\n                            ) : (\r\n                                <Form form={form} name=\"dynamic_form_nest_item\" initialValues={{\r\n                                    nfts: nfts, defaultValues\r\n                                }}\r\n                                    onFinish={(event) => onFinish(event)}\r\n                                    autoComplete=\"off\" className=\"item-form card no-hover\">\r\n                                    <Form.List name=\"nfts\">\r\n                                        {(fields, { add, remove }) => (\r\n                                            <>\r\n                                                <>\r\n                                                    {fields.map(({ key, name, ...restField }, index) => (\r\n                                                        <Fragment>\r\n                                                            <div className=\"row relative \">\r\n                                                                <div className=\"col-12\">\r\n                                                                    <div className=\"col-lg-12 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                        <label className=\"mt-3\">Upload NFT</label>\r\n                                                                        <div\r\n                                                                            className=\"position-relative upload_nft\"\r\n                                                                            style={{\r\n                                                                                backgroundImage: \"url('')\",\r\n                                                                                backgroundSize: \"contain\",\r\n                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                margin: \"0 auto\",\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <div\r\n                                                                                className={nftFileType === \"Player\" || nftFileType === \"modal\"\r\n                                                                                    ? \" inputdragVedio\"\r\n                                                                                    : \"inputtdrag\"}\r\n                                                                            >\r\n                                                                                <input\r\n                                                                                    type=\"file\"\r\n                                                                                    onChange={handleUpload}\r\n                                                                                    maxCount={1}\r\n                                                                                    accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\" />\r\n                                                                                {(nftFileType === \"Image\") &&\r\n                                                                                    <div>\r\n                                                                                        {source ?\r\n                                                                                            nftHeight >= 500 && nftwidth >= 500 ?\r\n                                                                                                (\r\n                                                                                                    <img\r\n                                                                                                        src={source}\r\n                                                                                                        className=\"nft-image\" />\r\n                                                                                                ) : (\r\n                                                                                                    <>\r\n                                                                                                        <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                            Minimum size should be 500x500\r\n                                                                                                        </p>\r\n                                                                                                        <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                            Image size should be max 1mb\r\n                                                                                                        </p>\r\n                                                                                                    </>\r\n                                                                                                ) : (\r\n                                                                                                <img\r\n                                                                                                    src={image}\r\n                                                                                                    className=\"nft-image\" />\r\n                                                                                            )}\r\n                                                                                    </div>}\r\n                                                                                {nftFileType === \"Player\" &&\r\n                                                                                    <div>\r\n                                                                                        {source ? (\r\n                                                                                            <video\r\n                                                                                                width=\"100%\"\r\n                                                                                                controls\r\n                                                                                                src={source} />\r\n                                                                                        ) : (\r\n                                                                                            <video\r\n                                                                                                width=\"100%\"\r\n                                                                                                controls\r\n                                                                                                src={image} />\r\n                                                                                        )}\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p>\r\n                                                                                                Because you’ve included\r\n                                                                                                multimedia, you’ll need to provide\r\n                                                                                                an image (PNG, JPG, or GIF) for\r\n                                                                                                the card display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage: \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={previewChange} />\r\n                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                {!preview ? (\r\n                                                                                                    <img\r\n                                                                                                        className=\"preview_image\"\r\n                                                                                                        src={previewnft} />\r\n                                                                                                ) : (\r\n                                                                                                    <img\r\n                                                                                                        className=\"preview_image\"\r\n                                                                                                        src={preview} />\r\n                                                                                                )}\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>}\r\n                                                                                {nftFileType === \"modal\" &&\r\n                                                                                    <div>\r\n                                                                                        {!source ? (\r\n                                                                                            <DModal\r\n                                                                                                vdo={image} />\r\n                                                                                        ) : (\r\n                                                                                            <DModal\r\n                                                                                                vdo={source} />\r\n                                                                                        )}\r\n                                                                                        <div className=\"uploadnftpopup_content\">\r\n                                                                                            <label>Preview Image</label>\r\n                                                                                            <p className=\"\">\r\n                                                                                                Because you’ve included multimedia,\r\n                                                                                                you’ll need to provide an image\r\n                                                                                                (PNG, JPG, or GIF) for the card\r\n                                                                                                display of your item\r\n                                                                                            </p>\r\n                                                                                        </div>\r\n                                                                                        <div\r\n                                                                                            className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                            style={{\r\n                                                                                                backgroundImage: \"url('')\",\r\n                                                                                                backgroundSize: \"contain\",\r\n                                                                                                backgroundRepeat: \"no-repeat\",\r\n                                                                                                backgroundPosition: \"center\",\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                onChange={previewChange} />\r\n                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                {!preview ? (\r\n                                                                                                    <img\r\n                                                                                                        className=\"preview_image\"\r\n                                                                                                        src={previewnft} />\r\n                                                                                                ) : (\r\n                                                                                                    <img\r\n                                                                                                        className=\"preview_image\"\r\n                                                                                                        src={preview} />\r\n                                                                                                )}\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </div>}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Fragment>\r\n                                                    ))}\r\n                                                </></>\r\n                                        )}\r\n                                    </Form.List>\r\n                                    <Form.Item>\r\n                                        <div className=\"col-12\">\r\n                                            <button className=\"btn w-100 mb-3\" type=\"submit\">Update </button>\r\n                                        </div>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            )}\r\n                        </div>\r\n                    </Modal.Body>\r\n                </>\r\n            </Modal>\r\n        </div >\r\n    );\r\n};\r\nexport default EditNftImage;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport { NftList, ProjectDetail, } from '../../redux/Actions/projectAction';\r\nimport { useState } from 'react';\r\nimport Web3 from 'web3';\r\n\r\nimport DModal from '../Create/3dModal';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport NftAuctiondataTable from './nftAuctiontable';\r\nimport SellPopup from './sellPopup';\r\nimport EditNftName from '../Create/editNftNamepopup';\r\nimport EditNftDesc from '../Create/editDescPopup';\r\nimport EditNftImage from '../Create/nftImageeditPopup';\r\nimport { GetMatic } from './GetMAtic';\r\nimport Loader from '../Loader/loader';\r\nimport ReadMore from '../../readMore';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst NftDetails = (props) => {\r\n    const history = useHistory()\r\n    const [nftId, setNftID] = useState();\r\n    const search = useLocation().search;\r\n    const projslug = new URLSearchParams(search).get('project');\r\n    const [sellmodalShow, setSellModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [modalShoweditdes, setModalShoweditdes] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [modalShoweditimg, setModalShoweditimg] = React.useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const slug = useParams();\r\n    const projdetail = useSelector(state => {\r\n\r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n    console.log(projdetail, 'projdataaaa')\r\n    const dispatch = useDispatch()\r\n\r\n    const nftdetail = useSelector(state => {\r\n\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(NftList(slug.id, setLoading))\r\n        dispatch(ProjectDetail(slug.id))\r\n    }, [slug, dispatch])\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <div className=\"item-info\">\r\n                            {nftdetail.is_mint == 0 &&\r\n                                <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                                    <div >\r\n                                        <div className='position-absolute nft-edit-icon'><i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditimg(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        </div>\r\n                                        <div className='loader-img'>\r\n\r\n                                            {modalShoweditimg &&\r\n\r\n                                                <EditNftImage\r\n                                                    id={projslug}\r\n                                                    nft_id={nftId}\r\n                                                    show={modalShoweditimg}\r\n                                                    onHide={() => setModalShoweditimg(false)}\r\n\r\n                                                />\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            }\r\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n                                {loading ? (\r\n                                    <Loader />\r\n                                ) : (\r\n                                    <>\r\n                                        {nftdetail.extention === \"Player\" &&\r\n\r\n                                            <video\r\n                                                width=\"100%\"\r\n                                                controls\r\n                                                src={nftdetail.image}\r\n                                            />\r\n                                        }\r\n                                        {nftdetail.extention === \"modal\" &&\r\n                                            <DModal\r\n                                                vdo={nftdetail.image}\r\n                                            />\r\n                                        }\r\n                                        {nftdetail.extention === \"Image\" &&\r\n\r\n                                            <img src={nftdetail.image} alt=\"\" />\r\n                                        }\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-sm-0\">\r\n                        <div className=' card no-hover py-0 mt-2 mb-2 mt-lg-0 mb-lg-0 '>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{nftdetail?.title} </span>\r\n                            {nftdetail.is_mint == 0 &&\r\n                                <div className='nft-edit-icon position-absolute mt-2'>\r\n                                    <i className=\"fa-solid fa-pen \" onClick={(e) => {\r\n                                        setNftID(slug)\r\n                                        e.preventDefault();\r\n                                        setModalShowedit(true)\r\n                                    }\r\n                                    } ></i>\r\n                                    {modalShowedit &&\r\n\r\n                                        <EditNftName\r\n                                            id={projslug}\r\n                                            nft_id={nftId}\r\n                                            show={modalShowedit}\r\n                                            onHide={() => setModalShowedit(false)} />\r\n                                    }\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div className=\"content sm:mt-3 mt-lg-2\">\r\n                            <div className=\"card no-hover position-relative\">\r\n\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{nftdetail?.user_data?.username}</span>\r\n\r\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {nftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{nftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                {nftdetail.is_mint == 0 ? (\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            onClick={() => setSellModalShow(true)}>  Sell</button>\r\n                                            <SellPopup\r\n                                                show={sellmodalShow}\r\n\r\n                                                onHide={() => setSellModalShow(false)} />\r\n                                        </>\r\n\r\n                                    </div>\r\n                                ) : (\r\n                                    <>\r\n                                        {nftdetail.sold_nft == 1 ? (\r\n\r\n                                            <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                    disabled>SOLD OUT</span>\r\n\r\n                                                </>\r\n\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                                <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                    disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                                </>\r\n\r\n                                            </div>\r\n                                        )}\r\n                                    </>\r\n\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 md:col-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                                {nftdetail?.is_mint == 0 &&\r\n                                    <div className='nft-edit-icon position-absolute mt-2'>\r\n                                        <i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditdes(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        {modalShoweditdes &&\r\n\r\n                                            <EditNftDesc\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditdes}\r\n                                                onHide={() => setModalShoweditdes(false)} />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            <ReadMore data={nftdetail.description} className=\"nft-detail-nft \" />\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft \" /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4'>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <img src='../../img/image14.png' />\r\n                                    <span><small>{nftdetail.amount}  / ${nftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-8 col-12'>\r\n                        <div className=\"profile_detail mt-4\">\r\n\r\n                            <NftdataTable\r\n                                slug={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='container table-detail'>\r\n\r\n                            <NftAuctiondataTable\r\n                                slug={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div >\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\nexport default NftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport NftDetails from '../components/ItemDetails/nftDetails';\r\n\r\nconst Nft = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <NftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nft;","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { Table } from 'react-bootstrap';\r\nconst FunddataTable = (props) => {\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [expandIconPosition] = useState('end');\r\n\r\n    // const { id } = useParams()\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    console.log(funddetail?.organization_detail?.country, 'fdddetail')\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\"/><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\"/></svg>    */}\r\n\r\n                <Panel header=\"Details\" key=\"1\" >\r\n                    <Table responsive>\r\n                        <tbody class=\"nfts_details\">\r\n                            <tr>\r\n                                <td><span>Organization Name </span> <span>{funddetail?.organization_detail?.organization_name}</span></td>\r\n                                <td><span>Country</span>  <span>{funddetail?.organization_detail?.country}</span></td>\r\n                                <td><span>Tax Number </span> <span>{funddetail?.organization_detail?.tax_number}</span></td>\r\n                                <td><span>Web URL</span>  <span>{funddetail?.organization_detail?.web_url}</span></td>\r\n                            </tr>\r\n                            {/* )\r\n                            })} */}\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default FunddataTable","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from './fundraiserdetail';\r\nimport FundTransdataTable from './fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\nimport { Button } from 'react-bootstrap';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst FundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const id = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const userDetail = userdet.referrer_id\r\n    console.log('userdettt', userDetail)\r\n    const log = useSelector(state => {\r\n        return state.user.userToken\r\n    })\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    console.log(fundprojdetail.user_data, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    const investHandler = () => {\r\n\r\n        if (!window.ethereum?.selectedAddress) {\r\n            Swal.fire({\r\n                icon: 'warning',\r\n                html:\r\n                    'Connect Wallet to Invest',\r\n                showCloseButton: false,\r\n                focusConfirm: false,\r\n                confirmButtonText:\r\n                    '<i class=\"fa fa-thumbs-up\"></i> Ok!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <section className=\"item-details-area fundraise-main\">\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between p-0\">\r\n                    <div className='col-12'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src=\"/img/ph.jpg\" /> */}\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done mt-3'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n                            {/* <img src={funddetail?.user_data?.avatar} width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" /> */}\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n\r\n                        <div className=\"progress_nft mobile_nft mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                            </div>\r\n\r\n\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length ?\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        }) :\r\n                                    <div className=\"col-12 col-sm-12 col-lg-12\">\r\n\r\n                                        <span className='allproj2'>\r\n                                            No Projects\r\n                                        </span>\r\n\r\n                                    </div>\r\n                                }\r\n                            </ul>\r\n                            <Link className=\"\" to=\"/all/LatestProjects\"><p className='see_all'>See all</p></Link>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className='custam_col mt-3 mt-lg-0'>\r\n                            <h5 class=\"user_title \">\r\n\r\n                                <div className='d-flex align-item-center gap-5'>\r\n                                    <svg className='' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg>\r\n\r\n                                    <div>Description</div>\r\n\r\n                                </div>\r\n                            </h5>\r\n\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='funddeatil mt-3 '>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-4 desktop_nft\">\r\n                        <div className=\"progress_nft  mb-3\">\r\n                            <div className='progress_main'><span>\r\n                                <span className='nft_price'>${funddetail.total_fundraised} Cdn raised from all projects</span><small> </small>\r\n                            </span>\r\n\r\n                                <li className=\"price d-flex justify-content-between progressbar progress\">\r\n                                    <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"100%\" }} aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></span>\r\n\r\n                                </li>\r\n                                {/* <div className='progressbar'>\r\n                                            <ProgressBar varient=\"success\" />\r\n                                            <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                        </div> */}\r\n\r\n                                {/* <div className='progressbar'>\r\n                                        <ProgressBar varient=\"success\" now={latprojdetail.project_percentage} />\r\n                                        <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70\" }} aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" now={projdetail.project_percentage}> {projdetail.project_percentage}% </span>\r\n                                    </div> */}\r\n\r\n                            </div>\r\n\r\n                            <div className=\"d-flex gap-5 flex-wrap justify-content-start\">\r\n\r\n                                <div>\r\n\r\n                                    <Button variant=\"primary\" onClick={() => investHandler()} className=\" btn  btn-bordered-white m-0 mr-2\">\r\n                                        Invest\r\n                                    </Button>\r\n\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                            <h5 class=\"user_title_1 mt-3 mb-0\"><div>Projects</div></h5>\r\n\r\n                            <ul className=\"m-0 custom_lis pl-0 fund_row\">\r\n                                {fundprojdetail && fundprojdetail.length &&\r\n                                    [...new Map(fundprojdetail.map(item =>\r\n                                        [item[\"title\"], item])).values()]?.slice(0, 3)?.map((item, idx) => {\r\n                                            const date1 = new Date(item.created_at)\r\n                                            const date2 = new Date()\r\n                                            // console.log('todat', date2)\r\n                                            const time_difference = date2.getTime() - date1.getTime();\r\n                                            const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                            // const totaldays = days_difference.slice(0,1)\r\n                                            // console.log(\"daysss\", days_difference)\r\n                                            return (\r\n                                                <li>\r\n                                                    <div className='lorem_done p-0'>\r\n                                                        <span><svg width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" mirror-in-rtl=\"true\">\r\n                                                            <path fill=\"#494c4e\" d=\"M8 6H5c-.553 0-1-.448-1-1s.447-1 1-1h3c.553 0 1 .448 1 1s-.447 1-1 1zM13 10H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1zM13 14H5c-.553 0-1-.448-1-1s.447-1 1-1h8c.553 0 1 .448 1 1s-.447 1-1 1z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M18 2v8c0 .55-.45 1-1 1s-1-.45-1-1V2.5c0-.28-.22-.5-.5-.5h-13c-.28 0-.5.22-.5.5v19c0 .28.22.5.5.5h13c.28 0 .5-.22.5-.5V21c0-.55.45-1 1-1s1 .45 1 1v1c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V2C0 .9.9 0 2 0h14c1.1 0 2 .9 2 2z\" />\r\n                                                            <path fill=\"#494c4e\" d=\"M23.87 11.882c.31.54.045 1.273-.595 1.643l-9.65 5.57c-.084.05-.176.086-.265.11l-2.656.66c-.37.092-.72-.035-.88-.314-.162-.278-.09-.65.17-.913l1.907-1.958c.063-.072.137-.123.214-.167.004-.01.012-.015.012-.015l9.65-5.57c.64-.37 1.408-.234 1.72.305l.374.65z\" />\r\n                                                        </svg>\r\n\r\n                                                        </span>\r\n                                                        <span><div className=\"progress_name\">{item.title} </div> <div>{days_difference} days ago</div></span>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n\r\n                                            )\r\n                                        })}\r\n                            </ul>\r\n                            <Link className=\"\" to={`/all/fundraise/projects/${user_id}`}><p className='see_all'>See all</p></Link>\r\n                        </div>\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            {/* <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        \r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div> */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=''>\r\n                    {/* <div className='col-7'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n                        </div>\r\n                    </div> */}\r\n                    <div className='col-12 mt-3 mb-3'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default FundraiserDetail;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport FundraiserDetail from '../components/TopSeller/fundraiserDetails';\r\nimport Fundraiser from '../components/TopSeller/topfundraiser';\r\n\r\nconst FundDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main main-fund-detail\">\r\n\r\n            <Header />\r\n            <FundraiserDetail />\r\n            <Fundraiser />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default FundDetail;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n\r\n\r\n\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const latprojnftdetail = useSelector(state => {\r\n        return state?.projectdetails?.getnftwoldetails\r\n    })\r\n    console.log('lattt', latprojnftdetail)\r\n    useEffect(() => {\r\n        dispatch(GetNftwol(props.id))\r\n    }, [props.id])\r\n    const location = useLocation()\r\n    return (\r\n        <div className='position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                    <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                </svg>\r\n                <Panel header=\"Item Activity\" key=\"1\">\r\n                    <Table responsive >\r\n                        <thead>\r\n                            <tr >\r\n                                <th>NFT</th>\r\n                                <th>Project</th>\r\n                                <th>Price</th>\r\n                                <th>From</th>\r\n                                <th>To</th>\r\n                                <th>Token</th>\r\n                                <th>Transaction</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {latprojnftdetail?.nft_history?.map((items) => {\r\n                                return (\r\n                                    <tr className='contract-address'>\r\n                                        <td>#{items.nft_id}</td>\r\n                                        <td>#{items.project_id}</td>\r\n                                        <td className='referal'>{items.price}<img src='../../../img/image14.png' /></td>\r\n                                        <td>{items.pay_from.slice(0, 4)}...{items.pay_from.slice(35, 44)}</td>\r\n                                        <td>{items.pay_to.slice(0, 4)}...{items.pay_to.slice(35, 44)}</td>\r\n                                        <td>#{items.token_id}</td>\r\n                                        <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/tx/${items?.txd_id}`} >{items.txd_id.slice(0, 4)}...{items.txd_id.slice(35, 44)}</a></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                    <div className='nothing'>\r\n                        {latprojnftdetail?.nft_history?.length == 0 &&\r\n                            <span> No matching records found</span>\r\n                        }\r\n                    </div>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\nexport default NftTransdataTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nconst { CONTRACT_ADDRESS_URL } = process.env;\r\nconst LatNftDataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const { id } = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     debugger\r\n    //     dispatch(NftList(id))\r\n    // }, [id])\r\n    const latprojnftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getnftwoldetails\r\n    })\r\n    console.log(latprojnftdetail, 'laptnft')\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n\r\n                        <thead>\r\n\r\n                            <tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr>\r\n                            <tr className='contract-address'>\r\n                                <th>Contract ID</th>\r\n                                <td> <a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${latprojnftdetail?.collectionData?.contract_id}`} >{latprojnftdetail?.collectionData?.contract_id?.slice(0, 5)}.....{latprojnftdetail?.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                {/* <td>{latprojnftdetail?.collectionData?.contract_id}</td> */}\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Token ID</th>\r\n                                <td>{latprojnftdetail?.token_id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Token Stranded</th>\r\n                                <td>ERC721</td>\r\n                            </tr>\r\n\r\n                            {/* <tr>\r\n\r\n                                <th>Contract Address</th>\r\n                                <th>Token ID</th>\r\n                                <th>Token Stranded</th>\r\n                                <th>Blockchain</th>\r\n                            </tr> */}\r\n\r\n\r\n                        </thead>\r\n\r\n                    </Table>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LatNftDataTable","import Modal from 'react-bootstrap/Modal';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BidNft } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport { Loader } from '@react-three/drei';\r\nfunction BidPopup(props) {\r\n    // debugger\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const onSubmit = () => {\r\n        // debugger\r\n        BidNft(props.id, props.projid, props.from, props.onHide, setLoading)\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header >\r\n                <div>\r\n                    <div className='modal-title h4 '>Place a bid</div>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {loading ? (\r\n                    <Loader />\r\n\r\n                ) : (\r\n                    <form onSubmit={handleSubmit(onSubmit)} className=\"item-form card no-hover\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 pb-2\">\r\n                                {window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? (\r\n                                    <label>You are about to place a bid for {props.projtitle?.toUpperCase()} from {props.projcoll?.toUpperCase()}.</label>\r\n                                ) : (\r\n                                    <label style={{ color: 'red' }}>Connect your wallet.</label>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <label>Wallet address:</label>\r\n                                <div class=\"bidinput\">{window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? window.ethereum?.selectedAddress : <span style={{ color: 'red' }} disabled>Please connect your wallet</span>}</div>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Your bid</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder='Enter bid'\r\n                                        {...register('amount', { required: true })}\r\n                                        aria-invalid={errors.amount ? \"true\" : \"false\"}\r\n                                    />\r\n                                    {errors.amount?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Amount is required</p>}\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"col-12\">\r\n                                <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Place Your Bid </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                )}\r\n            </Modal.Body>\r\n        </Modal >\r\n    );\r\n}\r\nexport default BidPopup","\r\nimport React, { useEffect } from \"react\";\r\nconst Timer = (props) => {\r\n    const [days, setDays] = React.useState(0);\r\n    const [hours, setHours] = React.useState(0);\r\n    const [minutes, setMinutes] = React.useState(0);\r\n    const [seconds, setSeconds] = React.useState(0);\r\n\r\n    const deadline = \"2023-03-05 00:00:00\"\r\n    const getTime = () => {\r\n        const time = Date.parse(`${props.time}`) - Date.now();\r\n        setDays(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n        setHours(Math.floor((time / (1000 * 60 * 60)) % 24));\r\n        setMinutes(Math.floor((time / 1000 / 60) % 60));\r\n        setSeconds(Math.floor((time / 1000) % 60));\r\n    };\r\n    React.useEffect(() => {\r\n        const interval = setInterval(() => getTime(`${props.time}`), 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {days == 0 &&\r\n                <div className=\"timer\" role=\"timer\">\r\n                    {`${minutes}`.includes('-') ? (\r\n                        <div className=\"col-12\">\r\n                            <div className=\"box main-box_count\">\r\n                                <span className=\"box-count\">Sale Ended</span>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"col-12\">\r\n                            <div className=\"box main-box_count\">\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"day\">{`${days}`}</span>\r\n                                    <span className=\"text\">DAYS</span>\r\n                                </span>\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"hour\">{`${hours}`}</span>\r\n                                    <span className=\"text\">HRS</span>\r\n                                </span>\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"minute\">{`${minutes}`}</span>\r\n                                    <span className=\"text\">MINS</span>\r\n                                </span>\r\n                                <span className=\"box-count\">\r\n                                    <span id=\"second\">{`${seconds}`}</span>\r\n                                    <span className=\"text\">SECS</span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default Timer","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport Loader from '../Loader/loader';\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction BuyPopup(props) {\r\n    const location = useLocation();\r\n    const [copy, setCopy] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit, formState: { errors }, setValue, watch, control } = useForm({});\r\n    const OnSubmit = (data) => {\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            className=\"loading\"\r\n        >\r\n            {props.loading &&\r\n                <><Loader />\r\n                    <div className=\"form-group m-0\">\r\n                        <span>Processing...</span>\r\n                    </div>\r\n                </>\r\n            }\r\n        </Modal>\r\n    );\r\n}\r\nexport default BuyPopup","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { GetNftwol, GetSettings } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\n\r\nimport { BuyNft } from '../Wallet/interact';\r\nimport { updateReffid } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport NftTransdataTable from './nftTRansTable';\r\nimport LatNftDataTable from '../Explore/latnftTable';\r\nimport BidPopup from './bidPopup';\r\nimport DModal from '../Create/3dModal';\r\nimport Timer from './timer';\r\nimport BuyPopup from './buyPopup';\r\nimport { GetMatic } from './../ItemDetails/GetMAtic';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport { Spin } from 'antd';\r\nimport swal from 'sweetalert';\r\nimport { Loader } from '@react-three/drei';\r\n\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\nconst LatprojNftDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const search = useLocation().search;\r\n    const refid = new URLSearchParams(search).get('refid');\r\n    const [matic, setMatic] = useState('')\r\n    const [bidmodalShow, setBidModalShow] = React.useState(false);\r\n    const [buymodalShow, setBuyModalShow] = React.useState(false);\r\n\r\n    const id = useParams();\r\n\r\n    const latprojnftdetail = useSelector(state => {\r\n        return state.projectdetails.getnftwoldetails\r\n    })\r\n\r\n    const getSett = useSelector(state => {\r\n        return state.projectdetails.settings\r\n    })\r\n\r\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetUserAction())\r\n        dispatch(GetNftwol(id))\r\n        dispatch(GetSettings())\r\n    }, [id])\r\n\r\n\r\n    const buyHandler = () => {\r\n\r\n        BuyNft({\r\n            contractAddress: latprojnftdetail?.collectionData?.contract_id,\r\n            tokenId: latprojnftdetail.token_id,\r\n            payFrom: latprojnftdetail.pay_from,\r\n            values: latprojnftdetail?.type == 2 ? latprojnftdetail?.bids[0]?.amount : setValue?.value,\r\n            sellingCount: latprojnftdetail.selling_count,\r\n            platformFee: ([latprojnftdetail.payment_flow?.karmatica_fee]),\r\n            ownerFee: ([latprojnftdetail.payment_flow?.project_data?.fees]),\r\n            ownerWallet: ([latprojnftdetail.payment_flow?.project_data?.wallets]),\r\n            flow: ([latprojnftdetail.payment_flow]),\r\n            refid: refid,\r\n            proj_id: latprojnftdetail.project_id,\r\n            nft_id: latprojnftdetail.id,\r\n            loadingg: setLoading,\r\n            modal: setBuyModalShow,\r\n            dispatch\r\n        })\r\n    }\r\n    const reffHandler = async () => {\r\n        await updateReffid({ tokenId: latprojnftdetail.token_id, refid, nft_id: latprojnftdetail.id, dispatch })\r\n        await buyHandler()\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <Spin spinning={loading}>\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row justify-content-between content_project px-0\">\r\n                        <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}  </span>\r\n                        </div>\r\n                        <div className=\"col-12 col-lg-4\">\r\n\r\n                            <div className=\"item-info\">\r\n\r\n                                <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n                                    {loading ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <>\r\n                                            {latprojnftdetail.extention === \"Player\" &&\r\n                                                <>\r\n                                                    <video\r\n                                                        width=\"100%\"\r\n                                                        controls\r\n                                                        src={latprojnftdetail.image}\r\n                                                    />\r\n                                                </>\r\n                                            }\r\n                                            {latprojnftdetail.extention === \"modal\" &&\r\n                                                <>\r\n                                                    <DModal\r\n                                                        vdo={latprojnftdetail.image}\r\n\r\n                                                    />\r\n                                                </>\r\n                                            }\r\n                                            {latprojnftdetail.extention === 'Image' &&\r\n                                                <>\r\n\r\n                                                    <img src={latprojnftdetail.image} alt=\"\" />\r\n                                                </>\r\n                                            }\r\n\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n\r\n                                </>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\r\n\r\n                            <div className=\"content \">\r\n                                <div className=\"card no-hover position-relative\">\r\n\r\n                                    <div className=\"owner align-items-start\">\r\n                                        <span className='boldertext w-100'>Owned By : </span>\r\n                                        <span>{latprojnftdetail.owned_by}</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className='boldertext w-100'>Collection Name : </span>\r\n                                        <span> {latprojnftdetail?.collectionData?.title}</span>\r\n                                    </div>\r\n                                    <div className=\"item-info-list\">\r\n                                        <ul className=\"list-unstyled mb-0\">\r\n                                            <span class='boldertext'>Token :</span>\r\n                                            <span> #{latprojnftdetail.token_id}</span>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className='boldertext w-100'>Affiliate first sale royalties : </span>\r\n                                        <span> 30%</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span className='boldertext w-100'>NFT creator royalties : </span>\r\n                                        <span> 10%</span>\r\n                                    </div>\r\n                                    <div className='eddlbtton d-flex gap- align-items-center mt-2 justify-content-between'>\r\n\r\n\r\n                                        <div className='eddlbtton flex-wrap d-flex gap-10  align-items-center mt-2'>\r\n                                            {latprojnftdetail.sold_nft == 1 ? (\r\n                                                <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" disabled>SOLD OUT</button>\r\n                                            ) : (\r\n                                                <>\r\n                                                    {latprojnftdetail.user_id === userdet.user_id ? (\r\n                                                        <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n                                                            <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                                disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                                            </>\r\n\r\n                                                        </div>\r\n\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            {latprojnftdetail.type == 1 ? (\r\n                                                                <>\r\n                                                                    {userdet.role == 3 ? (\r\n                                                                        <>\r\n                                                                            <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                                                onClick={() => {\r\n                                                                                    swal(\"warning\", \"To buy this nft you need to change your creator account to buyer \", \"warning\")\r\n                                                                                }}>Buy Now</button>\r\n\r\n                                                                        </>\r\n\r\n                                                                    ) : (\r\n                                                                        <><button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                                            id=\"nftdetail.id\" onClick={() => { reffHandler(); setBuyModalShow(true); setLoading(true); }}>Buy Now</button><BuyPopup\r\n                                                                                show={buymodalShow}\r\n                                                                                loading={loading}\r\n\r\n\r\n                                                                                onHide={() => setBuyModalShow(false)} /></>\r\n                                                                    )}\r\n                                                                </>\r\n                                                            ) : (\r\n                                                                <>\r\n                                                                    {latprojnftdetail?.bid_approved_id === userdet?.user_id ? (\r\n\r\n                                                                        <><button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                                            onClick={() => { buyHandler(); setBuyModalShow(true); setLoading(true) }}>Make Payment</button><BuyPopup\r\n                                                                                show={buymodalShow}\r\n                                                                                loading={loading}\r\n\r\n\r\n                                                                                onHide={() => setBuyModalShow(false)} /></>\r\n                                                                    ) : (\r\n                                                                        <>\r\n                                                                            {userdet.role == 3 ? (\r\n                                                                                <>\r\n                                                                                    <button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                                                        onClick={() => swal(\"warning\", \"To make a bid for this nft you need to change your creator account to buyer \", \"warning\")}>Place Bid</button>\r\n                                                                                </>\r\n                                                                            ) : (\r\n                                                                                <>\r\n                                                                                    <button className=\"btn  btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                                                        onClick={() => setBidModalShow(true)}>Place Bid</button><BidPopup\r\n\r\n                                                                                        id={latprojnftdetail.id}\r\n                                                                                        projid={latprojnftdetail.project_id}\r\n                                                                                        projtitle={latprojnftdetail.title}\r\n                                                                                        projcoll={latprojnftdetail?.collectionData?.title}\r\n                                                                                        from={userdet.wallet_id}\r\n                                                                                        show={bidmodalShow}\r\n                                                                                        onHide={() => setBidModalShow(false)} /></>\r\n                                                                            )}\r\n                                                                        </>\r\n\r\n                                                                    )}\r\n\r\n                                                                </>\r\n                                                            )}\r\n                                                        </>\r\n                                                    )}\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                        <Timer\r\n                                            time={latprojnftdetail.end_date}\r\n                                        />\r\n                                        <div className='eddlbtton bitbtn d-flex  align-items-center mt-2'>\r\n\r\n                                            <div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-8 mt-4\">\r\n                            <div class=\"user-description \">\r\n                                <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                                </h5>\r\n                                <p dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} />\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='col-lg-4 col-12 mt-4 '>\r\n                            <div className='price_nft'>\r\n                                <h5 className='user_title gap-5'>\r\n                                    <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                    <div>Current price</div>\r\n                                </h5>\r\n                                <div className='price_nft_detail'>\r\n                                    <div className='nft-price'>\r\n                                        <img src='../img/image14.png' />\r\n                                        <span><small>{latprojnftdetail.amount}  / ${latprojnftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=''>\r\n                                <div className=\"profile_detail mt-4\">\r\n\r\n                                    <LatNftDataTable\r\n                                    // id={id}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='col-12 mt-4'>\r\n                            <div className='funddeatil table-detail '>\r\n                                <NftTransdataTable\r\n                                    id={id}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div >\r\n            </Spin>\r\n\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\nexport default LatprojNftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport LatprojNftDetails from '../components/Auctions/nftBuy';\r\n\r\nconst latnftprojDetails = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <LatprojNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default latnftprojDetails;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\nexport default ScrollToTop","import { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Upload } from 'antd';\r\nimport React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddNftAction, CreateProjectAction, GetCollectionsAction, uploadNFT } from '../../redux/Actions/projectAction';\r\nimport MyVerticallyCenteredModal from './createCollection';\r\nimport styles from './styles/styles.module.scss'\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/upload/style/css';\r\nimport { Collapse } from 'antd';\r\nimport 'antd/lib/modal/style/css';\r\nimport 'antd/lib/button/style/css'\r\nimport swal from 'sweetalert';\r\nimport JoditEditor from 'jodit-react'\r\nimport Loader from '../Loader/loader';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport DModal from './3dModal';\r\nconst getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n// import ImgCrop from 'antd-img-crop';\r\nconst AddNft = ({ current, prev }) => {\r\n    const editor = useRef(null);\r\n    const [previewOpen, setPreviewOpen] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    const [count, setCount] = useState(0);\r\n\r\n    const [nft, setNft] = useState([])\r\n    const [size, setSize] = useState()\r\n    const [nftwidth, setNftwidth] = useState()\r\n    const [nftHeight, setNftheight] = useState()\r\n    const [Pimage, setPimage] = useState()\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [nft_collection_id, setNft_collection_id] = useState({ 0: \"1\" });\r\n    const [NFtFileExtension, setNFtExtension] = useState([])\r\n    const [source, setSource] = useState([])\r\n    const [preview, setPreview] = useState([])\r\n    const [nft_description, setNft_description] = useState([])\r\n    const [sourceType, setSourceType] = useState([])\r\n    const coll_id = (Object.values(nft_collection_id));\r\n    const [loading, setLoading] = useState(false)\r\n    const search = useLocation().search;\r\n    const projid = new URLSearchParams(search).get('projectid');\r\n    const handleIncrement = () => {\r\n        setCount(prevCount => prevCount + 1);\r\n    };\r\n    const handleDecrement = () => {\r\n        setCount(prevCount => prevCount - 1);\r\n    };\r\n    function onHandleClick(index, item) {\r\n        setNft_collection_id(previ => {\r\n            previ[index] = item\r\n            return {\r\n                ...previ,\r\n            }\r\n        }\r\n        );\r\n    };\r\n    const slug = useParams()\r\n\r\n    const defaultValues = {\r\n        setNft_description: '',\r\n    }\r\n\r\n    const { register, handleSubmit, formState: { errors }, watch, control, setValue } = useForm({\r\n        mode: 'all',\r\n        defaultValues\r\n    });\r\n    useEffect(() => {\r\n        register(\"nft_description\");\r\n    }, [register]);\r\n\r\n    const ipfsBaseUrl = 'https://ipfs.io/ipfs/'\r\nconst history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const col = useSelector(state => {\r\n        return state?.projectdetails?.getcollections\r\n    })\r\n    const imaeg = useSelector(state => {\r\n        return state?.projectdetails?.nftres\r\n    })\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n    const previewChange = async (e, index) => {\r\n        const pimage = e.target.files[0]\r\n        const base64 = await convertToBase64(pimage);\r\n        setPimage(base64)\r\n        setPreview(prevState => {\r\n            prevState[index] = e?.target?.files[0]\r\n            return [...prevState]\r\n        })\r\n    };\r\n    const handleUpload = (e, index) => {\r\n        const filetype = e.target.files[0].type\r\n        setNFtExtension(filetype)\r\n        // debugger\r\n        // setNft(e.target.files[0])\r\n        setNft(previ => {\r\n            previ[index] = e.target.files[0]\r\n            return [\r\n                ...previ,\r\n\r\n            ]\r\n        })\r\n        var fr = new FileReader;\r\n        fr.onload = function () { // file is loaded\r\n            var img = new Image;\r\n            img.onload = function () {\r\n                setSize(e.target.files[0].size);\r\n                setNftwidth(img.width)\r\n                setNftheight(img.height)\r\n            };\r\n            img.src = fr.result; // is the data URL because called with readAsDataURL\r\n        };\r\n        fr.readAsDataURL(e.target.files[0]); // I'm using a <input type=\"file\"> for demonstrating\r\n        let type = \"Image\"\r\n        if (e.target.files[0].size > 104857600) {\r\n            alert('Filesize must 100mb or below');\r\n        } else {\r\n            switch (filetype) {\r\n                case 'image/png':\r\n                case 'image/jpg':\r\n                case 'image/gif':\r\n                case 'image/svg':\r\n                    type = \"Image\"\r\n                    break;\r\n                case 'audio/mpeg':\r\n                case 'audio/ogg':\r\n                case 'video/mp4':\r\n                case 'video/webm':\r\n                    type = 'Player'\r\n                    break;\r\n                case '':\r\n                    // if (nft?.name?.str.includes(\".glb\")) {\r\n                    type = 'modal'\r\n                    // }\r\n                    break;\r\n                default:\r\n                    type = 'Image'\r\n            }\r\n            // setNFtFileType(type)\r\n            setSource(prevState => {\r\n                // debugger\r\n                prevState[index] = { file: e.target.files[0], type: type }\r\n                setSourceType(type)\r\n                return [...prevState]\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n    // console.log('col', col)\r\n    const lat = localStorage.getItem('latitude')\r\n    // console.log(lat, 'lattt')\r\n    const log = localStorage.getItem('longitude')\r\n\r\n    useEffect(() => {\r\n        dispatch(GetCollectionsAction())\r\n    }, []);\r\n    const onFinish = async (values) => {\r\n        try {\r\n            setLoading(true)\r\n            // const nftImagepromises = values?.nfts?.map(x => uploadNFT(nft))\r\n            const imagesRes = await uploadNFT(nft, dispatch)\r\n            // \r\n            // const addedImage = imagesRes?.data?.data.map(x => ipfsBaseUrl + x?.image_hash)\r\n            const addedImage = ipfsBaseUrl + imagesRes.data.data[0].image_hash\r\n            // \r\n            var str = addedImage;\r\n            var check = str.includes(\"https://ipfs.io/ipfs/undefined\");\r\n            const formData = new FormData()\r\n            if (check === false) {\r\n                // for (let i = 0; i < addedImage.length; i++) {\r\n                //     formData.append(\"image\", (addedImage[i]));\r\n                // }\r\n                formData.append('image', addedImage)\r\n                formData.append('title', values?.nfts?.map(x =>\r\n                    x.nft_name\r\n                ))\r\n                formData.append('collection_id', coll_id)\r\n                formData.append('description', values?.nfts?.map(x => x.nft_description))\r\n                formData.append('preview_imag', Pimage)\r\n                formData.append('extention', sourceType)\r\n                dispatch(AddNftAction(formData, projid, slug, setLoading,history))\r\n            } else {\r\n                console.log('fail')\r\n                setLoading(false)\r\n                swal('error!', 'Nft not uploaded', 'error')\r\n            }\r\n        } catch (error) {\r\n            setLoading(false)\r\n            swal('error!', 'Nft not uploaded', 'error')\r\n            console.log(error, 'error')\r\n        }\r\n    };\r\n    const handleCancel = () => setPreviewOpen(false);\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewOpen(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n    const fileProps = {\r\n        name: \"file\",\r\n        multiple: false,\r\n        beforeUpload: () => {\r\n            return false;\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status !== \"uploading\") {\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(info.file);\r\n            }\r\n        }\r\n    };\r\n\r\n    const [form] = Form.useForm()\r\n\r\n    const { Panel } = Collapse;\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const nfts = [\r\n        {\r\n            key: 0,\r\n            name: 'Wheat Flour',\r\n            amount: 1000\r\n        },\r\n    ];\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n                                <><h3 className=\"mt-3 mb-0\">Upload NFT</h3><p> Allowed types: JPG, PNG, GIF, SVG, MP4, WEBM, MP3, WAV, OGG, GLB, GLTF</p><p>Maximum size: 100 MB</p></>\r\n                                <div>\r\n                                    {loading ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <div className={current === 1 ? styles.showForm : styles.hideForm}>\r\n                                            <Form\r\n                                                form={form}\r\n                                                name=\"dynamic_form_nest_item\"\r\n                                                initialValues={{\r\n                                                    nfts: nfts,\r\n                                                }}\r\n                                                // onSubmit={(event) => handleSubmit(event)}\r\n                                                onFinish={(event) => onFinish(event)}\r\n                                                autoComplete=\"off\"\r\n                                                className=\"item-form card no-hover\"\r\n                                            >\r\n                                                <Form.List name=\"nfts\">\r\n                                                    {(fields, { add, remove }) => (\r\n                                                        <>\r\n                                                            <Button className=\"previous_btn\" onClick={() => prev()}>\r\n                                                                <svg\r\n                                                                    width=\"16px\"\r\n                                                                    height=\"16px\"\r\n                                                                    viewBox=\"0 0 24 24\"\r\n                                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                                >\r\n                                                                    <path\r\n                                                                        fill=\"none\"\r\n                                                                        stroke=\"#fff\"\r\n                                                                        stroke-width=\"2\"\r\n                                                                        d=\"M2,12 L22,12 M13,3 L22,12 L13,21\"\r\n                                                                        transform=\"matrix(-1 0 0 1 24 0)\"\r\n                                                                    />\r\n                                                                </svg>\r\n                                                                Previous\r\n                                                            </Button>\r\n                                                            <>\r\n                                                                {fields.map(({ key, name, ...restField }, index) => (\r\n                                                                    <Fragment>\r\n                                                                        {/* <div>Artwork {index}</div> */}\r\n                                                                        <div className=\"row relative\">\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label>Name</label>\r\n                                                                                <div>\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_name\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: \"Name is required\",\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n                                                                                        {/* <label>Name</label> */}\r\n                                                                                        <Input placeholder=\"Name\" />\r\n                                                                                    </Form.Item>\r\n                                                                                </div>\r\n                                                                                <label>Description</label>\r\n                                                                                <div>\r\n                                                                                    <Form.Item\r\n                                                                                        {...restField}\r\n                                                                                        name={[name, \"nft_description\"]}\r\n                                                                                        // label=\"Enter name\"\r\n                                                                                        // name=\"name\"\r\n                                                                                        rules={[\r\n                                                                                            {\r\n                                                                                                required: true,\r\n                                                                                                message: \"Missing  description\",\r\n                                                                                            },\r\n                                                                                        ]}\r\n                                                                                    >\r\n\r\n                                                                                        <JoditEditor\r\n                                                                                            ref={editor}\r\n                                                                                            value={nft_description}\r\n                                                                                            // config={config}\r\n                                                                                            placeholder=\"start typing\"\r\n                                                                                            tabIndex={1} // tabIndex of textarea\r\n                                                                                            onBlur={(newContent) =>\r\n                                                                                                setNft_description(newContent)\r\n                                                                                            } // preferred to use only this option to update the content for performance reasons\r\n                                                                                            onChange={(newContent) => { }}\r\n                                                                                        />\r\n\r\n                                                                                    </Form.Item>\r\n                                                                                    {errors.nft_description?.type ===\r\n                                                                                        \"required\" && (\r\n                                                                                            <p style={{ color: \"red\" }} role=\"alert\">\r\n                                                                                                Description is required\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                    {errors.nft_description &&\r\n                                                                                        errors.nft_description.type ===\r\n                                                                                        \"minLength\" && (\r\n                                                                                            <p style={{ color: \"red\" }}>\r\n                                                                                                min length of words is 300\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-md-1 col-12 nft-remove\">\r\n                                                                                <MinusCircleOutlined\r\n                                                                                    onClick={(e) => {\r\n                                                                                        remove(name);\r\n                                                                                        handleDecrement(e);\r\n                                                                                    }}\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                            {/* </div> */}\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <label className=\"mt-2 mb-3\">\r\n                                                                                    Choose Collection\r\n                                                                                </label>\r\n                                                                            </div>\r\n                                                                            {col?.map((item, idx) => (\r\n                                                                                <div\r\n                                                                                    key={`auc_${idx}`}\r\n                                                                                    id={item.id}\r\n                                                                                    className=\"col-md-6 col-lg-3 col-12 choose_div\"\r\n                                                                                >\r\n                                                                                    <div\r\n                                                                                        id={item.id}\r\n                                                                                        onClick={() =>\r\n                                                                                            onHandleClick(index, item.id)\r\n                                                                                        }\r\n                                                                                        className=\"card\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                            border:\r\n                                                                                                nft_collection_id[index] == item.id\r\n                                                                                                    ? \"1px solid #fff\"\r\n                                                                                                    : null,\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <div className=\"card-body\">\r\n                                                                                            <div>{item.title}</div>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    {/* </Form.Item> */}\r\n                                                                                </div>\r\n                                                                                // </div>\r\n                                                                            ))}\r\n                                                                            <div className=\"col-md-6 col-lg-3 col-12\">\r\n                                                                                {/* <div className=\"col-24\"> */}\r\n                                                                                <div className=\"form-group\">\r\n                                                                                    <div\r\n                                                                                        className=\"card choose_div\"\r\n                                                                                        style={{\r\n                                                                                            background: \"black\",\r\n                                                                                            marginBottom: \"8px\",\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <div className=\"card-body \">\r\n                                                                                            <Button\r\n                                                                                                variant=\"primary\"\r\n                                                                                                className=\"collection_btn\"\r\n                                                                                                onClick={() => setModalShow(true)}\r\n                                                                                            >\r\n                                                                                                <i className=\"f1a-regular fa-plus\"></i>{\" \"}\r\n                                                                                                Create Collection\r\n                                                                                            </Button>\r\n                                                                                            <MyVerticallyCenteredModal\r\n                                                                                                show={modalShow}\r\n                                                                                                onHide={() => setModalShow(false)}\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <div className=\"col-lg-6 col-12 uploadnftpopup p-0 mb-4\">\r\n                                                                                    <label className=\"mt-3\">Upload NFT</label>\r\n                                                                                    <div\r\n                                                                                        className=\"position-relative upload_nft\"\r\n                                                                                        style={{\r\n                                                                                            backgroundImage: \"url('')\",\r\n                                                                                            backgroundSize: \"contain\",\r\n                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                        }}\r\n                                                                                    >\r\n\r\n                                                                                        <div\r\n                                                                                            className={\r\n                                                                                                source[index]?.type === \"Player\" || source[index]?.type === \"modal\"\r\n                                                                                                    ? \" inputdragVedio\"\r\n                                                                                                    : \"inputtdrag\"\r\n                                                                                            }\r\n                                                                                        >\r\n                                                                                            <input\r\n                                                                                                type=\"file\"\r\n                                                                                                // onChange={handleUpload}\r\n                                                                                                maxCount={1}\r\n                                                                                                onChange={e => handleUpload(e, index)}\r\n                                                                                                accept=\".mov,.mp4,.mp3,.webm.gltf,.glb,.jpg,.jpeg,.gif,.svg\"\r\n                                                                                            />\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Image\" &&\r\n                                                                                                <div>\r\n                                                                                                    {/* {nftFileType === \"Image\" && nftHeight >= 500 && nftwidth >= 500 ? ( */}\r\n                                                                                                    {source?.length && source?.[index] && source[index]?.type === \"Image\" && nftHeight >= 500 && nftwidth >= 500 && size <= \"1000000\" ? (\r\n                                                                                                        <img\r\n                                                                                                            src={URL.createObjectURL(source[index].file)}\r\n                                                                                                            className=\"nft-image\"\r\n                                                                                                        />\r\n                                                                                                    ) : (\r\n                                                                                                        <>\r\n                                                                                                            <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                                Minimum size should be 500x500\r\n                                                                                                            </p>\r\n                                                                                                            <p style={{ color: \"red\", marginLeft: '10px' }}>\r\n                                                                                                                Image size should be max 1mb\r\n                                                                                                            </p>\r\n                                                                                                        </>\r\n                                                                                                    )}\r\n\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"Player\" &&\r\n                                                                                                <div>\r\n                                                                                                    <video\r\n                                                                                                        // className=\"VideoInput_video\"\r\n                                                                                                        width=\"100%\"\r\n                                                                                                        // height={height}\r\n                                                                                                        controls\r\n                                                                                                        src={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                                    // onChange={setSource}\r\n                                                                                                    />\r\n                                                                                                    {/* )} */}\r\n                                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                                        <label>Preview Image</label>\r\n                                                                                                        <p>\r\n                                                                                                            Because you’ve included\r\n                                                                                                            multimedia, you’ll need to provide\r\n                                                                                                            an image (PNG, JPG, or GIF) for\r\n                                                                                                            the card display of your item\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                    <div\r\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                                        style={{\r\n                                                                                                            backgroundImage:\r\n                                                                                                                \"url('')\",\r\n                                                                                                            backgroundSize: \"contain\",\r\n                                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                                            backgroundPosition: \"center\",\r\n                                                                                                        }}\r\n                                                                                                    >\r\n                                                                                                        <input\r\n                                                                                                            type=\"file\"\r\n                                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                                        // onChange={previewChange}\r\n                                                                                                        />\r\n                                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                                    <img\r\n                                                                                                                        className=\"preview_image\"\r\n                                                                                                                        src={URL.createObjectURL(preview[index])}\r\n                                                                                                                    // onChange={setPimage}\r\n                                                                                                                    />\r\n                                                                                                                )}\r\n                                                                                                            </div>\r\n                                                                                                        }\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            }\r\n                                                                                            {source?.length && source?.[index] && source[index]?.type === \"modal\" && (\r\n                                                                                                <div>\r\n                                                                                                    <DModal\r\n                                                                                                        vdo={source?.length && source?.[index] && URL.createObjectURL(source[index]?.file)}\r\n                                                                                                    // mdl={setModal}\r\n                                                                                                    />\r\n                                                                                                    <div className=\"uploadnftpopup_content\">\r\n                                                                                                        <label>Preview Image</label>\r\n                                                                                                        <p className=\"\">\r\n                                                                                                            Because you’ve included multimedia,\r\n                                                                                                            you’ll need to provide an image\r\n                                                                                                            (PNG, JPG, or GIF) for the card\r\n                                                                                                            display of your item\r\n                                                                                                        </p>\r\n                                                                                                    </div>\r\n                                                                                                    <div\r\n                                                                                                        className=\"uploadnftpopup-input upload-secound-input inputtdrag\"\r\n                                                                                                        style={{\r\n                                                                                                            backgroundImage:\r\n                                                                                                                \"url('')\",\r\n                                                                                                            backgroundSize: \"contain\",\r\n                                                                                                            backgroundRepeat: \"no-repeat\",\r\n                                                                                                            backgroundPosition: \"center\",\r\n                                                                                                        }}\r\n                                                                                                    >\r\n                                                                                                        <input\r\n                                                                                                            type=\"file\"\r\n                                                                                                            onChange={e => previewChange(e, index)}\r\n                                                                                                        />\r\n                                                                                                        {preview?.length && preview?.[index] &&\r\n                                                                                                            <div className=\"uploadnftpopup-input-img  uploadnftpopup-secound\">\r\n                                                                                                                {preview?.length && preview?.[index] && (\r\n                                                                                                                    <img\r\n                                                                                                                        className=\"preview_image\"\r\n                                                                                                                        src={URL.createObjectURL(preview[index])} />\r\n                                                                                                                )}\r\n                                                                                                            </div>\r\n                                                                                                        }\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            )}\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </Fragment>\r\n                                                                ))}\r\n                                                            </>\r\n                                                        </>\r\n                                                    )}\r\n                                                </Form.List>\r\n                                                <Form.Item>\r\n                                                    <div className=\"col-12\">\r\n                                                        <button className=\"btn w-100 mt-3 mt-sm-4 mb-3\" type=\"submit\">\r\n                                                            Add\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </Form.Item>\r\n                                            </Form>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\nexport default AddNft;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\n\r\n\r\nimport AddNft from '../components/Create/addNft';\r\n\r\nconst AddNFT = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AddNft />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddNFT;","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ReadMore from '../../readMore';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { ProjectList } from '../../redux/Actions/projectAction';\r\nimport FundDetail from '../../themes/fund-detail';\r\nimport latprojDetails from '../../themes/latproj-details';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllFundraise = () => {\r\n\r\n\r\n    const latprojdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails.latestprojectdetails\r\n    })\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n\r\n    const fund = useSelector(state => {\r\n        return state?.fundraiser?.fundraiser\r\n    })\r\n    console.log(fund, 'fdd')\r\n\r\n    useEffect(() => {\r\n        dispatch(TopFundraiserAction({}))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    <h3 className=\"mt-3 mb-0\">All Fundraiser's</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {/* {fund && fund.length ?\r\n                                [...new Map(fund.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\r\n                            {fund?.map((item, idx) => {\r\n\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} to={`/fundraiser/detail/${item.user_id}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <div className=\"card project_cards position-relative \">\r\n                                                {/* matic */}\r\n                                                {/* <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                    <span className='matics'>{item.amount} MATIC</span>\r\n                                                  \r\n                                                </div> */}\r\n                                                <div className=\"image-over position-relative \">\r\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                    <img className=\"card-img-top\" src={item?.organization_detail?.banner_image} />\r\n                                                </div>\r\n                                                <div className='token'>\r\n                                                    <span></span>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <img className='logo' src=\"/img/logo.png\" alt='logo' width={50} height={50} />\r\n                                                        <a>\r\n                                                            <h5 className=\"mb-0 mt-3\">{item?.organization_detail?.organization_name} </h5>\r\n                                                        </a>\r\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                                    <span>Owned By</span>\r\n                                                                    <a href=\"/author\">\r\n                                                                        <h6 className=\"ml-2 mb-0\">You</h6>\r\n                                                                    </a>\r\n                                                                </div> */}\r\n                                                        <div className=''>\r\n                                                            <p dangerouslySetInnerHTML={{ __html: item?.organization_detail?.description?.slice(0, 50) }} />\r\n                                                            {/* <p> It is a long established fact that a reader</p> */}\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className='mb-2 d-flex align-items-center justify-content-between'>\r\n                                                            <div className='mt-2 mb-2 d-flex text-align-center fundraiser_sale'>\r\n                                                                <div>\r\n                                                                    <span>Created</span>\r\n                                                                    <div>148</div>\r\n                                                                </div>\r\n                                                                <div>\r\n                                                                    <span>Sale</span>\r\n                                                                    <div>100</div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                                            </svg></span>\r\n                                                        </div>\r\n\r\n                                                        {/* <div className='donate-btn'>\r\n                                                                <button className='btn ml-lg-auto btn-bordered-white'>Donate Now</button>\r\n                                                            </div> */}\r\n                                                        \r\n\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                            {/* }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    <h2 className='allproj2'>\r\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                    </h2>\r\n                                </div>\r\n                            } */}\r\n\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllFundraise; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport GetAllFundraise from '../components/Explore/fundraiserProjects';\r\n\r\nconst AllFundraiser = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllFundraise />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllFundraiser;","import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { TopFundraiserAction } from '../../redux/Actions/fundraiserAction';\r\nimport { GetfundraiserProject, ProjectList } from '../../redux/Actions/projectAction';\r\nimport Loader from '../Loader/loader';\r\nimport { DeleteProject } from './../../redux/Actions/projectAction';\r\n\r\n\r\nconst GetAllFundraiseProjects = (props) => {\r\n    const [loading, setLoading] = useState()    // console.log(projc, 'projc')\r\n    const dispatch = useDispatch()\r\n    const { user_id } = useParams()\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    console.log(fundprojdetail, 'fundprojdetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(GetfundraiserProject(user_id))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n\r\n                <section className=\"explore-area\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-12 col-md-8 col-lg-7\">\r\n                                {/* Intro */}\r\n                                <div className=\"intro text-center mb-4\">\r\n                                    {/* <span>Explore</span> */}\r\n                                    <h3 className=\"mt-3 mb-0\">Fundraiser Projects</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row items explore-items h-auto\">\r\n                            {/* {fund && fund.length ?\r\n                                [...new Map(fund.map(item =>\r\n                                    [item[\"title\"], item])).values()].map((item, idx) => { */}\r\n                            {fundprojdetail?.map((item, idx) => {\r\n\r\n                                return (\r\n                                    <Link key={`edth_${idx}`} to={`/projects/${item.slug}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item\">\r\n                                        <div>\r\n                                            <div className=\"card project_cards\">\r\n                                                <div className=\"image-over relative \">\r\n                                                    {/* <i class=\"fa-solid fa-pen\" ></i>\r\n                                                    <i class=\"fa-sharp fa-solid fa-trash\"></i> */}\r\n                                                    <img className=\"card-img-top\" src={item?.nft_data[0]?.image} alt={item.nft_data.description} />\r\n                                                </div>\r\n                                                <div className='token'>\r\n                                                    <span></span>\r\n                                                </div>\r\n                                                {/* Card Caption */}\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        <a>\r\n                                                            <h5 className=\"mb-0\">{item.title.slice(0, 20)}</h5>\r\n                                                        </a>\r\n                                                        {/* <div className=\"seller d-flex align-items-center my-3\">\r\n                                                            <span>Owned By</span>\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\"></h6>\r\n                                                            </a>\r\n                                                        </div> */}\r\n                                                        <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                            <span>{item.price} MATIC</span>\r\n                                                            <span>{item.nft_data.length} NFTS </span>\r\n                                                            <span> + {item.number_of_nft} NFTS </span>\r\n                                                        </div>\r\n\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\"> <Link to={`/updateproject/${item.id}`}>Edit</Link></a> */}\r\n                                                        {/* <a className=\"btn btn-bordered-white btn-smaller mt-3\" onClick={() => deleteHandler(item.id)}>Delete</a> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                            {/* }) :\r\n                                <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                                    <h2 className='allproj2'>\r\n                                        You have no project yet, <Link to=\"/create\">Create one</Link>\r\n                                    </h2>\r\n                                </div>\r\n                            } */}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GetAllFundraiseProjects; ","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport GetAllFundraiseProjects from '../components/Explore/fundProj';\r\n\r\nconst AllFundraiserProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <GetAllFundraiseProjects />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllFundraiserProjects;","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { TopFundraiserDetail } from '../../redux/Actions/fundraiserAction';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport { Button } from 'bootstrap';\r\nimport { GetfundraiserProject } from '../../redux/Actions/projectAction';\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom';\r\nimport FunddataTable from '../TopSeller/fundraiserdetail';\r\nimport FundTransdataTable from '../TopSeller/fundPaymenttable';\r\nimport ReadMore from '../../readMore';\r\n\r\nconst MyFundraiserDetail = () => {\r\n    const { user_id } = useParams()\r\n    // const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    const funddetail = useSelector(state => {\r\n        return state?.fundraiser?.fundraiserdetail\r\n    })\r\n    // console.log(funddetail, 'fdddetail')\r\n    const fundprojdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getfundProjDetails\r\n    })\r\n    // console.log(fundprojdetail, 'fdprojetail')\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(TopFundraiserDetail(user_id))\r\n        dispatch(GetfundraiserProject(user_id))\r\n\r\n    }, [dispatch, user_id])\r\n    // state = {\r\n    //     initData: {},\r\n    //     tabData_1: [],\r\n    //     tabData_2: [],\r\n    //     sellerData: []\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.setState({\r\n    //         initData: initData,\r\n    //         tabData_1: tabData_1,\r\n    //         tabData_2: tabData_2,\r\n    //         sellerData: sellerData\r\n    //     })\r\n    // }\r\n    // render() {\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div class=\"row py-0\">\r\n                    <div className='col-12 p-0'>\r\n                        <span className='title_main'>{funddetail?.organization_detail?.organization_name}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-between px-0\">\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <div className=\"item-info\">\r\n\r\n                            <div className=\"item-thumb text-center\">\r\n                                <img src={funddetail?.organization_detail?.banner_image} alt=\"\" />\r\n                                {/* <img src='/img/ph.jpg' alt=\"\" /> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className='lorem_done'>\r\n                            <svg width=\"28px\" height=\"28px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 21.75C17.3848 21.75 21.75 17.3848 21.75 12C21.75 6.61522 17.3848 2.25 12 2.25C6.61522 2.25 2.25 6.61522 2.25 12C2.25 17.3848 6.61522 21.75 12 21.75Z\" stroke=\"\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M12 12C13.2416 12 14.248 10.9926 14.248 9.75C14.248 8.50736 13.2416 7.5 12 7.5C10.7584 7.5 9.75197 8.50736 9.75197 9.75C9.75197 10.9926 10.7584 12 12 12Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                <path d=\"M14.9974 14.25C16.6528 14.25 17.9737 15.7453 16.8057 16.9195C15.703 18.0281 13.9431 18.75 12 18.75C10.0569 18.75 8.29702 18.0281 7.19428 16.9195C6.02632 15.7453 7.34722 14.25 9.00262 14.25L14.9974 14.25Z\" stroke=\"#4528dc\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                            </svg>\r\n\r\n\r\n                            <span className='cutom_dis'> {funddetail?.organization_detail?.organization_name} is organizing this fundraiser.</span>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <div className='custam_col'>\r\n                            <h5 class=\"user_title\"><div>Description</div></h5>\r\n                            <div className=\" no-hover\">\r\n                                {/* <span className=\"mt-0 mb-2\" dangerouslySetInnerHTML={{ __html: funddetail?.organization_detail?.description }} /> */}\r\n                                <ReadMore data={funddetail?.organization_detail?.description} />\r\n                                <div className=\"price d-flex justify-content-between align-items-center\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"content mt-5 mt-lg-0\">\r\n                            {/* <h3 className=\"m-0\">{this.state.initData.title}</h3> */}\r\n                            {/* <p>{this.state.initData.content}</p> */}\r\n                            <div className=\"owner d-flex align-items-center\">\r\n\r\n                                <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    {/* <img className=\"avatar-sm rounded-circle\" src={this.state.initData.ownerImg} alt=\"\" /> */}\r\n                                    {/* <h6 className=\"ml-2\"></h6> */}\r\n\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div className=\"item-info-list\">\r\n\r\n                                <ul className=\"list-unstyled\">\r\n                                    <div className=\"card no-hover detail_single_nfts\">\r\n\r\n                                        <li className='nft_price'>\r\n                                            ${funddetail?.total_fundraised} raised from all projects\r\n\r\n                                        </li>\r\n\r\n\r\n                                        {/* <li className=\"price d-flex justify-content-between\">\r\n                                                <span className=\"progress-bar bg-success\" role=\"progressbar\" style={{ width: \"70%\" }} aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\"> 71% </span>\r\n    \r\n                                            </li> */}\r\n\r\n                                    </div>\r\n                                    <div className=\"custam_col no-hover\">\r\n                                        <h5 class=\"user_title\"><div>Projects</div></h5>\r\n                                        {/* <li className='card-inner-heading'>\r\n                                            <span style={{}}>Projects</span>\r\n                                        </li> */}\r\n\r\n                                        {fundprojdetail && fundprojdetail.length &&\r\n                                            [...new Map(fundprojdetail.map(item =>\r\n                                                [item[\"title\"], item])).values()]?.slice(0, 4)?.map((item, idx) => {\r\n                                                    const date1 = new Date(item.created_at)\r\n                                                    const date2 = new Date()\r\n                                                    // console.log('todat', date2)\r\n                                                    const time_difference = date2.getTime() - date1.getTime();\r\n                                                    const days_difference = Math.ceil(time_difference / (1000 * 60 * 60 * 24));\r\n                                                    // const totaldays = days_difference.slice(0,1)\r\n                                                    // console.log(\"daysss\", days_difference)\r\n                                                    return (\r\n\r\n                                                        <>\r\n                                                            <ul className=\"project_back\">\r\n                                                                <li className='item_title'>\r\n                                                                    {item.title}\r\n                                                                </li><li className='item_created'>\r\n                                                                    {days_difference} days ago\r\n                                                                    {/* {(item.created_at).diff(new Date, 'day', true)} */}\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                        <li className='button_blow'>\r\n                                            <a className=\"d-block btn btn-bordered-white mt-4\" href=\"/all/LatestProjects\">view all</a>\r\n\r\n                                        </li>\r\n                                    </div>\r\n\r\n                                </ul>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-12 col-md-8'>\r\n\r\n                    </div>\r\n                    <div className='col-12 col-md-4'>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-12'>\r\n                        <div className='funddeatil'>\r\n\r\n                            <FunddataTable />\r\n\r\n                            <FundTransdataTable />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section >\r\n    );\r\n}\r\n// }\r\n\r\nexport default MyFundraiserDetail;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport MyFundraiserDetail from '../components/Explore/my_fundraise';\r\n\r\nconst FundraiserProjects = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <MyFundraiserDetail />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FundraiserProjects;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\n\r\nconst Rewards = () => {\r\n\r\n    // console.log(footer, 'footer')\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-12\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <h3>How Creator and Referral MATIC Rewards Work</h3>\r\n                        <span className='termsandconditions'><li>Affiliates get 30% on first level NFT referred sales at Karmatica.io only.</li>\r\n                            <li>Creators get 10% of secondary NFT sales for the lifetime of the project.</li>\r\n                            <br />\r\n                            <h5>NFT sale to BUYER 1 </h5>\r\n                            69% goes to Creator <br />\r\n                            30% goes to Affiliate<br />\r\n                            1% to Karmatica<br />\r\n                            <br />\r\n                            <h5>NFT resold from BUYER 1 to BUYER 2 via Affiliate</h5>\r\n                            84% goes to BUYER 1<br />\r\n                            10% goes to NFT Creator<br />\r\n                            5% goes to Affiliate <br />\r\n                            1% to Karmatica<br />\r\n                        </span>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default Rewards","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport Rewards from '../components/Footer/reward';\r\n\r\nconst NftReward = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <Rewards />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NftReward;","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AllNoti, GetUserAction, NotiDelete } from '../../redux/Actions/authAction'\r\nimport { getFooter } from '../../redux/Actions/footerAction'\r\nimport moment from \"moment\";\r\nconst AllNotifications = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const nooti = useSelector(state => {\r\n\r\n        return state?.user?.noti\r\n    })\r\n    useEffect(() => {\r\n        dispatch(AllNoti())\r\n        dispatch(GetUserAction())\r\n    }, [])\r\n    const deleteHandler = (id) => {\r\n        dispatch(NotiDelete(id))\r\n    }\r\n    console.log(nooti, 'noti')\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-lg-7\">\r\n                        <div className=\"shape\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 465\" version=\"1.1\">\r\n                                <defs>\r\n                                    <linearGradient x1=\"49.7965246%\" y1=\"28.2355058%\" x2=\"49.7778147%\" y2=\"98.4657689%\" id=\"linearGradient-1\">\r\n                                        <stop stopColor=\"rgba(69,40,220, 0.15)\" offset=\"0%\" />\r\n                                        <stop stopColor=\"rgba(87,4,138, 0.15)\" offset=\"100%\" />\r\n                                    </linearGradient>\r\n                                </defs>\r\n                                <g id=\"Page-1\" stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\r\n                                    <polygon points fill=\"url(#linearGradient-1)\">\r\n                                        <animate id=\"graph-animation\" xmlns=\"http://www.w3.org/2000/svg\" dur=\"2s\" repeatCount attributeName=\"points\" values=\"0,464 0,464 111.6,464 282.5,464 457.4,464 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,323.3 282.5,373 457.4,423.8 613.4,464 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,336.6 457.4,363.5 613.4,414.4 762.3,464 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,323.3 613.4,340 762.3,425.6 912.3,464 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,290.4 762.3,368 912.3,446.4 1068.2,464 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,329.6 912.3,420 1068.2,427.6 1191.2,464 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,402.4 1068.2,373 1191.2,412 1328.1,464 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,336.6 1191.2,334 1328.1,404 1440.1,464 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,282 1328.1,314 1440.1,372.8 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,254 1440.1,236 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,144.79999999999998 1440.1,464 0,464; 0,464 0,367 111.6,263 282.5,282 457.4,263 613.4,216 762.3,272 912.3,376 1068.2,282 1191.2,204 1328.1,164 1440.1,8 1440.1,464 0,464;\" fill=\"freeze\" />\r\n                                    </polygon>\r\n                                </g>\r\n                            </svg>\r\n                        </div>\r\n                        <ul className='termsandconditions' >\r\n                            {nooti.map((item) => {\r\n                                return (\r\n                                    <><li>{item.title}</li>\r\n                                        <li className='btn_wrap'><span>{moment(item.created_at).format(\"ddd D MMM YY\")}</span>\r\n                                            <span><button type='submit' onClick={() => deleteHandler(item.id)}>Clear</button></span></li></>\r\n                                )\r\n                            })}\r\n                        </ul>\r\n\r\n                        {/* <h3>{footer?.footer?.title}</h3> */}\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div >\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\nexport default AllNotifications","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport AllNotifications from './../components/Header/Allnotifications';\r\n\r\nconst Notifi = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <AllNotifications />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Notifi;","import React, { Component, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { GetUserAction } from \"../../redux/Actions/authAction\";\r\nimport {\r\n    CategoriesAction,\r\n    getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\n\r\n\r\nconst ExploreBuyedNfts = () => {\r\n    const { type } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <h3 className=\"mt-3 mb-0\">\r\n                                My NFTs\r\n                                {/* {type.match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")} */}\r\n                            </h3>\r\n                            <p>\r\n                                Invest in NFTs that are based on real-life projects or events\r\n                                related to important causes\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {userdet?.purchase_nft && userdet?.purchase_nft?.length ? (\r\n                        [\r\n                            ...new Map(\r\n                                userdet?.purchase_nft?.map((item) => [item[\"title\"], item])\r\n                            ).values(),\r\n                        ].map((item, idx) => {\r\n                            return (\r\n                                <Link\r\n                                    key={`edth_${idx}`}\r\n                                    className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                                >\r\n                                    <div>\r\n                                        <Link to={`/my/nfts-detail/${item.slug}`}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"image-over\">\r\n                                                    <Link to={`/my/nfts-detail/${item.slug}`}>\r\n                                                        <img\r\n                                                            className=\"card-img-top\"\r\n                                                            src={item.image}\r\n                                                            alt=\"\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                    {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                                                </div>\r\n\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                                                        <a >\r\n                                                            <h5 className=\"mb-0\">\r\n                                                                {item.title.slice(0, 15)}\r\n                                                            </h5>\r\n                                                        </a>\r\n                                                        <div\r\n                                                            className=\"seller d-flex align-items-center my-3\"\r\n\r\n                                                        >\r\n                                                            <span>Owned By</span>\r\n                                                            {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\">\r\n                                                                    {/* {item.user_data.username.slice(0, 12)} */}\r\n                                                                    You\r\n                                                                </h6>\r\n                                                            </a>\r\n\r\n                                                            {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                                        </div>\r\n                                                        <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                                                            <span><img className=\"mr-1\" src='../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                            {/* {item?.number_of_nft == 1 ? (\r\n                                                                <span>{item.number_of_nft} NFT</span>\r\n                                                            ) : (\r\n                                                                <span>{item.number_of_nft} NFTs</span>\r\n                                                            )} */}\r\n                                                        </div>\r\n                                                        <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                                                            <Link to={`/my/nfts-detail/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                                                <i className=\"icon-handbag\" />\r\n                                                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                                                            </Link>\r\n                                                            <Link to={`/my/nfts-detail/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                            <h2 className=\"allproj2\">No latest project found</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default ExploreBuyedNfts;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreBuyedNfts from '../components/Explore/BuyedNfts';\r\n\r\nconst BuyedNft = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ExploreBuyedNfts />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default BuyedNft;","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetbuyedNftDetails, NftList, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nconst NftBuydataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { Panel } = Collapse;\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const slug = useParams()\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state.projectdetails?.getBuyedNftdetails\r\n\r\n    })\r\n    useEffect(() => {\r\n        dispatch(GetbuyedNftDetails(props.slug))\r\n        // dispatch(ProjectDetail(slug))\r\n    }, [props.slug])\r\n\r\n    return (\r\n        <div className='nft_detail_main position-relative'>\r\n            <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                <svg fill=\"#fff\" width=\"24px\" height=\"24px\" class='detail-icon' viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                    <path d=\"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm144 452H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm445.7 51.5l-93.3-93.3C814.7 780.7 828 743.9 828 704c0-97.2-78.8-176-176-176s-176 78.8-176 176 78.8 176 176 176c35.8 0 69-10.7 96.8-29l94.7 94.7c1.6 1.6 3.6 2.3 5.6 2.3s4.1-.8 5.6-2.3l31-31a7.9 7.9 0 0 0 0-11.2zM652 816c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" />\r\n                </svg>\r\n                {/* <svg className='detail-icon' width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg> */}\r\n                <Panel header=\"Details\" key=\"1\">\r\n                    <Table responsive className='m-0'>\r\n                        <thead>\r\n                            {/* {latprojnftdetail?.map((items) => { \r\n                         return (  */}\r\n\r\n                            <><tr>\r\n                                <th>Blockchain</th>\r\n                                <td>Polygon (Matic)</td>\r\n                            </tr><tr className='contract-address'>\r\n                                    <th >Contract</th>\r\n                                    <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/address/${nftdetail?.collectionData?.contract_id}`} >{nftdetail.collectionData?.contract_id?.slice(0, 5)}.....{nftdetail.collectionData?.contract_id?.slice(39, 42)}</a></td>\r\n                                </tr><tr>\r\n                                    <th>Token ID</th>\r\n                                    <td>{nftdetail.token_id}</td>\r\n                                </tr><tr>\r\n                                    <th>Token Stranded</th>\r\n                                    <td>ERC721</td>\r\n                                </tr></>\r\n\r\n                            {/* )})} */}\r\n\r\n                        </thead>\r\n                        <tbody>\r\n                            {/* {projdetail.nft_data?.map((items) => { */}\r\n                            {/* // return ( */}\r\n                            <tr>\r\n\r\n                                <td>\r\n                                    {/* {items.collectionData?.contract_id} */}\r\n                                </td>\r\n                                <td>\r\n                                    {/* {items.token_id} */}\r\n                                </td>\r\n                                {/* <td>ERC721</td> */}\r\n                                {/* <td>Polygon (Matic)</td> */}\r\n                            </tr>\r\n                            {/* // ) */}\r\n                            {/* })} */}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n                {/* <div className='nothing'>\r\n                No matching records found\r\n                        </div> */}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NftBuydataTable","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteProject, GetbuyedNftDetails, GetSettings, LatestProjectDetail, NftList, ProjectDetail, UpdateCollection } from '../../redux/Actions/projectAction';\r\nimport { getProjectDetail } from '../../redux/Slices/projectSlice';\r\nimport { useState } from 'react';\r\nimport dayjs from 'dayjs'\r\nimport Web3 from 'web3';\r\nimport NFTContract from '../../backend/contracts/artWork.sol/NFTContract.json'\r\nimport { BuyNft, ConnectWallet } from '../Wallet/interact';\r\nimport EditCollection from '../ItemDetails/updateCollection';\r\nimport UserTransdataTable from '../AuthorProfile/userDetails';\r\nimport { CreateMetaDataAndMint } from './../Wallet/interact';\r\nimport NftPopup from '../ItemDetails/nftPopup';\r\nimport axios from 'axios';\r\nimport { redirect } from 'next/dist/server/api-utils';\r\nimport LatprojNftDetails from '../Auctions/nftBuy';\r\nimport DModal from '../Create/3dModal';\r\nimport NftdataTable from '../Explore/nftdataTable';\r\nimport LatNftdataTable from '../Explore/latProjNftdata';\r\nimport NftAuctiondataTable from '../ItemDetails/nftAuctiontable';\r\nimport SellPopup from '../ItemDetails/sellPopup';\r\nimport EditNftName from '../Create/editNftNamepopup';\r\nimport EditNftDesc from '../Create/editDescPopup';\r\nimport EditNftImage from '../Create/nftImageeditPopup';\r\nimport NftBuydataTable from './NftBuyData';\r\nimport { GetMatic } from '../ItemDetails/GetMAtic';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\n// console.log(NFTContract.abi,\"abi\")\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\n\r\n\r\nconst BuyedNftDetails = (props) => {\r\n    const history = useHistory()\r\n    const [nftId, setNftID] = useState();\r\n    // const search = useLocation().search;\r\n    // const projslug = new URLSearchParams(search).get('project');\r\n    // console.log(projslug, 'projslug')\r\n    // const latprojnftdetail = useSelector(state => {\r\n    //     // \r\n    //     return state.projectdetails.getnftwoldetails\r\n    // })\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [matic, setMatic] = useState('')\r\n    const [sellmodalShow, setSellModalShow] = React.useState(false);\r\n    const [modalShowedit, setModalShowedit] = React.useState(false);\r\n    const [modalShoweditdes, setModalShoweditdes] = React.useState(false);\r\n    const [modalShoweditimg, setModalShoweditimg] = React.useState(false);\r\n    // const [mintmodalShow, setMintModalShow] = React.useState(false);\r\n\r\n    const [current, setCurrent] = React.useState(0)\r\n    const [contractAdd, setContractAdd] = useState('')\r\n\r\n    const slug = useParams();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const nftdetail = useSelector(state => {\r\n        // \r\n        return state?.projectdetails?.getBuyedNftdetails\r\n\r\n    })\r\n    // console.log(\"nftmint\", nftdetail.is_mint)\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetbuyedNftDetails(slug))\r\n        // dispatch(GetSettings())\r\n    }, [slug])\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <div className=\"item-info\">\r\n                            {/* {latprojdetail?.map((item, key) => ( */}\r\n                            {/* {nftdetail.is_mint == 0 &&\r\n\r\n                                <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n\r\n                                    <div >\r\n                                        <div className='position-absolute nft-edit-icon'><i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditimg(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        </div>\r\n                                        <div className='loader-img'>{modalShoweditimg &&\r\n\r\n                                            <EditNftImage\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditimg}\r\n                                                onHide={() => setModalShoweditimg(false)} />\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            } */}\r\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n                                {nftdetail.extention === \"Player\" &&\r\n\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={nftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={nftdetail.image}\r\n                                    // mdl={setModal}\r\n                                    />\r\n                                }\r\n                                {nftdetail.extention === \"Image\" &&\r\n\r\n                                    <img src={nftdetail.image} alt=\"\" />\r\n                                }\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-sm-0\">\r\n                        <div className=' card no-hover py-0 mt-2 mb-2 mt-lg-0 mb-lg-0 '>\r\n\r\n                            <span Class=\"title_main \" style={{ color: '#fff' }}>{nftdetail?.title} </span>\r\n                            {/* {nftdetail.is_mint == 0 &&\r\n                                <div className='nft-edit-icon position-absolute mt-2'>\r\n                                    <i className=\"fa-solid fa-pen \" onClick={(e) => {\r\n                                        setNftID(slug)\r\n                                        e.preventDefault();\r\n                                        setModalShowedit(true)\r\n                                    }\r\n                                    } ></i>\r\n                                    {modalShowedit &&\r\n\r\n                                        <EditNftName\r\n                                            // debugger\r\n                                            id={projslug}\r\n                                            nft_id={nftId}\r\n                                            show={modalShowedit}\r\n                                            onHide={() => setModalShowedit(false)} />\r\n                                    }\r\n                                </div>\r\n                            } */}\r\n\r\n                        </div>\r\n                        <div className=\"content sm:mt-3 mt-lg-2\">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                {/* <span className='share'><svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path fill=\"none\" stroke=\"#fff\" stroke-width=\"2\" d=\"M18,8 C19.6568542,8 21,6.65685425 21,5 C21,3.34314575 19.6568542,2 18,2 C16.3431458,2 15,3.34314575 15,5 C15,6.65685425 16.3431458,8 18,8 Z M6,15 C7.65685425,15 9,13.6568542 9,12 C9,10.3431458 7.65685425,9 6,9 C4.34314575,9 3,10.3431458 3,12 C3,13.6568542 4.34314575,15 6,15 Z M18,22 C19.6568542,22 21,20.6568542 21,19 C21,17.3431458 19.6568542,16 18,16 C16.3431458,16 15,17.3431458 15,19 C15,20.6568542 16.3431458,22 18,22 Z M16,18 L8,13 M16,6 L8,11\" />\r\n                                </svg></span> */}\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    {/* <span>{nftdetail?.user_data?.username}</span> */}\r\n                                    <span>You</span>\r\n\r\n                                    <a className=\"owner-meta d-flex align-items-center ml-3\" href=\"/author\">\r\n                                    </a>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {nftdetail?.collectionData?.title}</span>\r\n\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{nftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                {nftdetail.nft_type === \"1\" ? (\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                            disabled>Your NFT is now ready to purchase</span>\r\n\r\n                                        </>\r\n\r\n                                    </div>\r\n\r\n\r\n                                ) : (\r\n\r\n                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n\r\n\r\n                                        <><button className=\"w-full btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                            onClick={() => setSellModalShow(true)}>  Sell</button>\r\n                                            <SellPopup\r\n\r\n                                                show={sellmodalShow}\r\n                                                slug={slug}\r\n\r\n                                                onHide={() => setSellModalShow(false)}\r\n                                                nftid={nftdetail.id}\r\n                                                ismint={nftdetail.is_mint}\r\n                                            />\r\n\r\n                                        </>\r\n\r\n                                    </div>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"col-12 md:col-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            {/* <div className='py-0 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n\r\n                                {nftdetail?.is_mint == 0 &&\r\n                                    <div className='nft-edit-icon position-absolute mt-2'>\r\n                                        <i className=\"fa-solid fa-pen\" onClick={(e) => {\r\n                                            setNftID(slug)\r\n                                            e.preventDefault();\r\n                                            setModalShoweditdes(true)\r\n                                        }\r\n                                        } ></i>\r\n                                        {modalShoweditdes &&\r\n\r\n                                            <EditNftDesc\r\n                                                // debugger\r\n                                                id={projslug}\r\n                                                nft_id={nftId}\r\n                                                show={modalShoweditdes}\r\n                                                onHide={() => setModalShoweditdes(false)} />\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                            </div> */}\r\n                            <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft \" />\r\n                            {/* <ReadMore  dangerouslySetInnerHTML={{ __html: latprojnftdetail.description }} /> */}\r\n                            {/* <p dangerouslySetInnerHTML={{ __html: latprojdetail.description }} /> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-4 col-12 mt-4'>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    {/* <img src='../../img/image14.png' /> */}\r\n                                    {/* <svg viewBox=\"0 0 20 20\" width=\"24px\" height=\"24px\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#8247E5\"></circle><path d=\"M12.97 8.055a.75.75 0 0 0-.732 0l-1.678.972-1.141.635-1.68.972a.751.751 0 0 1-.731 0l-1.335-.76a.727.727 0 0 1-.366-.614V7.76c0-.254.13-.486.366-.613l1.313-.74a.751.751 0 0 1 .732 0l1.313.74c.215.127.366.36.366.613v.973l1.141-.656v-.972a.684.684 0 0 0-.366-.614L7.74 5.095a.751.751 0 0 0-.732 0L4.532 6.49a.684.684 0 0 0-.365.614v2.811c0 .254.129.487.365.614l2.476 1.395a.75.75 0 0 0 .732 0l1.679-.951 1.14-.656 1.68-.951a.75.75 0 0 1 .731 0l1.313.74c.216.127.366.36.366.613v1.5c0 .255-.129.487-.366.614l-1.313.761a.751.751 0 0 1-.732 0l-1.313-.74a.727.727 0 0 1-.366-.613v-.973l-1.14.656v.972c0 .254.129.487.366.613l2.475 1.396a.751.751 0 0 0 .732 0l2.475-1.396a.727.727 0 0 0 .366-.613v-2.811a.684.684 0 0 0-.366-.614L12.97 8.055Z\" fill=\"#fff\"></path></svg> */}\r\n                                    {/* <span>{latprojnftdetail.amount}</span> */}\r\n                                    <img src='../../img/image14.png' />\r\n                                    <span><small>{nftdetail.amount} / ${nftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn</small> </span>\r\n                                    {/* <span><small>${nftdetail.amount}</small></span> */}\r\n                                </div>\r\n\r\n                                <div className='sales'>\r\n                                    <span>\r\n                                        Creator royalties on secondary sales:\r\n                                    </span>\r\n                                    <span>5%</span>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-lg-8 col-12'>\r\n                        <div className=\"profile_detail mt-4\">\r\n\r\n                            <NftBuydataTable\r\n                                slug={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className='col-12 mt-4'>\r\n                        <div className='container table-detail'>\r\n\r\n                            <NftAuctiondataTable\r\n                                slug={slug}\r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </div> */}\r\n\r\n\r\n                    {/* <div className='col-12 description'>\r\n                    <h3 > Description</h3>\r\n                    <div className=\"card no-hover countdown-times my-4\">\r\n            \r\n                        <p dangerouslySetInnerHTML={{ __html: nftdetail.description }} className=\"nft-detail-nft\" />\r\n                    </div>\r\n                     </div> */}\r\n                </div >\r\n            </div>\r\n        </section >\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default BuyedNftDetails;","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport BuyedNftDetails from '../components/Explore/NftBuyedDetails';\r\nconst BuyNftDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main main-fund-detail\">\r\n\r\n            <Header />\r\n            <BuyedNftDetails />\r\n\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default BuyNftDetail;","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AnnualRevenueList, CountryList, CreateOrganizationAfterRoleChange, HearAboutList, Register } from '../../redux/Actions/authAction'\r\nimport { Controller, useForm } from 'react-hook-form'\r\n\r\nimport { useHistory } from 'react-router'\r\nimport { useFormData } from './Context/context'\r\nimport styles from './styles/styles.module.scss'\r\nimport { GetSocialMediaIcons } from '../../redux/Actions/projectAction'\r\nimport { useState } from 'react'\r\nimport JoditEditor from 'jodit-react';;\r\n\r\n// import { Widget } from \"@uploadcare/react-widget\";\r\n// import FileUpload from \"react-material-file-upload\";\r\n// import { uploadcare } from '../lib/uploadcare.min.js';\r\nconst RoleChangeOrganizationdetails = () => {\r\n\r\n    const [description, setDescription] = useState()\r\n\r\n    const editor = useRef(null);\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const { countries } = useSelector(state => state.countries)\r\n    const { register, handleSubmit, formState: { errors }, control } = useForm({\r\n        mode: 'all',\r\n\r\n    });\r\n\r\n    const OnSubmit = (values) => {\r\n        // debugger\r\n        // FormData.append('email', data.email)\r\n        // FormData.append('password', data.password)\r\n        // FormData.append('confirm_password', data.confirm_password)\r\n        const formData = new FormData()\r\n        formData.append('banner_image', values.banner_image[0])\r\n        formData.append('logo', values.logo[0])\r\n        formData.append('wallet_id', values.wallet_id)\r\n        // formData.append('role', data.role)\r\n        formData.append('goal', values.goal)\r\n        formData.append('organization_name', values.organization_name)\r\n        formData.append('url', values.url)\r\n        formData.append('country', values.country)\r\n        // formData.append('annual_revenue_range', values.annual_revenue_range)\r\n        formData.append('tax_id', values.tax_id)\r\n\r\n        formData.append('social', values.social)\r\n        formData.append('social_link', values.social_link)\r\n        formData.append('description', description)\r\n        // formData.append('method_heard_detail', values.method_heard_detail)\r\n\r\n        dispatch(CreateOrganizationAfterRoleChange(formData, dispatch))\r\n        // if (formData) {\r\n        //     swal(\"Registered!\", \"You have been registered!\", \"success\");\r\n        //     history.push('/login')\r\n        // }\r\n    }\r\n\r\n    const socialmedia = useSelector(state => {\r\n        return state?.getSocialmediaIcons?.getsocial\r\n    })\r\n    // console.log('social', socialmedia)\r\n    useEffect(() => {\r\n        dispatch(CountryList())\r\n        dispatch(AnnualRevenueList())\r\n        dispatch(HearAboutList())\r\n        dispatch(GetSocialMediaIcons())\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"author-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro text-center\">\r\n                            <span></span>\r\n                            <h3 className=\"mt-3 mb-0\"></h3>\r\n                            <p></p>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        {/* <div className={formStep === 1 ? styles.showForm : styles.hideForm}> */}\r\n                        <form onSubmit={handleSubmit(OnSubmit)} className=\"item-form card no-hover\">\r\n                            {/* <button\r\n                                    // className={styles.back}\r\n                                    onClick={prevFormStep}\r\n                                    type=\"button\"\r\n                                >\r\n                                    back\r\n                                </button> */}\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Fundraising Goal</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"goal\"\r\n                                            step=\"0.01\"\r\n                                            placeholder=\"Fundraising goal (MATIC)\"\r\n                                            {...register(\"goal\",\r\n                                                {\r\n                                                    required: true,\r\n\r\n                                                })}\r\n                                            aria-invalid={errors.goal ? \"true\" : \"false\"} />\r\n                                        {errors.goal && <p style={{ color: 'red' }} role=\"alert\">Fundraising goal is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Funding Wallet </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"wallet_id\"\r\n                                            // defaultValue='1'\r\n                                            placeholder=\"Funding Wallet\"\r\n                                            {...register(\"wallet_id\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.wallet_id ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.wallet_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Wallet address is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Name</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"organization_name\"\r\n                                            placeholder=\"Organization name\"\r\n                                            {...register(\"organization_name\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.organization_name ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.organization_name?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Organization name is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Website</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"url\"\r\n                                            placeholder=\"Website\"\r\n                                            {...register(\"url\", {\r\n                                                required: true,\r\n                                                pattern: {\r\n                                                    value: /^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/,\r\n\r\n                                                }\r\n                                            })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.url ? \"true\" : \"false\"}\r\n                                        />\r\n\r\n                                        {errors.url && errors.url?.type === \"pattern\" && <p style={{ color: 'red' }} role=\"alert\">Not valid URL</p>}\r\n                                        {errors.url?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Url is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form- group mt-3\">\r\n                                            <label>Description</label>\r\n                                            <textarea\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Describe your project\"\r\n\r\n                                                {...register(\"description\", { required: true })}\r\n                                                // {...register(\"email\")}\r\n                                                aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                            />\r\n                                            {errors.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form- group mt-3\">\r\n                                        <label>Description</label>\r\n                                        <Controller\r\n                                            control={control}\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n\r\n                                            // {...register(\"description\", { required: true })}\r\n                                            rules={{ required: true, min: 150 }}\r\n                                            // rules={{\r\n                                            //     required: true, pattern: {\r\n\r\n                                            //         message: \"Description is required\",\r\n                                            //     },\r\n                                            // }}\r\n                                            render={({ field }) => {\r\n                                                return <JoditEditor\r\n                                                    ref={field.ref}\r\n                                                    value={field.value}\r\n                                                    // config={config}\r\n                                                    aria-invalid={errors.description ? \"true\" : \"false\"}\r\n                                                    placeholder=\"start typing\"\r\n                                                    tabIndex={1} // tabIndex of textarea\r\n                                                    onBlur={newContent => setDescription(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                                                    onChange={field.onChange}\r\n                                                />\r\n                                            }}\r\n                                        />\r\n                                        {errors?.description?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Description is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Country</label>\r\n\r\n                                        <select name=\"country\"\r\n                                            {...register(\"country\", { required: true })}>\r\n                                            aria-invalid={errors.country ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your country</option>\r\n                                            {countries.data?.data?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.name}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.country?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Country is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"annual_revenue_range\"\r\n                                                {...register(\"annual_revenue_range\", { required: true })}>\r\n                                                {annualRevenue?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key.id} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.annual_revenue_range?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Range name is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>EIN Number/Tax Id</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            className=\"form-control\"\r\n                                            name=\"tax_id\"\r\n                                            placeholder=\"EIN Number/Tax Id(optional)\"\r\n                                            {...register(\"tax_id\", { required: true })}\r\n                                            // {...register(\"email\")}\r\n                                            aria-invalid={errors.tax_id ? \"true\" : \"false\"}\r\n                                        />\r\n                                        {errors.tax_id?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Id is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Social Media (required)</label>\r\n                                        <select name=\"social\"\r\n                                            {...register(\"social\", { required: true })}>\r\n                                            aria-invalid={errors.social ? \"true\" : \"false\"}\r\n                                            <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select your social media</option>\r\n                                            {socialmedia?.map((option, key) => (\r\n                                                <><option key={key.id} value={option.id}>\r\n                                                    {option.title}\r\n                                                </option></>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.social?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media is required</p>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Social Media (secondary)</label>\r\n                                        <div className=\"input-group-prepend\">\r\n\r\n                                            <span className=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"social_link\"\r\n                                                placeholder=\"social link(optional) \"\r\n                                                {...register(\"social_link\")}\r\n                                            // {...register(\"email\")}\r\n                                            // aria-invalid={errors.social_link ? \"true\" : \"false\"}\r\n                                            />\r\n                                        </div>\r\n                                        {/* {errors.social_link?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Social media link is required</p>} */}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* <div className=\"col-12\">\r\n                                        <div className=\"form-group mt-3\">\r\n                                            <select name=\"project\"\r\n                                                {...register(\"hear_about\", { required: true })}>\r\n                                                {hereAbout?.data?.data?.map((option, key) => (\r\n\r\n                                                    <option key={key} value={option.id} >\r\n                                                        {option.title}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                            {errors.hear_about?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Hear about is required</p>}\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Banner</label>\r\n                                        <input\r\n                                            className=\"form-control p-2\"\r\n                                            type=\"file\"\r\n\r\n                                            name=\"banner_image\"\r\n                                            placeholder=\"Select file\"\r\n                                            disp\r\n                                            {...register(\"banner_image\", { required: true })}\r\n                                            aria-invalid={errors.banner_image ? \"true\" : \"false\"}\r\n                                        />\r\n                                        <span className='banner-dis'>maximum height should be 500 pixels & width should be 1500 pixels</span>\r\n\r\n                                        {errors.banner_image?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">Banner is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <label>Logo</label>\r\n                                        <input\r\n                                            className=\"form-control p-2\"\r\n                                            type=\"file\"\r\n                                            name=\"logo\"\r\n                                            placeholder=\"Select file\"\r\n                                            {...register(\"logo\", { required: true })}\r\n                                            aria-invalid={errors.logo ? \"true\" : \"false\"}\r\n                                        />\r\n                                        <div className='logo_one'>\r\n\r\n                                            <span className='logo-dis'>maximum height should be 250 pixels</span>\r\n                                        </div>\r\n                                        {errors.logo?.type === 'required' && <p style={{ color: 'red' }} role=\"alert\">logo is required</p>}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div className=\"col-12\">\r\n                                    <div className=\"form-group mt-3\">\r\n                                        <div className=\"form-check form-check-inline\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" defaultValue=\"option1\" />\r\n                                            <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Remember Me</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"submit\">Create</button>\r\n                                </div>\r\n                                {/* <div className=\"col-3\">\r\n                                        <button className=\"btn w-100 mt-3 mt-sm-4\" onClick={() => goBack()}>Previous</button>\r\n                                    </div> */}\r\n                            </div>\r\n                        </form>\r\n                        {/* </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default RoleChangeOrganizationdetails","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport RoleChangeOrganizationdetails from '../components/Signup/roleChangeOrginazationdetails';\r\n\r\nexport const createOrganizationafterRoleChange = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <RoleChangeOrganizationdetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { GetSettings, } from '../../redux/Actions/projectAction';\r\nimport Web3 from 'web3';\r\nimport { BuyNft, } from '../Wallet/interact';\r\nimport { useState } from 'react';\r\nimport NftTransdataTable from './nftTRansTable';\r\nimport LatNftDataTable from '../Explore/latnftTable';\r\nimport DModal from '../Create/3dModal';\r\nimport BuyPopup from './buyPopup';\r\nimport { GetMatic } from './../ItemDetails/GetMAtic';\r\nimport { ResellActionDetails } from '../../redux/Actions/resellNftAction';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nconst alchemyKey = \"wss://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst provider = new Web3.providers.HttpProvider(\"https://polygon-mumbai.g.alchemy.com/v2/ZjIVunDzH2DkgiNzLSHe-c04fp9ShA6B\");\r\nconst ResellNftDetails = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(true)\r\n    const [matic, setMatic] = useState('')\r\n    const [buymodalShow, setBuyModalShow] = React.useState(false);\r\n    const slug = useParams();\r\n    const resellnftdetail = useSelector(state => {\r\n        return state.resell?.reselldetails\r\n    })\r\n    const getSett = useSelector(state => {\r\n        return state.projectdetails.settings\r\n    })\r\n    const setValue = getSett.find(x => x.key === 'pricing_per_nft')\r\n    useEffect(() => {\r\n        (GetMatic(setMatic))\r\n        dispatch(GetUserAction())\r\n        dispatch(ResellActionDetails(slug))\r\n        dispatch(GetSettings())\r\n    }, [slug])\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n    const buyHandler = () => {\r\n        BuyNft({\r\n            contractAddress: resellnftdetail?.collectionData?.contract_id,\r\n            tokenId: resellnftdetail.token_id,\r\n            payFrom: resellnftdetail.pay_from,\r\n            values: setValue.value,\r\n            sellingCount: resellnftdetail.selling_count,\r\n            platformFee: ([resellnftdetail.payment_flow?.karmatica_fee]),\r\n            ownerFee: ([resellnftdetail.payment_flow?.project_data?.fees]),\r\n            ownerWallet: ([resellnftdetail.payment_flow?.project_data?.wallets]),\r\n            flow: ([resellnftdetail.payment_flow]),\r\n            proj_id: resellnftdetail.project_id,\r\n            nft_id: resellnftdetail.id,\r\n            loadingg: setLoading,\r\n            modal: setBuyModalShow,\r\n        })\r\n    }\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                        <span Class=\"title_main \" style={{ color: '#fff' }}>{resellnftdetail.title}  </span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <div className=\"item-info\">\r\n                            <><div className=\"item-thumb text-center\">\r\n                                {resellnftdetail.extention === \"PLayer\" &&\r\n                                    <video\r\n                                        // className=\"VideoInput_video\"\r\n                                        width=\"100%\"\r\n                                        // height={height}\r\n                                        controls\r\n                                        src={resellnftdetail.image}\r\n                                    // onChange={setSource}\r\n                                    />\r\n                                }\r\n                                {resellnftdetail.extention === \"modal\" &&\r\n                                    <DModal\r\n                                        vdo={resellnftdetail.image}\r\n                                    />\r\n                                }\r\n                                {resellnftdetail.extention === 'Image' &&\r\n                                    <img src={resellnftdetail.image} alt=\"\" />\r\n                                }\r\n                                {/* ) */}\r\n                                {/* })} */}\r\n                            </div>\r\n                            </>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\r\n                        <div className=\"content \">\r\n                            <div className=\"card no-hover position-relative\">\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Owned By : </span>\r\n                                    <span>{resellnftdetail.owned_by}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Collection Name : </span>\r\n                                    <span> {resellnftdetail?.collectionData?.title}</span>\r\n                                </div>\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled mb-0\">\r\n                                        <span class='boldertext'>Token :</span>\r\n                                        <span> #{resellnftdetail.token_id}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                <div>\r\n                                    <span className='boldertext w-100'>Affiliate first sale royalties : </span>\r\n                                    <span> 30%</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className='boldertext w-100'>NFT creator royalties : </span>\r\n                                    <span> 10%</span>\r\n                                </div>\r\n                                <div className='eddlbtton d-flex gap- align-items-center mt-2 justify-content-between'>\r\n                                    <div className='eddlbtton flex-wrap d-flex gap-10  align-items-center mt-2'>\r\n                                        {resellnftdetail.sold_nft == 1 ? (\r\n                                            <button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" disabled>SOLD OUT</button>\r\n                                        ) : (\r\n                                            <>\r\n                                                {resellnftdetail.user_id === userdet.user_id ? (\r\n                                                    <div className='eddlbtton d-flex  align-items-center mt-3'>\r\n                                                        <><span className=\"purchase_btn  mt-3 d-flex align-items-center justify-content-center py-1 mx-2\"\r\n                                                            disabled>Your NFT is now ready to purchase</span>\r\n                                                        </>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <><button className=\"btn btn-bordered-white btn-smaller mt-3 d-flex align-items-center justify-content-center py-1 mx-2\" style={{ color: '#FFF' }}\r\n                                                        id=\"nftdetail.id\" onClick={() => { buyHandler(); setBuyModalShow(true); setLoading(true); }}>Buy Now</button><BuyPopup\r\n                                                            show={buymodalShow}\r\n                                                            loading={loading}\r\n                                                            onHide={() => setBuyModalShow(false)} /></>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className='eddlbtton bitbtn d-flex  align-items-center mt-2'>\r\n                                        <div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-8 mt-4\">\r\n                        <div class=\"user-description \">\r\n                            <h5 className='user_title gap-5'><div><svg width=\"24px\" fill=\"#fff\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 3H4c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h16c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zM4 19V5h16l.002 14H4z stroke=\" /><path d=\"M6 7h12v2H6zm0 4h12v2H6zm0 4h6v2H6z\" /></svg></div><div>Description</div>\r\n                            </h5>\r\n                            <p dangerouslySetInnerHTML={{ __html: resellnftdetail.description }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-lg-4 col-12 mt-4 '>\r\n                        <div className='price_nft'>\r\n                            <h5 className='user_title gap-5'>\r\n                                <div><svg fill=\"#fff\" width=\"24px\" height=\"24px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><g data-name=\"2. Coin\" id=\"_2._Coin\"><path d=\"M22,9h-.19A2.83,2.83,0,0,0,22,8V6a3,3,0,0,0-3-3H3A3,3,0,0,0,0,6V8a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,12v2a3,3,0,0,0,.22,1.12A3,3,0,0,0,0,18v2a3,3,0,0,0,2.22,2.88A3,3,0,0,0,2,24v2a3,3,0,0,0,3,3H22A10,10,0,0,0,22,9Zm-9.16,6H5a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H16A10,10,0,0,0,12.84,15ZM2,6A1,1,0,0,1,3,5H19a1,1,0,0,1,1,1V8a1,1,0,0,1-1,1H3A1,1,0,0,1,2,8ZM2,18a1,1,0,0,1,1-1h9.2a10.1,10.1,0,0,0,0,4H3a1,1,0,0,1-1-1Zm3,9a1,1,0,0,1-1-1V24a1,1,0,0,1,1-1h7.84A10,10,0,0,0,16,27Zm17,0a8,8,0,1,1,8-8A8,8,0,0,1,22,27Z\" /><path d=\"M22,16h2a1,1,0,0,0,0-2H23a1,1,0,0,0-2,0v.18A3,3,0,0,0,22,20a1,1,0,0,1,0,2H20a1,1,0,0,0,0,2h1a1,1,0,0,0,2,0v-.18A3,3,0,0,0,22,18a1,1,0,0,1,0-2Z\" /></g></svg></div>\r\n                                <div>Current price</div>\r\n                            </h5>\r\n                            <div className='price_nft_detail'>\r\n                                <div className='nft-price'>\r\n                                    <img src='../../../../img/image14.png' />\r\n                                    <span><small>{resellnftdetail.amount}  / ${resellnftdetail.amount * Math.round(matic['matic-network']?.cad)} Cdn </small></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=''>\r\n                            <div className=\"profile_detail mt-4\">\r\n                                <LatNftDataTable\r\n                                // id={id}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 mt-4'>\r\n                        <div className='funddeatil table-detail '>\r\n                            <NftTransdataTable\r\n                                id={slug}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </section >\r\n    );\r\n}\r\nexport default ResellNftDetails;","import { React } from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ResellNftDetails from '../components/Auctions/resellNftBuy';\r\n\r\nconst ResellDetail = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <ResellNftDetails />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ResellDetail;","import React, { Component, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n    CategoriesAction,\r\n    getPublicLiveProjects,\r\n} from \"../../redux/Actions/projectAction\";\r\nimport { ResellAction } from \"../../redux/Actions/resellNftAction\";\r\n\r\n\r\n\r\nconst ExploreAllResell = () => {\r\n    const slug = useParams();\r\n    const dispatch = useDispatch();\r\n    const nfts = useSelector((state) => {\r\n        return state?.resell?.resell;\r\n    });\r\n    console.log(nfts, \"resellnfts\");\r\n    useEffect(() => {\r\n        dispatch(ResellAction())\r\n\r\n    }, [dispatch]);\r\n    return (\r\n        <section className=\"explore-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12 col-md-8 col-lg-7\">\r\n                        <div className=\"intro text-center mb-4\">\r\n                            <h3 className=\"mt-3 mb-0\">\r\n                                All Reselled NFTs\r\n                            </h3>\r\n                            <p>\r\n                                Invest in NFTs that are based on real-life projects or events\r\n                                related to important causes\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row items explore-items h-auto\">\r\n                    {nfts && nfts.length ? (\r\n                        [\r\n                            ...new Map(\r\n                                nfts?.map((item) => [item[\"title\"], item])\r\n                            ).values(),\r\n                        ].map((item, idx) => {\r\n                            return (\r\n                                <Link\r\n                                    key={`edth_${idx}`}\r\n                                    className=\"col-12 col-sm-6 col-lg-3 item explore-item\"\r\n                                >\r\n                                    <div>\r\n                                        <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                            <div className=\"card\">\r\n                                                <div className=\"image-over\">\r\n                                                    <Link to={`/nft/resell/details/${item.slug}`}>\r\n                                                        <img\r\n                                                            className=\"card-img-top\"\r\n                                                            src={item.image}\r\n                                                            alt=\"\"\r\n                                                        />\r\n                                                    </Link>\r\n                                                    {/* <div className=\"image-over\">\r\n                                                        <img className=\"card-img-top\" src={item.image} alt=\"\" /> */}\r\n                                                </div>\r\n\r\n                                                <div className=\"card-caption col-12 p-0\">\r\n                                                    {/* Card Body */}\r\n                                                    <div className=\"card-body\">\r\n                                                        {/* <div className=\"countdown-times \">\r\n                                                        <div className=\"countdown d-flex justify-content-center\" data-date={item.date} />\r\n                                                    </div> */}\r\n                                                        <a >\r\n                                                            <h5 className=\"mb-0\">\r\n                                                                {item.title.slice(0, 15)}\r\n                                                            </h5>\r\n                                                        </a>\r\n                                                        <div\r\n                                                            className=\"seller d-flex align-items-center my-3\"\r\n\r\n                                                        >\r\n                                                            <span>Owned By</span>\r\n                                                            {/* <img className=\"avatar-sm rounded-circle\" src={item?.user_data?.avatar} alt=\"\" /> */}\r\n\r\n                                                            <a >\r\n                                                                <h6 className=\"ml-2 mb-0\">\r\n                                                                    {item.user_data.username.slice(0, 12)}\r\n                                                                </h6>\r\n                                                            </a>\r\n\r\n                                                            {/* <span className=\"ml-2 mb-0\">{item.user_data.username}</span> */}\r\n                                                        </div>\r\n                                                        <div className=\"card-bottom d-flex justify-content-between nft-price\">\r\n                                                            <span><img className=\"mr-1\" src='../../img/image14.png' />{Math.round(item.price)} MATIC</span>\r\n                                                            {/* {item?.number_of_nft == 1 ? ( */}\r\n                                                            <span>1 NFT</span>\r\n                                                            {/* ) : ( */}\r\n                                                            {/* <span>{item.number_of_nft} NFTs</span> */}\r\n                                                            {/* )} */}\r\n                                                        </div>\r\n                                                        <div className=\"d-flex justify-content-between edit-buttons nft-price mt-2\">\r\n                                                            <Link to={`/nft/resell/details/${item.slug}`} style={{ color: \"white\" }} className=\"btn  btn-smaller mt-3 mb-0\">\r\n\r\n\r\n                                                                <i className=\"icon-handbag\" />\r\n                                                                {/* <i className=\"fa-solid fa-sack-dssollar\"></i> */}\r\n                                                            </Link>\r\n                                                            <Link to={`/nft/resell/details/${item.slug}`} className=\"btn  btn-smaller mt-3 ml-2 mb-0\" style={{ color: \"white\" }}>\r\n\r\n\r\n                                                                <i class=\"fa-solid fa-share-nodes text-white\"></i>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                </Link>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <div className=\"col-12 col-sm-12 col-lg-12\">\r\n                            <h2 className=\"allproj2\">No NFTs found</h2>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\nexport default ExploreAllResell;\r\n","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\nimport ExploreAllResell from '../components/Explore/viewallResell';\r\n\r\nconst AllResellNft = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n\r\n            <ExploreAllResell />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AllResellNft;","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { CreateCollectionAction } from '../../redux/Actions/projectAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport {\r\n    EmailShareButton,\r\n    FacebookIcon,\r\n    FacebookShareButton,\r\n    InstapaperShareButton,\r\n    InstapaperIcon,\r\n    LineShareButton,\r\n    LinkedinShareButton,\r\n    PinterestShareButton,\r\n    RedditShareButton,\r\n    TelegramIcon,\r\n    TelegramShareButton,\r\n    TwitterIcon,\r\n    TwitterShareButton,\r\n    WhatsappIcon,\r\n    WhatsappShareButton,\r\n    LinkedinIcon,\r\n    EmailIcon,\r\n} from \"react-share\";\r\nimport {\r\n    FacebookShareCount,\r\n    HatenaShareCount,\r\n    OKShareCount,\r\n    PinterestShareCount,\r\n    RedditShareCount,\r\n    TumblrShareCount,\r\n    VKShareCount\r\n} from \"react-share\";\r\nimport { ModalHeader, Tooltip } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction WidgetPopup(props) {\r\n    const location = useLocation();\r\n    const [copy, setCopy] = useState(false)\r\n    \r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n           <ModalHeader className='html_boxheader'>\r\n           <div>\r\n                    <a><i class=\"fa-regular html_box-close fa-xmark-large\" style={{ color: '#fff' }} onClick={props.onHide}>X</i></a>\r\n                </div>\r\n           </ModalHeader>\r\n            <Modal.Body className='refer-frnd html-box'>\r\n                <form className=\"item-form card no-hover\">\r\n                    <div className=\"row html_boxrow\">\r\n\r\n                        <div className=\" p-0\">\r\n\r\n                            <div className=\"form-group m-0\">\r\n                                {/* <label>Display name</label> */}\r\n                                <textarea\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"display_name\"\r\n                                    value={props.data}\r\n                                    \r\n                                   \r\n                                />\r\n\r\n\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div className=\" p-0 copy_text\">\r\n                            \r\n\r\n                                <CopyToClipboard text={props.data} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                           \r\n                            {copy == true &&\r\n                                <span className='copytext'>Copied!</span>\r\n\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default WidgetPopup","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Collapse } from 'antd';\r\nimport { GetNftwol, ProjectDetail, ProjectList } from '../../redux/Actions/projectAction';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Table } from 'react-bootstrap';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport { NftList } from '../../redux/Actions/projectAction';\r\nimport dayjs from 'dayjs';\r\nimport WidgetPopup from './widgetPopup';\r\nconst RefralTransdataTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [projSlug, setProjSlug] = useState(\" \")\r\n    const [nftSlug, setNftslug] = useState(\" \")\r\n    console.log('nftSlug', nftSlug)\r\n    const { Panel } = Collapse;\r\n    console.log('projSlug', projSlug)\r\n    const onChange = (key) => {\r\n        console.log(key);\r\n    };\r\n    const [copy, setCopy] = useState(false)\r\n    const [expandIconPosition, setExpandIconPosition] = useState('end');\r\n    const [widgetModalShow, setWidgetModalShow] = useState(false)\r\n    const onPositionChange = (newExpandIconPosition) => {\r\n        setExpandIconPosition(newExpandIconPosition);\r\n    };\r\n    const nftdetail = useSelector(state => {\r\n\r\n        return state.projectdetails.nftlist\r\n    })\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    const projects = useSelector(state => {\r\n        return state.projectdetails.projects\r\n    })\r\n\r\n    console.log(projects, 'projects')\r\n    const HandleProj = (e) => {\r\n        setProjSlug(e?.currentTarget?.value)\r\n        setNftslug('')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(ProjectList())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n    }, [props.id])\r\n\r\n    const projdetail = useSelector(state => {\r\n        return state?.projectdetails?.projectdetails\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (projSlug) {\r\n            dispatch(ProjectDetail(projSlug))\r\n        }\r\n        if (nftSlug) {\r\n\r\n            dispatch(NftList(nftSlug))\r\n        }\r\n    }, [projSlug, nftSlug])\r\n\r\n    console.log('projdetail', projdetail)\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <footer className=\"item-details-area referal-detail\">\r\n            {/* Footer Top */}\r\n            <div >\r\n                <div className=\"container\">\r\n                    <Tabs>\r\n                        <TabList>\r\n                            <Tab>How To Earn</Tab>\r\n                            <Tab>My Referrals</Tab>\r\n                            <Tab>Referral Widget</Tab>\r\n                        </TabList>\r\n                        <TabPanel>\r\n                            <div className=\"pb-5\"> <h3>How Creator and Referral MATIC Rewards Work</h3>\r\n                                <div className='main-heading'>\r\n                                    <div>Affiliates get 30% on first level NFT referred sales at Karmatica.io only.</div>\r\n                                    <div>Creators get 10% of secondary NFT sales for the lifetime of the project.</div>\r\n                                </div>\r\n                                <div className='referal-main'>\r\n                                    <h5>NFT sale to BUYER 1 </h5>\r\n                                    <ul>\r\n                                        <li><span>69%</span> goes to Creator </li>\r\n                                        <li><span>30%</span> goes to Affiliate</li>\r\n                                        <li><span>1% </span>to Karmatica</li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className='referal-main'>\r\n                                    <h5>NFT resold from BUYER 1 to BUYER 2 via Affiliate</h5>\r\n                                    <ul>\r\n                                        <li> <span>84%</span> goes to BUYER 1</li>\r\n                                        <li> <span>10%</span> goes to NFT Creator</li>\r\n                                        <li> <span>5% </span>goes to Affiliate </li>\r\n                                        <li> <span>1% </span>to Karmatica</li>\r\n                                    </ul>\r\n                                </div></div>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <div className='position-relative'>\r\n                                <Collapse defaultActiveKey={['1']} onChange={onChange} expandIconPosition={expandIconPosition}>\r\n                                    <svg className=\"activity_icon\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path opacity=\"0.4\" d=\"M7.24487 14.7815L10.238 10.8914L13.6522 13.5733L16.5813 9.79297\" stroke=\"#fff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                        <circle cx=\"19.9954\" cy=\"4.20027\" r=\"1.9222\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                        <path d=\"M14.9245 3.12012H7.65679C4.64535 3.12012 2.77808 5.25284 2.77808 8.26428V16.3467C2.77808 19.3581 4.60874 21.4817 7.65679 21.4817H16.2609C19.2724 21.4817 21.1396 19.3581 21.1396 16.3467V9.30776\" stroke=\"#ffff\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\r\n                                    </svg>\r\n                                    <Panel header=\"Referral Activity\" key=\"1\">\r\n                                        <Table responsive className='m-0' >\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Item</th>\r\n                                                    <th>Token</th>\r\n                                                    <th>NFT Price</th>\r\n                                                    <th>Referral Amount</th>\r\n                                                    <th>Collection</th>\r\n                                                    <th>From</th>\r\n                                                    <th>To</th>\r\n                                                    <th>Transaction</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {userdet?.referral_history?.map((items) => {\r\n                                                    return (\r\n                                                        <><tr className='contract-address'>\r\n                                                            <td ><Link to={`/nftprojdetails/${items.slug}`} >{items.title?.slice(0, 20)}</Link>...</td>\r\n                                                            <td>#{items.token_id}</td>\r\n                                                            <td>{items.price}</td>\r\n                                                            {/* <td>{items.referral_amount} </td> */}\r\n                                                            <td className='referal'>{items.referral_amount} <img src='../../img/image14.png' /></td>\r\n                                                            <td><Link to={`/popularcollection/details/${items.collection_slug}`}>{items.collection_name}</Link></td>\r\n                                                            <td>{items.pay_from?.slice(0, 4)}...{items.pay_from?.slice(35, 44)}</td>\r\n                                                            <td>{items.pay_to?.slice(0, 4)}...{items.pay_to?.slice(35, 44)}</td>\r\n                                                            <td><a target=\"_blank\" href={`https://mumbai.polygonscan.com/tx/${items?.transaction_hash}`} >{items.transaction_hash?.slice(0, 4)}...{items.transaction_hash?.slice(35, 44)}</a></td>\r\n                                                        </tr>\r\n                                                        </>\r\n                                                    )\r\n                                                })}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                        <div className='nothing'>\r\n                                            {userdet?.referral_history?.length == 0 &&\r\n                                                <span> No matching records found</span>\r\n                                            }\r\n                                        </div>\r\n                                    </Panel>\r\n                                </Collapse>\r\n                            </div>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <h6 className='top-content'>Share with friends using our NFT widget on your website.<br />\r\n                                Upload your NFTs to get an affiliate referral link to earn 30% of NFTs sold in MATIC</h6>\r\n                            <div className=\"col-12 col-md-12 pr-0 pl-0 select_bar\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Select Project</label>\r\n                                    <select name=\"category_id\"\r\n                                        onChange={HandleProj}\r\n                                    >\r\n                                        <option value=\"\" disabled selected style={{ color: \"#495057\" }}>Select project </option>\r\n\r\n                                        {projects?.map((option, key) => (\r\n                                            <option key={key.slug} value={option.slug}  >\r\n                                                {option.title}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 mt-4\">\r\n                                <div className='nfts_main' id='invest'>\r\n                                    <div className='intro row m-0 p-0'>\r\n                                        {projSlug &&\r\n\r\n                                            <div className=\"intro-content\">\r\n                                                <span >NFTs</span>\r\n                                                <h3 className=\"w-full mb-0 pt-4\">NFTs</h3>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"row items mt-0 explore-items px-0\">\r\n                                        {copy == true &&\r\n                                            <span className='copytext'>Copied!</span>\r\n\r\n                                        }\r\n                                        {projdetail?.nft_data?.map((x, idx) => {\r\n                                            const iFrame = `<iframe id=\"inlineFrameExample\"\r\n                                 title=\"Inline Frame Example\"\r\n                                 width=\"100%\"\r\n                                 height=\"auto\"\r\n                                 src='https://app.karmatica.io/referral/widget/${x.slug}'>\r\n                             </iframe>`\r\n                                            return (\r\n\r\n                                                <><div key={`eds_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item explore-item \">\r\n                                                    <div className=\"card no-hover m-0\" onClick={() => setNftslug(x.slug)}>\r\n\r\n                                                        <div className=\"image-over relative\">\r\n                                                            {x.user_id == projdetail.user_id ? (\r\n                                                                <>\r\n                                                                    {/* <Link to={`/nft/details/${x.slug}?project=${slug}`}> */}\r\n                                                                    {x.extention === 'Player' || x.extention === 'modal' ? (\r\n                                                                        <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\r\n                                                                    ) : (\r\n                                                                        <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                                    )}\r\n                                                                    {/* </Link> */}\r\n                                                                </>\r\n                                                            ) : (\r\n                                                                // <Link to={`/nft/details/${x.slug}?project=${slug}`}>\r\n                                                                <>\r\n                                                                    {x.extention === 'Player' || x.extention === 'modal' ? (\r\n                                                                        <img className=\"card-img-top\" src={x.preview_imag} alt=\"\" />\r\n                                                                    ) : (\r\n                                                                        <img className=\"card-img-top\" src={x.image} alt=\"\" />\r\n                                                                    )}\r\n                                                                </>\r\n                                                                // </Link>\r\n                                                            )}\r\n                                                            <div className='token'>\r\n                                                                <span>#{x?.token_id}</span>\r\n                                                                <span className='cards-icons'>\r\n                                                                    {/* {x.is_mint == 0 && */}\r\n                                                                    {/* // <Link to={`/nft/details/${x.slug}?project=${slug}`} ><i className=\"fa-solid fa-pen\" /></Link> */}\r\n                                                                    {/* } */}\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            {/* Author */}\r\n                                                        </div>\r\n                                                        {/* Card Caption */}\r\n                                                        <div className=\"card-caption px-0 col-12 \">\r\n                                                            {/* Card Body */}\r\n                                                            <div className=\"card-body\">\r\n                                                                {/* <a href=\"#\" className=\"d-flex justify-content-between align-items-center\">\r\n                                                                    <h5 className=\"m-0 pb-2 p-0 text-capitalize\">{x.title.slice(0, 16)}...</h5>\r\n                                                                </a> */}\r\n                                                                <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\r\n                                                                    Project Name:<span>{nftdetail?.project_name?.slice(0, 12)}..</span>\r\n                                                                </div>\r\n                                                                <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\r\n                                                                    NFT Name :<span>{nftdetail.title?.slice(0, 12)}..</span>\r\n                                                                </div>\r\n                                                                <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\r\n                                                                    NFT Price :<span> {nftdetail.price} (MATIC)</span>\r\n                                                                </div>\r\n                                                                <div className=\"d-flex justify-content-between align-items-end mt-1 mb-1 \">\r\n                                                                    NFT End-Date :<span>{dayjs(nftdetail.end_date).format(\"DD MMM YYYY\")}</span>\r\n                                                                </div>\r\n\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setWidgetModalShow(true)}></i>\r\n                                                        <WidgetPopup\r\n                                                            data={iFrame}\r\n                                                            show={widgetModalShow}\r\n                                                            onHide={() => setWidgetModalShow(false)}\r\n                                                        />\r\n\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                                </>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </TabPanel>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n\r\n    )\r\n}\r\nexport default RefralTransdataTable","import { React } from 'react';\r\n\r\nimport Header from '../components/Header/Header';\r\n\r\nimport Footer from '../components/Footer/Footer';\r\nimport ModalSearch from '../components/Modal/ModalSearch';\r\nimport ModalMenu from '../components/Modal/ModalMenu';\r\nimport Scrollup from '../components/Scrollup/Scrollup';\r\n\r\nimport RefralTransdataTable from '../components/Explore/viewReferals';\r\n\r\nconst AllReraltrans = () => {\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <Header />\r\n            <RefralTransdataTable />\r\n            <Footer />\r\n            <ModalSearch />\r\n            <ModalMenu />\r\n            <Scrollup />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AllReraltrans;","import { Button, Result } from 'antd'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to='/'><Button type=\"submit\" className='table-btn'>Back Home</Button></Link>}\r\n        />\r\n    )\r\n}\r\n\r\nexport default NotFound","import React, { Component, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { GetNftwol, GetSettings } from '../../redux/Actions/projectAction';\r\n\r\n\r\nimport { BuyNft } from '../Wallet/interact';\r\n\r\nimport { useState } from 'react';\r\nimport DModal from '../Create/3dModal';\r\nimport { GetUserAction } from '../../redux/Actions/authAction';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport dayjs from 'dayjs';\r\n\r\n\r\nconst Widget = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const slug = useParams();\r\n\r\n    const latprojnftdetail = useSelector(state => {\r\n        return state.projectdetails.getnftwoldetails\r\n    })\r\n\r\n\r\n    const userdet = useSelector(state => {\r\n        return state?.user?.userdetail\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserAction())\r\n        dispatch(GetNftwol(slug))\r\n\r\n    }, [slug])\r\n    const [copy, setCopy] = useState(false)\r\n\r\nconst location = useLocation()\r\n\r\nconst userprojurl = `http://localhost:3000/referral/widget/${slug.slug}` + `?refid=${latprojnftdetail?.user_data?.wallet_id}`\r\n    return (\r\n        <section className=\"item-details-area\">\r\n            {/* <Spin spinning={loading}> */}\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row justify-content-between content_project px-0\">\r\n                    <div className='py-0 col-12 mt-2 mb-2 mt-lg-0 mb-lg-0'>\r\n                        <span Class=\"title_main \" style={{ color: '#fff' }}>{latprojnftdetail.title}  </span>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n\r\n                        <div className=\"item-info\">\r\n\r\n                            <><div className=\"item-thumb text-center align-items-center d-flex\">\r\n\r\n                                <>\r\n                                    {latprojnftdetail.extention === \"Player\" &&\r\n                                        <>\r\n                                            <video\r\n                                                width=\"100%\"\r\n                                                controls\r\n                                                src={latprojnftdetail.image}\r\n                                            />\r\n                                        </>\r\n                                    }\r\n                                    {latprojnftdetail.extention === \"modal\" &&\r\n                                        <>\r\n                                            <DModal\r\n                                                vdo={latprojnftdetail.image}\r\n\r\n                                            />\r\n                                        </>\r\n                                    }\r\n                                    {latprojnftdetail.extention === 'Image' &&\r\n                                        <>\r\n\r\n                                            <img src={latprojnftdetail.image} alt=\"\" />\r\n                                        </>\r\n                                    }\r\n\r\n                                </>\r\n\r\n                            </div>\r\n\r\n                            </>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\r\n\r\n                        <div className=\"content \">\r\n                            <div className=\"card no-hover position-relative\">\r\n\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Project Name : </span>\r\n                                    <span>{latprojnftdetail.project_name}</span>\r\n                                </div>\r\n                                <div className=\"owner align-items-start\">\r\n                                    <span className='boldertext w-100'>Project Price : </span>\r\n                                    <span>{latprojnftdetail.price}</span>\r\n                                </div>\r\n\r\n                                <div className=\"item-info-list\">\r\n                                    <ul className=\"list-unstyled mb-0\">\r\n                                        <span class='boldertext'>End-Date</span>\r\n                                        <span> {dayjs(latprojnftdetail.end_date).format(\"DD MMM YYYY\")}</span>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col-10 p-0\">\r\n\r\n                                        <div className=\"form-group m-0\">\r\n\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"display_name\"\r\n                                                value={`https://app.karmatica.io/referral/widget/${slug.slug}`+`?refid=${latprojnftdetail?.user_data?.wallet_id}`}\r\n\r\n                                            />\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-2 p-0 text-right\">\r\n                                <CopyToClipboard text={userprojurl} >\r\n                                    <div className='copy'>\r\n\r\n                                        <a> <i className=\"fa-sharp fa-solid fa-copy\" onClick={() => setCopy(true)} onMouseLeave={() => setCopy(false)} disabled={window.ethereum?.selectedAddress && localStorage.getItem('authToken') ? false : true}></i></a>\r\n                                    </div>\r\n                                </CopyToClipboard>\r\n                            \r\n                            {copy == true &&\r\n                                <span className='copytext'>Copied!</span>\r\n\r\n                            }\r\n\r\n\r\n                        </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </div >\r\n                </div >\r\n\r\n\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\nexport default Widget;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n// importing all the themes\r\nimport ThemeOne from \"../themes/theme-one\";\r\nimport ExploreOne from \"../themes/explore-one\";\r\nimport ExploreTwo from \"../themes/project-list\";\r\nimport ExploreFour from \"../themes/latestProjects\";\r\nimport Auctions from \"../themes/auctions\";\r\nimport ItemDetails from \"../themes/item-details\";\r\nimport HelpCenter from \"../themes/help-center\";\r\nimport Author from \"../themes/author\";\r\nimport WalletConnect from \"../themes/wallet-connect\";\r\nimport Create from \"../themes/create\";\r\nimport Login from \"../themes/login\";\r\nimport Signup from \"../themes/signup\";\r\nimport Contact from \"../themes/contact\";\r\nimport Forgot from \"../themes/forgotpassword\";\r\nimport PrivateRoute from \"./privateRoutes\";\r\nimport ProjectUpdate from \"../themes/update\";\r\nimport TermsCond from \"../themes/term&cond\";\r\nimport All from \"../themes/viewalllatest\";\r\nimport ColExplore from \"../themes/exploreCollections\";\r\nimport Aboutus from \"../themes/Aboutus\";\r\nimport latprojDetails from \"../themes/latproj-details\";\r\nimport Showcollections from \"../themes/showcollections\";\r\nimport CollectionDetail from \"../themes/collectn-details\";\r\nimport ProjNft from \"../themes/projnft-details\";\r\nimport Nft from './../themes/nft-list';\r\nimport FundDetail from \"../themes/fund-detail\";\r\nimport latnftprojDetails from \"../themes/Latnft\";\r\nimport ScrollToTop from \"../ScrollToTop\";\r\nimport EditNft from \"../components/Create/editNft\";\r\nimport AddNFT from \"../themes/addnftTheme\";\r\nimport AllFundraiser from \"../themes/allFundproj\";\r\nimport AllFundraiserProjects from \"../themes/fund-projects\";\r\nimport FundraiserProjects from \"../themes/fundraise\";\r\nimport NftReward from \"../themes/rwrd\";\r\nimport Notifi from \"../themes/allnot\";\r\nimport BuyedNft from \"../themes/buyed-nft\";\r\nimport BuyNftDetail from \"../themes/buyNft-details\";\r\nimport { createOrganizationafterRoleChange } from \"../themes/rolechange-organization\";\r\nimport ResellDetail from \"../themes/resell-details\";\r\nimport AllResellNft from \"../themes/allresellNfts\";\r\nimport AllReraltrans from \"../themes/all-refrals\";\r\nimport NotFound from \"../notFound\";\r\nimport Widget from \"../components/Explore/widget\";\r\n\r\n\r\nconst MyRouts = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <ScrollToTop />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ThemeOne} />\r\n\r\n          <Route exact path=\"/explore-1\" component={ExploreOne} />\r\n          <Route exact path=\"/projectlist\" component={ExploreTwo} />\r\n          <Route exact path=\"/create/organization\" component={createOrganizationafterRoleChange} />\r\n          <Route exact path=\"/allnotifications\" component={Notifi} />\r\n          <Route exact path=\"/updateproject/:id\" component={ProjectUpdate} />\r\n          <Route exact path=\"/explore-4\" component={ExploreFour} />\r\n          <Route exact path=\"/nft/resell/details/:slug\" component={ResellDetail} />\r\n          <Route exact path=\"/my/nfts\" component={BuyedNft} />\r\n          <Route exact path=\"/my/nfts-detail/:slug\" component={BuyNftDetail} />\r\n          <Route exact path=\"/rewards\" component={NftReward} />\r\n          <Route exact path=\"/auctions\" component={Auctions} />\r\n          <Route exact path=\"/popularcollection/details/:slug\" component={ItemDetails} />\r\n          <Route exact path=\"/projects/:slug\" component={latprojDetails} />\r\n          <Route exact path=\"/referrals-detail\" component={AllReraltrans} />\r\n          <Route exact path=\"/nftprojdetails/:slug\" component={latnftprojDetails} />\r\n          <Route exact path=\"/fundraiser/detail/:user_id\" component={FundDetail} />\r\n          <Route exact path=\"/myfundraiser/detail/:user_id\" component={FundraiserProjects} />\r\n          <Route exact path=\"/projnftdetails/:slug\" component={ProjNft} />\r\n          <Route exact path=\"/referral/widget/:slug\" component={Widget} />\r\n          <Route exact path=\"/allfundraise\" component={AllFundraiser} />\r\n          <Route exact path=\"/all/fundraise/projects/:user_id\" component={AllFundraiserProjects} />\r\n          <Route exact path=\"/nft/details/:id\" component={Nft} />\r\n          <Route exact path=\"/nftedit/:id/:id\" component={EditNft} />\r\n          <Route exact path=\"/addnft/:id\" component={AddNFT} />\r\n          <Route exact path=\"/help-center\" component={HelpCenter} />\r\n          <Route exact path=\"/profile\" component={Author} />\r\n          <Route exact path=\"/terms&conditions\" component={TermsCond} />\r\n          <Route exact path=\"/all/:type\" component={All} />\r\n          <Route exact path=\"/all/resll/nfts\" component={AllResellNft} />\r\n          <Route exact path=\"/aboutus\" component={Aboutus} />\r\n          <Route exact path=\"/allcollections\" component={ColExplore} />\r\n          <Route exact path=\"/wallet-connect\" component={WalletConnect} />\r\n          <Route exact path=\"/my-collections\" component={Showcollections} />\r\n          <Route exact path=\"/collection/:id\" component={CollectionDetail} />\r\n          <Route exact path=\"/create\" component={Create} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          <PrivateRoute exact path=\"/forgotpassword\" component={Forgot} />\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n          <Route exact path=\"*\" component={NotFound} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\nexport default MyRouts\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport MyRouts from './routers/routes'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n\r\n      <MyRouts />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport { authReducer } from '../redux/Slices/authSlice'\r\nimport { combineReducers } from '@reduxjs/toolkit'\r\nimport { projectReducer } from './Slices/projectSlice'\r\nimport { footerReducer } from './Slices/footerSlice'\r\nimport { fundraiserReducer } from './Slices/fundraiserSlice'\r\nimport { collectionReducer } from './Slices/popularCollectionSlice'\r\nimport { contactReducer } from './Slices/contactSlice';\r\nimport { resellReducer } from './Slices/resellNftSlice'\r\n\r\nconst reducer = combineReducers({\r\n    user: authReducer,\r\n    countries: authReducer,\r\n    annualRevenue: authReducer,\r\n    hereAbout: authReducer,\r\n    login: authReducer,\r\n    forgotpassword: authReducer,\r\n    errmessage: authReducer,\r\n    createproject: projectReducer,\r\n    // getproject: projectReducer,\r\n    projectdetails: projectReducer,\r\n    latestprojects: projectReducer,\r\n    fundraiser: fundraiserReducer,\r\n    footer: footerReducer,\r\n    collection: collectionReducer,\r\n    getcollections: collectionReducer,\r\n    getcollectiondetails: collectionReducer,\r\n    getSocialmediaIcons: projectReducer,\r\n    contact: contactReducer,\r\n    resell: resellReducer\r\n    // userDetail: authReducer,\r\n\r\n    // Nftlist: projectReducer\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer,\r\n})\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './App.css'\r\nimport App from './App';\r\nimport store from '../src/redux/store';\r\nimport { Provider } from 'react-redux'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__DKvey\",\"formCard\":\"styles_formCard__Vehpw\",\"formRow\":\"styles_formRow__13Stn\",\"back\":\"styles_back__3AVbA\",\"input-error\":\"styles_input-error__3FssS\",\"error\":\"styles_error__1A4Gx\",\"disabledBtn\":\"styles_disabledBtn__qMaBa\",\"steps\":\"styles_steps__2TgQb\",\"errorText\":\"styles_errorText__9D9Jp\",\"hideForm\":\"styles_hideForm__19FPq\",\"showForm\":\"styles_showForm__2S4hD\"};"],"sourceRoot":""}